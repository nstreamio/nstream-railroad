{"version":3,"file":"swim-toolkit.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../swim-ui/swim-model/src/main/model/ModelContext.ts","../swim-ui/swim-model/src/main/refresh/RefreshService.ts","../swim-ui/swim-model/src/main/refresh/RefreshProvider.ts","../swim-ui/swim-model/src/main/selection/SelectionService.ts","../swim-ui/swim-model/src/main/selection/SelectionProvider.ts","../swim-ui/swim-model/src/main/model/Model.ts","../swim-ui/swim-model/src/main/model/ModelRelation.ts","../swim-ui/swim-model/src/main/model/ModelRef.ts","../swim-ui/swim-model/src/main/model/ModelSet.ts","../swim-ui/swim-model/src/main/trait/Trait.ts","../swim-ui/swim-model/src/main/trait/TraitRelation.ts","../swim-ui/swim-model/src/main/trait/TraitRef.ts","../swim-ui/swim-model/src/main/trait/TraitSet.ts","../swim-ui/swim-model/src/main/selectable/SelectableTrait.ts","../swim-ui/swim-model/src/main/downlink/DownlinkTrait.ts","../swim-ui/swim-model/src/main/downlink/ValueDownlinkTrait.ts","../swim-ui/swim-model/src/main/downlink/MapDownlinkTrait.ts","../swim-ui/swim-style/src/main/font/FontSize.ts","../swim-ui/swim-style/src/main/font/LineHeight.ts","../swim-ui/swim-style/src/main/font/FontFamily.ts","../swim-ui/swim-style/src/main/font/FontFamilyParser.ts","../swim-ui/swim-style/src/main/font/Font.ts","../swim-ui/swim-style/src/main/font/FontInterpolator.ts","../swim-ui/swim-style/src/main/font/FontForm.ts","../swim-ui/swim-style/src/main/font/FontParser.ts","../swim-ui/swim-style/src/main/color/Color.ts","../swim-ui/swim-style/src/main/color/ColorForm.ts","../swim-ui/swim-style/src/main/color/ColorParser.ts","../swim-ui/swim-style/src/main/color/ColorChannel.ts","../swim-ui/swim-style/src/main/color/ColorChannelParser.ts","../swim-ui/swim-style/src/main/rgb/RgbColor.ts","../swim-ui/swim-style/src/main/rgb/RgbColorInterpolator.ts","../swim-ui/swim-style/src/main/rgb/HexColorParser.ts","../swim-ui/swim-style/src/main/rgb/RgbColorParser.ts","../swim-ui/swim-style/src/main/hsl/HslColor.ts","../swim-ui/swim-style/src/main/hsl/HslColorInterpolator.ts","../swim-ui/swim-style/src/main/hsl/HslColorParser.ts","../swim-ui/swim-style/src/main/gradient/ColorStop.ts","../swim-ui/swim-style/src/main/gradient/ColorStopInterpolator.ts","../swim-ui/swim-style/src/main/gradient/ColorStopParser.ts","../swim-ui/swim-style/src/main/gradient/ColorStopListParser.ts","../swim-ui/swim-style/src/main/gradient/LinearGradient.ts","../swim-ui/swim-style/src/main/gradient/LinearGradientInterpolator.ts","../swim-ui/swim-style/src/main/gradient/LinearGradientAngleParser.ts","../swim-ui/swim-style/src/main/gradient/LinearGradientParser.ts","../swim-ui/swim-style/src/main/shadow/BoxShadow.ts","../swim-ui/swim-style/src/main/shadow/BoxShadowInterpolator.ts","../swim-ui/swim-style/src/main/shadow/BoxShadowForm.ts","../swim-ui/swim-style/src/main/shadow/BoxShadowParser.ts","../swim-ui/swim-style/src/main/focus/FocusInterpolator.ts","../swim-ui/swim-style/src/main/focus/Focus.ts","../swim-ui/swim-style/src/main/presence/PresenceInterpolator.ts","../swim-ui/swim-style/src/main/presence/Presence.ts","../swim-ui/swim-style/src/main/expansion/ExpansionInterpolator.ts","../swim-ui/swim-style/src/main/expansion/Expansion.ts","../swim-ui/swim-style/src/main/value/StyleValue.ts","../swim-ui/swim-style/src/main/value/StyleValueForm.ts","../swim-ui/swim-style/src/main/value/StyleValueParser.ts","../swim-ui/swim-style/src/main/value/ToAttributeString.ts","../swim-ui/swim-style/src/main/value/ToStyleString.ts","../swim-ui/swim-style/src/main/value/ToCssValue.ts","../swim-ui/swim-theme/src/main/look/LookVector.ts","../swim-ui/swim-theme/src/main/look/Look.ts","../swim-ui/swim-theme/src/main/look/NumberLook.ts","../swim-ui/swim-theme/src/main/look/LengthLook.ts","../swim-ui/swim-theme/src/main/look/ColorLook.ts","../swim-ui/swim-theme/src/main/look/FontLook.ts","../swim-ui/swim-theme/src/main/look/ShadowLook.ts","../swim-ui/swim-theme/src/main/look/TimingLook.ts","../swim-ui/swim-theme/src/main/feel/FeelVector.ts","../swim-ui/swim-theme/src/main/feel/Feel.ts","../swim-ui/swim-theme/src/main/feel/FeelVectorInterpolator.ts","../swim-ui/swim-theme/src/main/feel/InterpolatedFeel.ts","../swim-ui/swim-theme/src/main/feel/BrightnessFeel.ts","../swim-ui/swim-theme/src/main/feel/OpacityFeel.ts","../swim-ui/swim-theme/src/main/mood/Mood.ts","../swim-ui/swim-theme/src/main/mood/MoodVector.ts","../swim-ui/swim-theme/src/main/mood/MoodMatrix.ts","../swim-ui/swim-theme/src/main/theme/Theme.ts","../swim-ui/swim-theme/src/main/theme/ThemeMatrix.ts","../swim-ui/swim-theme/src/main/theme/ThemeContext.ts","../swim-ui/swim-theme/src/main/animator/ThemeAnimator.ts","../swim-ui/swim-theme/src/main/animator/StringThemeAnimator.ts","../swim-ui/swim-theme/src/main/animator/NumberThemeAnimator.ts","../swim-ui/swim-theme/src/main/animator/BooleanThemeAnimator.ts","../swim-ui/swim-theme/src/main/animator/AngleThemeAnimator.ts","../swim-ui/swim-theme/src/main/animator/LengthThemeAnimator.ts","../swim-ui/swim-theme/src/main/animator/TransformThemeAnimator.ts","../swim-ui/swim-theme/src/main/animator/ColorThemeAnimator.ts","../swim-ui/swim-theme/src/main/animator/FontThemeAnimator.ts","../swim-ui/swim-theme/src/main/animator/FocusThemeAnimator.ts","../swim-ui/swim-theme/src/main/animator/PresenceThemeAnimator.ts","../swim-ui/swim-theme/src/main/animator/ExpansionThemeAnimator.ts","../swim-ui/swim-theme/src/main/animator/ThemeConstraintAnimator.ts","../swim-ui/swim-theme/src/main/animator/NumberThemeConstraintAnimator.ts","../swim-ui/swim-theme/src/main/animator/LengthThemeConstraintAnimator.ts","../swim-ui/swim-theme/src/main/looks/index.ts","../swim-ui/swim-theme/src/main/feels/index.ts","../swim-ui/swim-theme/src/main/moods/index.ts","../swim-ui/swim-theme/src/main/themes/DarkTheme.ts","../swim-ui/swim-theme/src/main/themes/LightTheme.ts","../swim-ui/swim-view/src/main/viewport/Viewport.ts","../swim-ui/swim-view/src/main/view/ViewContext.ts","../swim-ui/swim-view/src/main/viewport/ViewportService.ts","../swim-ui/swim-view/src/main/viewport/ViewportProvider.ts","../swim-ui/swim-view/src/main/display/DisplayService.ts","../swim-ui/swim-view/src/main/display/DisplayProvider.ts","../swim-ui/swim-view/src/main/layout/LayoutService.ts","../swim-ui/swim-view/src/main/layout/LayoutProvider.ts","../swim-ui/swim-view/src/main/theme/ThemeService.ts","../swim-ui/swim-view/src/main/theme/ThemeProvider.ts","../swim-ui/swim-view/src/main/modal/Modal.ts","../swim-ui/swim-view/src/main/modal/ModalService.ts","../swim-ui/swim-view/src/main/modal/ModalProvider.ts","../swim-ui/swim-view/src/main/gesture/GestureInput.ts","../swim-ui/swim-view/src/main/gesture/Gesture.ts","../swim-ui/swim-view/src/main/gesture/PositionGestureInput.ts","../swim-ui/swim-view/src/main/gesture/PositionGesture.ts","../swim-ui/swim-view/src/main/gesture/PointerPositionGesture.ts","../swim-ui/swim-view/src/main/gesture/TouchPositionGesture.ts","../swim-ui/swim-view/src/main/gesture/MousePositionGesture.ts","../swim-ui/swim-view/src/main/gesture/MomentumGestureInput.ts","../swim-ui/swim-view/src/main/gesture/MomentumGesture.ts","../swim-ui/swim-view/src/main/gesture/PointerMomentumGesture.ts","../swim-ui/swim-view/src/main/gesture/TouchMomentumGesture.ts","../swim-ui/swim-view/src/main/gesture/MouseMomentumGesture.ts","../swim-ui/swim-view/src/main/gesture/ScaleGestureInput.ts","../swim-ui/swim-view/src/main/gesture/ScaleGesture.ts","../swim-ui/swim-view/src/main/gesture/PointerScaleGesture.ts","../swim-ui/swim-view/src/main/gesture/TouchScaleGesture.ts","../swim-ui/swim-view/src/main/gesture/MouseScaleGesture.ts","../swim-ui/swim-view/src/main/view/View.ts","../swim-ui/swim-view/src/main/view/ViewRelation.ts","../swim-ui/swim-view/src/main/view/ViewRef.ts","../swim-ui/swim-view/src/main/view/ViewSet.ts","../swim-ui/swim-dom/src/main/service/DomService.ts","../swim-ui/swim-dom/src/main/service/DomProvider.ts","../swim-ui/swim-dom/src/main/animator/AttributeAnimator.ts","../swim-ui/swim-dom/src/main/animator/StringAttributeAnimator.ts","../swim-ui/swim-dom/src/main/animator/NumberAttributeAnimator.ts","../swim-ui/swim-dom/src/main/animator/BooleanAttributeAnimator.ts","../swim-ui/swim-dom/src/main/animator/LengthAttributeAnimator.ts","../swim-ui/swim-dom/src/main/animator/ColorAttributeAnimator.ts","../swim-ui/swim-dom/src/main/animator/TransformAttributeAnimator.ts","../swim-ui/swim-dom/src/main/animator/StyleAnimator.ts","../swim-ui/swim-dom/src/main/animator/StringStyleAnimator.ts","../swim-ui/swim-dom/src/main/animator/NumberStyleAnimator.ts","../swim-ui/swim-dom/src/main/animator/LengthStyleAnimator.ts","../swim-ui/swim-dom/src/main/animator/ColorStyleAnimator.ts","../swim-ui/swim-dom/src/main/animator/FontFamilyStyleAnimator.ts","../swim-ui/swim-dom/src/main/animator/BoxShadowStyleAnimator.ts","../swim-ui/swim-dom/src/main/animator/TransformStyleAnimator.ts","../swim-ui/swim-dom/src/main/animator/StyleConstraintAnimator.ts","../swim-ui/swim-dom/src/main/animator/NumberStyleConstraintAnimator.ts","../swim-ui/swim-dom/src/main/animator/LengthStyleConstraintAnimator.ts","../swim-ui/swim-dom/src/main/css/StyleContext.ts","../swim-ui/swim-dom/src/main/css/StyleMap.ts","../swim-ui/swim-dom/src/main/css/CssContext.ts","../swim-ui/swim-dom/src/main/css/CssRule.ts","../swim-ui/swim-dom/src/main/css/StyleRule.ts","../swim-ui/swim-dom/src/main/css/MediaRule.ts","../swim-ui/swim-dom/src/main/css/StyleSheet.ts","../swim-ui/swim-dom/src/main/node/NodeView.ts","../swim-ui/swim-dom/src/main/text/TextView.ts","../swim-ui/swim-dom/src/main/element/ElementView.ts","../swim-ui/swim-dom/src/main/html/HtmlView.ts","../swim-ui/swim-dom/src/main/html/StyleView.ts","../swim-ui/swim-dom/src/main/svg/SvgView.ts","../swim-ui/swim-graphics/src/main/sprite/Sprite.ts","../swim-ui/swim-graphics/src/main/sprite/SpriteSheet.ts","../swim-ui/swim-graphics/src/main/sprite/SpriteService.ts","../swim-ui/swim-graphics/src/main/graphics/GraphicsRenderer.ts","../swim-ui/swim-graphics/src/main/graphics/GraphicsView.ts","../swim-ui/swim-graphics/src/main/drawing/DrawingRenderer.ts","../swim-ui/swim-graphics/src/main/path/PathContext.ts","../swim-ui/swim-graphics/src/main/path/PathRenderer.ts","../swim-ui/swim-graphics/src/main/painting/PaintingRenderer.ts","../swim-ui/swim-graphics/src/main/svg/SvgContext.ts","../swim-ui/swim-graphics/src/main/svg/SvgRenderer.ts","../swim-ui/swim-graphics/src/main/canvas/CanvasRenderer.ts","../swim-ui/swim-graphics/src/main/webgl/WebGLRenderer.ts","../swim-ui/swim-graphics/src/main/canvas/CanvasView.ts","../swim-ui/swim-graphics/src/main/raster/RasterView.ts","../swim-ui/swim-graphics/src/main/shape/FillView.ts","../swim-ui/swim-graphics/src/main/shape/StrokeView.ts","../swim-ui/swim-graphics/src/main/shape/Rect.ts","../swim-ui/swim-graphics/src/main/shape/RectView.ts","../swim-ui/swim-graphics/src/main/shape/Arc.ts","../swim-ui/swim-graphics/src/main/shape/ArcView.ts","../swim-ui/swim-graphics/src/main/typeset/TypesetView.ts","../swim-ui/swim-graphics/src/main/typeset/TextRun.ts","../swim-ui/swim-graphics/src/main/typeset/TextRunView.ts","../swim-ui/swim-graphics/src/main/icon/IconLayout.ts","../swim-ui/swim-graphics/src/main/icon/Icon.ts","../swim-ui/swim-graphics/src/main/icon/FilledIcon.ts","../swim-ui/swim-graphics/src/main/icon/VectorIcon.ts","../swim-ui/swim-graphics/src/main/icon/VectorIconInterpolator.ts","../swim-ui/swim-graphics/src/main/icon/CircleIcon.ts","../swim-ui/swim-graphics/src/main/icon/CircleIconInterpolator.ts","../swim-ui/swim-graphics/src/main/icon/PolygonIcon.ts","../swim-ui/swim-graphics/src/main/icon/PolygonIconInterpolator.ts","../swim-ui/swim-graphics/src/main/icon/EnclosedIcon.ts","../swim-ui/swim-graphics/src/main/icon/EnclosedIconInterpolator.ts","../swim-ui/swim-graphics/src/main/icon/IconView.ts","../swim-ui/swim-graphics/src/main/icon/IconGraphicsAnimator.ts","../swim-ui/swim-graphics/src/main/icon/GraphicsIconView.ts","../swim-ui/swim-graphics/src/main/icon/SvgIconView.ts","../swim-ui/swim-graphics/src/main/icon/HtmlIconView.ts","../swim-ui/swim-controller/src/main/controller/ControllerContext.ts","../swim-ui/swim-controller/src/main/execute/ExecuteService.ts","../swim-ui/swim-controller/src/main/execute/ExecuteProvider.ts","../swim-ui/swim-controller/src/main/history/HistoryState.ts","../swim-ui/swim-controller/src/main/history/HistoryService.ts","../swim-ui/swim-controller/src/main/history/HistoryProvider.ts","../swim-ui/swim-controller/src/main/storage/StorageService.ts","../swim-ui/swim-controller/src/main/storage/WebStorageService.ts","../swim-ui/swim-controller/src/main/storage/EphemeralStorageService.ts","../swim-ui/swim-controller/src/main/storage/StorageProvider.ts","../swim-ui/swim-controller/src/main/controller/Controller.ts","../swim-ui/swim-controller/src/main/controller/ControllerRelation.ts","../swim-ui/swim-controller/src/main/controller/ControllerRef.ts","../swim-ui/swim-controller/src/main/controller/ControllerSet.ts","../swim-ui/swim-controller/src/main/mvc/TraitViewRef.ts","../swim-ui/swim-controller/src/main/mvc/TraitControllerRef.ts","../swim-ui/swim-controller/src/main/mvc/TraitControllerSet.ts","../swim-ui/swim-controller/src/main/mvc/TraitViewControllerRef.ts","../swim-ui/swim-controller/src/main/mvc/TraitViewControllerSet.ts","../swim-ux/swim-button/src/main/ButtonGlow.ts","../swim-ux/swim-button/src/main/ButtonMembrane.ts","../swim-ux/swim-button/src/main/FloatingButton.ts","../swim-ux/swim-button/src/main/ButtonItem.ts","../swim-ux/swim-button/src/main/ButtonStack.ts","../swim-ux/swim-button/src/main/IconButton.ts","../swim-ux/swim-button/src/main/DisclosureButton.ts","../swim-ux/swim-token/src/main/TokenView.ts","../swim-ux/swim-token/src/main/InputTokenView.ts","../swim-ux/swim-table/src/main/layout/ColLayout.ts","../swim-ux/swim-table/src/main/layout/TableLayout.ts","../swim-ux/swim-table/src/main/cell/CellView.ts","../swim-ux/swim-table/src/main/cell/TextCellView.ts","../swim-ux/swim-table/src/main/cell/IconCellView.ts","../swim-ux/swim-table/src/main/cell/DisclosureCellView.ts","../swim-ux/swim-table/src/main/cell/CellTrait.ts","../swim-ux/swim-table/src/main/cell/TextCellTrait.ts","../swim-ux/swim-table/src/main/cell/IconCellTrait.ts","../swim-ux/swim-table/src/main/cell/CellController.ts","../swim-ux/swim-table/src/main/cell/TextCellController.ts","../swim-ux/swim-table/src/main/cell/IconCellController.ts","../swim-ux/swim-table/src/main/leaf/LeafView.ts","../swim-ux/swim-table/src/main/leaf/LeafTrait.ts","../swim-ux/swim-table/src/main/leaf/LeafController.ts","../swim-ux/swim-table/src/main/row/RowView.ts","../swim-ux/swim-table/src/main/row/RowTrait.ts","../swim-ux/swim-table/src/main/row/RowController.ts","../swim-ux/swim-table/src/main/col/ColView.ts","../swim-ux/swim-table/src/main/col/ColTrait.ts","../swim-ux/swim-table/src/main/col/ColController.ts","../swim-ux/swim-table/src/main/header/HeaderView.ts","../swim-ux/swim-table/src/main/header/HeaderTrait.ts","../swim-ux/swim-table/src/main/header/HeaderController.ts","../swim-ux/swim-table/src/main/table/TableView.ts","../swim-ux/swim-table/src/main/table/TableTrait.ts","../swim-ux/swim-table/src/main/table/TableController.ts","../swim-ux/swim-window/src/main/scrim/ScrimView.ts","../swim-ux/swim-window/src/main/popover/PopoverView.ts","../swim-ux/swim-window/src/main/drawer/DrawerView.ts","../swim-ux/swim-window/src/main/drawer/DrawerButton.ts","../swim-ux/swim-deck/src/main/DeckPost.ts","../swim-ux/swim-deck/src/main/DeckRail.ts","../swim-ux/swim-deck/src/main/DeckSlot.ts","../swim-ux/swim-deck/src/main/DeckSlider.ts","../swim-ux/swim-deck/src/main/DeckButton.ts","../swim-ux/swim-deck/src/main/DeckBar.ts","../swim-ux/swim-deck/src/main/DeckCard.ts","../swim-ux/swim-deck/src/main/DeckView.ts","../swim-ux/swim-deck/src/main/TitleDeckBar.ts","../swim-vis/swim-gauge/src/main/dial/DialView.ts","../swim-vis/swim-gauge/src/main/dial/DialTrait.ts","../swim-vis/swim-gauge/src/main/dial/DialController.ts","../swim-vis/swim-gauge/src/main/gauge/GaugeView.ts","../swim-vis/swim-gauge/src/main/gauge/GaugeTrait.ts","../swim-vis/swim-gauge/src/main/gauge/GaugeController.ts","../swim-vis/swim-pie/src/main/slice/SliceView.ts","../swim-vis/swim-pie/src/main/slice/SliceTrait.ts","../swim-vis/swim-pie/src/main/slice/SliceController.ts","../swim-vis/swim-pie/src/main/pie/PieView.ts","../swim-vis/swim-pie/src/main/pie/PieTrait.ts","../swim-vis/swim-pie/src/main/pie/PieController.ts","../swim-vis/swim-chart/src/main/data/DataPointView.ts","../swim-vis/swim-chart/src/main/data/DataPointTrait.ts","../swim-vis/swim-chart/src/main/data/DataSetTrait.ts","../swim-vis/swim-chart/src/main/data/DataPointController.ts","../swim-vis/swim-chart/src/main/data/DataSetController.ts","../swim-vis/swim-chart/src/main/scaled/ContinuousScaleAnimator.ts","../swim-vis/swim-chart/src/main/scaled/ScaledXView.ts","../swim-vis/swim-chart/src/main/scaled/ScaledYView.ts","../swim-vis/swim-chart/src/main/scaled/ScaledXYView.ts","../swim-vis/swim-chart/src/main/scaled/ScaledView.ts","../swim-vis/swim-chart/src/main/plot/ScatterPlotView.ts","../swim-vis/swim-chart/src/main/plot/SeriesPlotView.ts","../swim-vis/swim-chart/src/main/plot/BubblePlotView.ts","../swim-vis/swim-chart/src/main/plot/LinePlotView.ts","../swim-vis/swim-chart/src/main/plot/AreaPlotView.ts","../swim-vis/swim-chart/src/main/plot/PlotTrait.ts","../swim-vis/swim-chart/src/main/plot/ScatterPlotTrait.ts","../swim-vis/swim-chart/src/main/plot/SeriesPlotTrait.ts","../swim-vis/swim-chart/src/main/plot/BubblePlotTrait.ts","../swim-vis/swim-chart/src/main/plot/LinePlotTrait.ts","../swim-vis/swim-chart/src/main/plot/AreaPlotTrait.ts","../swim-vis/swim-chart/src/main/plot/PlotController.ts","../swim-vis/swim-chart/src/main/plot/ScatterPlotController.ts","../swim-vis/swim-chart/src/main/plot/SeriesPlotController.ts","../swim-vis/swim-chart/src/main/plot/BubblePlotController.ts","../swim-vis/swim-chart/src/main/plot/LinePlotController.ts","../swim-vis/swim-chart/src/main/plot/AreaPlotController.ts","../swim-vis/swim-chart/src/main/graph/GraphView.ts","../swim-vis/swim-chart/src/main/graph/GraphTrait.ts","../swim-vis/swim-chart/src/main/graph/GraphController.ts","../swim-vis/swim-chart/src/main/tick/TickGenerator.ts","../swim-vis/swim-chart/src/main/tick/TickView.ts","../swim-vis/swim-chart/src/main/tick/TopTickView.ts","../swim-vis/swim-chart/src/main/tick/RightTickView.ts","../swim-vis/swim-chart/src/main/tick/BottomTickView.ts","../swim-vis/swim-chart/src/main/tick/LeftTickView.ts","../swim-vis/swim-chart/src/main/axis/AxisView.ts","../swim-vis/swim-chart/src/main/axis/TopAxisView.ts","../swim-vis/swim-chart/src/main/axis/RightAxisView.ts","../swim-vis/swim-chart/src/main/axis/BottomAxisView.ts","../swim-vis/swim-chart/src/main/axis/LeftAxisView.ts","../swim-vis/swim-chart/src/main/axis/AxisTrait.ts","../swim-vis/swim-chart/src/main/axis/TopAxisTrait.ts","../swim-vis/swim-chart/src/main/axis/RightAxisTrait.ts","../swim-vis/swim-chart/src/main/axis/BottomAxisTrait.ts","../swim-vis/swim-chart/src/main/axis/LeftAxisTrait.ts","../swim-vis/swim-chart/src/main/axis/AxisController.ts","../swim-vis/swim-chart/src/main/axis/TopAxisController.ts","../swim-vis/swim-chart/src/main/axis/RightAxisController.ts","../swim-vis/swim-chart/src/main/axis/BottomAxisController.ts","../swim-vis/swim-chart/src/main/axis/LeftAxisController.ts","../swim-vis/swim-chart/src/main/chart/ChartView.ts","../swim-vis/swim-chart/src/main/chart/ChartTrait.ts","../swim-vis/swim-chart/src/main/chart/ChartController.ts","../swim-maps/swim-map/src/main/geo/GeoPerspective.ts","../swim-maps/swim-map/src/main/geo/GeoViewport.ts","../swim-maps/swim-map/src/main/geo/GeoView.ts","../swim-maps/swim-map/src/main/geo/GeoTrait.ts","../swim-maps/swim-map/src/main/geo/GeoController.ts","../swim-maps/swim-map/src/main/layer/GeoLayerTrait.ts","../swim-maps/swim-map/src/main/tree/GeoTree.ts","../swim-maps/swim-map/src/main/tree/GeoTreeView.ts","../swim-maps/swim-map/src/main/layer/GeoLayerController.ts","../swim-maps/swim-map/src/main/effect/GeoRippleView.ts","../swim-maps/swim-map/src/main/raster/GeoRasterView.ts","../swim-maps/swim-map/src/main/grid/GeoGridView.ts","../swim-maps/swim-map/src/main/grid/GeoGridTrait.ts","../swim-maps/swim-map/src/main/grid/GeoGridController.ts","../swim-maps/swim-map/src/main/shape/GeoCircleView.ts","../swim-maps/swim-map/src/main/shape/GeoArcView.ts","../swim-maps/swim-map/src/main/path/GeoPathView.ts","../swim-maps/swim-map/src/main/path/GeoLineView.ts","../swim-maps/swim-map/src/main/path/GeoAreaView.ts","../swim-maps/swim-map/src/main/path/GeoPathTrait.ts","../swim-maps/swim-map/src/main/path/GeoLineTrait.ts","../swim-maps/swim-map/src/main/path/GeoAreaTrait.ts","../swim-maps/swim-map/src/main/path/GeoPathController.ts","../swim-maps/swim-map/src/main/path/GeoLineController.ts","../swim-maps/swim-map/src/main/path/GeoAreaController.ts","../swim-maps/swim-map/src/main/plot/GeoPointView.ts","../swim-maps/swim-map/src/main/plot/GeoPlotView.ts","../swim-maps/swim-map/src/main/icon/GeoIconView.ts","../swim-maps/swim-map/src/main/icon/GeoIconTrait.ts","../swim-maps/swim-map/src/main/icon/GeoIconController.ts","../swim-maps/swim-map/src/main/map/MapView.ts","../swim-maps/swim-map/src/main/map/MapTrait.ts","../swim-maps/swim-map/src/main/map/MapController.ts","../swim-maps/swim-map/src/main/world/WorldMapViewport.ts","../swim-maps/swim-map/src/main/world/EquirectangularMapViewport.ts","../swim-maps/swim-map/src/main/world/WorldMapView.ts","../swim-maps/swim-mapbox/src/main/MapboxViewport.ts","../swim-maps/swim-mapbox/src/main/MapboxView.ts","../swim-maps/swim-leaflet/src/main/LeafletViewport.ts","../swim-maps/swim-leaflet/src/main/LeafletView.ts","../swim-maps/swim-googlemap/src/main/GoogleMapViewport.ts","../swim-maps/swim-googlemap/src/main/GoogleMapView.ts","../swim-maps/swim-esrimap/src/main/EsriViewport.ts","../swim-maps/swim-esrimap/src/main/EsriView.ts","../swim-maps/swim-esrimap/src/main/EsriMapViewport.ts","../swim-maps/swim-esrimap/src/main/EsriMapView.ts","../swim-maps/swim-esrimap/src/main/EsriSceneViewport.ts","../swim-maps/swim-esrimap/src/main/EsriSceneView.ts","../swim-ux/swim-deck/src/main/TitleDeckView.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/** @public */\nexport interface ModelContext {\n  readonly updateTime: number;\n}\n\n/** @public */\nexport const ModelContext = (function () {\n  const ModelContext = {} as {\n    current: ModelContext | null;\n    create(): ModelContext;\n  };\n\n  ModelContext.current = null;\n\n  ModelContext.create = function (): ModelContext {\n    return {\n      updateTime: performance.now(),\n    };\n  };\n\n  return ModelContext;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, Lazy} from \"@swim/util\";\nimport {Service} from \"@swim/component\";\nimport type {RefreshServiceObserver} from \"./RefreshServiceObserver\";\nimport {ModelContext} from \"../model/ModelContext\";\nimport {ModelFlags, Model} from \"../\"; // forward import\n\n/** @public */\nexport class RefreshService<M extends Model = Model> extends Service<M> {\n  constructor() {\n    super();\n    this.flags = 0;\n    this.modelContext = ModelContext.create();\n    this.updateDelay = RefreshService.MinUpdateDelay;\n    this.analyzeTimer = 0;\n    this.refreshTimer = 0;\n\n    this.runAnalyzePass = this.runAnalyzePass.bind(this);\n    this.runRefreshPass = this.runRefreshPass.bind(this);\n    this.onVisibilityChange = this.onVisibilityChange.bind(this);\n  }\n\n  override readonly observerType?: Class<RefreshServiceObserver<M>>;\n\n  readonly flags: ModelFlags;\n\n  /** @internal */\n  setFlags(flags: ModelFlags): void {\n    (this as Mutable<this>).flags = flags;\n  }\n\n  readonly modelContext: ModelContext;\n\n  updatedModelContext(): ModelContext {\n    const modelContext = this.modelContext;\n    (modelContext as Mutable<ModelContext>).updateTime = performance.now();\n    return modelContext;\n  }\n\n  /** @internal */\n  updateDelay: number;\n\n  protected needsUpdate(updateFlags: ModelFlags, immediate: boolean): ModelFlags {\n    return updateFlags;\n  }\n\n  requestUpdate(target: Model, updateFlags: ModelFlags, immediate: boolean): void {\n    updateFlags = this.needsUpdate(updateFlags, immediate);\n    let deltaUpdateFlags = this.flags & ~updateFlags & Model.UpdateMask;\n    if ((updateFlags & Model.AnalyzeMask) !== 0) {\n      deltaUpdateFlags |= Model.NeedsAnalyze;\n    }\n    if ((updateFlags & Model.RefreshMask) !== 0) {\n      deltaUpdateFlags |= Model.NeedsRefresh;\n    }\n    this.setFlags(this.flags | deltaUpdateFlags);\n    if (immediate && (this.flags & (Model.AnalyzingFlag | Model.RefreshingFlag)) === 0 && this.updateDelay <= RefreshService.MaxAnalyzeInterval) {\n      this.runImmediatePass();\n    } else {\n      this.scheduleUpdate();\n    }\n  }\n\n  protected scheduleUpdate(): void {\n    const flags = this.flags;\n    if ((flags & Model.AnalyzingFlag) === 0 && (flags & Model.AnalyzeMask) !== 0) {\n      this.scheduleAnalyzePass(this.updateDelay);\n    } else if ((flags & Model.RefreshingFlag) === 0 && (flags & Model.RefreshMask) !== 0) {\n      this.scheduleRefreshPass(RefreshService.MinAnalyzeInterval);\n    }\n  }\n\n  protected cancelUpdate(): void {\n    this.cancelAnalyzePass();\n    this.cancelRefreshPass();\n  }\n\n  protected runImmediatePass(): void {\n    if ((this.flags & Model.AnalyzeMask) !== 0) {\n      this.cancelUpdate();\n      this.runAnalyzePass(true);\n    }\n    if ((this.flags & Model.RefreshMask) !== 0 && this.updateDelay <= RefreshService.MaxAnalyzeInterval) {\n      this.cancelUpdate();\n      this.runRefreshPass(true);\n    }\n  }\n\n  /** @internal */\n  analyzeTimer: number;\n\n  protected scheduleAnalyzePass(updateDelay: number): void {\n    if (this.analyzeTimer === 0) {\n      this.analyzeTimer = setTimeout(this.runAnalyzePass, updateDelay) as any;\n    }\n  }\n\n  protected cancelAnalyzePass(): void {\n    if (this.analyzeTimer !== 0) {\n      clearTimeout(this.analyzeTimer);\n      this.analyzeTimer = 0;\n    }\n  }\n\n  protected runAnalyzePass(immediate: boolean = false): void {\n    this.setFlags(this.flags & ~Model.AnalyzeMask | Model.AnalyzingFlag);\n    try {\n      const t0 = performance.now();\n      const roots = this.roots;\n      const modelContext = this.modelContext;\n      (modelContext as Mutable<ModelContext>).updateTime = t0;\n      for (let i = 0; i < roots.length; i += 1) {\n        const root = roots[i]!;\n        if ((root.flags & Model.AnalyzeMask) !== 0) {\n          root.cascadeAnalyze(0, modelContext);\n        }\n      }\n\n      const t1 = performance.now();\n      let analyzeDelay = Math.max(RefreshService.MinAnalyzeInterval, this.updateDelay);\n      if (t1 - t0 > analyzeDelay) {\n        this.updateDelay = Math.min(Math.max(2, this.updateDelay * 2), RefreshService.MaxUpdateDelay);\n      } else {\n        this.updateDelay = Math.min(RefreshService.MinUpdateDelay, this.updateDelay / 2);\n      }\n\n      this.cancelAnalyzePass();\n      if ((this.flags & Model.RefreshMask) !== 0) {\n        this.scheduleRefreshPass(RefreshService.MinRefreshInterval);\n      } else if ((this.flags & Model.AnalyzeMask) !== 0) {\n        if (immediate) {\n          analyzeDelay = Math.max(RefreshService.MaxAnalyzeInterval, analyzeDelay);\n        }\n        this.cancelRefreshPass();\n        this.scheduleAnalyzePass(analyzeDelay);\n      }\n    } finally {\n      this.setFlags(this.flags & ~Model.AnalyzingFlag);\n    }\n  }\n\n  /** @internal */\n  refreshTimer: number;\n\n  protected scheduleRefreshPass(updateDelay: number): void {\n    if (this.refreshTimer === 0) {\n      this.refreshTimer = setTimeout(this.runRefreshPass, updateDelay) as any;\n    }\n  }\n\n  protected cancelRefreshPass(): void {\n    if (this.refreshTimer !== 0) {\n      clearTimeout(this.refreshTimer);\n      this.refreshTimer = 0;\n    }\n  }\n\n  protected runRefreshPass(immediate: boolean = false): void {\n    this.setFlags(this.flags & ~Model.RefreshMask | Model.RefreshingFlag);\n    try {\n      const time = performance.now();\n      const modelContext = this.modelContext;\n      (modelContext as Mutable<ModelContext>).updateTime = time;\n      const roots = this.roots;\n      for (let i = 0; i < roots.length; i += 1) {\n        const root = roots[i]!;\n        if ((root.flags & Model.RefreshMask) !== 0) {\n          root.cascadeRefresh(0, modelContext);\n        }\n      }\n\n      this.cancelRefreshPass();\n      if ((this.flags & Model.AnalyzeMask) !== 0) {\n        let analyzeDelay = this.updateDelay;\n        if (immediate) {\n          analyzeDelay = Math.max(RefreshService.MaxAnalyzeInterval, analyzeDelay);\n        }\n        this.scheduleAnalyzePass(analyzeDelay);\n      } else if ((this.flags & Model.RefreshMask) !== 0) {\n        this.cancelAnalyzePass();\n        this.scheduleRefreshPass(RefreshService.MaxRefreshInterval);\n      }\n    } finally {\n      this.setFlags(this.flags & ~Model.RefreshingFlag);\n    }\n  }\n\n  get powerFlags(): ModelFlags {\n    return 0;\n  }\n\n  power(): void {\n    const roots = this.roots;\n    for (let i = 0, n = roots.length; i < n; i += 1) {\n      const root = roots[i]!;\n      root.requireUpdate(this.powerFlags);\n    }\n  }\n\n  unpower(): void {\n    this.cancelUpdate();\n    this.updateDelay = RefreshService.MinUpdateDelay;\n  }\n\n  protected override onAttachRoot(root: M): void {\n    super.onAttachRoot(root);\n    this.requestUpdate(root, root.flags & Model.UpdateMask, false);\n  }\n\n  protected override onAttach(): void {\n    super.onAttach();\n    this.attachEvents();\n  }\n\n  protected override onDetach(): void {\n    this.detachEvents();\n    super.onDetach();\n  }\n\n  protected attachEvents(): void {\n    if (typeof document !== \"undefined\") {\n      document.addEventListener(\"visibilitychange\", this.onVisibilityChange);\n    }\n  }\n\n  protected detachEvents(): void {\n    if (typeof document !== \"undefined\") {\n      document.removeEventListener(\"visibilitychange\", this.onVisibilityChange);\n    }\n  }\n\n  /** @internal */\n  protected onVisibilityChange(): void {\n    if (document.visibilityState === \"visible\") {\n      this.power();\n    } else {\n      this.unpower();\n    }\n  }\n\n  @Lazy\n  static global<M extends Model>(): RefreshService<M> {\n    return new RefreshService();\n  }\n\n  /** @internal */\n  static MinUpdateDelay: number = 0;\n  /** @internal */\n  static MaxUpdateDelay: number = 167;\n  /** @internal */\n  static MinAnalyzeInterval: number = 12;\n  /** @internal */\n  static MaxAnalyzeInterval: number = 33;\n  /** @internal */\n  static MinRefreshInterval: number = 4;\n  /** @internal */\n  static MaxRefreshInterval: number = 16;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ProviderClass, Provider} from \"@swim/component\";\nimport {RefreshService} from \"./RefreshService\";\nimport type {ModelContext} from \"../model/ModelContext\";\nimport type {ModelFlags, Model} from \"../model/Model\";\n\n/** @public */\nexport interface RefreshProvider<M extends Model, S extends RefreshService<M> | null | undefined = RefreshService<M>> extends Provider<M, S> {\n  get modelContext(): ModelContext;\n\n  updatedModelContext(): ModelContext;\n\n  requestUpdate(target: Model, updateFlags: ModelFlags, immediate: boolean): void;\n\n  createService(): S;\n}\n\n/** @public */\nexport const RefreshProvider = (function (_super: typeof Provider) {\n  const RefreshProvider = _super.extend(\"RefreshProvider\") as ProviderClass<RefreshProvider<any, any>>;\n\n  Object.defineProperty(RefreshProvider.prototype, \"modelContext\", {\n    get<M extends Model, S extends RefreshService<M> | null | undefined>(this: RefreshProvider<M, S>): ModelContext {\n      let service: RefreshService<M> | null | undefined = this.service;\n      if (service === void 0 || service === null) {\n        service = RefreshService.global();\n      }\n      return service.modelContext;\n    },\n    configurable: true,\n  });\n\n  RefreshProvider.prototype.updatedModelContext = function <M extends Model, S extends RefreshService<M> | null | undefined>(this: RefreshProvider<M, S>): ModelContext {\n    let service: RefreshService<M> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = RefreshService.global();\n    }\n    return service.updatedModelContext();\n  };\n\n  RefreshProvider.prototype.requestUpdate = function <M extends Model, S extends RefreshService<M> | null | undefined>(this: RefreshProvider<M, S>, target: Model, updateFlags: ModelFlags, immediate: boolean): void {\n    let service: RefreshService<M> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = RefreshService.global();\n    }\n    service.requestUpdate(target, updateFlags, immediate);\n  };\n\n  RefreshProvider.prototype.createService = function <M extends Model, S extends RefreshService<M> | null | undefined>(this: RefreshProvider<M, S>): S {\n    return RefreshService.global() as S;\n  };\n\n  return RefreshProvider;\n})(Provider);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, Lazy} from \"@swim/util\";\nimport {Service} from \"@swim/component\";\nimport type {SelectionServiceObserver} from \"./SelectionServiceObserver\";\nimport type {Model} from \"../model/Model\";\nimport {SelectableTrait} from \"../\"; // forward import\n\n/** @public */\nexport interface SelectionOptions {\n  multi?: boolean;\n}\n\n/** @public */\nexport class SelectionService<M = unknown> extends Service<M> {\n  constructor() {\n    super();\n    this.selections = [];\n  }\n\n  override readonly observerType?: Class<SelectionServiceObserver<M>>;\n\n  readonly selections: ReadonlyArray<Model>;\n\n  isSelected(model: Model): boolean {\n    return this.selections.indexOf(model) >= 0;\n  }\n\n  select(model: Model, options?: SelectionOptions | null, index?: number): void {\n    const selections = this.selections as Model[];\n    if (selections.indexOf(model) < 0) {\n      if (options === void 0) {\n        options = null;\n      }\n      if (options === null || !options.multi) {\n        this.unselectAll();\n      }\n      if (index === void 0) {\n        index = selections.length;\n      } else {\n        if (index < 0) {\n          index = selections.length + 1 + index;\n        }\n        index = Math.min(Math.max(0, index, selections.length));\n      }\n      const selectableTrait = model.getTrait(SelectableTrait);\n      this.willSelect(model, index, options);\n      if (selectableTrait !== null) {\n        selectableTrait.willSelect(options);\n      }\n      selections.splice(index, 0, model);\n      this.onSelect(model, index, options);\n      if (selectableTrait !== null) {\n        selectableTrait.onSelect(options);\n        selectableTrait.didSelect(options);\n      }\n      this.didSelect(model, index, options);\n    }\n  }\n\n  protected willSelect(model: Model, index: number, options: SelectionOptions | null): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceWillSelect !== void 0) {\n        observer.serviceWillSelect(model, index, options, this);\n      }\n    }\n  }\n\n  protected onSelect(model: Model, index: number, options: SelectionOptions | null): void {\n    // hook\n  }\n\n  protected didSelect(model: Model, index: number, options: SelectionOptions | null): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceDidSelect !== void 0) {\n        observer.serviceDidSelect(model, index, options, this);\n      }\n    }\n  }\n\n  unselect(model: Model): void {\n    const selections = this.selections as Model[];\n    const index = selections.indexOf(model);\n    if (index >= 0) {\n      const selectableTrait = model.getTrait(SelectableTrait);\n      this.willUnselect(model);\n      if (selectableTrait !== null) {\n        selectableTrait.willUnselect();\n      }\n      selections.splice(index, 1);\n      this.onUnselect(model);\n      if (selectableTrait !== null) {\n        selectableTrait.onUnselect();\n        selectableTrait.didUnselect();\n      }\n      this.didUnselect(model);\n    }\n  }\n\n  protected willUnselect(model: Model): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceWillUnselect !== void 0) {\n        observer.serviceWillUnselect(model, this);\n      }\n    }\n  }\n\n  protected onUnselect(model: Model): void {\n    // hook\n  }\n\n  protected didUnselect(model: Model): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceDidUnselect !== void 0) {\n        observer.serviceDidUnselect(model, this);\n      }\n    }\n  }\n\n  unselectAll(): void {\n    const selections = this.selections;\n    while (selections.length !== 0) {\n      this.unselect(selections[0]!);\n    }\n  }\n\n  toggle(model: Model, options?: SelectionOptions | null, index?: number): void {\n    const selections = this.selections as Model[];\n    const selectedIndex = selections.indexOf(model);\n    if (selectedIndex < 0) {\n      if (options === void 0) {\n        options = null;\n      }\n      if (options === null || !options.multi) {\n        this.unselectAll();\n      }\n      if (index === void 0) {\n        index = selections.length;\n      } else {\n        if (index < 0) {\n          index = selections.length + 1 + index;\n        }\n        index = Math.min(Math.max(0, index, selections.length));\n      }\n      const selectableTrait = model.getTrait(SelectableTrait);\n      this.willSelect(model, index, options);\n      if (selectableTrait !== null) {\n        selectableTrait.willSelect(options);\n      }\n      selections.splice(index, 0, model);\n      this.onSelect(model, index, options);\n      if (selectableTrait !== null) {\n        selectableTrait.onSelect(options);\n        selectableTrait.didSelect(options);\n      }\n      this.didSelect(model, index, options);\n    } else {\n      const selectableTrait = model.getTrait(SelectableTrait);\n      this.willUnselect(model);\n      if (selectableTrait !== null) {\n        selectableTrait.willUnselect();\n      }\n      selections.splice(selectedIndex, 1);\n      this.onUnselect(model);\n      if (selectableTrait !== null) {\n        selectableTrait.onUnselect();\n        selectableTrait.didUnselect();\n      }\n      this.didUnselect(model);\n    }\n  }\n\n  @Lazy\n  static global<M>(): SelectionService<M> {\n    return new SelectionService();\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ProviderClass, Provider} from \"@swim/component\";\nimport {SelectionOptions, SelectionService} from \"./SelectionService\";\nimport type {Model} from \"../model/Model\";\n\n/** @public */\nexport interface SelectionProvider<M, S extends SelectionService<M> | null | undefined = SelectionService<M>> extends Provider<M, S> {\n  get selections(): ReadonlyArray<Model>;\n\n  select(model: Model, options?: SelectionOptions, index?: number): void;\n\n  unselect(model: Model): void;\n\n  unselectAll(): void;\n\n  createService(): S;\n}\n\n/** @public */\nexport const SelectionProvider = (function (_super: typeof Provider) {\n  const SelectionProvider = _super.extend(\"SelectionProvider\") as ProviderClass<SelectionProvider<any, any>>;\n\n  Object.defineProperty(SelectionProvider.prototype, \"selections\", {\n    get<M, S extends SelectionService<M> | null | undefined>(this: SelectionProvider<M, S>): ReadonlyArray<Model> {\n      let service: SelectionService<M> | null | undefined = this.service;\n      if (service === void 0 || service === null) {\n        service = SelectionService.global();\n      }\n      return service.selections;\n    },\n    configurable: true,\n  });\n\n  SelectionProvider.prototype.select = function <M, S extends SelectionService<M> | null | undefined>(this: SelectionProvider<M, S>, model: Model, options?: SelectionOptions, index?: number): void {\n    let service: SelectionService<M> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = SelectionService.global();\n    }\n    service.select(model, options, index);\n  };\n\n  SelectionProvider.prototype.unselect = function <M, S extends SelectionService<M> | null | undefined>(this: SelectionProvider<M, S>, model: Model): void {\n    let service: SelectionService<M> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = SelectionService.global();\n    }\n    service.unselect(model);\n  };\n\n  SelectionProvider.prototype.unselectAll = function <M, S extends SelectionService<M> | null | undefined>(this: SelectionProvider<M, S>): void {\n    let service: SelectionService<M> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = SelectionService.global();\n    }\n    service.unselectAll();\n  };\n\n  SelectionProvider.prototype.createService = function <M, S extends SelectionService<M> | null | undefined>(this: SelectionProvider<M, S>): S {\n    return SelectionService.global() as S;\n  };\n\n  return SelectionProvider;\n})(Provider);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  Mutable,\n  Class,\n  Arrays,\n  Comparator,\n  FromAny,\n  Dictionary,\n  MutableDictionary,\n  Creatable,\n  InitType,\n  Initable,\n  ConsumerType,\n  Consumable,\n  Consumer,\n} from \"@swim/util\";\nimport {\n  Fastener,\n  Property,\n  Provider,\n  ComponentFlags,\n  ComponentInit,\n  Component,\n} from \"@swim/component\";\nimport {WarpRef, WarpService, WarpProvider, DownlinkFastener} from \"@swim/client\";\nimport {RefreshService} from \"../refresh/RefreshService\";\nimport {RefreshProvider} from \"../refresh/RefreshProvider\";\nimport {SelectionService} from \"../selection/SelectionService\";\nimport {SelectionProvider} from \"../selection/SelectionProvider\";\nimport {ModelContext} from \"./ModelContext\";\nimport type {ModelObserver} from \"./ModelObserver\";\nimport {ModelRelation} from \"./\"; // forward import\nimport {AnyTrait, TraitCreator, Trait} from \"../\"; // forward import\nimport {TraitRelation} from \"../\"; // forward import\n\n/** @public */\nexport type ModelContextType<M extends Model> =\n  M extends {readonly contextType?: Class<infer T>} ? T : never;\n\n/** @public */\nexport type ModelFlags = ComponentFlags;\n\n/** @public */\nexport type AnyModel<M extends Model = Model> = M | ModelFactory<M> | InitType<M>;\n\n/** @public */\nexport interface ModelInit extends ComponentInit {\n  type?: Creatable<Model>;\n  key?: string;\n  traits?: AnyTrait[];\n  children?: AnyModel[];\n}\n\n/** @public */\nexport interface ModelFactory<M extends Model = Model, U = AnyModel<M>> extends Creatable<M>, FromAny<M, U> {\n  fromInit(init: InitType<M>): M;\n}\n\n/** @public */\nexport interface ModelClass<M extends Model = Model, U = AnyModel<M>> extends Function, ModelFactory<M, U> {\n  readonly prototype: M;\n}\n\n/** @public */\nexport interface ModelConstructor<M extends Model = Model, U = AnyModel<M>> extends ModelClass<M, U> {\n  new(): M;\n}\n\n/** @public */\nexport type ModelCreator<F extends (abstract new (...args: any) => M) & Creatable<InstanceType<F>>, M extends Model = Model> =\n  (abstract new (...args: any) => InstanceType<F>) & Creatable<InstanceType<F>>;\n\n/** @public */\nexport class Model extends Component<Model> implements Initable<ModelInit>, Consumable {\n  constructor() {\n    super();\n    this.consumers = Arrays.empty;\n    this.firstTrait = null;\n    this.lastTrait = null;\n    this.traitMap = null;\n  }\n\n  override get componentType(): Class<Model> {\n    return Model;\n  }\n\n  override readonly observerType?: Class<ModelObserver>;\n\n  /** @override */\n  readonly consumerType?: Class<Consumer>;\n\n  readonly contextType?: Class<ModelContext>;\n\n  protected override willAttachParent(parent: Model): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelWillAttachParent !== void 0) {\n        observer.modelWillAttachParent(parent, this);\n      }\n    }\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willAttachParent(parent);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected override onAttachParent(parent: Model): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onAttachParent(parent);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected override didAttachParent(parent: Model): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didAttachParent(parent);\n      trait = next !== null && next.model === this ? next : null;\n    }\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelDidAttachParent !== void 0) {\n        observer.modelDidAttachParent(parent, this);\n      }\n    }\n  }\n\n  protected override willDetachParent(parent: Model): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelWillDetachParent !== void 0) {\n        observer.modelWillDetachParent(parent, this);\n      }\n    }\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willDetachParent(parent);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected override onDetachParent(parent: Model): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onDetachParent(parent);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected override didDetachParent(parent: Model): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didDetachParent(parent);\n      trait = next !== null && next.model === this ? next : null;\n    }\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelDidDetachParent !== void 0) {\n        observer.modelDidDetachParent(parent, this);\n      }\n    }\n  }\n\n  override setChild<M extends Model>(key: string, newChild: M): Model | null;\n  override setChild<F extends ModelCreator<F>>(key: string, factory: F): Model | null;\n  override setChild(key: string, newChild: AnyModel | null): Model | null;\n  override setChild(key: string, newChild: AnyModel | null): Model | null {\n    if (newChild !== null) {\n      newChild = Model.fromAny(newChild);\n    }\n    return super.setChild(key, newChild) as Model | null;\n  }\n\n  override appendChild<M extends Model>(child: M, key?: string): M;\n  override appendChild<F extends ModelCreator<F>>(factory: F, key?: string): InstanceType<F>;\n  override appendChild(child: AnyModel, key?: string): Model;\n  override appendChild(child: AnyModel, key?: string): Model {\n    child = Model.fromAny(child);\n    return super.appendChild(child, key);\n  }\n\n  override prependChild<M extends Model>(child: M, key?: string): M;\n  override prependChild<F extends ModelCreator<F>>(factory: F, key?: string): InstanceType<F>;\n  override prependChild(child: AnyModel, key?: string): Model;\n  override prependChild(child: AnyModel, key?: string): Model {\n    child = Model.fromAny(child);\n    return super.prependChild(child, key);\n  }\n\n  override insertChild<M extends Model>(child: M, target: Model | null, key?: string): M;\n  override insertChild<F extends ModelCreator<F>>(factory: F, target: Model | null, key?: string): InstanceType<F>;\n  override insertChild(child: AnyModel, target: Model | null, key?: string): Model;\n  override insertChild(child: AnyModel, target: Model | null, key?: string): Model {\n    child = Model.fromAny(child);\n    return super.insertChild(child, target, key);\n  }\n\n  override replaceChild<M extends Model>(newChild: Model, oldChild: M): M;\n  override replaceChild<M extends Model>(newChild: AnyModel, oldChild: M): M;\n  override replaceChild(newChild: AnyModel, oldChild: Model): Model {\n    newChild = Model.fromAny(newChild);\n    return super.replaceChild(newChild, oldChild);\n  }\n\n  protected override willInsertChild(child: Model, target: Model | null): void {\n    super.willInsertChild(child, target);\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelWillInsertChild !== void 0) {\n        observer.modelWillInsertChild(child, target, this);\n      }\n    }\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willInsertChild(child, target);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected override onInsertChild(child: Model, target: Model | null): void {\n    super.onInsertChild(child, target);\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onInsertChild(child, target);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected override didInsertChild(child: Model, target: Model | null): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didInsertChild(child, target);\n      trait = next !== null && next.model === this ? next : null;\n    }\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelDidInsertChild !== void 0) {\n        observer.modelDidInsertChild(child, target, this);\n      }\n    }\n    super.didInsertChild(child, target);\n  }\n\n  /** @internal */\n  override cascadeInsert(updateFlags?: ModelFlags, modelContext?: ModelContext): void {\n    if ((this.flags & Model.MountedFlag) !== 0) {\n      if (updateFlags === void 0) {\n        updateFlags = 0;\n      }\n      updateFlags |= this.flags & Model.UpdateMask;\n      if ((updateFlags & Model.AnalyzeMask) !== 0) {\n        if (modelContext === void 0) {\n          modelContext = this.superModelContext;\n        }\n        this.cascadeAnalyze(updateFlags, modelContext);\n      }\n    }\n  }\n\n  protected override willRemoveChild(child: Model): void {\n    super.willRemoveChild(child);\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelWillRemoveChild !== void 0) {\n        observer.modelWillRemoveChild(child, this);\n      }\n    }\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willRemoveChild(child);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected override onRemoveChild(child: Model): void {\n    super.onRemoveChild(child);\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onRemoveChild(child);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected override didRemoveChild(child: Model): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didRemoveChild(child);\n      trait = next !== null && next.model === this ? next : null;\n    }\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelDidRemoveChild !== void 0) {\n        observer.modelDidRemoveChild(child, this);\n      }\n    }\n    super.didRemoveChild(child);\n  }\n\n  /** @internal */\n  override cascadeMount(): void {\n    if ((this.flags & Model.MountedFlag) === 0) {\n      this.willMount();\n      this.setFlags(this.flags | Model.MountedFlag);\n      this.onMount();\n      this.mountTraits();\n      this.mountChildren();\n      this.didMount();\n    } else {\n      throw new Error(\"already mounted\");\n    }\n  }\n\n  protected override willMount(): void {\n    super.willMount();\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelWillMount !== void 0) {\n        observer.modelWillMount(this);\n      }\n    }\n  }\n\n  protected override onMount(): void {\n    // subsume super\n    this.requestUpdate(this, this.flags & Model.UpdateMask, false);\n    this.requireUpdate(this.mountFlags);\n\n    if (this.decoherent !== null && this.decoherent.length !== 0) {\n      this.requireUpdate(Model.NeedsMutate);\n    }\n\n    this.mountFasteners();\n\n    if (this.consumers.length !== 0) {\n      this.startConsuming();\n    }\n  }\n\n  protected override didMount(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelDidMount !== void 0) {\n        observer.modelDidMount(this);\n      }\n    }\n    super.didMount();\n  }\n\n  /** @internal */\n  override cascadeUnmount(): void {\n    if ((this.flags & Model.MountedFlag) !== 0) {\n      this.willUnmount();\n      this.setFlags(this.flags & ~Model.MountedFlag);\n      this.unmountChildren();\n      this.unmountTraits();\n      this.onUnmount();\n      this.didUnmount();\n    } else {\n      throw new Error(\"already unmounted\");\n    }\n  }\n\n  protected override willUnmount(): void {\n    super.willUnmount();\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelWillUnmount !== void 0) {\n        observer.modelWillUnmount(this);\n      }\n    }\n  }\n\n  protected override onUnmount(): void {\n    this.stopConsuming();\n    super.onUnmount();\n  }\n\n  protected override didUnmount(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelDidUnmount !== void 0) {\n        observer.modelDidUnmount(this);\n      }\n    }\n    super.didUnmount();\n  }\n\n  override requireUpdate(updateFlags: ModelFlags, immediate: boolean = false): void {\n    const flags = this.flags;\n    const deltaUpdateFlags = updateFlags & ~flags & Model.UpdateMask;\n    if (deltaUpdateFlags !== 0) {\n      this.setFlags(flags | deltaUpdateFlags);\n      this.requestUpdate(this, deltaUpdateFlags, immediate);\n    }\n  }\n\n  protected needsUpdate(updateFlags: ModelFlags, immediate: boolean): ModelFlags {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      updateFlags = trait.needsUpdate(updateFlags, immediate);\n      trait = next !== null && next.model === this ? next : null;\n    }\n    return updateFlags;\n  }\n\n  requestUpdate(target: Model, updateFlags: ModelFlags, immediate: boolean): void {\n    updateFlags = this.needsUpdate(updateFlags, immediate);\n    let deltaUpdateFlags = this.flags & ~updateFlags & Model.UpdateMask;\n    if ((updateFlags & Model.AnalyzeMask) !== 0) {\n      deltaUpdateFlags |= Model.NeedsAnalyze;\n    }\n    if ((updateFlags & Model.RefreshMask) !== 0) {\n      deltaUpdateFlags |= Model.NeedsRefresh;\n    }\n    if (deltaUpdateFlags !== 0 || immediate) {\n      this.setFlags(this.flags | deltaUpdateFlags);\n      const parent = this.parent;\n      if (parent !== null) {\n        parent.requestUpdate(target, updateFlags, immediate);\n      } else if (this.mounted) {\n        const refreshProvider = this.refreshProvider.service;\n        if (refreshProvider !== void 0 && refreshProvider !== null) {\n          refreshProvider.requestUpdate(target, updateFlags, immediate);\n        }\n      }\n    }\n  }\n\n  get updating(): boolean {\n    return (this.flags & Model.UpdatingMask) !== 0;\n  }\n\n  get analyzing(): boolean {\n    return (this.flags & Model.AnalyzingFlag) !== 0;\n  }\n\n  protected needsAnalyze(analyzeFlags: ModelFlags, modelContext: ModelContextType<this>): ModelFlags {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      analyzeFlags = trait.needsAnalyze(analyzeFlags, modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n    return analyzeFlags;\n  }\n\n  cascadeAnalyze(analyzeFlags: ModelFlags, baesModelContext: ModelContext): void {\n    const modelContext = this.extendModelContext(baesModelContext);\n    const outerModelContext = ModelContext.current;\n    try {\n      ModelContext.current = modelContext;\n      analyzeFlags &= ~Model.NeedsAnalyze;\n      analyzeFlags |= this.flags & Model.UpdateMask;\n      analyzeFlags = this.needsAnalyze(analyzeFlags, modelContext);\n      if ((analyzeFlags & Model.AnalyzeMask) !== 0) {\n        let cascadeFlags = analyzeFlags;\n        this.setFlags(this.flags & ~Model.NeedsAnalyze | (Model.AnalyzingFlag | Model.ContextualFlag));\n        this.willAnalyze(cascadeFlags, modelContext);\n        if (((this.flags | analyzeFlags) & Model.NeedsMutate) !== 0) {\n          cascadeFlags |= Model.NeedsMutate;\n          this.setFlags(this.flags & ~Model.NeedsMutate);\n          this.willMutate(modelContext);\n        }\n        if (((this.flags | analyzeFlags) & Model.NeedsAggregate) !== 0) {\n          cascadeFlags |= Model.NeedsAggregate;\n          this.setFlags(this.flags & ~Model.NeedsAggregate);\n          this.willAggregate(modelContext);\n        }\n        if (((this.flags | analyzeFlags) & Model.NeedsCorrelate) !== 0) {\n          cascadeFlags |= Model.NeedsCorrelate;\n          this.setFlags(this.flags & ~Model.NeedsCorrelate);\n          this.willCorrelate(modelContext);\n        }\n\n        this.onAnalyze(cascadeFlags, modelContext);\n        if ((cascadeFlags & Model.NeedsMutate) !== 0) {\n          this.onMutate(modelContext);\n        }\n        if ((cascadeFlags & Model.NeedsAggregate) !== 0) {\n          this.onAggregate(modelContext);\n        }\n        if ((cascadeFlags & Model.NeedsCorrelate) !== 0) {\n          this.onCorrelate(modelContext);\n        }\n\n        if ((cascadeFlags & Model.AnalyzeMask) !== 0) {\n          this.setFlags(this.flags & ~Model.ContextualFlag);\n          this.analyzeChildren(cascadeFlags, modelContext, this.analyzeChild);\n          this.setFlags(this.flags | Model.ContextualFlag);\n        }\n\n        if ((cascadeFlags & Model.NeedsCorrelate) !== 0) {\n          this.didCorrelate(modelContext);\n        }\n        if ((cascadeFlags & Model.NeedsAggregate) !== 0) {\n          this.didAggregate(modelContext);\n        }\n        if ((cascadeFlags & Model.NeedsMutate) !== 0) {\n          this.didMutate(modelContext);\n        }\n        this.didAnalyze(cascadeFlags, modelContext);\n      }\n    } finally {\n      this.setFlags(this.flags & ~(Model.AnalyzingFlag | Model.ContextualFlag));\n      ModelContext.current = outerModelContext;\n    }\n  }\n\n  protected willAnalyze(analyzeFlags: ModelFlags, modelContext: ModelContextType<this>): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willAnalyze(analyzeFlags, modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected onAnalyze(analyzeFlags: ModelFlags, modelContext: ModelContextType<this>): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onAnalyze(analyzeFlags, modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected didAnalyze(analyzeFlags: ModelFlags, modelContext: ModelContextType<this>): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didAnalyze(analyzeFlags, modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected willMutate(modelContext: ModelContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelWillMutate !== void 0) {\n        observer.modelWillMutate(modelContext, this);\n      }\n    }\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willMutate(modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected onMutate(modelContext: ModelContextType<this>): void {\n    this.recohereFasteners(modelContext.updateTime);\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onMutate(modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected didMutate(modelContext: ModelContextType<this>): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didMutate(modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelDidMutate !== void 0) {\n        observer.modelDidMutate(modelContext, this);\n      }\n    }\n  }\n\n  protected willAggregate(modelContext: ModelContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelWillAggregate !== void 0) {\n        observer.modelWillAggregate(modelContext, this);\n      }\n    }\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willAggregate(modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected onAggregate(modelContext: ModelContextType<this>): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onAggregate(modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected didAggregate(modelContext: ModelContextType<this>): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didAggregate(modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelDidAggregate !== void 0) {\n        observer.modelDidAggregate(modelContext, this);\n      }\n    }\n  }\n\n  protected willCorrelate(modelContext: ModelContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelWillCorrelate !== void 0) {\n        observer.modelWillCorrelate(modelContext, this);\n      }\n    }\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willCorrelate(modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected onCorrelate(modelContext: ModelContextType<this>): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onCorrelate(modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected didCorrelate(modelContext: ModelContextType<this>): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didCorrelate(modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelDidCorrelate !== void 0) {\n        observer.modelDidCorrelate(modelContext, this);\n      }\n    }\n  }\n\n  protected analyzeChildren(analyzeFlags: ModelFlags, modelContext: ModelContextType<this>,\n                            analyzeChild: (this: this, child: Model, analyzeFlags: ModelFlags,\n                                           modelContext: ModelContextType<this>) => void): void {\n    const trait = this.firstTrait;\n    if (trait !== null) {\n      this.analyzeTraitChildren(trait, analyzeFlags, modelContext, analyzeChild);\n    } else {\n      this.analyzeOwnChildren(analyzeFlags, modelContext, analyzeChild);\n    }\n  }\n\n  protected analyzeTraitChildren(trait: Trait, analyzeFlags: ModelFlags, modelContext: ModelContextType<this>,\n                                 analyzeChild: (this: this, child: Model, analyzeFlags: ModelFlags,\n                                                modelContext: ModelContextType<this>) => void): void {\n    const next = trait.nextTrait;\n    if (next !== null) {\n      trait.analyzeChildren(analyzeFlags, modelContext, analyzeChild as any, this.analyzeTraitChildren.bind(this, next) as any);\n    } else {\n      trait.analyzeChildren(analyzeFlags, modelContext, analyzeChild as any, this.analyzeOwnChildren as any);\n    }\n  }\n\n  protected analyzeOwnChildren(analyzeFlags: ModelFlags, modelContext: ModelContextType<this>,\n                               analyzeChild: (this: this, child: Model, analyzeFlags: ModelFlags,\n                                              modelContext: ModelContextType<this>) => void): void {\n    let child = this.firstChild;\n    while (child !== null) {\n      const next = child.nextSibling;\n      analyzeChild.call(this, child, analyzeFlags, modelContext);\n      if (next !== null && next.parent !== this) {\n        throw new Error(\"inconsistent analyze pass\");\n      }\n      child = next;\n    }\n  }\n\n  protected analyzeChild(child: Model, analyzeFlags: ModelFlags, modelContext: ModelContextType<this>): void {\n    child.cascadeAnalyze(analyzeFlags, modelContext);\n  }\n\n  get refreshing(): boolean {\n    return (this.flags & Model.RefreshingFlag) !== 0;\n  }\n\n  protected needsRefresh(refreshFlags: ModelFlags, modelContext: ModelContextType<this>): ModelFlags {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      refreshFlags = trait.needsRefresh(refreshFlags, modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n    return refreshFlags;\n  }\n\n  cascadeRefresh(refreshFlags: ModelFlags, baseModelContext: ModelContext): void {\n    const modelContext = this.extendModelContext(baseModelContext);\n    const outerModelContext = ModelContext.current;\n    try {\n      ModelContext.current = modelContext;\n      refreshFlags &= ~Model.NeedsRefresh;\n      refreshFlags |= this.flags & Model.UpdateMask;\n      refreshFlags = this.needsRefresh(refreshFlags, modelContext);\n      if ((refreshFlags & Model.RefreshMask) !== 0) {\n        let cascadeFlags = refreshFlags;\n        this.setFlags(this.flags & ~Model.NeedsRefresh | (Model.RefreshingFlag | Model.ContextualFlag));\n        this.willRefresh(cascadeFlags, modelContext);\n        if (((this.flags | refreshFlags) & Model.NeedsValidate) !== 0) {\n          cascadeFlags |= Model.NeedsValidate;\n          this.setFlags(this.flags & ~Model.NeedsValidate);\n          this.willValidate(modelContext);\n        }\n        if (((this.flags | refreshFlags) & Model.NeedsReconcile) !== 0) {\n          cascadeFlags |= Model.NeedsReconcile;\n          this.setFlags(this.flags & ~Model.NeedsReconcile);\n          this.willReconcile(modelContext);\n        }\n\n        this.onRefresh(cascadeFlags, modelContext);\n        if ((cascadeFlags & Model.NeedsValidate) !== 0) {\n          this.onValidate(modelContext);\n        }\n        if ((cascadeFlags & Model.NeedsReconcile) !== 0) {\n          this.onReconcile(modelContext);\n        }\n\n        if ((cascadeFlags & Model.RefreshMask)) {\n          this.setFlags(this.flags & ~Model.ContextualFlag);\n          this.refreshChildren(cascadeFlags, modelContext, this.refreshChild);\n          this.setFlags(this.flags | Model.ContextualFlag);\n        }\n\n        if ((cascadeFlags & Model.NeedsReconcile) !== 0) {\n          this.didReconcile(modelContext);\n        }\n        if ((cascadeFlags & Model.NeedsValidate) !== 0) {\n          this.didValidate(modelContext);\n        }\n        this.didRefresh(cascadeFlags, modelContext);\n      }\n    } finally {\n      this.setFlags(this.flags & ~(Model.RefreshingFlag | Model.ContextualFlag));\n      ModelContext.current = outerModelContext;\n    }\n  }\n\n  protected willRefresh(refreshFlags: ModelFlags, modelContext: ModelContextType<this>): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willRefresh(refreshFlags, modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected onRefresh(refreshFlags: ModelFlags, modelContext: ModelContextType<this>): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onRefresh(refreshFlags, modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected didRefresh(refreshFlags: ModelFlags, modelContext: ModelContextType<this>): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didRefresh(refreshFlags, modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected willValidate(modelContext: ModelContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelWillValidate !== void 0) {\n        observer.modelWillValidate(modelContext, this);\n      }\n    }\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willValidate(modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected onValidate(modelContext: ModelContextType<this>): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onValidate(modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected didValidate(modelContext: ModelContextType<this>): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didValidate(modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelDidValidate !== void 0) {\n        observer.modelDidValidate(modelContext, this);\n      }\n    }\n  }\n\n  protected willReconcile(modelContext: ModelContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelWillReconcile !== void 0) {\n        observer.modelWillReconcile(modelContext, this);\n      }\n    }\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.willReconcile(modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected onReconcile(modelContext: ModelContextType<this>): void {\n    this.recohereDownlinks(modelContext.updateTime);\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.onReconcile(modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected didReconcile(modelContext: ModelContextType<this>): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.didReconcile(modelContext);\n      trait = next !== null && next.model === this ? next : null;\n    }\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelDidReconcile !== void 0) {\n        observer.modelDidReconcile(modelContext, this);\n      }\n    }\n  }\n\n  protected refreshChildren(refreshFlags: ModelFlags, modelContext: ModelContextType<this>,\n                            refreshChild: (this: this, child: Model, refreshFlags: ModelFlags,\n                                           modelContext: ModelContextType<this>) => void): void {\n    const trait = this.firstTrait;\n    if (trait !== null) {\n      this.refreshTraitChildren(trait, refreshFlags, modelContext, refreshChild);\n    } else {\n      this.refreshOwnChildren(refreshFlags, modelContext, refreshChild);\n    }\n  }\n\n  protected refreshTraitChildren(trait: Trait, refreshFlags: ModelFlags, modelContext: ModelContextType<this>,\n                                 refreshChild: (this: this, child: Model, refreshFlags: ModelFlags,\n                                                modelContext: ModelContextType<this>) => void): void {\n    const next = trait.nextTrait;\n    if (next !== null) {\n      trait.refreshChildren(refreshFlags, modelContext, refreshChild as any, this.refreshTraitChildren.bind(this, next) as any);\n    } else {\n      trait.refreshChildren(refreshFlags, modelContext, refreshChild as any, this.refreshOwnChildren as any);\n    }\n  }\n\n  protected refreshOwnChildren(refreshFlags: ModelFlags, modelContext: ModelContextType<this>,\n                               refreshChild: (this: this, child: Model, refreshFlags: ModelFlags,\n                                              modelContext: ModelContextType<this>) => void): void {\n    let child = this.firstChild;\n    while (child !== null) {\n      const next = child.nextSibling;\n      refreshChild.call(this, child, refreshFlags, modelContext);\n      if (next !== null && next.parent !== this) {\n        throw new Error(\"inconsistent refresh pass\");\n      }\n      child = next;\n    }\n  }\n\n  protected refreshChild(child: Model, refreshFlags: ModelFlags, modelContext: ModelContextType<this>): void {\n    child.cascadeRefresh(refreshFlags, modelContext);\n  }\n\n  readonly firstTrait: Trait | null;\n\n  /** @internal */\n  setFirstTrait(firstTrait: Trait | null): void {\n    (this as Mutable<this>).firstTrait = firstTrait;\n  }\n\n  readonly lastTrait: Trait | null;\n\n  /** @internal */\n  setLastTrait(lastTrait: Trait | null): void {\n    (this as Mutable<this>).lastTrait = lastTrait;\n  }\n\n  forEachTrait<T>(callback: (trait: Trait) => T | void): T | undefined;\n  forEachTrait<T, S>(callback: (this: S, trait: Trait) => T | void, thisArg: S): T | undefined;\n  forEachTrait<T, S>(callback: (this: S | undefined, trait: Trait) => T | void, thisArg?: S): T | undefined {\n    let result: T | undefined;\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      const result = callback.call(thisArg, trait);\n      if (result !== void 0) {\n        break;\n      }\n      trait = next !== null && next.model === this ? next : null;\n    }\n    return result;\n  }\n\n  /** @internal */\n  readonly traitMap: Dictionary<Trait> | null;\n\n  /** @internal */\n  protected insertTraitMap(trait: Trait): void {\n    const key = trait.key;\n    if (key !== void 0) {\n      let traitMap = this.traitMap as MutableDictionary<Trait>;\n      if (traitMap === null) {\n        traitMap = {};\n        (this as Mutable<this>).traitMap = traitMap;\n      }\n      traitMap[key] = trait;\n    }\n  }\n\n  /** @internal */\n  protected removeTraitMap(trait: Trait): void {\n    const key = trait.key;\n    if (key !== void 0) {\n      const traitMap = this.traitMap as MutableDictionary<Trait>;\n      if (traitMap !== null) {\n        delete traitMap[key];\n      }\n    }\n  }\n\n  getTrait<F extends abstract new (...args: any) => Trait>(key: string, traitBound: F): InstanceType<F> | null;\n  getTrait(key: string, traitBound?: abstract new (...args: any) => Trait): Trait | null;\n  getTrait<F extends abstract new (...args: any) => Trait>(traitBound: F): InstanceType<F> | null;\n  getTrait(key: string | (abstract new (...args: any) => Trait), traitBound?: abstract new (...args: any) => Trait): Trait | null {\n    if (typeof key === \"string\") {\n      const traitMap = this.traitMap;\n      if (traitMap !== null) {\n        const trait = traitMap[key];\n        if (trait !== void 0 && (traitBound === void 0 || trait instanceof traitBound)) {\n          return trait;\n        }\n      }\n    } else {\n      let trait = this.firstTrait;\n      while (trait !== null) {\n        if (trait instanceof key) {\n          return trait;\n        }\n        trait = (trait as Trait).nextTrait;\n      }\n    }\n    return null;\n  }\n\n  setTrait<T extends Trait>(key: string, newTrait: T): Trait | null;\n  setTrait<F extends TraitCreator<F>>(key: string, factory: F): Trait | null;\n  setTrait(key: string, newTrait: AnyTrait | null): Trait | null;\n  setTrait(key: string, newTrait: AnyTrait | null): Trait | null {\n    if (newTrait !== null) {\n      newTrait = Trait.fromAny(newTrait);\n    }\n    const oldTrait = this.getTrait(key);\n    let target: Trait | null;\n\n    if (oldTrait !== null && newTrait !== null && oldTrait !== newTrait) { // replace\n      newTrait.remove();\n      target = oldTrait.nextTrait;\n\n      this.willRemoveTrait(oldTrait);\n      oldTrait.detachModel(this);\n      this.removeTraitMap(oldTrait);\n      this.onRemoveTrait(oldTrait);\n      this.didRemoveTrait(oldTrait);\n      oldTrait.setKey(void 0);\n\n      newTrait.setKey(oldTrait.key);\n      this.willInsertTrait(newTrait, target);\n      this.insertTraitMap(newTrait);\n      newTrait.attachModel(this, target);\n      this.onInsertTrait(newTrait, target);\n      this.didInsertTrait(newTrait, target);\n    } else if (newTrait !== oldTrait || newTrait !== null && newTrait.key !== key) {\n      if (oldTrait !== null) { // remove\n        target = oldTrait.nextTrait;\n        this.willRemoveTrait(oldTrait);\n        oldTrait.detachModel(this);\n        this.removeTraitMap(oldTrait);\n        this.onRemoveTrait(oldTrait);\n        this.didRemoveTrait(oldTrait);\n        oldTrait.setKey(void 0);\n      } else {\n        target = null;\n      }\n\n      if (newTrait !== null) { // insert\n        newTrait.remove();\n\n        newTrait.setKey(key);\n        this.willInsertTrait(newTrait, target);\n        this.insertTraitMap(newTrait);\n        newTrait.attachModel(this, target);\n        this.onInsertTrait(newTrait, target);\n        this.didInsertTrait(newTrait, target);\n      }\n    }\n\n    return oldTrait;\n  }\n\n  appendTrait<T extends Trait>(trait: T, key?: string): T;\n  appendTrait<F extends TraitCreator<F>>(factory: F, key?: string): InstanceType<F>;\n  appendTrait(trait: AnyTrait, key?: string): Trait;\n  appendTrait(trait: AnyTrait, key?: string): Trait {\n    trait = Trait.fromAny(trait);\n\n    trait.remove();\n    if (key !== void 0) {\n      this.removeChild(key);\n    }\n\n    trait.setKey(key);\n    this.willInsertTrait(trait, null);\n    this.insertTraitMap(trait);\n    trait.attachModel(this, null);\n    this.onInsertTrait(trait, null);\n    this.didInsertTrait(trait, null);\n\n    return trait;\n  }\n\n  prependTrait<T extends Trait>(trait: T, key?: string): T;\n  prependTrait<F extends TraitCreator<F>>(factory: F, key?: string): InstanceType<F>;\n  prependTrait(trait: AnyTrait, key?: string): Trait;\n  prependTrait(trait: AnyTrait, key?: string): Trait {\n    trait = Trait.fromAny(trait);\n\n    trait.remove();\n    if (key !== void 0) {\n      this.removeChild(key);\n    }\n    const target = this.firstTrait;\n\n    trait.setKey(key);\n    this.willInsertTrait(trait, target);\n    this.insertTraitMap(trait);\n    trait.attachModel(this, target);\n    this.onInsertTrait(trait, target);\n    this.didInsertTrait(trait, target);\n\n    return trait;\n  }\n\n  insertTrait<T extends Trait>(trait: T, target: Trait | null, key?: string): T;\n  insertTrait<F extends TraitCreator<F>>(factory: F, target: Trait | null, key?: string): InstanceType<F>;\n  insertTrait(trait: AnyTrait, target: Trait | null, key?: string): Trait;\n  insertTrait(trait: AnyTrait, target: Trait | null, key?: string): Trait {\n    if (target !== null && target.model !== this) {\n      throw new Error(\"insert target is not a member trait\");\n    }\n    trait = Trait.fromAny(trait);\n\n    trait.remove();\n    if (key !== void 0) {\n      this.removeChild(key);\n    }\n\n    trait.setKey(key);\n    this.willInsertTrait(trait, target);\n    this.insertTraitMap(trait);\n    trait.attachModel(this, target);\n    this.onInsertTrait(trait, target);\n    this.didInsertTrait(trait, target);\n\n    return trait;\n  }\n\n  replaceTrait<T extends Trait>(newTrait: Trait, oldTrait: T): T;\n  replaceTrait<T extends Trait>(newTrait: AnyTrait, oldTrait: T): T;\n  replaceTrait(newTrait: AnyTrait, oldTrait: Trait): Trait {\n    if (oldTrait.model !== this) {\n      throw new Error(\"replacement target is not a member trait\");\n    }\n    newTrait = Trait.fromAny(newTrait);\n\n    if (newTrait !== oldTrait) {\n      newTrait.remove();\n      const target = oldTrait.nextTrait;\n\n      this.willRemoveTrait(oldTrait);\n      oldTrait.detachModel(this);\n      this.removeTraitMap(oldTrait);\n      this.onRemoveTrait(oldTrait);\n      this.didRemoveTrait(oldTrait);\n      oldTrait.setKey(void 0);\n\n      newTrait.setKey(oldTrait.key);\n      this.willInsertTrait(newTrait, target);\n      this.insertTraitMap(newTrait);\n      newTrait.attachModel(this, target);\n      this.onInsertTrait(newTrait, target);\n      this.didInsertTrait(newTrait, target);\n    }\n\n    return oldTrait;\n  }\n\n\n  get insertTraitFlags(): ModelFlags {\n    return (this.constructor as typeof Model).InsertTraitFlags;\n  }\n\n  protected willInsertTrait(trait: Trait, target: Trait | null): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelWillInsertTrait !== void 0) {\n        observer.modelWillInsertTrait(trait, target, this);\n      }\n    }\n    let prev = this.firstTrait;\n    while (prev !== null) {\n      const next = prev.nextTrait;\n      if (prev !== trait) {\n        prev.willInsertTrait(trait, target);\n      }\n      prev = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected onInsertTrait(trait: Trait, target: Trait | null): void {\n    this.requireUpdate(this.insertTraitFlags);\n    this.bindTraitFasteners(trait, target);\n    let prev = this.firstTrait;\n    while (prev !== null) {\n      const next = prev.nextTrait;\n      if (prev !== trait) {\n        prev.onInsertTrait(trait, target);\n      }\n      prev = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected didInsertTrait(trait: Trait, target: Trait | null): void {\n    let prev = this.firstTrait;\n    while (prev !== null) {\n      const next = prev.nextTrait;\n      if (prev !== trait) {\n        prev.didInsertTrait(trait, target);\n      }\n      prev = next !== null && next.model === this ? next : null;\n    }\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelDidInsertTrait !== void 0) {\n        observer.modelDidInsertTrait(trait, target, this);\n      }\n    }\n  }\n\n  removeTrait<T extends Trait>(trait: T): T;\n  removeTrait(key: string | Trait): Trait | null;\n  removeTrait(key: string | Trait): Trait | null {\n    let trait: Trait | null;\n    if (typeof key === \"string\") {\n      trait = this.getTrait(key);\n      if (trait === null) {\n        return null;\n      }\n    } else {\n      trait = key;\n      if (trait.model !== this) {\n        throw new Error(\"not a member trait\");\n      }\n    }\n\n    this.willRemoveTrait(trait);\n    trait.detachModel(this);\n    this.removeTraitMap(trait);\n    this.onRemoveTrait(trait);\n    this.didRemoveTrait(trait);\n    trait.setKey(void 0);\n\n    return trait;\n  }\n\n  get removeTraitFlags(): ModelFlags {\n    return (this.constructor as typeof Model).RemoveTraitFlags;\n  }\n\n  protected willRemoveTrait(trait: Trait): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelWillRemoveTrait !== void 0) {\n        observer.modelWillRemoveTrait(trait, this);\n      }\n    }\n    let prev = this.firstTrait;\n    while (prev !== null) {\n      const next = prev.nextTrait;\n      if (prev !== trait) {\n        prev.willRemoveTrait(trait);\n      }\n      prev = next !== null && next.model === this ? next : null;\n    }\n  }\n\n  protected onRemoveTrait(trait: Trait): void {\n    this.requireUpdate(this.removeTraitFlags);\n    let prev = this.firstTrait;\n    while (prev !== null) {\n      const next = prev.nextTrait;\n      if (prev !== trait) {\n        prev.onRemoveTrait(trait);\n      }\n      prev = next !== null && next.model === this ? next : null;\n    }\n    this.unbindTraitFasteners(trait);\n  }\n\n  protected didRemoveTrait(trait: Trait): void {\n    let prev = this.firstTrait;\n    while (prev !== null) {\n      const next = prev.nextTrait;\n      if (prev !== trait) {\n        prev.didRemoveTrait(trait);\n      }\n      prev = next !== null && next.model === this ? next : null;\n    }\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelDidRemoveTrait !== void 0) {\n        observer.modelDidRemoveTrait(trait, this);\n      }\n    }\n  }\n\n  sortTraits(comparator: Comparator<Trait>): void {\n    let trait = this.firstTrait;\n    if (trait !== null) {\n      const traits: Trait[] = [];\n      do {\n        traits.push(trait);\n        trait = trait.nextTrait;\n      } while (trait !== null);\n      traits.sort(comparator);\n\n      trait = traits[0]!;\n      this.setFirstTrait(trait);\n      trait.setPreviousTrait(null);\n      for (let i = 1; i < traits.length; i += 1) {\n        const next = traits[i]!;\n        trait.setNextTrait(next);\n        next.setPreviousTrait(trait);\n        trait = next;\n      }\n      trait.setNextTrait(null);\n      this.setLastTrait(trait);\n    }\n  }\n\n  /** @internal */\n  protected mountTraits(): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.mountTrait();\n      if (next !== null && next.model !== this) {\n        throw new Error(\"inconsistent mount\");\n      }\n      trait = next;\n    }\n  }\n\n  /** @internal */\n  protected unmountTraits(): void {\n    let trait = this.firstTrait;\n    while (trait !== null) {\n      const next = trait.nextTrait;\n      trait.unmountTrait();\n      if (next !== null && next.model !== this) {\n        throw new Error(\"inconsistent unmount\");\n      }\n      trait = next;\n    }\n  }\n\n  getSuperTrait<F extends abstract new (...args: any) => Trait>(superBound: F): InstanceType<F> | null {\n    const parent = this.parent;\n    if (parent === null) {\n      return null;\n    } else {\n      const trait = parent.getTrait(superBound);\n      if (trait !== null) {\n        return trait;\n      } else {\n        return parent.getSuperTrait(superBound);\n      }\n    }\n  }\n\n  getBaseTrait<F extends abstract new (...args: any) => Trait>(baseBound: F): InstanceType<F> | null {\n    const parent = this.parent;\n    if (parent === null) {\n      return null;\n    } else {\n      const baseTrait = parent.getBaseTrait(baseBound);\n      if (baseTrait !== null) {\n        return baseTrait;\n      } else {\n        return parent.getTrait(baseBound);\n      }\n    }\n  }\n\n  protected override bindFastener(fastener: Fastener): void {\n    super.bindFastener(fastener);\n    if (fastener instanceof TraitRelation && fastener.binds) {\n      let trait = this.firstTrait;\n      while (trait !== null) {\n        const next = trait.nextTrait;\n        fastener.bindTrait(trait, next);\n        trait = next !== null && next.model === this ? next : null;\n      }\n    }\n    if (fastener instanceof DownlinkFastener && fastener.consumed === true && this.consuming) {\n      fastener.consume(this);\n    }\n  }\n\n  /** @internal */\n  protected override bindChildFastener(fastener: Fastener, child: Model, target: Model | null): void {\n    super.bindChildFastener(fastener, child, target);\n    if (fastener instanceof ModelRelation || fastener instanceof TraitRelation) {\n      fastener.bindModel(child, target);\n    }\n  }\n\n  /** @internal */\n  protected override unbindChildFastener(fastener: Fastener, child: Model): void {\n    if (fastener instanceof ModelRelation || fastener instanceof TraitRelation) {\n      fastener.unbindModel(child);\n    }\n    super.unbindChildFastener(fastener, child);\n  }\n\n  /** @internal */\n  protected bindTraitFasteners(trait: Trait, target: Trait | null): void {\n    const fasteners = this.fasteners;\n    for (const fastenerName in fasteners) {\n      const fastener = fasteners[fastenerName]!;\n      this.bindTraitFastener(fastener, trait, target);\n    }\n  }\n\n  /** @internal */\n  protected bindTraitFastener(fastener: Fastener, trait: Trait, target: Trait | null): void {\n    if (fastener instanceof TraitRelation) {\n      fastener.bindTrait(trait, target);\n    }\n  }\n\n  /** @internal */\n  protected unbindTraitFasteners(trait: Trait): void {\n    const fasteners = this.fasteners;\n    for (const fastenerName in fasteners) {\n      const fastener = fasteners[fastenerName]!;\n      this.unbindTraitFastener(fastener, trait);\n    }\n  }\n\n  /** @internal */\n  protected unbindTraitFastener(fastener: Fastener, trait: Trait): void {\n    if (fastener instanceof TraitRelation) {\n      fastener.unbindTrait(trait);\n    }\n  }\n\n  /** @internal @override */\n  override decohereFastener(fastener: Fastener): void {\n    super.decohereFastener(fastener);\n    if (fastener instanceof DownlinkFastener) {\n      this.requireUpdate(Model.NeedsReconcile);\n    } else {\n      this.requireUpdate(Model.NeedsMutate);\n    }\n  }\n\n  /** @internal */\n  override recohereFasteners(t?: number): void {\n    const decoherent = this.decoherent;\n    if (decoherent !== null) {\n      const decoherentCount = decoherent.length;\n      if (decoherentCount !== 0) {\n        if (t === void 0) {\n          t = performance.now();\n        }\n        (this as Mutable<this>).decoherent = null;\n        for (let i = 0; i < decoherentCount; i += 1) {\n          const fastener = decoherent[i]!;\n          if (!(fastener instanceof DownlinkFastener)) {\n            fastener.recohere(t);\n          } else {\n            this.decohereFastener(fastener);\n          }\n        }\n      }\n    }\n  }\n\n  /** @internal */\n  recohereDownlinks(t: number): void {\n    const decoherent = this.decoherent;\n    if (decoherent !== null) {\n      const decoherentCount = decoherent.length;\n      if (decoherentCount !== 0) {\n        (this as Mutable<this>).decoherent = null;\n        for (let i = 0; i < decoherentCount; i += 1) {\n          const fastener = decoherent[i]!;\n          if (fastener instanceof DownlinkFastener) {\n            fastener.recohere(t);\n          } else {\n            this.decohereFastener(fastener);\n          }\n        }\n      }\n    }\n  }\n\n  /** @internal */\n  readonly consumers: ReadonlyArray<ConsumerType<this>>;\n\n  /** @override */\n  consume(consumer: ConsumerType<this>): void {\n    const oldConsumers = this.consumers;\n    const newConsumers = Arrays.inserted(consumer, oldConsumers);\n    if (oldConsumers !== newConsumers) {\n      this.willConsume(consumer);\n      (this as Mutable<this>).consumers = newConsumers;\n      this.onConsume(consumer);\n      this.didConsume(consumer);\n      if (oldConsumers.length === 0 && this.mounted) {\n        this.startConsuming();\n      }\n    }\n  }\n\n  protected willConsume(consumer: ConsumerType<this>): void {\n    // hook\n  }\n\n  protected onConsume(consumer: ConsumerType<this>): void {\n    // hook\n  }\n\n  protected didConsume(consumer: ConsumerType<this>): void {\n    // hook\n  }\n\n  /** @override */\n  unconsume(consumer: ConsumerType<this>): void {\n    const oldConsumers = this.consumers;\n    const newConsumers = Arrays.removed(consumer, oldConsumers);\n    if (oldConsumers !== newConsumers) {\n      this.willUnconsume(consumer);\n      (this as Mutable<this>).consumers = newConsumers;\n      this.onUnconsume(consumer);\n      this.didUnconsume(consumer);\n      if (newConsumers.length === 0) {\n        this.stopConsuming();\n      }\n    }\n  }\n\n  protected willUnconsume(consumer: ConsumerType<this>): void {\n    // hook\n  }\n\n  protected onUnconsume(consumer: ConsumerType<this>): void {\n    // hook\n  }\n\n  protected didUnconsume(consumer: ConsumerType<this>): void {\n    // hook\n  }\n\n  get consuming(): boolean {\n    return (this.flags & Model.ConsumingFlag) !== 0;\n  }\n\n  get startConsumingFlags(): ModelFlags {\n    return (this.constructor as typeof Model).StartConsumingFlags;\n  }\n\n  protected startConsuming(): void {\n    if ((this.flags & Model.ConsumingFlag) === 0) {\n      this.willStartConsuming();\n      this.setFlags(this.flags | Model.ConsumingFlag);\n      this.onStartConsuming();\n      this.didStartConsuming();\n    }\n  }\n\n  protected willStartConsuming(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelWillStartConsuming !== void 0) {\n        observer.modelWillStartConsuming(this);\n      }\n    }\n  }\n\n  protected onStartConsuming(): void {\n    this.requireUpdate(this.startConsumingFlags);\n    this.startConsumingFasteners();\n  }\n\n  protected didStartConsuming(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelDidStartConsuming !== void 0) {\n        observer.modelDidStartConsuming(this);\n      }\n    }\n  }\n\n  get stopConsumingFlags(): ModelFlags {\n    return (this.constructor as typeof Model).StopConsumingFlags;\n  }\n\n  protected stopConsuming(): void {\n    if ((this.flags & Model.ConsumingFlag) !== 0) {\n      this.willStopConsuming();\n      this.setFlags(this.flags & ~Model.ConsumingFlag);\n      this.onStopConsuming();\n      this.didStopConsuming();\n    }\n  }\n\n  protected willStopConsuming(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelWillStopConsuming !== void 0) {\n        observer.modelWillStopConsuming(this);\n      }\n    }\n  }\n\n  protected onStopConsuming(): void {\n    this.requireUpdate(this.stopConsumingFlags);\n    this.stopConsumingFasteners();\n  }\n\n  protected didStopConsuming(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.modelDidStopConsuming !== void 0) {\n        observer.modelDidStopConsuming(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected startConsumingFasteners(): void {\n    const fasteners = this.fasteners;\n    for (const fastenerName in fasteners) {\n      const fastener = fasteners[fastenerName]!;\n      if (fastener instanceof DownlinkFastener && fastener.consumed === true) {\n        fastener.consume(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected stopConsumingFasteners(): void {\n    const fasteners = this.fasteners;\n    for (const fastenerName in fasteners) {\n      const fastener = fasteners[fastenerName]!;\n      if (fastener instanceof DownlinkFastener && fastener.consumed === true) {\n        fastener.unconsume(this);\n      }\n    }\n  }\n\n  @Provider({\n    extends: RefreshProvider,\n    type: RefreshService,\n    observes: false,\n    service: RefreshService.global(),\n  })\n  readonly refreshProvider!: RefreshProvider<this>;\n\n  @Provider({\n    extends: SelectionProvider,\n    type: SelectionService,\n    observes: false,\n    service: SelectionService.global(),\n  })\n  readonly selectionProvider!: SelectionProvider<this>;\n\n  @Provider({\n    extends: WarpProvider,\n    type: WarpService,\n    observes: false,\n    service: WarpService.global(),\n  })\n  readonly warpProvider!: WarpProvider<this>;\n\n  @Property({type: Object, inherits: true, value: null, updateFlags: Model.NeedsReconcile})\n  readonly warpRef!: Property<this, WarpRef | null>;\n\n  /** @internal */\n  get superModelContext(): ModelContext {\n    const parent = this.parent;\n    if (parent !== null) {\n      return parent.modelContext;\n    } else {\n      return this.refreshProvider.updatedModelContext();\n    }\n  }\n\n  /** @internal */\n  extendModelContext(modelContext: ModelContext): ModelContextType<this> {\n    return modelContext as ModelContextType<this>;\n  }\n\n  get modelContext(): ModelContextType<this> {\n    if ((this.flags & Model.ContextualFlag) !== 0) {\n      return ModelContext.current as ModelContextType<this>;\n    } else {\n      return this.extendModelContext(this.superModelContext);\n    }\n  }\n\n  /** @override */\n  override init(init: ModelInit): void {\n    // hook\n  }\n\n  static override create<S extends new () => InstanceType<S>>(this: S): InstanceType<S> {\n    return new this();\n  }\n\n  static override fromInit<S extends abstract new (...args: any) => InstanceType<S>>(this: S, init: InitType<InstanceType<S>>): InstanceType<S> {\n    let type: Creatable<Model>;\n    if ((typeof init === \"object\" && init !== null || typeof init === \"function\") && Creatable.is((init as ModelInit).type)) {\n      type = (init as ModelInit).type!;\n    } else {\n      type = this as unknown as Creatable<Model>;\n    }\n    const view = type.create();\n    view.init(init as ModelInit);\n    return view as InstanceType<S>;\n  }\n\n  static override fromAny<S extends abstract new (...args: any) => InstanceType<S>>(this: S, value: AnyModel<InstanceType<S>>): InstanceType<S> {\n    if (value === void 0 || value === null) {\n      return value as InstanceType<S>;\n    } else if (value instanceof Model) {\n      if (value instanceof this) {\n        return value;\n      } else {\n        throw new TypeError(value + \" not an instance of \" + this);\n      }\n    } else if (Creatable.is(value)) {\n      return (value as Creatable<InstanceType<S>>).create();\n    } else {\n      return (this as unknown as ModelFactory<InstanceType<S>>).fromInit(value);\n    }\n  }\n\n  /** @internal */\n  static override uid: () => number = (function () {\n    let nextId = 1;\n    return function uid(): number {\n      const id = ~~nextId;\n      nextId += 1;\n      return id;\n    }\n  })();\n\n  /** @internal */\n  static override readonly MountedFlag: ModelFlags = Component.MountedFlag;\n  /** @internal */\n  static override readonly RemovingFlag: ModelFlags = Component.RemovingFlag;\n  /** @internal */\n  static readonly AnalyzingFlag: ModelFlags = 1 << (Component.FlagShift + 0);\n  /** @internal */\n  static readonly RefreshingFlag: ModelFlags = 1 << (Component.FlagShift + 1);\n  /** @internal */\n  static readonly ContextualFlag: ModelFlags = 1 << (Component.FlagShift + 2);\n  /** @internal */\n  static readonly ConsumingFlag: ModelFlags = 1 << (Component.FlagShift + 3);\n  /** @internal */\n  static readonly UpdatingMask: ModelFlags = Model.AnalyzingFlag\n                                           | Model.RefreshingFlag;\n  /** @internal */\n  static readonly StatusMask: ModelFlags = Model.MountedFlag\n                                         | Model.RemovingFlag\n                                         | Model.AnalyzingFlag\n                                         | Model.RefreshingFlag\n                                         | Model.ContextualFlag\n                                         | Model.ConsumingFlag;\n\n  static readonly NeedsAnalyze: ModelFlags = 1 << (Component.FlagShift + 4);\n  static readonly NeedsMutate: ModelFlags = 1 << (Component.FlagShift + 5);\n  static readonly NeedsAggregate: ModelFlags = 1 << (Component.FlagShift + 6);\n  static readonly NeedsCorrelate: ModelFlags = 1 << (Component.FlagShift + 7);\n  /** @internal */\n  static readonly AnalyzeMask: ModelFlags = Model.NeedsAnalyze\n                                          | Model.NeedsMutate\n                                          | Model.NeedsAggregate\n                                          | Model.NeedsCorrelate;\n\n  static readonly NeedsRefresh: ModelFlags = 1 << (Component.FlagShift + 8);\n  static readonly NeedsValidate: ModelFlags = 1 << (Component.FlagShift + 9);\n  static readonly NeedsReconcile: ModelFlags = 1 << (Component.FlagShift + 10);\n  /** @internal */\n  static readonly RefreshMask: ModelFlags = Model.NeedsRefresh\n                                          | Model.NeedsValidate\n                                          | Model.NeedsReconcile;\n\n  /** @internal */\n  static readonly UpdateMask: ModelFlags = Model.AnalyzeMask\n                                         | Model.RefreshMask;\n\n  /** @internal */\n  static override readonly FlagShift: number = Component.FlagShift + 11;\n  /** @internal */\n  static override readonly FlagMask: ModelFlags = (1 << Model.FlagShift) - 1;\n\n  static override readonly MountFlags: ModelFlags = 0;\n  static override readonly InsertChildFlags: ModelFlags = 0;\n  static override readonly RemoveChildFlags: ModelFlags = 0;\n  static readonly InsertTraitFlags: ModelFlags = 0;\n  static readonly RemoveTraitFlags: ModelFlags = 0;\n  static readonly StartConsumingFlags: ModelFlags = 0;\n  static readonly StopConsumingFlags: ModelFlags = 0;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Proto, ObserverType} from \"@swim/util\";\nimport {FastenerOwner, FastenerInit, FastenerClass, Fastener} from \"@swim/component\";\nimport {AnyModel, ModelFactory, Model} from \"./Model\";\nimport {Trait} from \"../\"; // forward import\n\n/** @internal */\nexport type ModelRelationType<F extends ModelRelation<any, any>> =\n  F extends ModelRelation<any, infer M> ? M : never;\n\n/** @public */\nexport interface ModelRelationInit<M extends Model = Model> extends FastenerInit {\n  extends?: {prototype: ModelRelation<any, any>} | string | boolean | null;\n  type?: ModelFactory<M>;\n  binds?: boolean;\n  observes?: boolean;\n\n  initModel?(model: M): void;\n  willAttachModel?(model: M, target: Model | null): void;\n  didAttachModel?(model: M, target: Model | null): void;\n\n  deinitModel?(model: M): void;\n  willDetachModel?(model: M): void;\n  didDetachModel?(model: M): void;\n\n  parentModel?: Model | null;\n  insertChild?(parent: Model, child: M, target: Model | null, key: string | undefined): void;\n\n  detectModel?(model: Model): M | null;\n  createModel?(): M;\n  fromAny?(value: AnyModel<M>): M;\n}\n\n/** @public */\nexport type ModelRelationDescriptor<O = unknown, M extends Model = Model, I = {}> = ThisType<ModelRelation<O, M> & I> & ModelRelationInit<M> & Partial<I>;\n\n/** @public */\nexport interface ModelRelationClass<F extends ModelRelation<any, any> = ModelRelation<any, any>> extends FastenerClass<F> {\n}\n\n/** @public */\nexport interface ModelRelationFactory<F extends ModelRelation<any, any> = ModelRelation<any, any>> extends ModelRelationClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): ModelRelationFactory<F> & I;\n\n  define<O, M extends Model = Model>(className: string, descriptor: ModelRelationDescriptor<O, M>): ModelRelationFactory<ModelRelation<any, M>>;\n  define<O, M extends Model = Model>(className: string, descriptor: {observes: boolean} & ModelRelationDescriptor<O, M, ObserverType<M>>): ModelRelationFactory<ModelRelation<any, M>>;\n  define<O, M extends Model = Model, I = {}>(className: string, descriptor: {implements: unknown} & ModelRelationDescriptor<O, M, I>): ModelRelationFactory<ModelRelation<any, M> & I>;\n  define<O, M extends Model = Model, I = {}>(className: string, descriptor: {implements: unknown; observes: boolean} & ModelRelationDescriptor<O, M, I & ObserverType<M>>): ModelRelationFactory<ModelRelation<any, M> & I>;\n\n  <O, M extends Model = Model>(descriptor: ModelRelationDescriptor<O, M>): PropertyDecorator;\n  <O, M extends Model = Model>(descriptor: {observes: boolean} & ModelRelationDescriptor<O, M, ObserverType<M>>): PropertyDecorator;\n  <O, M extends Model = Model, I = {}>(descriptor: {implements: unknown} & ModelRelationDescriptor<O, M, I>): PropertyDecorator;\n  <O, M extends Model = Model, I = {}>(descriptor: {implements: unknown; observes: boolean} & ModelRelationDescriptor<O, M, I & ObserverType<M>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface ModelRelation<O = unknown, M extends Model = Model> extends Fastener<O> {\n  /** @override */\n  get fastenerType(): Proto<ModelRelation<any, any>>;\n\n  /** @protected */\n  initModel(model: M): void;\n\n  /** @protected */\n  willAttachModel(model: M, target: Model | null): void;\n\n  /** @protected */\n  onAttachModel(model: M, target: Model | null): void;\n\n  /** @protected */\n  didAttachModel(model: M, target: Model | null): void;\n\n  /** @protected */\n  deinitModel(model: M): void;\n\n  /** @protected */\n  willDetachModel(model: M): void;\n\n  /** @protected */\n  onDetachModel(model: M): void;\n\n  /** @protected */\n  didDetachModel(model: M): void;\n\n  /** @internal @protected */\n  get parentModel(): Model | null;\n\n  /** @internal @protected */\n  insertChild(parent: Model, child: M, target: Model | null, key: string | undefined): void;\n\n  /** @internal */\n  bindModel(model: Model, target: Model | null): void;\n\n  /** @internal */\n  unbindModel(model: Model): void;\n\n  detectModel(model: Model): M | null;\n\n  createModel(): M;\n\n  /** @internal @protected */\n  fromAny(value: AnyModel<M>): M;\n\n  /** @internal @protected */\n  get type(): ModelFactory<M> | undefined; // optional prototype property\n\n  /** @internal @protected */\n  get binds(): boolean | undefined; // optional prototype property\n\n  /** @internal @protected */\n  get observes(): boolean | undefined; // optional prototype property\n\n  /** @internal @override */\n  get lazy(): boolean; // prototype property\n\n  /** @internal @override */\n  get static(): string | boolean; // prototype property\n}\n\n/** @public */\nexport const ModelRelation = (function (_super: typeof Fastener) {\n  const ModelRelation: ModelRelationFactory = _super.extend(\"ModelRelation\");\n\n  Object.defineProperty(ModelRelation.prototype, \"fastenerType\", {\n    get: function (this: ModelRelation): Proto<ModelRelation<any, any>> {\n      return ModelRelation;\n    },\n    configurable: true,\n  });\n\n  ModelRelation.prototype.initModel = function <M extends Model>(this: ModelRelation<unknown, M>, model: M): void {\n    // hook\n  };\n\n  ModelRelation.prototype.willAttachModel = function <M extends Model>(this: ModelRelation<unknown, M>, model: M, target: Model | null): void {\n    // hook\n  };\n\n  ModelRelation.prototype.onAttachModel = function <M extends Model>(this: ModelRelation<unknown, M>, model: M, target: Model | null): void {\n    if (this.observes === true) {\n      model.observe(this as ObserverType<M>);\n    }\n  };\n\n  ModelRelation.prototype.didAttachModel = function <M extends Model>(this: ModelRelation<unknown, M>, model: M, target: Model | null): void {\n    // hook\n  };\n\n  ModelRelation.prototype.deinitModel = function <M extends Model>(this: ModelRelation<unknown, M>, model: M): void {\n    // hook\n  };\n\n  ModelRelation.prototype.willDetachModel = function <M extends Model>(this: ModelRelation<unknown, M>, model: M): void {\n    // hook\n  };\n\n  ModelRelation.prototype.onDetachModel = function <M extends Model>(this: ModelRelation<unknown, M>, model: M): void {\n    if (this.observes === true) {\n      model.unobserve(this as ObserverType<M>);\n    }\n  };\n\n  ModelRelation.prototype.didDetachModel = function <M extends Model>(this: ModelRelation<unknown, M>, model: M): void {\n    // hook\n  };\n\n  Object.defineProperty(ModelRelation.prototype, \"parentModel\", {\n    get(this: ModelRelation): Model | null {\n      const owner = this.owner;\n      if (owner instanceof Model) {\n        return owner;\n      } else if (owner instanceof Trait) {\n        return owner.model;\n      } else {\n        return null;\n      }\n    },\n    configurable: true,\n  });\n\n  ModelRelation.prototype.insertChild = function <M extends Model>(this: ModelRelation<unknown, M>, parent: Model, child: M, target: Model | null, key: string | undefined): void {\n    parent.insertChild(child, target, key);\n  };\n\n  ModelRelation.prototype.bindModel = function <M extends Model>(this: ModelRelation<unknown, M>, model: Model, target: Model | null): void {\n    // hook\n  };\n\n  ModelRelation.prototype.unbindModel = function <M extends Model>(this: ModelRelation<unknown, M>, model: Model): void {\n    // hook\n  };\n\n  ModelRelation.prototype.detectModel = function <M extends Model>(this: ModelRelation<unknown, M>, model: Model): M | null {\n    return null;\n  };\n\n  ModelRelation.prototype.createModel = function <M extends Model>(this: ModelRelation<unknown, M>): M {\n    let model: M | undefined;\n    const type = this.type;\n    if (type !== void 0) {\n      model = type.create();\n    }\n    if (model === void 0 || model === null) {\n      let message = \"Unable to create \";\n      if (this.name.length !== 0) {\n        message += this.name + \" \";\n      }\n      message += \"model\";\n      throw new Error(message);\n    }\n    return model;\n  };\n\n  ModelRelation.prototype.fromAny = function <M extends Model>(this: ModelRelation<unknown, M>, value: AnyModel<M>): M {\n    const type = this.type;\n    if (type !== void 0) {\n      return type.fromAny(value);\n    } else {\n      return Model.fromAny(value) as M;\n    }\n  };\n\n  Object.defineProperty(ModelRelation.prototype, \"lazy\", {\n    get: function (this: ModelRelation): boolean {\n      return false;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(ModelRelation.prototype, \"static\", {\n    get: function (this: ModelRelation): string | boolean {\n      return true;\n    },\n    configurable: true,\n  });\n\n  ModelRelation.construct = function <F extends ModelRelation<any, any>>(fastenerClass: {prototype: F}, fastener: F | null, owner: FastenerOwner<F>): F {\n    fastener = _super.construct(fastenerClass, fastener, owner) as F;\n    return fastener;\n  };\n\n  ModelRelation.define = function <O, M extends Model>(className: string, descriptor: ModelRelationDescriptor<O, M>): ModelRelationFactory<ModelRelation<any, M>> {\n    let superClass = descriptor.extends as ModelRelationFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const fastenerClass = superClass.extend(className, descriptor);\n\n    fastenerClass.construct = function (fastenerClass: {prototype: ModelRelation<any, any>}, fastener: ModelRelation<O, M> | null, owner: O): ModelRelation<O, M> {\n      fastener = superClass!.construct(fastenerClass, fastener, owner);\n      if (affinity !== void 0) {\n        fastener.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        fastener.initInherits(inherits);\n      }\n      return fastener;\n    };\n\n    return fastenerClass;\n  };\n\n  return ModelRelation;\n})(Fastener);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Proto, ObserverType} from \"@swim/util\";\nimport type {FastenerOwner, Fastener} from \"@swim/component\";\nimport type {AnyModel, Model} from \"./Model\";\nimport {ModelRelationInit, ModelRelationClass, ModelRelation} from \"./ModelRelation\";\n\n/** @internal */\nexport type ModelRefType<F extends ModelRef<any, any>> =\n  F extends ModelRef<any, infer M> ? M : never;\n\n/** @public */\nexport interface ModelRefInit<M extends Model = Model> extends ModelRelationInit<M> {\n  extends?: {prototype: ModelRef<any, any>} | string | boolean | null;\n  key?: string | boolean;\n}\n\n/** @public */\nexport type ModelRefDescriptor<O = unknown, M extends Model = Model, I = {}> = ThisType<ModelRef<O, M> & I> & ModelRefInit<M> & Partial<I>;\n\n/** @public */\nexport interface ModelRefClass<F extends ModelRef<any, any> = ModelRef<any, any>> extends ModelRelationClass<F> {\n}\n\n/** @public */\nexport interface ModelRefFactory<F extends ModelRef<any, any> = ModelRef<any, any>> extends ModelRefClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): ModelRefFactory<F> & I;\n\n  define<O, M extends Model = Model>(className: string, descriptor: ModelRefDescriptor<O, M>): ModelRefFactory<ModelRef<any, M>>;\n  define<O, M extends Model = Model>(className: string, descriptor: {observes: boolean} & ModelRefDescriptor<O, M, ObserverType<M>>): ModelRefFactory<ModelRef<any, M>>;\n  define<O, M extends Model = Model, I = {}>(className: string, descriptor: {implements: unknown} & ModelRefDescriptor<O, M, I>): ModelRefFactory<ModelRef<any, M> & I>;\n  define<O, M extends Model = Model, I = {}>(className: string, descriptor: {implements: unknown; observes: boolean} & ModelRefDescriptor<O, M, I & ObserverType<M>>): ModelRefFactory<ModelRef<any, M> & I>;\n\n  <O, M extends Model = Model>(descriptor: ModelRefDescriptor<O, M>): PropertyDecorator;\n  <O, M extends Model = Model>(descriptor: {observes: boolean} & ModelRefDescriptor<O, M, ObserverType<M>>): PropertyDecorator;\n  <O, M extends Model = Model, I = {}>(descriptor: {implements: unknown} & ModelRefDescriptor<O, M, I>): PropertyDecorator;\n  <O, M extends Model = Model, I = {}>(descriptor: {implements: unknown; observes: boolean} & ModelRefDescriptor<O, M, I & ObserverType<M>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface ModelRef<O = unknown, M extends Model = Model> extends ModelRelation<O, M> {\n  (): M | null;\n  (model: AnyModel<M> | null, target?: Model | null, key?: string): O;\n\n  /** @override */\n  get fastenerType(): Proto<ModelRef<any, any>>;\n\n  /** @protected @override */\n  onInherit(superFastener: Fastener): void;\n\n  readonly model: M | null;\n\n  getModel(): M;\n\n  setModel(model: AnyModel<M> | null, target?: Model | null, key?: string): M | null;\n\n  attachModel(model?: AnyModel<M>, target?: Model | null): M;\n\n  detachModel(): M | null;\n\n  insertModel(parent?: Model | null, model?: AnyModel<M>, target?: Model | null, key?: string): M;\n\n  removeModel(): M | null;\n\n  deleteModel(): M | null;\n\n  /** @internal @override */\n  bindModel(model: Model, target: Model | null): void;\n\n  /** @internal @override */\n  unbindModel(model: Model): void;\n\n  /** @override */\n  detectModel(model: Model): M | null;\n\n  /** @internal */\n  get key(): string | undefined; // optional prototype field\n}\n\n/** @public */\nexport const ModelRef = (function (_super: typeof ModelRelation) {\n  const ModelRef: ModelRefFactory = _super.extend(\"ModelRef\");\n\n  Object.defineProperty(ModelRef.prototype, \"fastenerType\", {\n    get: function (this: ModelRef): Proto<ModelRef<any, any>> {\n      return ModelRef;\n    },\n    configurable: true,\n  });\n\n  ModelRef.prototype.onInherit = function (this: ModelRef, superFastener: ModelRef): void {\n    this.setModel(superFastener.model);\n  };\n\n  ModelRef.prototype.getModel = function <M extends Model>(this: ModelRef<unknown, M>): M {\n    const model = this.model;\n    if (model === null) {\n      let message = model + \" \";\n      if (this.name.length !== 0) {\n        message += this.name + \" \";\n      }\n      message += \"model\";\n      throw new TypeError(message);\n    }\n    return model;\n  };\n\n  ModelRef.prototype.setModel = function <M extends Model>(this: ModelRef<unknown, M>, newModel: AnyModel<M> | null, target?: Model | null, key?: string): M | null {\n    if (newModel !== null) {\n      newModel = this.fromAny(newModel);\n    }\n    let oldModel = this.model;\n    if (oldModel !== newModel) {\n      if (target === void 0) {\n        target = null;\n      }\n      let parent: Model | null;\n      if (this.binds && (parent = this.parentModel, parent !== null)) {\n        if (oldModel !== null && oldModel.parent === parent) {\n          if (target === null) {\n            target = oldModel.nextSibling;\n          }\n          oldModel.remove();\n        }\n        if (newModel !== null) {\n          if (key === void 0) {\n            key = this.key;\n          }\n          this.insertChild(parent, newModel, target, key);\n        }\n        oldModel = this.model;\n      }\n      if (oldModel !== newModel) {\n        if (oldModel !== null) {\n          this.willDetachModel(oldModel);\n          (this as Mutable<typeof this>).model = null;\n          this.onDetachModel(oldModel);\n          this.deinitModel(oldModel);\n          this.didDetachModel(oldModel);\n        }\n        if (newModel !== null) {\n          this.willAttachModel(newModel, target);\n          (this as Mutable<typeof this>).model = newModel;\n          this.onAttachModel(newModel, target);\n          this.initModel(newModel);\n          this.didAttachModel(newModel, target);\n        }\n      }\n    }\n    return oldModel;\n  };\n\n  ModelRef.prototype.attachModel = function <M extends Model>(this: ModelRef<unknown, M>, newModel?: AnyModel<M>, target?: Model | null): M {\n    const oldModel = this.model;\n    if (newModel !== void 0 && newModel !== null) {\n      newModel = this.fromAny(newModel);\n    } else if (oldModel === null) {\n      newModel = this.createModel();\n    } else {\n      newModel = oldModel;\n    }\n    if (newModel !== oldModel) {\n      if (target === void 0) {\n        target = null;\n      }\n      if (oldModel !== null) {\n        this.willDetachModel(oldModel);\n        (this as Mutable<typeof this>).model = null;\n        this.onDetachModel(oldModel);\n        this.deinitModel(oldModel);\n        this.didDetachModel(oldModel);\n      }\n      this.willAttachModel(newModel, target);\n      (this as Mutable<typeof this>).model = newModel;\n      this.onAttachModel(newModel, target);\n      this.initModel(newModel);\n      this.didAttachModel(newModel, target);\n    }\n    return newModel;\n  };\n\n  ModelRef.prototype.detachModel = function <M extends Model>(this: ModelRef<unknown, M>): M | null {\n    const oldModel = this.model;\n    if (oldModel !== null) {\n      this.willDetachModel(oldModel);\n      (this as Mutable<typeof this>).model = null;\n      this.onDetachModel(oldModel);\n      this.deinitModel(oldModel);\n      this.didDetachModel(oldModel);\n    }\n    return oldModel;\n  };\n\n  ModelRef.prototype.insertModel = function <M extends Model>(this: ModelRef<unknown, M>, parent?: Model | null, newModel?: AnyModel<M>, target?: Model | null, key?: string): M {\n    if (newModel !== void 0 && newModel !== null) {\n      newModel = this.fromAny(newModel);\n    } else {\n      const oldModel = this.model;\n      if (oldModel === null) {\n        newModel = this.createModel();\n      } else {\n        newModel = oldModel;\n      }\n    }\n    if (parent === void 0 || parent === null) {\n      parent = this.parentModel;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (key === void 0) {\n      key = this.key;\n    }\n    if (parent !== null && (newModel.parent !== parent || newModel.key !== key)) {\n      this.insertChild(parent, newModel, target, key);\n    }\n    const oldModel = this.model;\n    if (newModel !== oldModel) {\n      if (oldModel !== null) {\n        this.willDetachModel(oldModel);\n        (this as Mutable<typeof this>).model = null;\n        this.onDetachModel(oldModel);\n        this.deinitModel(oldModel);\n        this.didDetachModel(oldModel);\n        oldModel.remove();\n      }\n      this.willAttachModel(newModel, target);\n      (this as Mutable<typeof this>).model = newModel;\n      this.onAttachModel(newModel, target);\n      this.initModel(newModel);\n      this.didAttachModel(newModel, target);\n    }\n    return newModel;\n  };\n\n  ModelRef.prototype.removeModel = function <M extends Model>(this: ModelRef<unknown, M>): M | null {\n    const model = this.model;\n    if (model !== null) {\n      model.remove();\n    }\n    return model;\n  };\n\n  ModelRef.prototype.deleteModel = function <M extends Model>(this: ModelRef<unknown, M>): M | null {\n    const model = this.detachModel();\n    if (model !== null) {\n      model.remove();\n    }\n    return model;\n  };\n\n  ModelRef.prototype.bindModel = function <M extends Model>(this: ModelRef<unknown, M>, model: Model, target: Model | null): void {\n    if (this.binds && this.model === null) {\n      const newModel = this.detectModel(model);\n      if (newModel !== null) {\n        this.willAttachModel(newModel, target);\n        (this as Mutable<typeof this>).model = newModel;\n        this.onAttachModel(newModel, target);\n        this.initModel(newModel);\n        this.didAttachModel(newModel, target);\n      }\n    }\n  };\n\n  ModelRef.prototype.unbindModel = function <M extends Model>(this: ModelRef<unknown, M>, model: Model): void {\n    if (this.binds) {\n      const oldModel = this.detectModel(model);\n      if (oldModel !== null && this.model === oldModel) {\n        this.willDetachModel(oldModel);\n        (this as Mutable<typeof this>).model = null;\n        this.onDetachModel(oldModel);\n        this.deinitModel(oldModel);\n        this.didDetachModel(oldModel);\n      }\n    }\n  };\n\n  ModelRef.prototype.detectModel = function <M extends Model>(this: ModelRef<unknown, M>, model: Model): M | null {\n    const key = this.key;\n    if (key !== void 0 && key === model.key) {\n      return model as M;\n    }\n    return null;\n  };\n\n  ModelRef.construct = function <F extends ModelRef<any, any>>(fastenerClass: {prototype: F}, fastener: F | null, owner: FastenerOwner<F>): F {\n    if (fastener === null) {\n      fastener = function (model?: AnyModel<ModelRefType<F>> | null, target?: Model | null, key?: string): ModelRefType<F> | null | FastenerOwner<F> {\n        if (model === void 0) {\n          return fastener!.model;\n        } else {\n          fastener!.setModel(model, target, key);\n          return fastener!.owner;\n        }\n      } as F;\n      delete (fastener as Partial<Mutable<F>>).name; // don't clobber prototype name\n      Object.setPrototypeOf(fastener, fastenerClass.prototype);\n    }\n    fastener = _super.construct(fastenerClass, fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).model = null;\n    return fastener;\n  };\n\n  ModelRef.define = function <O, M extends Model>(className: string, descriptor: ModelRefDescriptor<O, M>): ModelRefFactory<ModelRef<any, M>> {\n    let superClass = descriptor.extends as ModelRefFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n\n    if (descriptor.key === true) {\n      Object.defineProperty(descriptor, \"key\", {\n        value: className,\n        configurable: true,\n      });\n    } else if (descriptor.key === false) {\n      Object.defineProperty(descriptor, \"key\", {\n        value: void 0,\n        configurable: true,\n      });\n    }\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const fastenerClass = superClass.extend(className, descriptor);\n\n    fastenerClass.construct = function (fastenerClass: {prototype: ModelRef<any, any>}, fastener: ModelRef<O, M> | null, owner: O): ModelRef<O, M> {\n      fastener = superClass!.construct(fastenerClass, fastener, owner);\n      if (affinity !== void 0) {\n        fastener.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        fastener.initInherits(inherits);\n      }\n      return fastener;\n    };\n\n    return fastenerClass;\n  };\n\n  return ModelRef;\n})(ModelRelation);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Proto, ObserverType} from \"@swim/util\";\nimport type {FastenerOwner, FastenerFlags} from \"@swim/component\";\nimport type {AnyModel, Model} from \"./Model\";\nimport {ModelRelationInit, ModelRelationClass, ModelRelation} from \"./ModelRelation\";\n\n/** @internal */\nexport type ModelSetType<F extends ModelSet<any, any>> =\n  F extends ModelSet<any, infer M> ? M : never;\n\n/** @public */\nexport interface ModelSetInit<M extends Model = Model> extends ModelRelationInit<M> {\n  extends?: {prototype: ModelSet<any, any>} | string | boolean | null;\n  key?(model: M): string | undefined;\n  compare?(a: M, b: M): number;\n\n  sorted?: boolean;\n  willSort?(parent: Model | null): void;\n  didSort?(parent: Model | null): void;\n  sortChildren?(parent: Model): void;\n  compareChildren?(a: Model, b: Model): number;\n}\n\n/** @public */\nexport type ModelSetDescriptor<O = unknown, M extends Model = Model, I = {}> = ThisType<ModelSet<O, M> & I> & ModelSetInit<M> & Partial<I>;\n\n/** @public */\nexport interface ModelSetClass<F extends ModelSet<any, any> = ModelSet<any, any>> extends ModelRelationClass<F> {\n  /** @internal */\n  readonly SortedFlag: FastenerFlags;\n\n  /** @internal @override */\n  readonly FlagShift: number;\n  /** @internal @override */\n  readonly FlagMask: FastenerFlags;\n}\n\n/** @public */\nexport interface ModelSetFactory<F extends ModelSet<any, any> = ModelSet<any, any>> extends ModelSetClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): ModelSetFactory<F> & I;\n\n  define<O, M extends Model = Model>(className: string, descriptor: ModelSetDescriptor<O, M>): ModelSetFactory<ModelSet<any, M>>;\n  define<O, M extends Model = Model>(className: string, descriptor: {observes: boolean} & ModelSetDescriptor<O, M, ObserverType<M>>): ModelSetFactory<ModelSet<any, M>>;\n  define<O, M extends Model = Model, I = {}>(className: string, descriptor: {implements: unknown} & ModelSetDescriptor<O, M, I>): ModelSetFactory<ModelSet<any, M> & I>;\n  define<O, M extends Model = Model, I = {}>(className: string, descriptor: {implements: unknown; observes: boolean} & ModelSetDescriptor<O, M, I & ObserverType<M>>): ModelSetFactory<ModelSet<any, M> & I>;\n\n  <O, M extends Model = Model>(descriptor: ModelSetDescriptor<O, M>): PropertyDecorator;\n  <O, M extends Model = Model>(descriptor: {observes: boolean} & ModelSetDescriptor<O, M, ObserverType<M>>): PropertyDecorator;\n  <O, M extends Model = Model, I = {}>(descriptor: {implements: unknown} & ModelSetDescriptor<O, M, I>): PropertyDecorator;\n  <O, M extends Model = Model, I = {}>(descriptor: {implements: unknown; observes: boolean} & ModelSetDescriptor<O, M, I & ObserverType<M>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface ModelSet<O = unknown, M extends Model = Model> extends ModelRelation<O, M> {\n  (model: AnyModel<M>): O;\n\n  /** @override */\n  get fastenerType(): Proto<ModelSet<any, any>>;\n\n  /** @internal */\n  readonly models: {readonly [modelId: number]: M | undefined};\n\n  readonly modelCount: number;\n\n  hasModel(model: Model): boolean;\n\n  addModel(model?: AnyModel<M>, target?: Model | null, key?: string): M;\n\n  attachModel(model?: AnyModel<M>, target?: Model | null): M;\n\n  detachModel(model: M): M | null;\n\n  insertModel(parent?: Model | null, model?: AnyModel<M>, target?: Model | null, key?: string): M;\n\n  removeModel(model: M): M | null;\n\n  deleteModel(model: M): M | null;\n\n  /** @internal @override */\n  bindModel(model: Model, target: Model | null): void;\n\n  /** @internal @override */\n  unbindModel(model: Model): void;\n\n  /** @override */\n  detectModel(model: Model): M | null;\n\n  /** @internal @protected */\n  key(model: M): string | undefined;\n\n  get sorted(): boolean;\n\n  /** @internal */\n  initSorted(sorted: boolean): void;\n\n  sort(sorted?: boolean): this;\n\n  /** @protected */\n  willSort(parent: Model | null): void;\n\n  /** @protected */\n  onSort(parent: Model | null): void;\n\n  /** @protected */\n  didSort(parent: Model | null): void;\n\n  /** @internal @protected */\n  sortChildren(parent: Model): void;\n\n  /** @internal */\n  compareChildren(a: Model, b: Model): number;\n\n  /** @internal @protected */\n  compare(a: M, b: M): number;\n}\n\n/** @public */\nexport const ModelSet = (function (_super: typeof ModelRelation) {\n  const ModelSet: ModelSetFactory = _super.extend(\"ModelSet\");\n\n  Object.defineProperty(ModelSet.prototype, \"fastenerType\", {\n    get: function (this: ModelSet): Proto<ModelSet<any, any>> {\n      return ModelSet;\n    },\n    configurable: true,\n  });\n\n  ModelSet.prototype.hasModel = function (this: ModelSet, model: Model): boolean {\n    return this.models[model.uid] !== void 0;\n  };\n\n  ModelSet.prototype.addModel = function <M extends Model>(this: ModelSet<unknown, M>, newModel?: AnyModel<M>, target?: Model | null, key?: string): M {\n    if (newModel !== void 0 && newModel !== null) {\n      newModel = this.fromAny(newModel);\n    } else {\n      newModel = this.createModel();\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    let parent: Model | null;\n    if (this.binds && (parent = this.parentModel, parent !== null)) {\n      if (key === void 0) {\n        key = this.key(newModel);\n      }\n      this.insertChild(parent, newModel, target, key);\n    }\n    const models = this.models as {[modelId: number]: M | undefined};\n    if (models[newModel.uid] === void 0) {\n      this.willAttachModel(newModel, target);\n      models[newModel.uid] = newModel;\n      (this as Mutable<typeof this>).modelCount += 1;\n      this.onAttachModel(newModel, target);\n      this.initModel(newModel);\n      this.didAttachModel(newModel, target);\n    }\n    return newModel;\n  };\n\n  ModelSet.prototype.attachModel = function <M extends Model>(this: ModelSet<unknown, M>, newModel?: AnyModel<M>, target?: Model | null): M {\n    if (newModel !== void 0 && newModel !== null) {\n      newModel = this.fromAny(newModel);\n    } else {\n      newModel = this.createModel();\n    }\n    const models = this.models as {[modelId: number]: M | undefined};\n    if (models[newModel.uid] === void 0) {\n      if (target === void 0) {\n        target = null;\n      }\n      this.willAttachModel(newModel, target);\n      models[newModel.uid] = newModel;\n      (this as Mutable<typeof this>).modelCount += 1;\n      this.onAttachModel(newModel, target);\n      this.initModel(newModel);\n      this.didAttachModel(newModel, target);\n    }\n    return newModel;\n  };\n\n  ModelSet.prototype.detachModel = function <M extends Model>(this: ModelSet<unknown, M>, oldModel: M): M | null {\n    const models = this.models as {[modelId: number]: M | undefined};\n    if (models[oldModel.uid] !== void 0) {\n      this.willDetachModel(oldModel);\n      (this as Mutable<typeof this>).modelCount -= 1;\n      delete models[oldModel.uid];\n      this.onDetachModel(oldModel);\n      this.deinitModel(oldModel);\n      this.didDetachModel(oldModel);\n      return oldModel;\n    }\n    return null;\n  };\n\n  ModelSet.prototype.insertModel = function <M extends Model>(this: ModelSet<unknown, M>, parent?: Model | null, newModel?: AnyModel<M>, target?: Model | null, key?: string): M {\n    if (newModel !== void 0 && newModel !== null) {\n      newModel = this.fromAny(newModel);\n    } else {\n      newModel = this.createModel();\n    }\n    if (parent === void 0 || parent === null) {\n      parent = this.parentModel;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (key === void 0) {\n      key = this.key(newModel);\n    }\n    if (parent !== null && (newModel.parent !== parent || newModel.key !== key)) {\n      this.insertChild(parent, newModel, target, key);\n    }\n    const models = this.models as {[modelId: number]: M | undefined};\n    if (models[newModel.uid] === void 0) {\n      this.willAttachModel(newModel, target);\n      models[newModel.uid] = newModel;\n      (this as Mutable<typeof this>).modelCount += 1;\n      this.onAttachModel(newModel, target);\n      this.initModel(newModel);\n      this.didAttachModel(newModel, target);\n    }\n    return newModel;\n  };\n\n  ModelSet.prototype.removeModel = function <M extends Model>(this: ModelSet<unknown, M>, model: M): M | null {\n    if (this.hasModel(model)) {\n      model.remove();\n      return model;\n    }\n    return null;\n  };\n\n  ModelSet.prototype.deleteModel = function <M extends Model>(this: ModelSet<unknown, M>, model: M): M | null {\n    const oldModel = this.detachModel(model);\n    if (oldModel !== null) {\n      oldModel.remove();\n    }\n    return oldModel;\n  };\n\n  ModelSet.prototype.bindModel = function <M extends Model>(this: ModelSet<unknown, M>, model: Model, target: Model | null): void {\n    if (this.binds) {\n      const newModel = this.detectModel(model);\n      const models = this.models as {[modelId: number]: M | undefined};\n      if (newModel !== null && models[newModel.uid] === void 0) {\n        this.willAttachModel(newModel, target);\n        models[newModel.uid] = newModel;\n        (this as Mutable<typeof this>).modelCount += 1;\n        this.onAttachModel(newModel, target);\n        this.initModel(newModel);\n        this.didAttachModel(newModel, target);\n      }\n    }\n  };\n\n  ModelSet.prototype.unbindModel = function <M extends Model>(this: ModelSet<unknown, M>, model: Model): void {\n    if (this.binds) {\n      const oldModel = this.detectModel(model);\n      const models = this.models as {[modelId: number]: M | undefined};\n      if (oldModel !== null && models[oldModel.uid] !== void 0) {\n        this.willDetachModel(oldModel);\n        (this as Mutable<typeof this>).modelCount -= 1;\n        delete models[oldModel.uid];\n        this.onDetachModel(oldModel);\n        this.deinitModel(oldModel);\n        this.didDetachModel(oldModel);\n      }\n    }\n  };\n\n  ModelSet.prototype.detectModel = function <M extends Model>(this: ModelSet<unknown, M>, model: Model): M | null {\n    if (typeof this.type === \"function\" && model instanceof this.type) {\n      return model as M;\n    }\n    return null;\n  };\n\n  ModelSet.prototype.key = function <M extends Model>(this: ModelSet<unknown, M>, model: M): string | undefined {\n    return void 0;\n  };\n\n  Object.defineProperty(ModelSet.prototype, \"sorted\", {\n    get(this: ModelSet): boolean {\n      return (this.flags & ModelSet.SortedFlag) !== 0;\n    },\n    configurable: true,\n  });\n\n  ModelSet.prototype.initInherits = function (this: ModelSet, sorted: boolean): void {\n    if (sorted) {\n      (this as Mutable<typeof this>).flags = this.flags | ModelSet.SortedFlag;\n    } else {\n      (this as Mutable<typeof this>).flags = this.flags & ~ModelSet.SortedFlag;\n    }\n  };\n\n  ModelSet.prototype.sort = function (this: ModelSet, sorted?: boolean): typeof this {\n    if (sorted === void 0) {\n      sorted = true;\n    }\n    const flags = this.flags;\n    if (sorted && (flags & ModelSet.SortedFlag) === 0) {\n      const parent = this.parentModel;\n      this.willSort(parent);\n      this.setFlags(flags | ModelSet.SortedFlag);\n      this.onSort(parent);\n      this.didSort(parent);\n    } else if (!sorted && (flags & ModelSet.SortedFlag) !== 0) {\n      this.setFlags(flags & ~ModelSet.SortedFlag);\n    }\n    return this;\n  };\n\n  ModelSet.prototype.willSort = function (this: ModelSet, parent: Model | null): void {\n    // hook\n  };\n\n  ModelSet.prototype.onSort = function (this: ModelSet, parent: Model | null): void {\n    if (parent !== null) {\n      this.sortChildren(parent);\n    }\n  };\n\n  ModelSet.prototype.didSort = function (this: ModelSet, parent: Model | null): void {\n    // hook\n  };\n\n  ModelSet.prototype.sortChildren = function <M extends Model>(this: ModelSet<unknown, M>, parent: Model): void {\n    parent.sortChildren(this.compareChildren.bind(this));\n  };\n\n  ModelSet.prototype.compareChildren = function <M extends Model>(this: ModelSet<unknown, M>, a: Model, b: Model): number {\n    const models = this.models;\n    const x = models[a.uid];\n    const y = models[b.uid];\n    if (x !== void 0 && y !== void 0) {\n      return this.compare(x, y);\n    } else {\n      return x !== void 0 ? 1 : y !== void 0 ? -1 : 0;\n    }\n  };\n\n  ModelSet.prototype.compare = function <M extends Model>(this: ModelSet<unknown, M>, a: M, b: M): number {\n    return a.uid < b.uid ? -1 : a.uid > b.uid ? 1 : 0;\n  };\n\n  ModelSet.construct = function <F extends ModelSet<any, any>>(fastenerClass: {prototype: F}, fastener: F | null, owner: FastenerOwner<F>): F {\n    if (fastener === null) {\n      fastener = function (newModel: AnyModel<ModelSetType<F>>): FastenerOwner<F> {\n        fastener!.addModel(newModel);\n        return fastener!.owner;\n      } as F;\n      delete (fastener as Partial<Mutable<F>>).name; // don't clobber prototype name\n      Object.setPrototypeOf(fastener, fastenerClass.prototype);\n    }\n    fastener = _super.construct(fastenerClass, fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).models = {};\n    (fastener as Mutable<typeof fastener>).modelCount = 0;\n    return fastener;\n  };\n\n  ModelSet.define = function <O, M extends Model>(className: string, descriptor: ModelSetDescriptor<O, M>): ModelSetFactory<ModelSet<any, M>> {\n    let superClass = descriptor.extends as ModelSetFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    const sorted = descriptor.sorted;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n    delete descriptor.sorted;\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const fastenerClass = superClass.extend(className, descriptor);\n\n    fastenerClass.construct = function (fastenerClass: {prototype: ModelSet<any, any>}, fastener: ModelSet<O, M> | null, owner: O): ModelSet<O, M> {\n      fastener = superClass!.construct(fastenerClass, fastener, owner);\n      if (affinity !== void 0) {\n        fastener.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        fastener.initInherits(inherits);\n      }\n      if (sorted !== void 0) {\n        fastener.initSorted(sorted);\n      }\n      return fastener;\n    };\n\n    return fastenerClass;\n  };\n\n  (ModelSet as Mutable<typeof ModelSet>).SortedFlag = 1 << (_super.FlagShift + 0);\n\n  (ModelSet as Mutable<typeof ModelSet>).FlagShift = _super.FlagShift + 1;\n  (ModelSet as Mutable<typeof ModelSet>).FlagMask = (1 << ModelSet.FlagShift) - 1;\n\n  return ModelSet;\n})(ModelRelation);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  Mutable,\n  Class,\n  Proto,\n  Arrays,\n  HashCode,\n  Comparator,\n  FromAny,\n  Creatable,\n  InitType,\n  Initable,\n  ObserverType,\n  Observable,\n  ObserverMethods,\n  ObserverParameters,\n  ConsumerType,\n  Consumable,\n  Consumer,\n} from \"@swim/util\";\nimport {FastenerContext, Fastener, Property, Provider} from \"@swim/component\";\nimport {WarpRef, WarpService, WarpProvider, DownlinkFastener} from \"@swim/client\";\nimport {ModelContextType, ModelFlags, AnyModel, ModelCreator, Model} from \"../model/Model\";\nimport {ModelRelation} from \"../model/ModelRelation\";\nimport type {TraitObserver} from \"./TraitObserver\";\nimport {TraitRelation} from \"./\"; // forward import\n\n/** @public */\nexport type TraitModelType<T extends Trait> = T extends {readonly model: infer M | null} ? M : never;\n\n/** @public */\nexport type TraitContextType<T extends Trait> = ModelContextType<TraitModelType<T>>;\n\n/** @public */\nexport type TraitFlags = number;\n\n/** @public */\nexport type AnyTrait<T extends Trait = Trait> = T | TraitFactory<T> | InitType<T>;\n\n/** @public */\nexport interface TraitInit {\n  /** @internal */\n  uid?: never, // force type ambiguity between Trait and TraitInit\n  type?: Creatable<Trait>;\n  key?: string;\n  traits?: AnyTrait[];\n}\n\n/** @public */\nexport interface TraitFactory<T extends Trait = Trait, U = AnyTrait<T>> extends Creatable<T>, FromAny<T, U> {\n  fromInit(init: InitType<T>): T;\n}\n\n/** @public */\nexport interface TraitClass<T extends Trait = Trait, U = AnyTrait<T>> extends Function, TraitFactory<T, U> {\n  readonly prototype: T;\n}\n\n/** @public */\nexport interface TraitConstructor<T extends Trait = Trait, U = AnyTrait<T>> extends TraitClass<T, U> {\n  new(): T;\n}\n\n/** @public */\nexport type TraitCreator<F extends (abstract new (...args: any) => T) & Creatable<InstanceType<F>>, T extends Trait = Trait> =\n  (abstract new (...args: any) => InstanceType<F>) & Creatable<InstanceType<F>>;\n\n/** @public */\nexport abstract class Trait implements HashCode, Initable<TraitInit>, Observable, Consumable, FastenerContext {\n  constructor() {\n    this.uid = (this.constructor as typeof Trait).uid();\n    this.key = void 0;\n    this.flags = 0;\n    this.model = null;\n    this.nextTrait = null;\n    this.previousTrait = null;\n    this.fasteners = null;\n    this.decoherent = null;\n    this.observers = Arrays.empty;\n    this.consumers = Arrays.empty;\n\n    FastenerContext.init(this);\n  }\n\n  readonly observerType?: Class<TraitObserver>;\n\n  /** @override */\n  readonly consumerType?: Class<Consumer>;\n\n  /** @internal */\n  readonly uid: number;\n\n  readonly key: string | undefined;\n\n  /** @internal */\n  setKey(key: string | undefined): void {\n    (this as Mutable<this>).key = key;\n  }\n\n  /** @internal */\n  readonly flags: TraitFlags;\n\n  setFlags(flags: TraitFlags): void {\n    (this as Mutable<this>).flags = flags;\n  }\n\n  readonly model: Model | null;\n\n  /** @internal */\n  attachModel(model: Model, nextTrait: Trait | null): void {\n    // assert(this.model === null);\n    this.willAttachModel(model);\n    (this as Mutable<this>).model = model;\n    let previousTrait: Trait | null;\n    if (nextTrait !== null) {\n      previousTrait = nextTrait.previousTrait;\n      this.setNextTrait(nextTrait);\n      nextTrait.setPreviousTrait(this);\n    } else {\n      previousTrait = model.lastTrait;\n      model.setLastTrait(this);\n    }\n    if (previousTrait !== null) {\n      previousTrait.setNextTrait(this);\n      this.setPreviousTrait(previousTrait);\n    } else {\n      model.setFirstTrait(this);\n    }\n    if (model.mounted) {\n      this.mountTrait();\n    }\n    this.onAttachModel(model);\n    this.didAttachModel(model);\n  }\n\n  protected willAttachModel(model: Model): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitWillAttachModel !== void 0) {\n        observer.traitWillAttachModel(model, this);\n      }\n    }\n  }\n\n  protected onAttachModel(model: Model): void {\n    this.bindModelFasteners(model);\n  }\n\n  protected didAttachModel(model: Model): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitDidAttachModel !== void 0) {\n        observer.traitDidAttachModel(model, this);\n      }\n    }\n  }\n\n  /** @internal */\n  detachModel(model: Model): void {\n    // assert(this.model === model);\n    this.willDetachModel(model);\n    if (this.mounted) {\n      this.unmountTrait();\n    }\n    this.onDetachModel(model);\n    const nextTrait = this.nextTrait;\n    const previousTrait = this.previousTrait;\n    if (nextTrait !== null) {\n      this.setNextTrait(null);\n      nextTrait.setPreviousTrait(previousTrait);\n    } else {\n      model.setLastTrait(previousTrait);\n    }\n    if (previousTrait !== null) {\n      previousTrait.setNextTrait(nextTrait);\n      this.setPreviousTrait(null);\n    } else {\n      model.setFirstTrait(nextTrait);\n    }\n    (this as Mutable<this>).model = null;\n    this.didDetachModel(model);\n  }\n\n  protected willDetachModel(model: Model): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitWillDetachModel !== void 0) {\n        observer.traitWillDetachModel(model, this);\n      }\n    }\n  }\n\n  protected onDetachModel(model: Model): void {\n    this.unbindModelFasteners(model);\n  }\n\n  protected didDetachModel(model: Model): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitDidDetachModel !== void 0) {\n        observer.traitDidDetachModel(model, this);\n      }\n    }\n  }\n\n  get modelFlags(): ModelFlags {\n    const model = this.model;\n    return model !== null ? model.flags : 0;\n  }\n\n  setModelFlags(modelFlags: ModelFlags): void {\n    const model = this.model;\n    if (model !== null) {\n      model.setFlags(modelFlags);\n    } else {\n      throw new Error(\"no model\");\n    }\n  }\n\n  remove(): void {\n    const model = this.model;\n    if (model !== null) {\n      model.removeTrait(this);\n    }\n  }\n\n  get parent(): Model | null {\n    const model = this.model;\n    return model !== null ? model.parent : null;\n  }\n\n  /** @protected */\n  willAttachParent(parent: Model): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitWillAttachParent !== void 0) {\n        observer.traitWillAttachParent(parent, this);\n      }\n    }\n  }\n\n  /** @protected */\n  onAttachParent(parent: Model): void {\n    // hook\n  }\n\n  /** @protected */\n  didAttachParent(parent: Model): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitDidAttachParent !== void 0) {\n        observer.traitDidAttachParent(parent, this);\n      }\n    }\n  }\n\n  /** @protected */\n  willDetachParent(parent: Model): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitWillDetachParent !== void 0) {\n        observer.traitWillDetachParent(parent, this);\n      }\n    }\n  }\n\n  /** @protected */\n  onDetachParent(parent: Model): void {\n    // hook\n  }\n\n  /** @protected */\n  didDetachParent(parent: Model): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitDidDetachParent !== void 0) {\n        observer.traitDidDetachParent(parent, this);\n      }\n    }\n  }\n\n  get nextSibling(): Model | null {\n    const model = this.model;\n    return model !== null ? model.nextSibling : null;\n  }\n\n  get previousSibling(): Model | null {\n    const model = this.model;\n    return model !== null ? model.previousSibling : null;\n  }\n\n  get firstChild(): Model | null {\n    const model = this.model;\n    return model !== null ? model.firstChild : null;\n  }\n\n  get lastChild(): Model | null {\n    const model = this.model;\n    return model !== null ? model.lastChild : null;\n  }\n\n  forEachChild<T>(callback: (child: Model) => T | void): T | undefined;\n  forEachChild<T, S>(callback: (this: S, child: Model) => T | void, thisArg: S): T | undefined;\n  forEachChild<T, S>(callback: (this: S | undefined, child: Model) => T | void, thisArg?: S): T | undefined {\n    const model = this.model;\n    return model !== null ? model.forEachChild(callback, thisArg) : void 0;\n  }\n\n  getChild<F extends abstract new (...args: any) => Model>(key: string, childBound: F): InstanceType<F> | null;\n  getChild(key: string, childBound?: abstract new (...args: any) => Model): Model | null;\n  getChild(key: string, childBound?: abstract new (...args: any) => Model): Model | null {\n    const model = this.model;\n    return model !== null ? model.getChild(key, childBound) : null;\n  }\n\n  setChild<M extends Model>(key: string, newChild: M): Model | null;\n  setChild<F extends ModelCreator<F>>(key: string, factory: F): Model | null;\n  setChild(key: string, newChild: AnyModel | null): Model | null;\n  setChild(key: string, newChild: AnyModel | null): Model | null {\n    const model = this.model;\n    if (model !== null) {\n      return model.setChild(key, newChild);\n    } else {\n      throw new Error(\"no model\");\n    }\n  }\n\n  appendChild<M extends Model>(child: M, key?: string): M;\n  appendChild<F extends ModelCreator<F>>(factory: F, key?: string): InstanceType<F>;\n  appendChild(child: AnyModel, key?: string): Model;\n  appendChild(child: AnyModel, key?: string): Model {\n    const model = this.model;\n    if (model !== null) {\n      return model.appendChild(child, key);\n    } else {\n      throw new Error(\"no model\");\n    }\n  }\n\n  prependChild<M extends Model>(child: M, key?: string): M;\n  prependChild<F extends ModelCreator<F>>(factory: F, key?: string): InstanceType<F>;\n  prependChild(child: AnyModel, key?: string): Model;\n  prependChild(child: AnyModel, key?: string): Model {\n    const model = this.model;\n    if (model !== null) {\n      return model.prependChild(child, key);\n    } else {\n      throw new Error(\"no model\");\n    }\n  }\n\n  insertChild<M extends Model>(child: M, target: Model | null, key?: string): M;\n  insertChild<F extends ModelCreator<F>>(factory: F, target: Model | null, key?: string): InstanceType<F>;\n  insertChild(child: AnyModel, target: Model | null, key?: string): Model;\n  insertChild(child: AnyModel, target: Model | null, key?: string): Model {\n    const model = this.model;\n    if (model !== null) {\n      return model.insertChild(child, target, key);\n    } else {\n      throw new Error(\"no model\");\n    }\n  }\n\n  replaceChild<M extends Model>(newChild: Model, oldChild: M): M;\n  replaceChild<M extends Model>(newChild: AnyModel, oldChild: M): M;\n  replaceChild(newChild: AnyModel, oldChild: Model): Model {\n    const model = this.model;\n    if (model !== null) {\n      return model.replaceChild(newChild, oldChild);\n    } else {\n      throw new Error(\"no model\");\n    }\n  }\n\n  get insertChildFlags(): ModelFlags {\n    return (this.constructor as typeof Trait).InsertChildFlags;\n  }\n\n  /** @protected */\n  willInsertChild(child: Model, target: Model | null): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitWillInsertChild !== void 0) {\n        observer.traitWillInsertChild(child, target, this);\n      }\n    }\n  }\n\n  /** @protected */\n  onInsertChild(child: Model, target: Model | null): void {\n    this.requireUpdate(this.insertChildFlags);\n    this.bindChildFasteners(child, target);\n  }\n\n  /** @protected */\n  didInsertChild(child: Model, target: Model | null): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitDidInsertChild !== void 0) {\n        observer.traitDidInsertChild(child, target, this);\n      }\n    }\n  }\n\n  removeChild<M extends Model>(child: M): M | null;\n  removeChild(key: string | Model): Model | null;\n  removeChild(key: string | Model): Model | null {\n    const model = this.model;\n    if (model !== null) {\n      return model.removeChild(key);\n    } else {\n      return null;\n    }\n  }\n\n  get removeChildFlags(): ModelFlags {\n    return (this.constructor as typeof Trait).RemoveChildFlags;\n  }\n\n  /** @protected */\n  willRemoveChild(child: Model): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitWillRemoveChild !== void 0) {\n        observer.traitWillRemoveChild(child, this);\n      }\n    }\n    this.requireUpdate(this.removeChildFlags);\n  }\n\n  /** @protected */\n  onRemoveChild(child: Model): void {\n    this.unbindChildFasteners(child);\n  }\n\n  /** @protected */\n  didRemoveChild(child: Model): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitDidRemoveChild !== void 0) {\n        observer.traitDidRemoveChild(child, this);\n      }\n    }\n  }\n\n  removeChildren(): void {\n    const model = this.model;\n    if (model !== null) {\n      return model.removeChildren();\n    }\n  }\n\n  sortChildren(comparator: Comparator<Model>): void {\n    const model = this.model;\n    if (model !== null) {\n      return model.sortChildren(comparator);\n    }\n  }\n\n  getSuper<F extends abstract new (...args: any) => Model>(superBound: F): InstanceType<F> | null {\n    const model = this.model;\n    return model !== null ? model.getSuper(superBound) : null;\n  }\n\n  getBase<F extends abstract new (...args: any) => Model>(baseBound: F): InstanceType<F> | null {\n    const model = this.model;\n    return model !== null ? model.getBase(baseBound) : null;\n  }\n\n  readonly nextTrait: Trait | null;\n\n  /** @internal */\n  setNextTrait(nextTrait: Trait | null): void {\n    (this as Mutable<this>).nextTrait = nextTrait;\n  }\n\n  readonly previousTrait: Trait | null;\n\n  /** @internal */\n  setPreviousTrait(previousTrait: Trait | null): void {\n    (this as Mutable<this>).previousTrait = previousTrait;\n  }\n\n  get firstTrait(): Trait | null {\n    const model = this.model;\n    return model !== null ? model.firstTrait : null;\n  }\n\n  get lastTrait(): Trait | null {\n    const model = this.model;\n    return model !== null ? model.lastTrait : null;\n  }\n\n  forEachTrait<T>(callback: (trait: Trait) => T | void): T | undefined;\n  forEachTrait<T, S>(callback: (this: S, trait: Trait) => T | void, thisArg: S): T | undefined;\n  forEachTrait<T, S>(callback: (this: S | undefined, trait: Trait) => T | void, thisArg?: S): T | undefined {\n    const model = this.model;\n    return model !== null ? model.forEachTrait(callback, thisArg) : void 0;\n  }\n\n  getTrait<F extends abstract new (...args: any) => Trait>(key: string, traitBound: F): InstanceType<F> | null;\n  getTrait(key: string, traitBound?: abstract new (...args: any) => Trait): Trait | null;\n  getTrait<F extends abstract new (...args: any) => Trait>(traitBound: F): InstanceType<F> | null;\n  getTrait(key: string | (abstract new (...args: any) => Trait), traitBound?: abstract new (...args: any) => Trait): Trait | null {\n    const model = this.model;\n    return model !== null ? model.getTrait(key as string, traitBound) : null;\n  }\n\n  setTrait<T extends Trait>(key: string, newTrait: T): Trait | null;\n  setTrait<F extends TraitCreator<F>>(key: string, factory: F): Trait | null;\n  setTrait(key: string, newTrait: AnyTrait | null): Trait | null;\n  setTrait(key: string, newTrait: AnyTrait | null): Trait | null {\n    const model = this.model;\n    if (model !== null) {\n      return model.setTrait(key, newTrait);\n    } else {\n      throw new Error(\"no model\");\n    }\n  }\n\n  appendTrait<T extends Trait>(trait: T, key?: string): T;\n  appendTrait<F extends TraitCreator<F>>(factory: F, key?: string): InstanceType<F>;\n  appendTrait(trait: AnyTrait, key?: string): Trait;\n  appendTrait(trait: AnyTrait, key?: string): Trait {\n    const model = this.model;\n    if (model !== null) {\n      return model.appendTrait(trait, key);\n    } else {\n      throw new Error(\"no model\");\n    }\n  }\n\n  prependTrait<T extends Trait>(trait: T, key?: string): T;\n  prependTrait<F extends TraitCreator<F>>(factory: F, key?: string): InstanceType<F>;\n  prependTrait(trait: AnyTrait, key?: string): Trait;\n  prependTrait(trait: AnyTrait, key?: string): Trait {\n    const model = this.model;\n    if (model !== null) {\n      return model.prependTrait(trait, key);\n    } else {\n      throw new Error(\"no model\");\n    }\n  }\n\n  insertTrait<T extends Trait>(trait: T, target: Trait | null, key?: string): T;\n  insertTrait<F extends TraitCreator<F>>(factory: F, target: Trait | null, key?: string): InstanceType<F>;\n  insertTrait(trait: AnyTrait, target: Trait | null, key?: string): Trait;\n  insertTrait(trait: AnyTrait, target: Trait | null, key?: string): Trait {\n    const model = this.model;\n    if (model !== null) {\n      return model.insertTrait(trait, target, key);\n    } else {\n      throw new Error(\"no model\");\n    }\n  }\n\n  replaceTraitt<T extends Trait>(newTrait: Trait, oldTrait: T): T;\n  replaceTraitt<T extends Trait>(newTrait: AnyTrait, oldTrait: T): T;\n  replaceTraitt(newTrait: AnyTrait, oldTrait: Trait): Trait {\n    const model = this.model;\n    if (model !== null) {\n      return model.replaceTrait(newTrait, oldTrait);\n    } else {\n      throw new Error(\"no model\");\n    }\n  }\n\n  get insertTraitFlags(): ModelFlags {\n    return (this.constructor as typeof Trait).InsertTraitFlags;\n  }\n\n  /** @protected */\n  willInsertTrait(trait: Trait, target: Trait | null): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitWillInsertTrait !== void 0) {\n        observer.traitWillInsertTrait(trait, target, this);\n      }\n    }\n  }\n\n  /** @protected */\n  onInsertTrait(trait: Trait, target: Trait | null): void {\n    this.requireUpdate(this.insertTraitFlags);\n    this.bindTraitFasteners(trait, target);\n  }\n\n  /** @protected */\n  didInsertTrait(trait: Trait, target: Trait | null): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitDidInsertTrait !== void 0) {\n        observer.traitDidInsertTrait(trait, target, this);\n      }\n    }\n  }\n\n  removeTrait<T extends Trait>(trait: T): T | null;\n  removeTrait(key: string | Trait): Trait | null;\n  removeTrait(key: string | Trait): Trait | null {\n    const model = this.model;\n    if (model !== null) {\n      return model.removeTrait(key);\n    } else {\n      return null;\n    }\n  }\n\n  get removeTraitFlags(): ModelFlags {\n    return (this.constructor as typeof Trait).RemoveTraitFlags;\n  }\n\n  /** @protected */\n  willRemoveTrait(trait: Trait): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitWillRemoveTrait !== void 0) {\n        observer.traitWillRemoveTrait(trait, this);\n      }\n    }\n  }\n\n  /** @protected */\n  onRemoveTrait(trait: Trait): void {\n    this.requireUpdate(this.removeTraitFlags);\n    this.unbindTraitFasteners(trait);\n  }\n\n  /** @protected */\n  didRemoveTrait(trait: Trait): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitDidRemoveTrait !== void 0) {\n        observer.traitDidRemoveTrait(trait, this);\n      }\n    }\n  }\n\n  sortTraits(comparator: Comparator<Trait>): void {\n    const model = this.model;\n    if (model !== null) {\n      model.sortTraits(comparator);\n    }\n  }\n\n  getSuperTrait<F extends abstract new (...args: any) => Trait>(superBound: F): InstanceType<F> | null {\n    const model = this.model;\n    return model !== null ? model.getSuperTrait(superBound) : null;\n  }\n\n  getBaseTrait<F extends abstract new (...args: any) => Trait>(baseBound: F): InstanceType<F> | null {\n    const model = this.model;\n    return model !== null ? model.getBaseTrait(baseBound) : null;\n  }\n\n  @Provider({\n    extends: WarpProvider,\n    type: WarpService,\n    observes: false,\n    service: WarpService.global(),\n  })\n  readonly warpProvider!: WarpProvider<this>;\n\n  @Property({\n    type: Object,\n    inherits: true,\n    value: null,\n    updateFlags: Model.NeedsReconcile,\n  })\n  readonly warpRef!: Property<this, WarpRef | null>;\n\n  get mounted(): boolean {\n    return (this.flags & Trait.MountedFlag) !== 0;\n  }\n\n  get mountFlags(): ModelFlags {\n    return (this.constructor as typeof Trait).MountFlags;\n  }\n\n  /** @internal */\n  mountTrait(): void {\n    if ((this.flags & Trait.MountedFlag) === 0) {\n      this.setFlags(this.flags | Trait.MountedFlag);\n      this.willMount();\n      this.onMount();\n      this.didMount();\n    } else {\n      throw new Error(\"already mounted\");\n    }\n  }\n\n  protected willMount(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitWillMount !== void 0) {\n        observer.traitWillMount(this);\n      }\n    }\n  }\n\n  protected onMount(): void {\n    this.requireUpdate(this.mountFlags);\n\n    if (this.decoherent !== null && this.decoherent.length !== 0) {\n      this.requireUpdate(Model.NeedsMutate);\n    }\n\n    this.mountFasteners();\n\n    if (this.consumers.length !== 0) {\n      this.startConsuming();\n    }\n  }\n\n  protected didMount(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitDidMount !== void 0) {\n        observer.traitDidMount(this);\n      }\n    }\n  }\n\n  /** @internal */\n  unmountTrait(): void {\n    if ((this.flags & Trait.MountedFlag) !== 0) {\n      this.setFlags(this.flags & ~Trait.MountedFlag);\n      this.willUnmount();\n      this.onUnmount();\n      this.didUnmount();\n    } else {\n      throw new Error(\"already unmounted\");\n    }\n  }\n\n  protected willUnmount(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitWillUnmount !== void 0) {\n        observer.traitWillUnmount(this);\n      }\n    }\n  }\n\n  protected onUnmount(): void {\n    this.stopConsuming();\n    this.unmountFasteners();\n  }\n\n  protected didUnmount(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitDidUnmount !== void 0) {\n        observer.traitDidUnmount(this);\n      }\n    }\n  }\n\n  requireUpdate(updateFlags: ModelFlags, immediate: boolean = false): void {\n    const model = this.model;\n    if (model !== null) {\n      model.requireUpdate(updateFlags, immediate);\n    }\n  }\n\n  /** @protected */\n  needsUpdate(updateFlags: ModelFlags, immediate: boolean): ModelFlags {\n    return updateFlags;\n  }\n\n  requestUpdate(target: Model, updateFlags: ModelFlags, immediate: boolean): void {\n    const model = this.model;\n    if (model !== null) {\n      model.requestUpdate(target, updateFlags, immediate);\n    } else {\n      throw new TypeError(\"no model\");\n    }\n  }\n\n  get updating(): boolean {\n    const model = this.model;\n    return model !== null && model.updating;\n  }\n\n  get analyzing(): boolean {\n    const model = this.model;\n    return model !== null && model.analyzing;\n  }\n\n  /** @protected */\n  needsAnalyze(analyzeFlags: ModelFlags, modelContext: TraitContextType<this>): ModelFlags {\n    return analyzeFlags;\n  }\n\n  /** @protected */\n  willAnalyze(analyzeFlags: ModelFlags, modelContext: TraitContextType<this>): void {\n    // hook\n  }\n\n  /** @protected */\n  onAnalyze(analyzeFlags: ModelFlags, modelContext: TraitContextType<this>): void {\n    // hook\n  }\n\n  /** @protected */\n  didAnalyze(analyzeFlags: ModelFlags, modelContext: TraitContextType<this>): void {\n    // hook\n  }\n\n  /** @protected */\n  willMutate(modelContext: TraitContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitWillMutate !== void 0) {\n        observer.traitWillMutate(modelContext, this);\n      }\n    }\n  }\n\n  /** @protected */\n  onMutate(modelContext: TraitContextType<this>): void {\n    this.recohereFasteners(modelContext.updateTime);\n  }\n\n  /** @protected */\n  didMutate(modelContext: TraitContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitDidMutate !== void 0) {\n        observer.traitDidMutate(modelContext, this);\n      }\n    }\n  }\n\n  /** @protected */\n  willAggregate(modelContext: TraitContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitWillAggregate !== void 0) {\n        observer.traitWillAggregate(modelContext, this);\n      }\n    }\n  }\n\n  /** @protected */\n  onAggregate(modelContext: TraitContextType<this>): void {\n    // hook\n  }\n\n  /** @protected */\n  didAggregate(modelContext: TraitContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitDidAggregate !== void 0) {\n        observer.traitDidAggregate(modelContext, this);\n      }\n    }\n  }\n\n  /** @protected */\n  willCorrelate(modelContext: TraitContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitWillCorrelate !== void 0) {\n        observer.traitWillCorrelate(modelContext, this);\n      }\n    }\n  }\n\n  /** @protected */\n  onCorrelate(modelContext: TraitContextType<this>): void {\n    // hook\n  }\n\n  /** @protected */\n  didCorrelate(modelContext: TraitContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitDidCorrelate !== void 0) {\n        observer.traitDidCorrelate(modelContext, this);\n      }\n    }\n  }\n\n  /** @protected */\n  analyzeChildren(analyzeFlags: ModelFlags, modelContext: TraitContextType<this>,\n                  analyzeChild: (this: TraitModelType<this>, child: Model, analyzeFlags: ModelFlags,\n                                 modelContext: TraitContextType<this>) => void,\n                  analyzeChildren: (this: TraitModelType<this>, analyzeFlags: ModelFlags, modelContext: TraitContextType<this>,\n                                    analyzeChild: (this: TraitModelType<this>, child: Model, analyzeFlags: ModelFlags,\n                                                   modelContext: TraitContextType<this>) => void) => void): void {\n    analyzeChildren.call(this.model as TraitModelType<this>, analyzeFlags, modelContext, analyzeChild);\n  }\n\n  get refreshing(): boolean {\n    const model = this.model;\n    return model !== null && model.refreshing;\n  }\n\n  /** @protected */\n  needsRefresh(refreshFlags: ModelFlags, modelContext: TraitContextType<this>): ModelFlags {\n    return refreshFlags;\n  }\n\n  /** @protected */\n  willRefresh(refreshFlags: ModelFlags, modelContext: TraitContextType<this>): void {\n    // hook\n  }\n\n  /** @protected */\n  onRefresh(refreshFlags: ModelFlags, modelContext: TraitContextType<this>): void {\n    // hook\n  }\n\n  /** @protected */\n  didRefresh(refreshFlags: ModelFlags, modelContext: TraitContextType<this>): void {\n    // hook\n  }\n\n  /** @protected */\n  willValidate(modelContext: TraitContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitWillValidate !== void 0) {\n        observer.traitWillValidate(modelContext, this);\n      }\n    }\n  }\n\n  /** @protected */\n  onValidate(modelContext: TraitContextType<this>): void {\n    // hook\n  }\n\n  /** @protected */\n  didValidate(modelContext: TraitContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitDidValidate !== void 0) {\n        observer.traitDidValidate(modelContext, this);\n      }\n    }\n  }\n\n  /** @protected */\n  willReconcile(modelContext: TraitContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitWillReconcile !== void 0) {\n        observer.traitWillReconcile(modelContext, this);\n      }\n    }\n  }\n\n  /** @protected */\n  onReconcile(modelContext: TraitContextType<this>): void {\n    this.recohereDownlinks(modelContext.updateTime);\n  }\n\n  /** @protected */\n  didReconcile(modelContext: TraitContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitDidReconcile !== void 0) {\n        observer.traitDidReconcile(modelContext, this);\n      }\n    }\n  }\n\n  /** @protected */\n  refreshChildren(refreshFlags: ModelFlags, modelContext: TraitContextType<this>,\n                  refreshChild: (this: TraitModelType<this>, child: Model, refreshFlags: ModelFlags,\n                                 modelContext: TraitContextType<this>) => void,\n                  refreshChildren: (this: TraitModelType<this>, refreshFlags: ModelFlags, modelContext: TraitContextType<this>,\n                                    refreshChild: (this: TraitModelType<this>, child: Model, refreshFlags: ModelFlags,\n                                                        modelContext: TraitContextType<this>) => void) => void): void {\n    refreshChildren.call(this.model as TraitModelType<this>, refreshFlags, modelContext, refreshChild);\n  }\n\n  /** @internal */\n  readonly fasteners: {[fastenerName: string]: Fastener | undefined} | null;\n\n  /** @override */\n  hasFastener(fastenerName: string, fastenerBound?: Proto<Fastener> | null): boolean {\n    const fasteners = this.fasteners;\n    if (fasteners !== null) {\n      const fastener = fasteners[fastenerName];\n      if (fastener !== void 0 && (fastenerBound === void 0 || fastenerBound === null || fastener instanceof fastenerBound)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @override */\n  getFastener<F extends Fastener<any>>(fastenerName: string, fastenerBound: Proto<F>): F | null;\n  /** @override */\n  getFastener(fastenerName: string, fastenerBound?: Proto<Fastener> | null): Fastener | null;\n  getFastener(fastenerName: string, fastenerBound?: Proto<Fastener> | null): Fastener | null {\n    const fasteners = this.fasteners;\n    if (fasteners !== null) {\n      const fastener = fasteners[fastenerName];\n      if (fastener !== void 0 && (fastenerBound === void 0 || fastenerBound === null || fastener instanceof fastenerBound)) {\n        return fastener;\n      }\n    }\n    return null;\n  }\n\n  /** @override */\n  setFastener(fastenerName: string, newFastener: Fastener | null): void {\n    const fasteners = this.fasteners;\n    const oldFastener: Fastener | null | undefined = fasteners !== null ? fasteners[fastenerName] ?? null : null;\n    if (oldFastener !== newFastener) {\n      if (oldFastener !== null) {\n        this.detachFastener(fastenerName, oldFastener);\n      }\n      if (newFastener !== null) {\n        this.attachFastener(fastenerName, newFastener);\n      }\n    }\n  }\n\n  /** @internal */\n  protected attachFastener(fastenerName: string, fastener: Fastener): void {\n    let fasteners = this.fasteners;\n    if (fasteners === null) {\n      fasteners = {};\n      (this as Mutable<this>).fasteners = fasteners;\n    }\n    // assert(fasteners[fastenerName] === void 0);\n    this.willAttachFastener(fastenerName, fastener);\n    fasteners[fastenerName] = fastener;\n    if (this.mounted) {\n      fastener.mount();\n    }\n    this.onAttachFastener(fastenerName, fastener);\n    this.didAttachFastener(fastenerName, fastener);\n  }\n\n  protected willAttachFastener(fastenerName: string, fastener: Fastener): void {\n    // hook\n  }\n\n  protected onAttachFastener(fastenerName: string, fastener: Fastener): void {\n    this.bindFastener(fastener);\n  }\n\n  protected didAttachFastener(fastenerName: string, fastener: Fastener): void {\n    // hook\n  }\n\n  /** @internal */\n  protected detachFastener(fastenerName: string, fastener: Fastener): void {\n    const fasteners = this.fasteners!;\n    // assert(fasteners !== null);\n    // assert(fasteners[fastenerName] === fastener);\n    this.willDetachFastener(fastenerName, fastener);\n    this.onDetachFastener(fastenerName, fastener);\n    if (this.mounted) {\n      fastener.unmount();\n    }\n    delete fasteners[fastenerName];\n    this.didDetachFastener(fastenerName, fastener);\n  }\n\n  protected willDetachFastener(fastenerName: string, fastener: Fastener): void {\n    // hook\n  }\n\n  protected onDetachFastener(fastenerName: string, fastener: Fastener): void {\n    // hook\n  }\n\n  protected didDetachFastener(fastenerName: string, fastener: Fastener): void {\n    // hook\n  }\n\n  /** @override */\n  getLazyFastener<F extends Fastener<any>>(fastenerName: string, fastenerBound: Proto<F>): F | null;\n  /** @override */\n  getLazyFastener(fastenerName: string, fastenerBound?: Proto<Fastener> | null): Fastener | null;\n  getLazyFastener(fastenerName: string, fastenerBound?: Proto<Fastener> | null): Fastener | null {\n    return FastenerContext.getLazyFastener(this, fastenerName, fastenerBound);\n  }\n\n  /** @override */\n  getSuperFastener<F extends Fastener<any>>(fastenerName: string, fastenerBound: Proto<F>): F | null;\n  /** @override */\n  getSuperFastener(fastenerName: string, fastenerBound?: Proto<Fastener> | null): Fastener | null;\n  getSuperFastener(fastenerName: string, fastenerBound?: Proto<Fastener> | null): Fastener | null {\n    const model = this.model;\n    if (model === null) {\n      return null;\n    } else {\n      const modelFastener = model.getLazyFastener(fastenerName, fastenerBound);\n      if (modelFastener !== null) {\n        return modelFastener;\n      } else {\n        return model.getSuperFastener(fastenerName, fastenerBound);\n      }\n    }\n  }\n\n  /** @internal */\n  protected mountFasteners(): void {\n    const fasteners = this.fasteners;\n    for (const fastenerName in fasteners) {\n      const fastener = fasteners[fastenerName]!;\n      fastener.mount();\n    }\n  }\n\n  /** @internal */\n  protected unmountFasteners(): void {\n    const fasteners = this.fasteners;\n    for (const fastenerName in fasteners) {\n      const fastener = fasteners[fastenerName]!;\n      fastener.unmount();\n    }\n  }\n\n  protected bindFastener(fastener: Fastener): void {\n    if ((fastener instanceof ModelRelation || fastener instanceof TraitRelation) && fastener.binds) {\n      this.forEachChild(function (child: Model): void {\n        fastener.bindModel(child, null);\n      }, this);\n    }\n    if (fastener instanceof TraitRelation && fastener.binds) {\n      this.forEachTrait(function (trait: Trait): void {\n        fastener.bindTrait(trait, null);\n      }, this);\n    }\n    if (fastener instanceof DownlinkFastener && fastener.consumed === true && this.consuming) {\n      fastener.consume(this);\n    }\n  }\n\n  /** @internal */\n  protected bindModelFasteners(model: Model): void {\n    const fasteners = this.fasteners;\n    model.forEachChild(function (child: Model): void {\n      for (const fastenerName in fasteners) {\n        const fastener = fasteners[fastenerName]!;\n        this.bindChildFastener(fastener, child, null);\n      }\n    }, this);\n    model.forEachTrait(function (trait: Trait): void {\n      for (const fastenerName in fasteners) {\n        const fastener = fasteners[fastenerName]!;\n        this.bindTraitFastener(fastener, trait, null);\n      }\n    }, this);\n  }\n\n  /** @internal */\n  protected unbindModelFasteners(model: Model): void {\n    const fasteners = this.fasteners;\n    model.forEachTrait(function (trait: Trait): void {\n      for (const fastenerName in fasteners) {\n        const fastener = fasteners[fastenerName]!;\n        this.unbindTraitFastener(fastener, trait);\n      }\n    }, this);\n    model.forEachChild(function (child: Model): void {\n      for (const fastenerName in fasteners) {\n        const fastener = fasteners[fastenerName]!;\n        this.unbindChildFastener(fastener, child);\n      }\n    }, this);\n  }\n\n  /** @internal */\n  protected bindChildFasteners(child: Model, target: Model | null): void {\n    const fasteners = this.fasteners;\n    for (const fastenerName in fasteners) {\n      const fastener = fasteners[fastenerName]!;\n      this.bindChildFastener(fastener, child, target);\n    }\n  }\n\n  /** @internal */\n  protected bindChildFastener(fastener: Fastener, child: Model, target: Model | null): void {\n    if (fastener instanceof ModelRelation || fastener instanceof TraitRelation) {\n      fastener.bindModel(child, target);\n    }\n  }\n\n  /** @internal */\n  protected unbindChildFasteners(child: Model): void {\n    const fasteners = this.fasteners;\n    for (const fastenerName in fasteners) {\n      const fastener = fasteners[fastenerName]!;\n      this.unbindChildFastener(fastener, child);\n    }\n  }\n\n  /** @internal */\n  protected unbindChildFastener(fastener: Fastener, child: Model): void {\n    if (fastener instanceof ModelRelation || fastener instanceof TraitRelation) {\n      fastener.unbindModel(child);\n    }\n  }\n\n  /** @internal */\n  protected bindTraitFasteners(trait: Trait, target: Trait | null): void {\n    const fasteners = this.fasteners;\n    for (const fastenerName in fasteners) {\n      const fastener = fasteners[fastenerName]!;\n      this.bindTraitFastener(fastener, trait, target);\n    }\n  }\n\n  /** @internal */\n  protected bindTraitFastener(fastener: Fastener, trait: Trait, target: Trait | null): void {\n    if (fastener instanceof TraitRelation) {\n      fastener.bindTrait(trait, target);\n    }\n  }\n\n  /** @internal */\n  protected unbindTraitFasteners(trait: Trait): void {\n    const fasteners = this.fasteners;\n    for (const fastenerName in fasteners) {\n      const fastener = fasteners[fastenerName]!;\n      this.unbindTraitFastener(fastener, trait);\n    }\n  }\n\n  /** @internal */\n  protected unbindTraitFastener(fastener: Fastener, trait: Trait): void {\n    if (fastener instanceof TraitRelation) {\n      fastener.unbindTrait(trait);\n    }\n  }\n\n  /** @internal */\n  readonly decoherent: ReadonlyArray<Fastener> | null;\n\n  /** @internal */\n  decohereFastener(fastener: Fastener): void {\n    let decoherent = this.decoherent as Fastener[];\n    if (decoherent === null) {\n      decoherent = [];\n      (this as Mutable<this>).decoherent = decoherent;\n    }\n    decoherent.push(fastener);\n    if (fastener instanceof DownlinkFastener) {\n      this.requireUpdate(Model.NeedsReconcile);\n    } else {\n      this.requireUpdate(Model.NeedsMutate);\n    }\n  }\n\n  /** @internal */\n  recohereFasteners(t?: number): void {\n    const decoherent = this.decoherent;\n    if (decoherent !== null) {\n      const decoherentCount = decoherent.length;\n      if (decoherentCount !== 0) {\n        if (t === void 0) {\n          t = performance.now();\n        }\n        (this as Mutable<this>).decoherent = null;\n        for (let i = 0; i < decoherentCount; i += 1) {\n          const fastener = decoherent[i]!;\n          if (!(fastener instanceof DownlinkFastener)) {\n            fastener.recohere(t);\n          } else {\n            this.decohereFastener(fastener);\n          }\n        }\n      }\n    }\n  }\n\n  /** @internal */\n  recohereDownlinks(t: number): void {\n    const decoherent = this.decoherent;\n    if (decoherent !== null) {\n      const decoherentCount = decoherent.length;\n      if (decoherentCount !== 0) {\n        (this as Mutable<this>).decoherent = null;\n        for (let i = 0; i < decoherentCount; i += 1) {\n          const fastener = decoherent[i]!;\n          if (fastener instanceof DownlinkFastener) {\n            fastener.recohere(t);\n          } else {\n            this.decohereFastener(fastener);\n          }\n        }\n      }\n    }\n  }\n\n  /** @internal */\n  readonly observers: ReadonlyArray<ObserverType<this>>;\n\n  /** @override */\n  observe(observer: ObserverType<this>): void {\n    const oldObservers = this.observers;\n    const newObservers = Arrays.inserted(observer, oldObservers);\n    if (oldObservers !== newObservers) {\n      this.willObserve(observer);\n      (this as Mutable<this>).observers = newObservers;\n      this.onObserve(observer);\n      this.didObserve(observer);\n    }\n  }\n\n  protected willObserve(observer: ObserverType<this>): void {\n    // hook\n  }\n\n  protected onObserve(observer: ObserverType<this>): void {\n    // hook\n  }\n\n  protected didObserve(observer: ObserverType<this>): void {\n    // hook\n  }\n\n  /** @override */\n  unobserve(observer: ObserverType<this>): void {\n    const oldObservers = this.observers;\n    const newObservers = Arrays.removed(observer, oldObservers);\n    if (oldObservers !== newObservers) {\n      this.willUnobserve(observer);\n      (this as Mutable<this>).observers = newObservers;\n      this.onUnobserve(observer);\n      this.didUnobserve(observer);\n    }\n  }\n\n  protected willUnobserve(observer: ObserverType<this>): void {\n    // hook\n  }\n\n  protected onUnobserve(observer: ObserverType<this>): void {\n    // hook\n  }\n\n  protected didUnobserve(observer: ObserverType<this>): void {\n    // hook\n  }\n\n  protected forEachObserver<T>(callback: (this: this, observer: ObserverType<this>) => T | void): T | undefined {\n    let result: T | undefined;\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      result = callback.call(this, observer as ObserverType<this>) as T | undefined;\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  callObservers<O, K extends keyof ObserverMethods<O>>(this: this & {readonly observerType?: Class<O>}, key: K, ...args: ObserverParameters<O, K>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]! as ObserverMethods<O>;\n      const method = observer[key];\n      if (typeof method === \"function\") {\n        method.call(observer, ...args);\n      }\n    }\n  }\n\n  /** @internal */\n  readonly consumers: ReadonlyArray<ConsumerType<this>>;\n\n  /** @override */\n  consume(consumer: ConsumerType<this>): void {\n    const oldConsumers = this.consumers;\n    const newConsumers = Arrays.inserted(consumer, oldConsumers);\n    if (oldConsumers !== newConsumers) {\n      this.willConsume(consumer);\n      (this as Mutable<this>).consumers = newConsumers;\n      this.onConsume(consumer);\n      this.didConsume(consumer);\n      if (oldConsumers.length === 0 && this.mounted) {\n        this.startConsuming();\n      }\n    }\n  }\n\n  protected willConsume(consumer: ConsumerType<this>): void {\n    // hook\n  }\n\n  protected onConsume(consumer: ConsumerType<this>): void {\n    // hook\n  }\n\n  protected didConsume(consumer: ConsumerType<this>): void {\n    // hook\n  }\n\n  /** @override */\n  unconsume(consumer: ConsumerType<this>): void {\n    const oldConsumers = this.consumers;\n    const newConsumers = Arrays.removed(consumer, oldConsumers);\n    if (oldConsumers !== newConsumers) {\n      this.willUnconsume(consumer);\n      (this as Mutable<this>).consumers = newConsumers;\n      this.onUnconsume(consumer);\n      this.didUnconsume(consumer);\n      if (newConsumers.length === 0) {\n        this.stopConsuming();\n      }\n    }\n  }\n\n  protected willUnconsume(consumer: ConsumerType<this>): void {\n    // hook\n  }\n\n  protected onUnconsume(consumer: ConsumerType<this>): void {\n    // hook\n  }\n\n  protected didUnconsume(consumer: ConsumerType<this>): void {\n    // hook\n  }\n\n  get consuming(): boolean {\n    return (this.flags & Trait.ConsumingFlag) !== 0;\n  }\n\n  get startConsumingFlags(): ModelFlags {\n    return (this.constructor as typeof Trait).StartConsumingFlags;\n  }\n\n  protected startConsuming(): void {\n    if ((this.flags & Trait.ConsumingFlag) === 0) {\n      this.willStartConsuming();\n      this.setFlags(this.flags | Trait.ConsumingFlag);\n      this.onStartConsuming();\n      this.didStartConsuming();\n    }\n  }\n\n  protected willStartConsuming(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitWillStartConsuming !== void 0) {\n        observer.traitWillStartConsuming(this);\n      }\n    }\n  }\n\n  protected onStartConsuming(): void {\n    this.requireUpdate(this.startConsumingFlags);\n    this.startConsumingFasteners();\n  }\n\n  protected didStartConsuming(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitDidStartConsuming !== void 0) {\n        observer.traitDidStartConsuming(this);\n      }\n    }\n  }\n\n  get stopConsumingFlags(): ModelFlags {\n    return (this.constructor as typeof Trait).StopConsumingFlags;\n  }\n\n  protected stopConsuming(): void {\n    if ((this.flags & Trait.ConsumingFlag) !== 0) {\n      this.willStopConsuming();\n      this.setFlags(this.flags & ~Trait.ConsumingFlag);\n      this.onStopConsuming();\n      this.didStopConsuming();\n    }\n  }\n\n  protected willStopConsuming(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitWillStopConsuming !== void 0) {\n        observer.traitWillStopConsuming(this);\n      }\n    }\n  }\n\n  protected onStopConsuming(): void {\n    this.requireUpdate(this.stopConsumingFlags);\n    this.stopConsumingFasteners();\n  }\n\n  protected didStopConsuming(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitDidStopConsuming !== void 0) {\n        observer.traitDidStopConsuming(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected startConsumingFasteners(): void {\n    const fasteners = this.fasteners;\n    for (const fastenerName in fasteners) {\n      const fastener = fasteners[fastenerName]!;\n      if (fastener instanceof DownlinkFastener && fastener.consumed === true) {\n        fastener.consume(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected stopConsumingFasteners(): void {\n    const fasteners = this.fasteners;\n    for (const fastenerName in fasteners) {\n      const fastener = fasteners[fastenerName]!;\n      if (fastener instanceof DownlinkFastener && fastener.consumed === true) {\n        fastener.unconsume(this);\n      }\n    }\n  }\n\n  get modelContext(): TraitContextType<this> | null {\n    const model = this.model;\n    return model !== null ? model.modelContext as TraitContextType<this> : null;\n  }\n\n  /** @override */\n  equals(that: unknown): boolean {\n    return this === that;\n  }\n\n  /** @override */\n  hashCode(): number {\n    return this.uid;\n  }\n\n  /** @override */\n  init(init: TraitInit): void {\n    // hook\n  }\n\n  static create<S extends new () => InstanceType<S>>(this: S): InstanceType<S> {\n    return new this();\n  }\n\n  static fromInit<S extends abstract new (...args: any) => InstanceType<S>>(this: S, init: InitType<InstanceType<S>>): InstanceType<S> {\n    let type: Creatable<Trait>;\n    if ((typeof init === \"object\" && init !== null || typeof init === \"function\") && Creatable.is((init as TraitInit).type)) {\n      type = (init as TraitInit).type!;\n    } else {\n      type = this as unknown as Creatable<Trait>;\n    }\n    const view = type.create();\n    view.init(init as TraitInit);\n    return view as InstanceType<S>;\n  }\n\n  static fromAny<S extends abstract new (...args: any) => InstanceType<S>>(this: S, value: AnyTrait<InstanceType<S>>): InstanceType<S> {\n    if (value === void 0 || value === null) {\n      return value as InstanceType<S>;\n    } else if (value instanceof Trait) {\n      if (value instanceof this) {\n        return value;\n      } else {\n        throw new TypeError(value + \" not an instance of \" + this);\n      }\n    } else if (Creatable.is(value)) {\n      return (value as Creatable<InstanceType<S>>).create();\n    } else {\n      return (this as unknown as TraitFactory<InstanceType<S>>).fromInit(value);\n    }\n  }\n\n  /** @internal */\n  static uid: () => number = (function () {\n    let nextId = 1;\n    return function uid(): number {\n      const id = ~~nextId;\n      nextId += 1;\n      return id;\n    }\n  })();\n\n  /** @internal */\n  static readonly MountedFlag: TraitFlags = 1 << 0;\n  /** @internal */\n  static readonly ConsumingFlag: TraitFlags = 1 << 1;\n\n  /** @internal */\n  static readonly FlagShift: number = 2;\n  /** @internal */\n  static readonly FlagMask: ModelFlags = (1 << Trait.FlagShift) - 1;\n\n  static readonly MountFlags: ModelFlags = 0;\n  static readonly InsertChildFlags: ModelFlags = 0;\n  static readonly RemoveChildFlags: ModelFlags = 0;\n  static readonly InsertTraitFlags: ModelFlags = 0;\n  static readonly RemoveTraitFlags: ModelFlags = 0;\n  static readonly StartConsumingFlags: TraitFlags = 0;\n  static readonly StopConsumingFlags: TraitFlags = 0;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Proto, ObserverType} from \"@swim/util\";\nimport {FastenerOwner, FastenerInit, FastenerClass, Fastener} from \"@swim/component\";\nimport {Model} from \"../model/Model\";\nimport {AnyTrait, TraitFactory, Trait} from \"./Trait\";\n\n/** @internal */\nexport type TraitRelationType<F extends TraitRelation<any, any>> =\n  F extends TraitRelation<any, infer T> ? T : never;\n\n/** @public */\nexport interface TraitRelationInit<T extends Trait = Trait> extends FastenerInit {\n  extends?: {prototype: TraitRelation<any, any>} | string | boolean | null;\n  type?: TraitFactory<T>;\n  binds?: boolean;\n  observes?: boolean;\n\n  initTrait?(trait: T): void;\n  willAttachTrait?(trait: T, target: Trait | null): void;\n  didAttachTrait?(trait: T, target: Trait | null): void;\n\n  deinitTrait?(trait: T): void;\n  willDetachTrait?(trait: T): void;\n  didDetachTrait?(trait: T): void;\n\n  parentModel?: Model | null;\n  insertChild?(model: Model, trait: T, target: Trait | null, key: string | undefined): void;\n\n  detectModel?(model: Model): T | null;\n  detectTrait?(trait: Trait): T | null;\n  createTrait?(): T;\n  fromAny?(value: AnyTrait<T>): T;\n}\n\n/** @public */\nexport type TraitRelationDescriptor<O = unknown, T extends Trait = Trait, I = {}> = ThisType<TraitRelation<O, T> & I> & TraitRelationInit<T> & Partial<I>;\n\n/** @public */\nexport interface TraitRelationClass<F extends TraitRelation<any, any> = TraitRelation<any, any>> extends FastenerClass<F> {\n}\n\n/** @public */\nexport interface TraitRelationFactory<F extends TraitRelation<any, any> = TraitRelation<any, any>> extends TraitRelationClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): TraitRelationFactory<F> & I;\n\n  define<O, T extends Trait = Trait>(className: string, descriptor: TraitRelationDescriptor<O, T>): TraitRelationFactory<TraitRelation<any, T>>;\n  define<O, T extends Trait = Trait>(className: string, descriptor: {observes: boolean} & TraitRelationDescriptor<O, T, ObserverType<T>>): TraitRelationFactory<TraitRelation<any, T>>;\n  define<O, T extends Trait = Trait, I = {}>(className: string, descriptor: {implements: unknown} & TraitRelationDescriptor<O, T, I>): TraitRelationFactory<TraitRelation<any, T> & I>;\n  define<O, T extends Trait = Trait, I = {}>(className: string, descriptor: {implements: unknown; observes: boolean} & TraitRelationDescriptor<O, T, I & ObserverType<T>>): TraitRelationFactory<TraitRelation<any, T> & I>;\n\n  <O, T extends Trait = Trait>(descriptor: TraitRelationDescriptor<O, T>): PropertyDecorator;\n  <O, T extends Trait = Trait>(descriptor: {observes: boolean} & TraitRelationDescriptor<O, T, ObserverType<T>>): PropertyDecorator;\n  <O, T extends Trait = Trait, I = {}>(descriptor: {implements: unknown} & TraitRelationDescriptor<O, T, I>): PropertyDecorator;\n  <O, T extends Trait = Trait, I = {}>(descriptor: {implements: unknown; observes: boolean} & TraitRelationDescriptor<O, T, I & ObserverType<T>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface TraitRelation<O = unknown, T extends Trait = Trait> extends Fastener<O> {\n  /** @override */\n  get fastenerType(): Proto<TraitRelation<any, any>>;\n\n  /** @protected */\n  initTrait(trait: T): void;\n\n  /** @protected */\n  willAttachTrait(trait: T, target: Trait | null): void;\n\n  /** @protected */\n  onAttachTrait(trait: T, target: Trait | null): void;\n\n  /** @protected */\n  didAttachTrait(trait: T, target: Trait | null): void;\n\n  /** @protected */\n  deinitTrait(trait: T): void;\n\n  /** @protected */\n  willDetachTrait(trait: T): void;\n\n  /** @protected */\n  onDetachTrait(trait: T): void;\n\n  /** @protected */\n  didDetachTrait(trait: T): void;\n\n  /** @internal @protected */\n  get parentModel(): Model | null;\n\n  /** @internal @protected */\n  insertChild(model: Model, trait: T, target: Trait | null, key: string | undefined): void;\n\n  /** @internal */\n  bindModel(model: Model, targetModel: Model | null): void;\n\n  /** @internal */\n  unbindModel(model: Model): void;\n\n  detectModel(model: Model): T | null;\n\n  /** @internal */\n  bindTrait(trait: Trait, target: Trait | null): void;\n\n  /** @internal */\n  unbindTrait(trait: Trait): void;\n\n  detectTrait(trait: Trait): T | null;\n\n  createTrait(): T;\n\n  /** @internal @protected */\n  fromAny(value: AnyTrait<T>): T;\n\n  /** @internal @protected */\n  get type(): TraitFactory<T> | undefined; // optional prototype property\n\n  /** @internal @protected */\n  get binds(): boolean | undefined; // optional prototype property\n\n  /** @internal @protected */\n  get observes(): boolean | undefined; // optional prototype property\n\n  /** @internal @override */\n  get lazy(): boolean; // prototype property\n\n  /** @internal @override */\n  get static(): string | boolean; // prototype property\n}\n\n/** @public */\nexport const TraitRelation = (function (_super: typeof Fastener) {\n  const TraitRelation: TraitRelationFactory = _super.extend(\"TraitRelation\");\n\n  Object.defineProperty(TraitRelation.prototype, \"fastenerType\", {\n    get: function (this: TraitRelation): Proto<TraitRelation<any, any>> {\n      return TraitRelation;\n    },\n    configurable: true,\n  });\n\n  TraitRelation.prototype.initTrait = function <T extends Trait>(this: TraitRelation<unknown, T>, trait: T): void {\n    // hook\n  };\n\n  TraitRelation.prototype.willAttachTrait = function <T extends Trait>(this: TraitRelation<unknown, T>, trait: T, target: Trait | null): void {\n    // hook\n  };\n\n  TraitRelation.prototype.onAttachTrait = function <T extends Trait>(this: TraitRelation<unknown, T>, trait: T, target: Trait | null): void {\n    if (this.observes === true) {\n      trait.observe(this as ObserverType<T>);\n    }\n  };\n\n  TraitRelation.prototype.didAttachTrait = function <T extends Trait>(this: TraitRelation<unknown, T>, trait: T, target: Trait | null): void {\n    // hook\n  };\n\n  TraitRelation.prototype.deinitTrait = function <T extends Trait>(this: TraitRelation<unknown, T>, trait: T): void {\n    // hook\n  };\n\n  TraitRelation.prototype.willDetachTrait = function <T extends Trait>(this: TraitRelation<unknown, T>, trait: T): void {\n    // hook\n  };\n\n  TraitRelation.prototype.onDetachTrait = function <T extends Trait>(this: TraitRelation<unknown, T>, trait: T): void {\n    if (this.observes === true) {\n      trait.unobserve(this as ObserverType<T>);\n    }\n  };\n\n  TraitRelation.prototype.didDetachTrait = function <T extends Trait>(this: TraitRelation<unknown, T>, trait: T): void {\n    // hook\n  };\n\n  Object.defineProperty(TraitRelation.prototype, \"parentModel\", {\n    get(this: TraitRelation): Model | null {\n      const owner = this.owner;\n      if (owner instanceof Model) {\n        return owner;\n      } else if (owner instanceof Trait) {\n        return owner.model;\n      } else {\n        return null;\n      }\n    },\n    configurable: true,\n  });\n\n  TraitRelation.prototype.insertChild = function <T extends Trait>(this: TraitRelation<unknown, T>, model: Model, trait: T, target: Trait | null, key: string | undefined): void {\n    model.insertTrait(trait, target, key);\n  };\n\n  TraitRelation.prototype.bindModel = function <T extends Trait>(this: TraitRelation<unknown, T>, model: Model, targetModel: Model | null): void {\n    // hook\n  };\n\n  TraitRelation.prototype.unbindModel = function <T extends Trait>(this: TraitRelation<unknown, T>, model: Model): void {\n    // hook\n  };\n\n  TraitRelation.prototype.detectModel = function <T extends Trait>(this: TraitRelation<unknown, T>, model: Model): T | null {\n    return null;\n  };\n\n  TraitRelation.prototype.bindTrait = function <T extends Trait>(this: TraitRelation<unknown, T>, trait: Trait, target: Trait | null): void {\n    // hook\n  };\n\n  TraitRelation.prototype.unbindTrait = function <T extends Trait>(this: TraitRelation<unknown, T>, trait: Trait): void {\n    // hook\n  };\n\n  TraitRelation.prototype.detectTrait = function <T extends Trait>(this: TraitRelation<unknown, T>, trait: Trait): T | null {\n    return null;\n  };\n\n  TraitRelation.prototype.createTrait = function <T extends Trait>(this: TraitRelation<unknown, T>): T {\n    let trait: T | undefined;\n    const type = this.type;\n    if (type !== void 0) {\n      return type.create();\n    }\n    if (trait === void 0 || trait === null) {\n      let message = \"Unable to create \";\n      if (this.name.length !== 0) {\n        message += this.name + \" \";\n      }\n      message += \"trait\";\n      throw new Error(message);\n    }\n    return trait;\n  };\n\n  TraitRelation.prototype.fromAny = function <T extends Trait>(this: TraitRelation<unknown, T>, value: AnyTrait<T>): T {\n    const type = this.type;\n    if (type !== void 0) {\n      return type.fromAny(value);\n    } else {\n      return Trait.fromAny(value) as T;\n    }\n  };\n\n  Object.defineProperty(TraitRelation.prototype, \"lazy\", {\n    get: function (this: TraitRelation): boolean {\n      return false;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(TraitRelation.prototype, \"static\", {\n    get: function (this: TraitRelation): string | boolean {\n      return true;\n    },\n    configurable: true,\n  });\n\n  TraitRelation.construct = function <F extends TraitRelation<any, any>>(fastenerClass: {prototype: F}, fastener: F | null, owner: FastenerOwner<F>): F {\n    fastener = _super.construct(fastenerClass, fastener, owner) as F;\n    return fastener;\n  };\n\n  TraitRelation.define = function <O, T extends Trait>(className: string, descriptor: TraitRelationDescriptor<O, T>): TraitRelationFactory<TraitRelation<any, T>> {\n    let superClass = descriptor.extends as TraitRelationFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const fastenerClass = superClass.extend(className, descriptor);\n\n    fastenerClass.construct = function (fastenerClass: {prototype: TraitRelation<any, any>}, fastener: TraitRelation<O, T> | null, owner: O): TraitRelation<O, T> {\n      fastener = superClass!.construct(fastenerClass, fastener, owner);\n      if (affinity !== void 0) {\n        fastener.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        fastener.initInherits(inherits);\n      }\n      return fastener;\n    };\n\n    return fastenerClass;\n  };\n\n  return TraitRelation;\n})(Fastener);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Proto, ObserverType} from \"@swim/util\";\nimport type {FastenerOwner, Fastener} from \"@swim/component\";\nimport type {Model} from \"../model/Model\";\nimport type {AnyTrait, Trait} from \"./Trait\";\nimport {TraitRelationInit, TraitRelationClass, TraitRelation} from \"./TraitRelation\";\n\n/** @internal */\nexport type TraitRefType<F extends TraitRef<any, any>> =\n  F extends TraitRef<any, infer T> ? T : never;\n\n/** @public */\nexport interface TraitRefInit<T extends Trait = Trait> extends TraitRelationInit<T> {\n  extends?: {prototype: TraitRef<any, any>} | string | boolean | null;\n  key?: string | boolean;\n}\n\n/** @public */\nexport type TraitRefDescriptor<O = unknown, T extends Trait = Trait, I = {}> = ThisType<TraitRef<O, T> & I> & TraitRefInit<T> & Partial<I>;\n\n/** @public */\nexport interface TraitRefClass<F extends TraitRef<any, any> = TraitRef<any, any>> extends TraitRelationClass<F> {\n}\n\n/** @public */\nexport interface TraitRefFactory<F extends TraitRef<any, any> = TraitRef<any, any>> extends TraitRefClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): TraitRefFactory<F> & I;\n\n  define<O, T extends Trait = Trait>(className: string, descriptor: TraitRefDescriptor<O, T>): TraitRefFactory<TraitRef<any, T>>;\n  define<O, T extends Trait = Trait>(className: string, descriptor: {observes: boolean} & TraitRefDescriptor<O, T, ObserverType<T>>): TraitRefFactory<TraitRef<any, T>>;\n  define<O, T extends Trait = Trait, I = {}>(className: string, descriptor: {implements: unknown} & TraitRefDescriptor<O, T, I>): TraitRefFactory<TraitRef<any, T> & I>;\n  define<O, T extends Trait = Trait, I = {}>(className: string, descriptor: {implements: unknown; observes: boolean} & TraitRefDescriptor<O, T, I & ObserverType<T>>): TraitRefFactory<TraitRef<any, T> & I>;\n\n  <O, T extends Trait = Trait>(descriptor: TraitRefDescriptor<O, T>): PropertyDecorator;\n  <O, T extends Trait = Trait>(descriptor: {observes: boolean} & TraitRefDescriptor<O, T, ObserverType<T>>): PropertyDecorator;\n  <O, T extends Trait = Trait, I = {}>(descriptor: {implements: unknown} & TraitRefDescriptor<O, T, I>): PropertyDecorator;\n  <O, T extends Trait = Trait, I = {}>(descriptor: {implements: unknown; observes: boolean} & TraitRefDescriptor<O, T, I & ObserverType<T>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface TraitRef<O = unknown, T extends Trait = Trait> extends TraitRelation<O, T> {\n  (): T | null;\n  (trait: AnyTrait<T> | null, target?: Trait | null, key?: string): O;\n\n  /** @override */\n  get fastenerType(): Proto<TraitRef<any, any>>;\n\n  /** @protected @override */\n  onInherit(superFastener: Fastener): void;\n\n  readonly trait: T | null;\n\n  getTrait(): T;\n\n  setTrait(trait: AnyTrait<T> | null, target?: Trait | null, key?: string): T | null;\n\n  attachTrait(trait?: AnyTrait<T>, target?: Trait | null): T;\n\n  detachTrait(): T | null;\n\n  insertTrait(model?: Model | null, trait?: AnyTrait<T>, target?: Trait | null, key?: string): T;\n\n  removeTrait(): T | null;\n\n  deleteTrait(): T | null;\n\n  /** @internal @override */\n  bindModel(model: Model, target: Model | null): void;\n\n  /** @internal @override */\n  unbindModel(model: Model): void;\n\n  /** @override */\n  detectModel(model: Model): T | null;\n\n  /** @internal @override */\n  bindTrait(trait: Trait, target: Trait | null): void;\n\n  /** @internal @override */\n  unbindTrait(trait: Trait): void;\n\n  /** @override */\n  detectTrait(trait: Trait): T | null;\n\n  /** @internal */\n  get key(): string | undefined; // optional prototype field\n}\n\n/** @public */\nexport const TraitRef = (function (_super: typeof TraitRelation) {\n  const TraitRef: TraitRefFactory = _super.extend(\"TraitRef\");\n\n  Object.defineProperty(TraitRef.prototype, \"fastenerType\", {\n    get: function (this: TraitRef): Proto<TraitRef<any, any>> {\n      return TraitRef;\n    },\n    configurable: true,\n  });\n\n  TraitRef.prototype.onInherit = function (this: TraitRef, superFastener: TraitRef): void {\n    this.setTrait(superFastener.trait);\n  };\n\n  TraitRef.prototype.getTrait = function <T extends Trait>(this: TraitRef<unknown, T>): T {\n    const trait = this.trait;\n    if (trait === null) {\n      let message = trait + \" \";\n      if (this.name.length !== 0) {\n        message += this.name + \" \";\n      }\n      message += \"trait\";\n      throw new TypeError(message);\n    }\n    return trait;\n  };\n\n  TraitRef.prototype.setTrait = function <T extends Trait>(this: TraitRef<unknown, T>, newTrait: AnyTrait<T> | null, target?: Trait | null, key?: string): T | null {\n    if (newTrait !== null) {\n      newTrait = this.fromAny(newTrait);\n    }\n    let oldTrait = this.trait;\n    if (oldTrait !== newTrait) {\n      if (target === void 0) {\n        target = null;\n      }\n      let model: Model | null;\n      if (this.binds && (model = this.parentModel, model !== null)) {\n        if (oldTrait !== null && oldTrait.model === model) {\n          if (target === null) {\n            target = oldTrait.nextTrait;\n          }\n          oldTrait.remove();\n        }\n        if (newTrait !== null) {\n          if (key === void 0) {\n            key = this.key;\n          }\n          this.insertChild(model, newTrait, target, key);\n        }\n        oldTrait = this.trait;\n      }\n      if (oldTrait !== newTrait) {\n        if (oldTrait !== null) {\n          this.willDetachTrait(oldTrait);\n          (this as Mutable<typeof this>).trait = null;\n          this.onDetachTrait(oldTrait);\n          this.deinitTrait(oldTrait);\n          this.didDetachTrait(oldTrait);\n        }\n        if (newTrait !== null) {\n          this.willAttachTrait(newTrait, target);\n          (this as Mutable<typeof this>).trait = newTrait;\n          this.onAttachTrait(newTrait, target);\n          this.initTrait(newTrait);\n          this.didAttachTrait(newTrait, target);\n        }\n      }\n    }\n    return oldTrait;\n  };\n\n  TraitRef.prototype.attachTrait = function <T extends Trait>(this: TraitRef<unknown, T>, newTrait?: AnyTrait<T>, target?: Trait | null): T {\n    const oldTrait = this.trait;\n    if (newTrait !== void 0 && newTrait !== null) {\n      newTrait = this.fromAny(newTrait);\n    } else if (oldTrait === null) {\n      newTrait = this.createTrait();\n    } else {\n      newTrait = oldTrait;\n    }\n    if (newTrait !== oldTrait) {\n      if (target === void 0) {\n        target = null;\n      }\n      if (oldTrait !== null) {\n        this.willDetachTrait(oldTrait);\n        (this as Mutable<typeof this>).trait = null;\n        this.onDetachTrait(oldTrait);\n        this.deinitTrait(oldTrait);\n        this.didDetachTrait(oldTrait);\n      }\n      this.willAttachTrait(newTrait, target);\n      (this as Mutable<typeof this>).trait = newTrait;\n      this.onAttachTrait(newTrait, target);\n      this.initTrait(newTrait);\n      this.didAttachTrait(newTrait, target);\n    }\n    return newTrait;\n  };\n\n  TraitRef.prototype.detachTrait = function <T extends Trait>(this: TraitRef<unknown, T>): T | null {\n    const oldTrait = this.trait;\n    if (oldTrait !== null) {\n      this.willDetachTrait(oldTrait);\n      (this as Mutable<typeof this>).trait = null;\n      this.onDetachTrait(oldTrait);\n      this.deinitTrait(oldTrait);\n      this.didDetachTrait(oldTrait);\n    }\n    return oldTrait;\n  };\n\n  TraitRef.prototype.insertTrait = function <T extends Trait>(this: TraitRef<unknown, T>, model?: Model | null, newTrait?: AnyTrait<T>, target?: Trait | null, key?: string): T {\n    if (newTrait !== void 0 && newTrait !== null) {\n      newTrait = this.fromAny(newTrait);\n    } else {\n      const oldTrait = this.trait;\n      if (oldTrait === null) {\n        newTrait = this.createTrait();\n      } else {\n        newTrait = oldTrait;\n      }\n    }\n    if (model === void 0 || model === null) {\n      model = this.parentModel;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (key === void 0) {\n      key = this.key;\n    }\n    if (model !== null && (newTrait.parent !== model || newTrait.key !== key)) {\n      this.insertChild(model, newTrait, target, key);\n    }\n    const oldTrait = this.trait;\n    if (newTrait !== oldTrait) {\n      if (oldTrait !== null) {\n        this.willDetachTrait(oldTrait);\n        (this as Mutable<typeof this>).trait = null;\n        this.onDetachTrait(oldTrait);\n        this.deinitTrait(oldTrait);\n        this.didDetachTrait(oldTrait);\n        oldTrait.remove();\n      }\n      this.willAttachTrait(newTrait, target);\n      (this as Mutable<typeof this>).trait = newTrait;\n      this.onAttachTrait(newTrait, target);\n      this.initTrait(newTrait);\n      this.didAttachTrait(newTrait, target);\n    }\n    return newTrait;\n  };\n\n  TraitRef.prototype.removeTrait = function <T extends Trait>(this: TraitRef<unknown, T>): T | null {\n    const trait = this.trait;\n    if (trait !== null) {\n      trait.remove();\n    }\n    return trait;\n  };\n\n  TraitRef.prototype.deleteTrait = function <T extends Trait>(this: TraitRef<unknown, T>): T | null {\n    const trait = this.detachTrait();\n    if (trait !== null) {\n      trait.remove();\n    }\n    return trait;\n  };\n\n  TraitRef.prototype.bindModel = function <T extends Trait>(this: TraitRef<unknown, T>, model: Model, target: Model | null): void {\n    if (this.binds && this.trait === null) {\n      const newTrait = this.detectModel(model);\n      if (newTrait !== null) {\n        this.willAttachTrait(newTrait, null);\n        (this as Mutable<typeof this>).trait = newTrait;\n        this.onAttachTrait(newTrait, null);\n        this.initTrait(newTrait);\n        this.didAttachTrait(newTrait, null);\n      }\n    }\n  };\n\n  TraitRef.prototype.unbindModel = function <T extends Trait>(this: TraitRef<unknown, T>, model: Model): void {\n    if (this.binds) {\n      const oldTrait = this.detectModel(model);\n      if (oldTrait !== null && this.trait === oldTrait) {\n        this.willDetachTrait(oldTrait);\n        (this as Mutable<typeof this>).trait = null;\n        this.onDetachTrait(oldTrait);\n        this.deinitTrait(oldTrait);\n        this.didDetachTrait(oldTrait);\n      }\n    }\n  };\n\n  TraitRef.prototype.detectModel = function <T extends Trait>(this: TraitRef<unknown, T>, model: Model): T | null {\n    return null;\n  };\n\n  TraitRef.prototype.bindTrait = function <T extends Trait>(this: TraitRef<unknown, T>, trait: Trait, target: Trait | null): void {\n    if (this.binds && this.trait === null) {\n      const newTrait = this.detectTrait(trait);\n      if (newTrait !== null) {\n        this.willAttachTrait(newTrait, target);\n        (this as Mutable<typeof this>).trait = newTrait;\n        this.onAttachTrait(newTrait, target);\n        this.initTrait(newTrait);\n        this.didAttachTrait(newTrait, target);\n      }\n    }\n  };\n\n  TraitRef.prototype.unbindTrait = function <T extends Trait>(this: TraitRef<unknown, T>, trait: Trait): void {\n    if (this.binds) {\n      const oldTrait = this.detectTrait(trait);\n      if (oldTrait !== null && this.trait === oldTrait) {\n        this.willDetachTrait(oldTrait);\n        (this as Mutable<typeof this>).trait = null;\n        this.onDetachTrait(oldTrait);\n        this.deinitTrait(oldTrait);\n        this.didDetachTrait(oldTrait);\n      }\n    }\n  };\n\n  TraitRef.prototype.detectTrait = function <T extends Trait>(this: TraitRef<unknown, T>, trait: Trait): T | null {\n    const key = this.key;\n    if (key !== void 0 && key === trait.key) {\n      return trait as T;\n    }\n    return null;\n  };\n\n  TraitRef.construct = function <F extends TraitRef<any, any>>(fastenerClass: {prototype: F}, fastener: F | null, owner: FastenerOwner<F>): F {\n    if (fastener === null) {\n      fastener = function (trait?: AnyTrait<TraitRefType<F>> | null, target?: Trait | null, key?: string): TraitRefType<F> | null | FastenerOwner<F> {\n        if (trait === void 0) {\n          return fastener!.trait;\n        } else {\n          fastener!.setTrait(trait, target, key);\n          return fastener!.owner;\n        }\n      } as F;\n      delete (fastener as Partial<Mutable<F>>).name; // don't clobber prototype name\n      Object.setPrototypeOf(fastener, fastenerClass.prototype);\n    }\n    fastener = _super.construct(fastenerClass, fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).trait = null;\n    return fastener;\n  };\n\n  TraitRef.define = function <O, T extends Trait>(className: string, descriptor: TraitRefDescriptor<O, T>): TraitRefFactory<TraitRef<any, T>> {\n    let superClass = descriptor.extends as TraitRefFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n\n    if (descriptor.key === true) {\n      Object.defineProperty(descriptor, \"key\", {\n        value: className,\n        configurable: true,\n      });\n    } else if (descriptor.key === false) {\n      Object.defineProperty(descriptor, \"key\", {\n        value: void 0,\n        configurable: true,\n      });\n    }\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const fastenerClass = superClass.extend(className, descriptor);\n\n    fastenerClass.construct = function (fastenerClass: {prototype: TraitRef<any, any>}, fastener: TraitRef<O, T> | null, owner: O): TraitRef<O, T> {\n      fastener = superClass!.construct(fastenerClass, fastener, owner);\n      if (affinity !== void 0) {\n        fastener.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        fastener.initInherits(inherits);\n      }\n      return fastener;\n    };\n\n    return fastenerClass;\n  };\n\n  return TraitRef;\n})(TraitRelation);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Proto, ObserverType} from \"@swim/util\";\nimport type {FastenerOwner, FastenerFlags} from \"@swim/component\";\nimport type {Model} from \"../model/Model\";\nimport type {AnyTrait, Trait} from \"./Trait\";\nimport {TraitRelationInit, TraitRelationClass, TraitRelation} from \"./TraitRelation\";\n\n/** @internal */\nexport type TraitSetType<F extends TraitSet<any, any>> =\n  F extends TraitSet<any, infer T> ? T : never;\n\n/** @public */\nexport interface TraitSetInit<T extends Trait = Trait> extends TraitRelationInit<T> {\n  extends?: {prototype: TraitSet<any, any>} | string | boolean | null;\n  key?(trait: T): string | undefined;\n  compare?(a: T, b: T): number;\n\n  sorted?: boolean;\n  willSort?(parent: Model | null): void;\n  didSort?(parent: Model | null): void;\n  sortChildren?(parent: Model): void;\n  compareChildren?(a: Trait, b: Trait): number;\n}\n\n/** @public */\nexport type TraitSetDescriptor<O = unknown, T extends Trait = Trait, I = {}> = ThisType<TraitSet<O, T> & I> & TraitSetInit<T> & Partial<I>;\n\n/** @public */\nexport interface TraitSetClass<F extends TraitSet<any, any> = TraitSet<any, any>> extends TraitRelationClass<F> {\n  /** @internal */\n  readonly SortedFlag: FastenerFlags;\n\n  /** @internal @override */\n  readonly FlagShift: number;\n  /** @internal @override */\n  readonly FlagMask: FastenerFlags;\n}\n\n/** @public */\nexport interface TraitSetFactory<F extends TraitSet<any, any> = TraitSet<any, any>> extends TraitSetClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): TraitSetFactory<F> & I;\n\n  define<O, T extends Trait = Trait>(className: string, descriptor: TraitSetDescriptor<O, T>): TraitSetFactory<TraitSet<any, T>>;\n  define<O, T extends Trait = Trait>(className: string, descriptor: {observes: boolean} & TraitSetDescriptor<O, T, ObserverType<T>>): TraitSetFactory<TraitSet<any, T>>;\n  define<O, T extends Trait = Trait, I = {}>(className: string, descriptor: {implements: unknown} & TraitSetDescriptor<O, T, I>): TraitSetFactory<TraitSet<any, T> & I>;\n  define<O, T extends Trait = Trait, I = {}>(className: string, descriptor: {implements: unknown; observes: boolean} & TraitSetDescriptor<O, T, I & ObserverType<T>>): TraitSetFactory<TraitSet<any, T> & I>;\n\n  <O, T extends Trait = Trait>(descriptor: TraitSetDescriptor<O, T>): PropertyDecorator;\n  <O, T extends Trait = Trait>(descriptor: {observes: boolean} & TraitSetDescriptor<O, T, ObserverType<T>>): PropertyDecorator;\n  <O, T extends Trait = Trait, I = {}>(descriptor: {implements: unknown} & TraitSetDescriptor<O, T, I>): PropertyDecorator;\n  <O, T extends Trait = Trait, I = {}>(descriptor: {implements: unknown; observes: boolean} & TraitSetDescriptor<O, T, I & ObserverType<T>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface TraitSet<O = unknown, T extends Trait = Trait> extends TraitRelation<O, T> {\n  (trait: AnyTrait<T>): O;\n\n  /** @override */\n  get fastenerType(): Proto<TraitSet<any, any>>;\n\n  /** @internal */\n  readonly traits: {readonly [traitId: number]: T | undefined};\n\n  readonly traitCount: number;\n\n  hasTrait(trait: Trait): boolean;\n\n  addTrait(trait?: AnyTrait<T>, target?: Trait | null, key?: string): T;\n\n  attachTrait(trait?: AnyTrait<T>, target?: Trait | null): T;\n\n  detachTrait(trait: T): T | null;\n\n  insertTrait(model?: Model | null, trait?: AnyTrait<T>, target?: Trait | null, key?: string): T;\n\n  removeTrait(trait: T): T | null;\n\n  deleteTrait(trait: T): T | null;\n\n  /** @internal @override */\n  bindModel(model: Model, target: Model | null): void;\n\n  /** @internal @override */\n  unbindModel(model: Model): void;\n\n  /** @override */\n  detectModel(model: Model): T | null;\n\n  /** @internal @override */\n  bindTrait(trait: Trait, target: Trait | null): void;\n\n  /** @internal @override */\n  unbindTrait(trait: Trait): void;\n\n  /** @override */\n  detectTrait(trait: Trait): T | null;\n\n  /** @internal @protected */\n  key(trait: T): string | undefined;\n\n  get sorted(): boolean;\n\n  /** @internal */\n  initSorted(sorted: boolean): void;\n\n  sort(sorted?: boolean): this;\n\n  /** @protected */\n  willSort(parent: Model | null): void;\n\n  /** @protected */\n  onSort(parent: Model | null): void;\n\n  /** @protected */\n  didSort(parent: Model | null): void;\n\n  /** @internal @protected */\n  sortChildren(parent: Model): void;\n\n  /** @internal */\n  compareChildren(a: Trait, b: Trait): number;\n\n  /** @internal @protected */\n  compare(a: T, b: T): number;\n}\n\n/** @public */\nexport const TraitSet = (function (_super: typeof TraitRelation) {\n  const TraitSet: TraitSetFactory = _super.extend(\"TraitSet\");\n\n  Object.defineProperty(TraitSet.prototype, \"fastenerType\", {\n    get: function (this: TraitSet): Proto<TraitSet<any, any>> {\n      return TraitSet;\n    },\n    configurable: true,\n  });\n\n  TraitSet.prototype.hasTrait = function (this: TraitSet, trait: Trait): boolean {\n    return this.traits[trait.uid] !== void 0;\n  };\n\n  TraitSet.prototype.addTrait = function <T extends Trait>(this: TraitSet<unknown, T>, newTrait?: AnyTrait<T>, target?: Trait | null, key?: string): T {\n    if (newTrait !== void 0 && newTrait !== null) {\n      newTrait = this.fromAny(newTrait);\n    } else {\n      newTrait = this.createTrait();\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    let model: Model | null;\n    if (this.binds && (model = this.parentModel, model !== null)) {\n      if (key === void 0) {\n        key = this.key(newTrait);\n      }\n      this.insertChild(model, newTrait, target, key);\n    }\n    const traits = this.traits as {[traitId: number]: T | undefined};\n    if (traits[newTrait.uid] === void 0) {\n      this.willAttachTrait(newTrait, target);\n      traits[newTrait.uid] = newTrait;\n      (this as Mutable<typeof this>).traitCount += 1;\n      this.onAttachTrait(newTrait, target);\n      this.initTrait(newTrait);\n      this.didAttachTrait(newTrait, target);\n    }\n    return newTrait;\n  };\n\n  TraitSet.prototype.attachTrait = function <T extends Trait>(this: TraitSet<unknown, T>, newTrait?: AnyTrait<T>, target?: Trait | null): T {\n    if (newTrait !== void 0 && newTrait !== null) {\n      newTrait = this.fromAny(newTrait);\n    } else {\n      newTrait = this.createTrait();\n    }\n    const traits = this.traits as {[traitId: number]: T | undefined};\n    if (traits[newTrait.uid] === void 0) {\n      if (target === void 0) {\n        target = null;\n      }\n      this.willAttachTrait(newTrait, target);\n      traits[newTrait.uid] = newTrait;\n      (this as Mutable<typeof this>).traitCount += 1;\n      this.onAttachTrait(newTrait, target);\n      this.initTrait(newTrait);\n      this.didAttachTrait(newTrait, target);\n    }\n    return newTrait;\n  };\n\n  TraitSet.prototype.detachTrait = function <T extends Trait>(this: TraitSet<unknown, T>, oldTrait: T): T | null {\n    const traits = this.traits as {[traitId: number]: T | undefined};\n    if (traits[oldTrait.uid] !== void 0) {\n      this.willDetachTrait(oldTrait);\n      (this as Mutable<typeof this>).traitCount -= 1;\n      delete traits[oldTrait.uid];\n      this.onDetachTrait(oldTrait);\n      this.deinitTrait(oldTrait);\n      this.didDetachTrait(oldTrait);\n      return oldTrait;\n    }\n    return null;\n  };\n\n  TraitSet.prototype.insertTrait = function <T extends Trait>(this: TraitSet<unknown, T>, model?: Model | null, newTrait?: AnyTrait<T>, target?: Trait | null, key?: string): T {\n    if (newTrait !== void 0 && newTrait !== null) {\n      newTrait = this.fromAny(newTrait);\n    } else {\n      newTrait = this.createTrait();\n    }\n    if (model === void 0 || model === null) {\n      model = this.parentModel;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (key === void 0) {\n      key = this.key(newTrait);\n    }\n    if (model !== null && (newTrait.model !== model || newTrait.key !== key)) {\n      this.insertChild(model, newTrait, target, key);\n    }\n    const traits = this.traits as {[traitId: number]: T | undefined};\n    if (traits[newTrait.uid] === void 0) {\n      this.willAttachTrait(newTrait, target);\n      traits[newTrait.uid] = newTrait;\n      (this as Mutable<typeof this>).traitCount += 1;\n      this.onAttachTrait(newTrait, target);\n      this.initTrait(newTrait);\n      this.didAttachTrait(newTrait, target);\n    }\n    return newTrait;\n  };\n\n  TraitSet.prototype.removeTrait = function <T extends Trait>(this: TraitSet<unknown, T>, trait: T): T | null {\n    if (this.hasTrait(trait)) {\n      trait.remove();\n      return trait;\n    }\n    return null;\n  };\n\n  TraitSet.prototype.deleteTrait = function <T extends Trait>(this: TraitSet<unknown, T>, trait: T): T | null {\n    const oldTrait = this.detachTrait(trait);\n    if (oldTrait !== null) {\n      oldTrait.remove();\n    }\n    return oldTrait;\n  };\n\n  TraitSet.prototype.bindModel = function <T extends Trait>(this: TraitSet<unknown, T>, model: Model, target: Model | null): void {\n    if (this.binds) {\n      const newTrait = this.detectModel(model);\n      const traits = this.traits as {[traitId: number]: T | undefined};\n      if (newTrait !== null && traits[newTrait.uid] === void 0) {\n        this.willAttachTrait(newTrait, null);\n        traits[newTrait.uid] = newTrait;\n        (this as Mutable<typeof this>).traitCount += 1;\n        this.onAttachTrait(newTrait, null);\n        this.initTrait(newTrait);\n        this.didAttachTrait(newTrait, null);\n      }\n    }\n  };\n\n  TraitSet.prototype.unbindModel = function <T extends Trait>(this: TraitSet<unknown, T>, model: Model): void {\n    if (this.binds) {\n      const oldTrait = this.detectModel(model);\n      const traits = this.traits as {[traitId: number]: T | undefined};\n      if (oldTrait !== null && traits[oldTrait.uid] !== void 0) {\n        this.willDetachTrait(oldTrait);\n        (this as Mutable<typeof this>).traitCount -= 1;\n        delete traits[oldTrait.uid];\n        this.onDetachTrait(oldTrait);\n        this.deinitTrait(oldTrait);\n        this.didDetachTrait(oldTrait);\n      }\n    }\n  };\n\n  TraitSet.prototype.detectModel = function <T extends Trait>(this: TraitSet<unknown, T>, model: Model): T | null {\n    return null;\n  };\n\n  TraitSet.prototype.bindTrait = function <T extends Trait>(this: TraitSet<unknown, T>, trait: Trait, target: Trait | null): void {\n    if (this.binds) {\n      const newTrait = this.detectTrait(trait);\n      const traits = this.traits as {[traitId: number]: T | undefined};\n      if (newTrait !== null && traits[newTrait.uid] === void 0) {\n        this.willAttachTrait(newTrait, target);\n        traits[newTrait.uid] = newTrait;\n        (this as Mutable<typeof this>).traitCount += 1;\n        this.onAttachTrait(newTrait, target);\n        this.initTrait(newTrait);\n        this.didAttachTrait(newTrait, target);\n      }\n    }\n  };\n\n  TraitSet.prototype.unbindTrait = function <T extends Trait>(this: TraitSet<unknown, T>, trait: Trait): void {\n    if (this.binds) {\n      const oldTrait = this.detectTrait(trait);\n      const traits = this.traits as {[traitId: number]: T | undefined};\n      if (oldTrait !== null && traits[oldTrait.uid] !== void 0) {\n        this.willDetachTrait(oldTrait);\n        (this as Mutable<typeof this>).traitCount -= 1;\n        delete traits[oldTrait.uid];\n        this.onDetachTrait(oldTrait);\n        this.deinitTrait(oldTrait);\n        this.didDetachTrait(oldTrait);\n      }\n    }\n  };\n\n  TraitSet.prototype.detectTrait = function <T extends Trait>(this: TraitSet<unknown, T>, trait: Trait): T | null {\n    if (typeof this.type === \"function\" && trait instanceof this.type) {\n      return trait as T;\n    }\n    return null;\n  };\n\n  TraitSet.prototype.key = function <T extends Trait>(this: TraitSet<unknown, T>, trait: T): string | undefined {\n    return void 0;\n  };\n\n  Object.defineProperty(TraitSet.prototype, \"sorted\", {\n    get(this: TraitSet): boolean {\n      return (this.flags & TraitSet.SortedFlag) !== 0;\n    },\n    configurable: true,\n  });\n\n  TraitSet.prototype.initInherits = function (this: TraitSet, sorted: boolean): void {\n    if (sorted) {\n      (this as Mutable<typeof this>).flags = this.flags | TraitSet.SortedFlag;\n    } else {\n      (this as Mutable<typeof this>).flags = this.flags & ~TraitSet.SortedFlag;\n    }\n  };\n\n  TraitSet.prototype.sort = function (this: TraitSet, sorted?: boolean): typeof this {\n    if (sorted === void 0) {\n      sorted = true;\n    }\n    const flags = this.flags;\n    if (sorted && (flags & TraitSet.SortedFlag) === 0) {\n      const parent = this.parentModel;\n      this.willSort(parent);\n      this.setFlags(flags | TraitSet.SortedFlag);\n      this.onSort(parent);\n      this.didSort(parent);\n    } else if (!sorted && (flags & TraitSet.SortedFlag) !== 0) {\n      this.setFlags(flags & ~TraitSet.SortedFlag);\n    }\n    return this;\n  };\n\n  TraitSet.prototype.willSort = function (this: TraitSet, parent: Model | null): void {\n    // hook\n  };\n\n  TraitSet.prototype.onSort = function (this: TraitSet, parent: Model | null): void {\n    if (parent !== null) {\n      this.sortChildren(parent);\n    }\n  };\n\n  TraitSet.prototype.didSort = function (this: TraitSet, parent: Model | null): void {\n    // hook\n  };\n\n  TraitSet.prototype.sortChildren = function <T extends Trait>(this: TraitSet<unknown, T>, parent: Model): void {\n    parent.sortTraits(this.compareChildren.bind(this));\n  };\n\n  TraitSet.prototype.compareChildren = function <T extends Trait>(this: TraitSet<unknown, T>, a: Trait, b: Trait): number {\n    const traits = this.traits;\n    const x = traits[a.uid];\n    const y = traits[b.uid];\n    if (x !== void 0 && y !== void 0) {\n      return this.compare(x, y);\n    } else {\n      return x !== void 0 ? 1 : y !== void 0 ? -1 : 0;\n    }\n  };\n\n  TraitSet.prototype.compare = function <T extends Trait>(this: TraitSet<unknown, T>, a: T, b: T): number {\n    return a.uid < b.uid ? -1 : a.uid > b.uid ? 1 : 0;\n  };\n\n  TraitSet.construct = function <F extends TraitSet<any, any>>(fastenerClass: {prototype: F}, fastener: F | null, owner: FastenerOwner<F>): F {\n    if (fastener === null) {\n      fastener = function (newTrait: AnyTrait<TraitSetType<F>>): FastenerOwner<F> {\n        fastener!.addTrait(newTrait);\n        return fastener!.owner;\n      } as F;\n      delete (fastener as Partial<Mutable<F>>).name; // don't clobber prototype name\n      Object.setPrototypeOf(fastener, fastenerClass.prototype);\n    }\n    fastener = _super.construct(fastenerClass, fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).traits = {};\n    (fastener as Mutable<typeof fastener>).traitCount = 0;\n    return fastener;\n  };\n\n  TraitSet.define = function <O, T extends Trait>(className: string, descriptor: TraitSetDescriptor<O, T>): TraitSetFactory<TraitSet<any, T>> {\n    let superClass = descriptor.extends as TraitSetFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    const sorted = descriptor.sorted;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n    delete descriptor.sorted;\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const fastenerClass = superClass.extend(className, descriptor);\n\n    fastenerClass.construct = function (fastenerClass: {prototype: TraitSet<any, any>}, fastener: TraitSet<O, T> | null, owner: O): TraitSet<O, T> {\n      fastener = superClass!.construct(fastenerClass, fastener, owner);\n      if (affinity !== void 0) {\n        fastener.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        fastener.initInherits(inherits);\n      }\n      if (sorted !== void 0) {\n        fastener.initSorted(sorted);\n      }\n      return fastener;\n    };\n\n    return fastenerClass;\n  };\n\n  (TraitSet as Mutable<typeof TraitSet>).SortedFlag = 1 << (_super.FlagShift + 0);\n\n  (TraitSet as Mutable<typeof TraitSet>).FlagShift = _super.FlagShift + 1;\n  (TraitSet as Mutable<typeof TraitSet>).FlagMask = (1 << TraitSet.FlagShift) - 1;\n\n  return TraitSet;\n})(TraitRelation);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Class} from \"@swim/util\";\nimport {Provider} from \"@swim/component\";\nimport {SelectionOptions, SelectionService} from \"../selection/SelectionService\";\nimport {SelectionProvider} from \"../selection/SelectionProvider\";\nimport {Trait} from \"../trait/Trait\";\nimport type {SelectableTraitObserver} from \"./SelectableTraitObserver\";\n\n/** @public */\nexport class SelectableTrait extends Trait {\n  constructor() {\n    super();\n    this.selected = false;\n  }\n\n  override readonly observerType?: Class<SelectableTraitObserver>;\n\n  readonly selected: boolean;\n\n  select(options?: SelectionOptions | null): void {\n    if (!this.selected) {\n      (this as Mutable<this>).selected = true;\n      if (this.mounted) {\n        const selectionService = this.selectionProvider.service;\n        if (selectionService !== void 0 && selectionService !== null) {\n          selectionService.select(this.model!, options);\n        }\n      }\n    }\n  }\n\n  /** @protected */\n  willSelect(options: SelectionOptions | null): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitWillSelect !== void 0) {\n        observer.traitWillSelect(options, this);\n      }\n    }\n  }\n\n  /** @protected */\n  onSelect(options: SelectionOptions | null): void {\n    (this as Mutable<this>).selected = true;\n  }\n\n  /** @protected */\n  didSelect(options: SelectionOptions | null): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitDidSelect !== void 0) {\n        observer.traitDidSelect(options, this);\n      }\n    }\n  }\n\n  unselect(): void {\n    if (this.selected) {\n      (this as Mutable<this>).selected = false;\n      if (this.mounted) {\n        const selectionService = this.selectionProvider.service;\n        if (selectionService !== void 0 && selectionService !== null) {\n          selectionService.unselect(this.model!);\n        }\n      }\n    }\n  }\n\n  /** @protected */\n  willUnselect(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitWillUnselect !== void 0) {\n        observer.traitWillUnselect(this);\n      }\n    }\n  }\n\n  /** @protected */\n  onUnselect(): void {\n    (this as Mutable<this>).selected = false;\n  }\n\n  /** @protected */\n  didUnselect(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.traitDidUnselect !== void 0) {\n        observer.traitDidUnselect(this);\n      }\n    }\n  }\n\n  unselectAll(): void {\n    const selectionService = this.selectionProvider.service;\n    if (selectionService !== void 0 && selectionService !== null) {\n      selectionService.unselectAll();\n    }\n  }\n\n  toggle(options?: SelectionOptions): void {\n    if (!this.selected) {\n      this.select(options);\n    } else {\n      this.unselect();\n    }\n  }\n\n  @Provider({\n    extends: SelectionProvider,\n    type: SelectionService,\n    observes: false,\n    service: SelectionService.global(),\n  })\n  readonly selectionProvider!: SelectionProvider<this>;\n\n  protected override didMount(): void {\n    if (this.selected) {\n      const selectionService = this.selectionProvider.service;\n      if (selectionService !== void 0 && selectionService !== null) {\n        selectionService.select(this.model!);\n      }\n    }\n    super.didMount();\n  }\n\n  protected override willUnmount(): void {\n    super.willUnmount();\n    const selectionService = this.selectionProvider.service;\n    if (selectionService !== void 0 && selectionService !== null) {\n      selectionService.unselect(this.model!);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {ConsumerType} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {Trait} from \"../trait/Trait\";\nimport {TraitRef} from \"../trait/TraitRef\";\n\n/** @beta */\nexport abstract class DownlinkTrait extends Trait {\n  @TraitRef<DownlinkTrait, Trait>({\n    type: Trait,\n    observes: true,\n    didAttachTrait(driverTrait: Trait): void {\n      if (driverTrait.consuming) {\n        this.owner.consume(driverTrait as ConsumerType<DownlinkTrait>);\n      }\n    },\n    willDetachTrait(driverTrait: Trait): void {\n      if (driverTrait.consuming) {\n        this.owner.unconsume(driverTrait as ConsumerType<DownlinkTrait>);\n      }\n    },\n    traitDidStartConsuming(driverTrait: Trait): void {\n      this.owner.consume(driverTrait as ConsumerType<DownlinkTrait>);\n    },\n    traitWillStopConsuming(driverTrait: Trait): void {\n      this.owner.unconsume(driverTrait as ConsumerType<DownlinkTrait>);\n    },\n  })\n  readonly driver!: TraitRef<this, Trait>;\n  static readonly driver: MemberFastenerClass<DownlinkTrait, \"driver\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {AnyValue, Value} from \"@swim/structure\";\nimport {ValueDownlinkFastener} from \"@swim/client\";\nimport {DownlinkTrait} from \"./DownlinkTrait\";\n\n/** @beta */\nexport abstract class ValueDownlinkTrait extends DownlinkTrait {\n  protected downlinkDidSet(newValue: Value, oldValue: Value): void {\n    // hook\n  }\n\n  @ValueDownlinkFastener<ValueDownlinkTrait, Value, AnyValue>({\n    lazy: false,\n    consumed: true,\n    didSet(newValue: Value, oldValue: Value): void {\n      if (this.owner.consuming) {\n        this.owner.downlinkDidSet(newValue, oldValue);\n      }\n    },\n  })\n  readonly downlink!: ValueDownlinkFastener<this, Value, AnyValue>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {AnyValue, Value} from \"@swim/structure\";\nimport {MapDownlinkFastener} from \"@swim/client\";\nimport {DownlinkTrait} from \"./DownlinkTrait\";\n\n/** @beta */\nexport abstract class MapDownlinkTrait extends DownlinkTrait {\n  protected downlinkDidUpdate(key: Value, newValue: Value, oldValue: Value): void {\n    // hook\n  }\n\n  protected downlinkDidRemove(key: Value, oldValue: Value): void {\n    // hook\n  }\n\n  @MapDownlinkFastener<MapDownlinkTrait, Value, Value, AnyValue, AnyValue>({\n    lazy: false,\n    consumed: true,\n    didUpdate(key: Value, newValue: Value, oldValue: Value): void {\n      if (this.owner.consuming) {\n        this.owner.downlinkDidUpdate(key, newValue, oldValue);\n      }\n    },\n    didRemove(key: Value, oldValue: Value): void {\n      if (this.owner.consuming) {\n        this.owner.downlinkDidRemove(key, oldValue);\n      }\n    },\n  })\n  readonly downlink!: MapDownlinkFastener<this, Value, Value, AnyValue, AnyValue>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Value} from \"@swim/structure\";\nimport {AnyLength, Length} from \"@swim/math\";\n\n/** @public */\nexport type AnyFontSize = AnyLength | FontSize;\n\n/** @public */\nexport type FontSize = Length\n                     | \"large\"\n                     | \"larger\"\n                     | \"medium\"\n                     | \"small\"\n                     | \"smaller\"\n                     | \"x-large\"\n                     | \"x-small\"\n                     | \"xx-large\"\n                     | \"xx-small\";\n\n/** @public */\nexport const FontSize = (function () {\n  const FontSize = {} as {\n    fromAny(size: AnyFontSize): FontSize;\n\n    fromValue(value: Value): FontSize | null;\n  };\n\n  FontSize.fromAny = function (size: AnyFontSize): FontSize {\n    if (typeof size === \"string\" && (size === \"large\" || size === \"larger\" || size === \"medium\"\n        || size === \"small\" || size === \"smaller\"  || size === \"x-large\" || size === \"x-small\"\n        || size === \"xx-large\" || size === \"xx-small\")) {\n      return size;\n    } else {\n      return Length.fromAny(size);\n    }\n  };\n\n  FontSize.fromValue = function (value: Value): FontSize | null {\n    const string = value.stringValue(null);\n    if (string !== null) {\n      return FontSize.fromAny(string);\n    } else {\n      const size = Length.form().cast(value);\n      return size !== void 0 ? size : null;\n    }\n  };\n\n  return FontSize;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Value} from \"@swim/structure\";\nimport {AnyLength, Length} from \"@swim/math\";\n\n/** @public */\nexport type AnyLineHeight = AnyLength | LineHeight;\n\n/** @public */\nexport type LineHeight = Length | \"normal\";\n\n/** @public */\nexport const LineHeight = (function () {\n  const LineHeight = {} as {\n    fromAny(height: AnyLineHeight): LineHeight;\n\n    fromValue(value: Value): LineHeight | null;\n  };\n\n  LineHeight.fromAny = function (height: AnyLineHeight): LineHeight {\n    if (typeof height === \"string\" && height === \"normal\") {\n      return height;\n    } else {\n      return Length.fromAny(height);\n    }\n  };\n\n  LineHeight.fromValue = function (value: Value): LineHeight | null {\n    const string = value.stringValue(null);\n    if (string !== null) {\n      return LineHeight.fromAny(string);\n    } else {\n      const height = Length.form().cast(value);\n      return height !== void 0 ? height : null;\n    }\n  };\n\n  return LineHeight;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Strings} from \"@swim/util\";\nimport {Unicode, Base16} from \"@swim/codec\";\nimport {Item, Value} from \"@swim/structure\";\n\n/** @public */\nexport type GenericFamily = \"serif\"\n                          | \"sans-serif\"\n                          | \"cursive\"\n                          | \"fantasy\"\n                          | \"monospace\"\n                          | \"system-ui\"\n                          | \"emoji\"\n                          | \"math\"\n                          | \"fangsong\";\n\n/** @public */\nexport type FontFamily = string | GenericFamily;\n\n/** @public */\nexport const FontFamily = (function () {\n  const FontFamily = {} as {\n    fromValue(value: Value): FontFamily | FontFamily[] | null;\n\n    format(family: FontFamily): string;\n  };\n\n  FontFamily.fromValue = function (value: Value): FontFamily | FontFamily[] | null {\n    let family: FontFamily | FontFamily[] | null = null;\n    value.forEach(function (item: Item): void {\n      if (item instanceof Value) {\n        const string = item.stringValue(void 0);\n        if (string !== void 0) {\n          if (family === null) {\n            family = string;\n          } else if (typeof family === \"string\") {\n            family = [family, string];\n          } else {\n            family.push(string);\n          }\n        }\n      }\n    });\n    return family;\n  };\n\n  FontFamily.format = function (family: FontFamily): string {\n    const n = family.length;\n    let isIdent: boolean;\n    if (n > 0) {\n      isIdent = Unicode.isAlpha(family.charCodeAt(0));\n      for (let i = Strings.offsetByCodePoints(family, 0, 1); isIdent && i < n; i = Strings.offsetByCodePoints(family, i, 1)) {\n        const c = family.charCodeAt(i);\n        isIdent = Unicode.isAlpha(c) || c === 45/*'-'*/;\n      }\n    } else {\n      isIdent = false;\n    }\n    if (isIdent) {\n      return family;\n    } else {\n      let output = Unicode.stringOutput();\n      output = output.write(34/*'\"'*/);\n      for (let i = 0; i < n; i = Strings.offsetByCodePoints(family, i, 1)) {\n        const c = family.charCodeAt(i);\n        if (c === 10/*'\\n'*/ || c === 34/*'\"'*/ || c === 39/*'\\''*/) {\n          output = output.write(92/*'\\\\'*/).write(c);\n        } else if (c >= 0x20) {\n          output = output.write(c);\n        } else {\n          const base16 = Base16.uppercase;\n          output = output.write(92/*'\\\\'*/).write(base16.encodeDigit(c >>> 20 & 0xf))\n                                           .write(base16.encodeDigit(c >>> 16 & 0xf))\n                                           .write(base16.encodeDigit(c >>> 12 & 0xf))\n                                           .write(base16.encodeDigit(c >>>  8 & 0xf))\n                                           .write(base16.encodeDigit(c >>>  4 & 0xf))\n                                           .write(base16.encodeDigit(c        & 0xf));\n        }\n      }\n      output = output.write(34/*'\"'*/);\n      return output.toString();\n    }\n  };\n\n  return FontFamily;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Unicode, Base16} from \"@swim/codec\";\nimport type {FontFamily} from \"./FontFamily\";\n\n/** @internal */\nexport class FontFamilyParser extends Parser<FontFamily> {\n  private readonly output: Output<string> | undefined;\n  private readonly quote: number | undefined;\n  private readonly code: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(output?: Output<string>, quote?: number, code?: number, step?: number) {\n    super();\n    this.output = output;\n    this.quote = quote;\n    this.code = code;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<FontFamily> {\n    return FontFamilyParser.parse(input, this.output, this.quote, this.code, this.step);\n  }\n\n  static parse<I, V>(input: Input, output?: Output<string>, quote: number = 0,\n                     code: number = 0, step: number = 1): Parser<FontFamily> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (Unicode.isAlpha(c) || c === 45/*'-'*/) {\n          output = output || Unicode.stringOutput();\n          step = 2;\n        } else if (c === 34/*'\"'*/ || c === 39/*'\\''*/ && (quote === c || quote === 0)) {\n          input = input.step();\n          output = output || Unicode.stringOutput();\n          quote = c;\n          step = 3;\n        } else {\n          return Parser.error(Diagnostic.expected(\"font family\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"font family\", input));\n      }\n    }\n    if (step === 2) {\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c) || c === 45/*'-'*/)) {\n        input = input.step();\n        output!.write(c);\n      }\n      if (!input.isEmpty()) {\n        return Parser.done(output!.bind());\n      }\n    }\n    string: do {\n      if (step === 3) {\n        while (input.isCont()) {\n          c = input.head();\n          if (c >= 0x20 && c !== quote && c !== 92/*'\\\\'*/) {\n            input = input.step();\n            output!.write(c);\n          } else {\n            break;\n          }\n        }\n        if (input.isCont()) {\n          if (c === quote) {\n            input = input.step();\n            return Parser.done(output!.bind());\n          } else if (c === 92/*'\\\\'*/) {\n            input = input.step();\n            step = 4;\n          } else {\n            return Parser.error(Diagnostic.expected(quote, input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(quote, input));\n        }\n      }\n      if (step === 4) {\n        if (input.isCont()) {\n          c = input.head();\n          if (Base16.isDigit(c)) {\n            step = 5;\n          } else if (c === 10/*'\\n'*/) {\n            input.step();\n            step = 3;\n            continue;\n          } else {\n            input.step();\n            output!.write(c);\n            step = 3;\n            continue;\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.expected(\"escape character\", input));\n        }\n      }\n      if (step >= 5) {\n        do {\n          if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n            input = input.step();\n            code = 16 * code + Base16.decodeDigit(c);\n            if (step <= 11) {\n              step += 1;\n              continue;\n            } else {\n              if (code === 0) {\n                return Parser.error(Diagnostic.message(\"zero escape\", input));\n              }\n              output!.write(code);\n              code = 0;\n              step = 3;\n              continue string;\n            }\n          } else if (!input.isEmpty()) {\n            return Parser.error(Diagnostic.unexpected(input));\n          }\n          break;\n        } while (true);\n      }\n      break;\n    } while (true);\n    return new FontFamilyParser(output, quote, code, step);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Equals, Equivalent, Mutable, Values, Interpolate, Interpolator} from \"@swim/util\";\nimport {Output, Parser, Debug, Diagnostic, Unicode} from \"@swim/codec\";\nimport type {Value, Form} from \"@swim/structure\";\nimport type {FontStyle} from \"./FontStyle\";\nimport type {FontVariant} from \"./FontVariant\";\nimport type {FontWeight} from \"./FontWeight\";\nimport type {FontStretch} from \"./FontStretch\";\nimport {AnyFontSize, FontSize} from \"./FontSize\";\nimport {AnyLineHeight, LineHeight} from \"./LineHeight\";\nimport {FontFamily} from \"./FontFamily\";\nimport {FontInterpolator} from \"../\"; // forward import\nimport {FontForm} from \"../\"; // forward import\nimport {FontParser} from \"../\"; // forward import\n\n/** @public */\nexport type AnyFont = Font | FontInit | string;\n\n/** @public */\nexport interface FontInit {\n  style?: FontStyle;\n  variant?: FontVariant;\n  weight?: FontWeight;\n  stretch?: FontStretch;\n  size?: AnyFontSize | null;\n  height?: AnyLineHeight | null;\n  family: FontFamily | FontFamily[];\n}\n\n/** @public */\nexport class Font implements Interpolate<Font>, Equals, Equivalent, Debug {\n  constructor(style: FontStyle | undefined, variant: FontVariant | undefined,\n              weight: FontWeight | undefined, stretch: FontStretch | undefined,\n              size: FontSize | null, height: LineHeight | null,\n              family: FontFamily | ReadonlyArray<FontFamily>) {\n    this.style = style;\n    this.variant = variant;\n    this.weight = weight;\n    this.stretch = stretch;\n    this.size = size;\n    this.height = height;\n    this.family = family;\n    this.stringValue = void 0;\n  }\n\n  readonly style: FontStyle | undefined;\n\n  withStyle(style: FontStyle | undefined): Font {\n    if (style === this.style) {\n      return this;\n    } else {\n      return new Font(style, this.variant, this.weight, this.stretch,\n                      this.size, this.height, this.family);\n    }\n  }\n\n  readonly variant: FontVariant | undefined;\n\n  withVariant(variant: FontVariant | undefined): Font {\n    if (variant === this.variant) {\n      return this;\n    } else {\n      return new Font(this.style, variant, this.weight, this.stretch,\n                      this.size, this.height, this.family);\n    }\n  }\n\n  readonly weight: FontWeight | undefined;\n\n  withWeight(weight: FontWeight | undefined): Font {\n    if (weight === this.weight) {\n      return this;\n    } else {\n      return new Font(this.style, this.variant, weight, this.stretch,\n                      this.size, this.height, this.family);\n    }\n  }\n\n  readonly stretch: FontStretch | undefined;\n\n  withStretch(stretch: FontStretch | undefined): Font {\n    if (stretch === this.stretch) {\n      return this;\n    } else {\n      return new Font(this.style, this.variant, this.weight, stretch,\n                      this.size, this.height, this.family);\n    }\n  }\n\n  readonly size: FontSize | null;\n\n  withSize(size: AnyFontSize | null): Font{\n    if (size !== null) {\n      size = FontSize.fromAny(size);\n    }\n    if (Values.equal(size, this.size)) {\n      return this;\n    } else {\n      return new Font(this.style, this.variant, this.weight, this.stretch,\n                      size as FontSize | null, this.height, this.family);\n    }\n  }\n\n  readonly height: LineHeight | null;\n\n  withHeight(height: AnyLineHeight | null): Font {\n    if (height !== null) {\n      height = LineHeight.fromAny(height);\n    }\n    if (Values.equal(height, this.height)) {\n      return this;\n    } else {\n      return new Font(this.style, this.variant, this.weight, this.stretch,\n                      this.size, height as LineHeight | null, this.family);\n    }\n  }\n\n  readonly family: FontFamily | ReadonlyArray<FontFamily>;\n\n  withFamily(family: FontFamily | ReadonlyArray<FontFamily>): Font {\n    if (Array.isArray(family) && family.length === 1) {\n      family = family[0];\n    }\n    if (Values.equal(family, this.family)) {\n      return this;\n    } else {\n      return new Font(this.style, this.variant, this.weight, this.stretch,\n                      this.size, this.height, family);\n    }\n  }\n\n  toAny(): FontInit {\n    return {\n      style: this.style,\n      variant: this.variant,\n      weight: this.weight,\n      stretch: this.stretch,\n      size: this.size,\n      height: this.height,\n      family: (Array.isArray(this.family) ? this.family.slice(0) : this.family) as FontFamily | FontFamily[],\n    };\n  }\n\n  interpolateTo(that: Font): Interpolator<Font>;\n  interpolateTo(that: unknown): Interpolator<Font> | null;\n  interpolateTo(that: unknown): Interpolator<Font> | null {\n    if (that instanceof Font) {\n      return FontInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Font) {\n      return this.style === that.style && this.variant === that.variant\n          && this.weight === that.weight && this.stretch === that.stretch\n          && Values.equivalent(this.size, that.size, epsilon)\n          && Values.equivalent(this.height, that.height, epsilon)\n          && Values.equivalent(this.family, that.family, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Font) {\n      return this.style === that.style && this.variant === that.variant\n          && this.weight === that.weight && this.stretch === that.stretch\n          && Values.equal(this.size, that.size)\n          && Values.equal(this.height, that.height)\n          && Values.equal(this.family, that.family);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"Font\").write(46/*'.'*/).write(\"family\").write(40/*'('*/);\n    if (typeof this.family === \"string\") {\n      output = output.debug(this.family);\n    } else if (Array.isArray(this.family) && this.family.length !== 0) {\n      output = output.debug(this.family[0]);\n      for (let i = 1; i < this.family.length; i += 1) {\n        output = output.write(\", \").debug(this.family[i]);\n      }\n    }\n    output = output.write(41/*')'*/);\n    if (this.style !== void 0) {\n      output = output.write(46/*'.'*/).write(\"style\").write(40/*'('*/).debug(this.style).write(41/*')'*/);\n    }\n    if (this.variant !== void 0) {\n      output = output.write(46/*'.'*/).write(\"variant\").write(40/*'('*/).debug(this.variant).write(41/*')'*/);\n    }\n    if (this.weight !== void 0) {\n      output = output.write(46/*'.'*/).write(\"weight\").write(40/*'('*/).debug(this.weight).write(41/*')'*/);\n    }\n    if (this.stretch !== void 0) {\n      output = output.write(46/*'.'*/).write(\"stretch\").write(40/*'('*/).debug(this.stretch).write(41/*')'*/);\n    }\n    if (this.size !== void 0) {\n      output = output.write(46/*'.'*/).write(\"size\").write(40/*'('*/).debug(this.size).write(41/*')'*/);\n    }\n    if (this.height !== void 0) {\n      output = output.write(46/*'.'*/).write(\"height\").write(40/*'('*/).debug(this.height).write(41/*')'*/);\n    }\n    return output;\n  }\n\n  /* @internal */\n  readonly stringValue: string | undefined;\n\n  toString(): string {\n    let s = this.stringValue;\n    if (s === void 0) {\n      s = \"\";\n      if (this.style !== void 0 || this.variant === \"normal\" || this.weight === \"normal\" || this.stretch === \"normal\") {\n        s += this.style ?? \"normal\";\n      }\n      if (this.variant !== void 0 || this.weight === \"normal\" || this.stretch === \"normal\") {\n        if (s.length !== 0) {\n          s += \" \";\n        }\n        s += this.variant ?? \"normal\";\n      }\n      if (this.weight !== void 0 || this.stretch === \"normal\") {\n        if (s.length !== 0) {\n          s += \" \";\n        }\n        s += this.weight ?? \"normal\";\n      }\n      if (this.stretch !== void 0) {\n        if (s.length !== 0) {\n          s += \" \";\n        }\n        s += this.stretch;\n      }\n      if (this.size !== null) {\n        if (s.length !== 0) {\n          s += \" \";\n        }\n        s += this.size.toString();\n        if (this.height !== null) {\n          s += \"/\";\n          s += this.height.toString();\n        }\n      }\n      if (typeof this.family === \"string\") {\n        if (s.length !== 0) {\n          s += \" \";\n        }\n        s += FontFamily.format(this.family);\n      } else if (Array.isArray(this.family) && this.family.length !== 0) {\n        if (s.length !== 0) {\n          s += \" \";\n        }\n        s += FontFamily.format(this.family[0]);\n        for (let i = 1; i < this.family.length; i += 1) {\n          s += \", \";\n          s += FontFamily.format(this.family[i]);\n        }\n      }\n      (this as Mutable<this>).stringValue = s;\n    }\n    return s;\n  }\n\n  static style(style: FontStyle | undefined, family: FontFamily | ReadonlyArray<FontFamily>): Font {\n    if (Array.isArray(family) && family.length === 1) {\n      family = family[0];\n    }\n    return new Font(style, void 0, void 0, void 0, null, null, family);\n  }\n\n  static variant(variant: FontVariant | undefined, family: FontFamily | ReadonlyArray<FontFamily>): Font {\n    if (Array.isArray(family) && family.length === 1) {\n      family = family[0];\n    }\n    return new Font(void 0, variant, void 0, void 0, null, null, family);\n  }\n\n  static weight(weight: FontWeight | undefined, family: FontFamily | ReadonlyArray<FontFamily>): Font {\n    if (Array.isArray(family) && family.length === 1) {\n      family = family[0];\n    }\n    return new Font(void 0, void 0, weight, void 0, null, null, family);\n  }\n\n  static stretch(stretch: FontStretch | undefined, family: FontFamily | ReadonlyArray<FontFamily>): Font {\n    if (Array.isArray(family) && family.length === 1) {\n      family = family[0];\n    }\n    return new Font(void 0, void 0, void 0, stretch, null, null, family);\n  }\n\n  static size(size: AnyFontSize | null, family: FontFamily | ReadonlyArray<FontFamily>): Font {\n    size = size !== null ? FontSize.fromAny(size) : null;\n    if (Array.isArray(family) && family.length === 1) {\n      family = family[0];\n    }\n    return new Font(void 0, void 0, void 0, void 0, size as FontSize | null, null, family);\n  }\n\n  static family(family: FontFamily | ReadonlyArray<FontFamily>): Font {\n    if (Array.isArray(family) && family.length === 1) {\n      family = family[0];\n    }\n    return new Font(void 0, void 0, void 0, void 0, null, null, family);\n  }\n\n  static create(style: FontStyle | undefined, variant: FontVariant | undefined,\n                weight: FontWeight | undefined, stretch: FontStretch | undefined,\n                size: AnyFontSize | null | undefined, height: AnyLineHeight | null | undefined,\n                family: FontFamily | ReadonlyArray<FontFamily>): Font {\n    size = size !== void 0 && size !== null ? FontSize.fromAny(size) : null;\n    height = height !== void 0 && height !== null ? LineHeight.fromAny(height) : null;\n    if (Array.isArray(family) && family.length === 1) {\n      family = family[0];\n    }\n    return new Font(style, variant, weight, stretch, size as FontSize | null,\n                    height as LineHeight | null, family);\n  }\n\n  static fromInit(init: FontInit): Font {\n    return Font.create(init.style, init.variant, init.weight, init.stretch,\n                       init.size, init.height, init.family);\n  }\n\n  static fromValue(value: Value): Font | null {\n    const header = value.header(\"font\");\n    if (header.isDefined()) {\n      const style = header.get(\"style\").stringValue(void 0) as FontStyle | undefined;\n      const variant = header.get(\"variant\").stringValue(void 0) as FontVariant | undefined;\n      const weight = header.get(\"weight\").stringValue(void 0) as FontWeight | undefined;\n      const stretch = header.get(\"stretch\").stringValue(void 0) as FontStretch | undefined;\n      const size = FontSize.fromValue(header.get(\"size\"));\n      const height = LineHeight.fromValue(header.get(\"height\"));\n      const family = FontFamily.fromValue(header.get(\"family\"));\n      if (family !== null) {\n        return Font.create(style, variant, weight, stretch, size, height, family);\n      }\n    }\n    return null;\n  }\n\n  static fromAny(value: AnyFont): Font {\n    if (value === void 0 || value === null || value instanceof Font) {\n      return value;\n    } else if (typeof value === \"object\" && value !== null) {\n      return Font.fromInit(value);\n    } else if (typeof value === \"string\") {\n      return Font.parse(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static parse(string: string): Font {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = FontParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  /** @internal */\n  static isInit(value: unknown): value is FontInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as FontInit;\n      return init.family !== void 0;\n    }\n    return false;\n  }\n\n  /** @internal */\n  static isAny(value: unknown): value is AnyFont {\n    return value instanceof Font || Font.isInit(value);\n  }\n\n  @Lazy\n  static form(unit?: Font): Form<Font, AnyFont> {\n    return new FontForm(void 0);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Interpolator} from \"@swim/util\";\nimport type {FontStyle} from \"./FontStyle\";\nimport type {FontVariant} from \"./FontVariant\";\nimport type {FontWeight} from \"./FontWeight\";\nimport type {FontStretch} from \"./FontStretch\";\nimport type {FontSize} from \"./FontSize\";\nimport type {LineHeight} from \"./LineHeight\";\nimport type {FontFamily} from \"./FontFamily\";\nimport {Font} from \"./Font\";\n\n/** @internal */\nexport interface FontInterpolator extends Interpolator<Font> {\n  /** @internal */\n  readonly styleInterpolator: Interpolator<FontStyle | undefined>;\n  /** @internal */\n  readonly variantInterpolator: Interpolator<FontVariant | undefined>;\n  /** @internal */\n  readonly weightInterpolator: Interpolator<FontWeight | undefined>;\n  /** @internal */\n  readonly stretchInterpolator: Interpolator<FontStretch | undefined>;\n  /** @internal */\n  readonly sizeInterpolator: Interpolator<FontSize | null>;\n  /** @internal */\n  readonly heightInterpolator: Interpolator<LineHeight | null>;\n  /** @internal */\n  readonly familyInterpolator: Interpolator<FontFamily | ReadonlyArray<FontFamily>>;\n\n  get 0(): Font;\n\n  get 1(): Font;\n\n  equals(that: unknown): boolean;\n}\n\n/** @internal */\nexport const FontInterpolator = (function (_super: typeof Interpolator) {\n  const FontInterpolator = function (f0: Font, f1: Font): FontInterpolator {\n    const interpolator = function (u: number): Font {\n      const style = interpolator.styleInterpolator(u);\n      const variant = interpolator.variantInterpolator(u);\n      const weight = interpolator.weightInterpolator(u);\n      const stretch = interpolator.stretchInterpolator(u);\n      const size = interpolator.sizeInterpolator(u);\n      const height = interpolator.heightInterpolator(u);\n      const family = interpolator.familyInterpolator(u);\n      return new Font(style, variant, weight, stretch, size, height, family);\n    } as FontInterpolator;\n    Object.setPrototypeOf(interpolator, FontInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>).styleInterpolator = Interpolator(f0.style, f1.style);\n    (interpolator as Mutable<typeof interpolator>).variantInterpolator = Interpolator(f0.variant, f1.variant);\n    (interpolator as Mutable<typeof interpolator>).weightInterpolator = Interpolator(f0.weight, f1.weight);\n    (interpolator as Mutable<typeof interpolator>).stretchInterpolator = Interpolator(f0.stretch, f1.stretch);\n    (interpolator as Mutable<typeof interpolator>).sizeInterpolator = Interpolator(f0.size, f1.size);\n    (interpolator as Mutable<typeof interpolator>).heightInterpolator = Interpolator(f0.height, f1.height);\n    (interpolator as Mutable<typeof interpolator>).familyInterpolator = Interpolator(f0.family, f1.family);\n    return interpolator;\n  } as {\n    (f0: Font, f1: Font): FontInterpolator;\n\n    /** @internal */\n    prototype: FontInterpolator;\n  };\n\n  FontInterpolator.prototype = Object.create(_super.prototype);\n  FontInterpolator.prototype.constructor = FontInterpolator;\n\n  Object.defineProperty(FontInterpolator.prototype, 0, {\n    get(this: FontInterpolator): Font {\n      const style = this.styleInterpolator[0];\n      const variant = this.variantInterpolator[0];\n      const weight = this.weightInterpolator[0];\n      const stretch = this.stretchInterpolator[0];\n      const size = this.sizeInterpolator[0];\n      const height = this.heightInterpolator[0];\n      const family = this.familyInterpolator[0];\n      return new Font(style, variant, weight, stretch, size, height, family);\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(FontInterpolator.prototype, 1, {\n    get(this: FontInterpolator): Font {\n      const style = this.styleInterpolator[1];\n      const variant = this.variantInterpolator[1];\n      const weight = this.weightInterpolator[1];\n      const stretch = this.stretchInterpolator[1];\n      const size = this.sizeInterpolator[1];\n      const height = this.heightInterpolator[1];\n      const family = this.familyInterpolator[1];\n      return new Font(style, variant, weight, stretch, size, height, family);\n    },\n    configurable: true,\n  });\n\n  FontInterpolator.prototype.equals = function (that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof FontInterpolator) {\n      return this.styleInterpolator.equals(that.styleInterpolator)\n          && this.variantInterpolator.equals(that.variantInterpolator)\n          && this.weightInterpolator.equals(that.weightInterpolator)\n          && this.stretchInterpolator.equals(that.stretchInterpolator)\n          && this.sizeInterpolator.equals(that.sizeInterpolator)\n          && this.heightInterpolator.equals(that.heightInterpolator)\n          && this.familyInterpolator.equals(that.familyInterpolator);\n    }\n    return false;\n  };\n\n  return FontInterpolator;\n})(Interpolator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Attr, Record, Form} from \"@swim/structure\";\nimport {Length} from \"@swim/math\";\nimport {AnyFont, Font} from \"./Font\";\n\n/** @internal */\nexport class FontForm extends Form<Font, AnyFont> {\n  constructor(unit: Font | undefined) {\n    super();\n    Object.defineProperty(this, \"unit\", {\n      value: unit,\n      enumerable: true,\n    });\n  }\n\n  override readonly unit!: Font | undefined;\n\n  override withUnit(unit: Font | undefined): Form<Font, AnyFont> {\n    if (unit !== this.unit) {\n      return new FontForm(unit);\n    } else {\n      return this;\n    }\n  }\n\n  override mold(font: AnyFont): Item {\n    font = Font.fromAny(font);\n    const header = Record.create(7);\n    if (font.style !== void 0) {\n      header.slot(\"style\", font.style);\n    }\n    if (font.variant !== void 0) {\n      header.slot(\"variant\", font.variant);\n    }\n    if (font.weight !== void 0) {\n      header.slot(\"weight\", font.weight);\n    }\n    if (font.stretch !== void 0) {\n      header.slot(\"stretch\", font.stretch);\n    }\n    if (font.size instanceof Length) {\n      header.slot(\"size\", Length.form().mold(font.size));\n    } else if (font.size !== void 0) {\n      header.slot(\"size\", font.size);\n    }\n    if (font.height instanceof Length) {\n      header.slot(\"height\", Length.form().mold(font.height));\n    } else if (font.height !== void 0) {\n      header.slot(\"height\", font.height);\n    }\n    if (Array.isArray(font.family)) {\n      const family = Record.create(font.family.length);\n      for (let i = 0; i < font.family.length; i += 1) {\n        family.push(font.family[i]);\n      }\n      header.slot(\"family\", family);\n    } else {\n      header.slot(\"family\", font.family);\n    }\n    return Record.of(Attr.of(\"font\", header));\n  }\n\n  override cast(item: Item): Font | undefined {\n    const value = item.toValue();\n    let font: Font | null = null;\n    try {\n      font = Font.fromValue(value);\n      if (font === null) {\n        const string = value.stringValue();\n        if (string !== void 0) {\n          font = Font.parse(string);\n        }\n      }\n    } catch (e) {\n      // swallow\n    }\n    return font !== null ? font : void 0;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport {Length, LengthParser} from \"@swim/math\";\nimport type {FontStyle} from \"./FontStyle\";\nimport type {FontVariant} from \"./FontVariant\";\nimport type {FontWeight} from \"./FontWeight\";\nimport type {FontStretch} from \"./FontStretch\";\nimport type {FontSize} from \"./FontSize\";\nimport type {LineHeight} from \"./LineHeight\";\nimport type {FontFamily} from \"./FontFamily\";\nimport {FontFamilyParser} from \"./FontFamilyParser\";\nimport {Font} from \"./Font\";\n\n/** @internal */\nexport class FontParser extends Parser<Font> {\n  private readonly style: FontStyle | undefined;\n  private readonly variant: FontVariant | undefined;\n  private readonly weight: FontWeight | undefined;\n  private readonly stretch: FontStretch | undefined;\n  private readonly size: FontSize | undefined;\n  private readonly height: LineHeight | undefined;\n  private readonly family: FontFamily | FontFamily[] | undefined;\n  private readonly identOutput: Output<string> | undefined;\n  private readonly lengthParser: Parser<Length> | undefined;\n  private readonly familyParser: Parser<FontFamily> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(style?: FontStyle, variant?: FontVariant, weight?: FontWeight,\n              stretch?: FontStretch, size?: FontSize, height?: LineHeight,\n              family?: FontFamily | FontFamily[], identOutput?: Output<string>,\n              lengthParser?: Parser<Length>, familyParser?: Parser<FontFamily>,\n              step?: number) {\n    super();\n    this.style = style;\n    this.variant = variant;\n    this.weight = weight;\n    this.stretch = stretch;\n    this.size = size;\n    this.height = height;\n    this.family = family;\n    this.identOutput = identOutput;\n    this.lengthParser = lengthParser;\n    this.familyParser = familyParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<Font> {\n    return FontParser.parse(input, this.style, this.variant, this.weight,\n                            this.stretch, this.size, this.height, this.family,\n                            this.identOutput, this.lengthParser,\n                            this.familyParser, this.step);\n  }\n\n  static parse(input: Input, style?: FontStyle, variant?: FontVariant,\n               weight?: FontWeight, stretch?: FontStretch, size?: FontSize,\n               height?: LineHeight, family?: FontFamily | FontFamily[],\n               identOutput?: Output<string>, lengthParser?: Parser<Length>,\n               familyParser?: Parser<FontFamily>, step: number = 1): Parser<Font> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n          input.step();\n        }\n        if (input.isCont()) {\n          if (Unicode.isAlpha(c)) {\n            step = 2;\n          } else if (c === 34/*'\"'*/ || c === 39/*'\\''*/) {\n            step = 11;\n          } else {\n            step = 4;\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 2) {\n        identOutput = identOutput || Unicode.stringOutput();\n        while (input.isCont() && (c = input.head(), Unicode.isAlpha(c) || c === 45/*'-'*/)) {\n          input = input.step();\n          identOutput.write(c);\n        }\n        if (!input.isEmpty()) {\n          const ident = identOutput.bind();\n          identOutput = void 0;\n          switch (ident) {\n            case \"italic\":\n            case \"oblique\":\n              if (style === void 0) {\n                style = ident;\n              } else {\n                return Parser.error(Diagnostic.message(\"reapeated font style: \" + ident, input));\n              }\n              step = 3;\n              break;\n            case \"small-caps\":\n              if (variant === void 0) {\n                variant = ident;\n              } else {\n                return Parser.error(Diagnostic.message(\"reapeated font variant: \" + ident, input));\n              }\n              step = 3;\n              break;\n            case \"bold\":\n            case \"bolder\":\n            case \"lighter\":\n              if (weight === void 0) {\n                weight = ident;\n              } else {\n                return Parser.error(Diagnostic.message(\"reapeated font weight: \" + ident, input));\n              }\n              step = 3;\n              break;\n            case \"ultra-condensed\":\n            case \"extra-condensed\":\n            case \"semi-condensed\":\n            case \"condensed\":\n            case \"expanded\":\n            case \"semi-expanded\":\n            case \"extra-expanded\":\n            case \"ultra-expanded\":\n              if (stretch === void 0) {\n                stretch = ident;\n              } else {\n                return Parser.error(Diagnostic.message(\"reapeated font stretch: \" + ident, input));\n              }\n              step = 3;\n              break;\n            case \"normal\":\n              if (style === void 0) {\n                style = ident;\n              } else if (variant === void 0) {\n                variant = ident;\n              } else if (weight === void 0) {\n                weight = ident;\n              } else if (stretch === void 0) {\n                stretch = ident;\n              } else {\n                return Parser.error(Diagnostic.message(\"reapeated font property: \" + ident, input));\n              }\n              step = 3;\n              break;\n            case \"large\":\n            case \"larger\":\n            case \"medium\":\n            case \"small\":\n            case \"smaller\":\n            case \"x-large\":\n            case \"x-small\":\n            case \"xx-large\":\n            case \"xx-small\":\n              size = ident;\n              step = 5;\n              break;\n            default:\n              family = ident;\n              step = 12;\n          }\n        }\n      }\n      if (step === 3) {\n        if (input.isCont()) {\n          c = input.head();\n          if (Unicode.isSpace(c)) {\n            input.step();\n            step = 1;\n            continue;\n          } else {\n            return Parser.error(Diagnostic.expected(\"font property, size, or family\", input));\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 4) {\n        if (lengthParser === void 0) {\n          lengthParser = LengthParser.parse(input);\n        } else {\n          lengthParser = lengthParser.feed(input);\n        }\n        if (lengthParser.isDone()) {\n          const length = lengthParser.bind();\n          if (length.units === \"\") {\n            const value = length.value;\n            switch (value) {\n              case 100:\n              case 200:\n              case 300:\n              case 400:\n              case 500:\n              case 600:\n              case 700:\n              case 800:\n              case 900:\n                if (weight === void 0) {\n                  weight = String(value) as FontWeight;\n                } else {\n                  return Parser.error(Diagnostic.message(\"reapeated font weight: \" + value, input));\n                }\n                break;\n              default:\n                return Parser.error(Diagnostic.message(\"unknown font property: \" + value, input));\n            }\n            step = 3;\n            continue;\n          } else {\n            size = length;\n            lengthParser = void 0;\n            step = 5;\n          }\n        } else if (lengthParser.isError()) {\n          return lengthParser.asError();\n        }\n      }\n      if (step === 5) {\n        if (input.isCont()) {\n          c = input.head();\n          if (Unicode.isSpace(c)) {\n            input.step();\n            step = 6;\n          } else if (c === 47/*'/'*/) {\n            input.step();\n            step = 7;\n          } else {\n            return Parser.error(Diagnostic.expected(\"font family\", input));\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 6) {\n        while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n          input.step();\n        }\n        if (input.isCont()) {\n          if (c === 47/*'/'*/) {\n            input.step();\n            step = 7;\n          } else {\n            step = 11;\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 7) {\n        while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n          input.step();\n        }\n        if (input.isCont()) {\n          if (Unicode.isAlpha(c)) {\n            step = 8;\n          } else {\n            step = 9;\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 8) {\n        identOutput = identOutput || Unicode.stringOutput();\n        while (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n          input = input.step();\n          identOutput.write(c);\n        }\n        if (!input.isEmpty()) {\n          const ident = identOutput.bind();\n          identOutput = void 0;\n          switch (ident) {\n            case \"normal\":\n              height = ident;\n              step = 10;\n              break;\n            default:\n              return Parser.error(Diagnostic.message(\"unknown line height: \" + ident, input));\n          }\n        }\n      }\n      if (step === 9) {\n        if (lengthParser === void 0) {\n          lengthParser = LengthParser.parse(input);\n        } else {\n          lengthParser = lengthParser.feed(input);\n        }\n        if (lengthParser.isDone()) {\n          height = lengthParser.bind();\n          lengthParser = void 0;\n          step = 10;\n        } else if (lengthParser.isError()) {\n          return lengthParser.asError();\n        }\n      }\n      if (step === 10) {\n        if (input.isCont()) {\n          c = input.head();\n          if (Unicode.isSpace(c)) {\n            input.step();\n            step = 11;\n          } else {\n            return Parser.error(Diagnostic.expected(\"font family\", input));\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 11) {\n        if (familyParser === void 0) {\n          familyParser = FontFamilyParser.parse(input);\n        } else {\n          familyParser = familyParser.feed(input);\n        }\n        if (familyParser.isDone()) {\n          if (Array.isArray(family)) {\n            family.push(familyParser.bind());\n          } else if (family !== void 0) {\n            family = [family!, familyParser.bind()];\n          } else {\n            family = familyParser.bind();\n          }\n          familyParser = void 0;\n          step = 12;\n        } else if (familyParser.isError()) {\n          return familyParser.asError();\n        }\n      }\n      if (step === 12) {\n        while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n          input.step();\n        }\n        if (input.isCont() && c === 44/*','*/) {\n          input.step();\n          step = 11;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.done(Font.create(style, variant, weight, stretch, size, height, family!));\n        }\n      }\n      break;\n    } while (true);\n    return new FontParser(style, variant, weight, stretch, size, height, family,\n                          identOutput, lengthParser, familyParser, step);\n  }\n\n  static parseRest(input: Input, style?: FontStyle, variant?: FontVariant,\n                   weight?: FontWeight, stretch?: FontStretch, size?: FontSize,\n                   height?: LineHeight, family?: FontFamily | FontFamily[]): Parser<Font> {\n    const step = family !== void 0 ? 12 : size !== void 0 ? 5 : 3;\n    return FontParser.parse(input, style, variant, weight, stretch, size, height,\n                            family, void 0, void 0, void 0, step);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Equivalent, HashCode, Interpolate, Interpolator} from \"@swim/util\";\nimport {Output, Parser, Debug, Diagnostic, Unicode} from \"@swim/codec\";\nimport type {Value, Form} from \"@swim/structure\";\nimport {AnyAngle, Angle} from \"@swim/math\";\nimport {ColorForm} from \"../\"; // forward import\nimport {ColorParser} from \"../\"; // forward import\nimport {RgbColorInit, RgbColor} from \"../\"; // forward import\nimport {RgbColorInterpolator} from \"../\"; // forward import\nimport {HslColorInit, HslColor} from \"../\"; // forward import\n\n/** @public */\nexport type AnyColor = Color | ColorInit | string;\n\n/** @public */\nexport type ColorInit = RgbColorInit | HslColorInit;\n\n/** @public */\nexport abstract class Color implements Interpolate<Color>, HashCode, Equivalent, Debug {\n  abstract isDefined(): boolean;\n\n  abstract alpha(): number;\n  abstract alpha(a: number): Color;\n\n  abstract plus(that: AnyColor): Color;\n\n  abstract times(scalar: number): Color;\n\n  abstract combine(that: AnyColor, scalar?: number): Color;\n\n  abstract readonly lightness: number;\n\n  abstract lighter(k?: number): Color;\n\n  abstract darker(k?: number): Color;\n\n  contrast(k?: number): Color {\n    return this.lightness < 0.67 ? this.lighter(k) : this.darker(k);\n  }\n\n  abstract rgb(): RgbColor;\n\n  abstract hsl(): HslColor;\n\n  interpolateTo(that: Color): Interpolator<Color>;\n  interpolateTo(that: unknown): Interpolator<Color> | null;\n  interpolateTo(that: unknown): Interpolator<Color> | null {\n    if (that instanceof Color) {\n      return RgbColorInterpolator(this.rgb(), that.rgb());\n    } else {\n      return null;\n    }\n  }\n\n  abstract equivalentTo(that: unknown, epsilon?: number): boolean;\n\n  abstract equals(other: unknown): boolean;\n\n  abstract hashCode(): number;\n\n  abstract debug<T>(output: Output<T>): Output<T>;\n\n  abstract toHexString(): string;\n\n  abstract toRgbString(): string;\n\n  abstract toHslString(): string;\n\n  abstract toString(): string;\n\n  static transparent(): Color {\n    return RgbColor.transparent();\n  }\n\n  static black(alpha?: number): Color {\n    return RgbColor.black(alpha);\n  }\n\n  static white(alpha?: number): Color {\n    return RgbColor.white(alpha);\n  }\n\n  static rgb(r: number, g: number, b: number, a?: number): RgbColor {\n    return new RgbColor(r, g, b, a);\n  }\n\n  static hsl(h: AnyAngle, s: number, l: number, a?: number): HslColor {\n    if (typeof h !== \"number\") {\n      h = Angle.fromAny(h).degValue();\n    }\n    return new HslColor(h, s, l, a);\n  }\n\n  static forName(name: string): Color | null {\n    switch (name) {\n      case \"transparent\": return Color.transparent();\n      case \"black\": return Color.black();\n      case \"white\": return Color.white();\n      default: return null;\n    }\n  }\n\n  static fromInit(value: ColorInit): Color {\n    if (RgbColor.isInit(value)) {\n      return RgbColor.fromInit(value);\n    } else if (HslColor.isInit(value)) {\n      return HslColor.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromAny(value: AnyColor): Color {\n    if (value === void 0 || value === null || value instanceof Color) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return Color.parse(value);\n    } else if (RgbColor.isInit(value)) {\n      return RgbColor.fromInit(value);\n    } else if (HslColor.isInit(value)) {\n      return HslColor.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromValue(value: Value): Color | null {\n    let color: Color | null;\n    color = RgbColor.fromValue(value);\n    if (color === void 0) {\n      color = HslColor.fromValue(value);\n    }\n    return color;\n  }\n\n  static parse(string: string): Color {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = ColorParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  /** @internal */\n  static isInit(value: unknown): value is ColorInit {\n    return RgbColor.isInit(value) || HslColor.isInit(value);\n  }\n\n  /** @internal */\n  static isAny(value: unknown): value is AnyColor {\n    return value instanceof Color\n        || Color.isInit(value)\n        || typeof value === \"string\";\n  }\n\n  @Lazy\n  static form(): Form<Color, AnyColor> {\n    return new ColorForm(Color.transparent());\n  }\n\n  /** @internal */\n  static Darker: number = 0.7;\n  /** @internal */\n  static Brighter: number = 1 / Color.Darker;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Text, Form} from \"@swim/structure\";\nimport {AnyColor, Color} from \"./Color\";\n\n/** @internal */\nexport class ColorForm extends Form<Color, AnyColor> {\n  constructor(unit: Color | undefined) {\n    super();\n    Object.defineProperty(this, \"unit\", {\n      value: unit,\n      enumerable: true,\n    });\n  }\n\n  override readonly unit: Color | undefined;\n\n  override withUnit(unit: Color | undefined): Form<Color, AnyColor> {\n    if (unit !== this.unit) {\n      return new ColorForm(unit);\n    } else {\n      return this;\n    }\n  }\n\n  override mold(color: AnyColor): Item {\n    color = Color.fromAny(color);\n    return Text.from(color.toString());\n  }\n\n  override cast(item: Item): Color | undefined {\n    const value = item.toValue();\n    let color: Color | null = null;\n    try {\n      color = Color.fromValue(value);\n      if (color === void 0) {\n        const string = value.stringValue(void 0);\n        if (string !== void 0) {\n          color = Color.parse(string);\n        }\n      }\n    } catch (e) {\n      // swallow\n    }\n    return color !== null ? color : void 0;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport {Color} from \"./Color\";\nimport {HexColorParser} from \"../\"; // forward import\nimport {RgbColorParser} from \"../\"; // forward import\nimport {HslColorParser} from \"../\"; // forward import\n\n/** @internal */\nexport class ColorParser extends Parser<Color> {\n  private readonly identOutput: Output<string> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(identOutput?: Output<string>, step?: number) {\n    super();\n    this.identOutput = identOutput;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<Color> {\n    return ColorParser.parse(input, this.identOutput, this.step);\n  }\n\n  static parse(input: Input, identOutput?: Output<string>, step: number = 1): Parser<Color> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        if (input.head() === 35/*'#'*/) {\n          return HexColorParser.parse(input);\n        } else {\n          step = 2;\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 2) {\n      identOutput = identOutput || Unicode.stringOutput();\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n        input = input.step();\n        identOutput.write(c);\n      }\n      if (!input.isEmpty()) {\n        const ident = identOutput.bind();\n        switch (ident) {\n          case \"rgb\":\n          case \"rgba\": return RgbColorParser.parseRest(input);\n          case \"hsl\":\n          case \"hsla\": return HslColorParser.parseRest(input);\n          default: {\n            const color = Color.forName(ident);\n            if (color !== null) {\n              return Parser.done(color);\n            } else {\n              return Parser.error(Diagnostic.message(\"unknown color: \" + ident, input));\n            }\n          }\n        }\n      }\n    }\n    return new ColorParser(identOutput, step);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/** @internal */\nexport class ColorChannel {\n  constructor(value: number, units?: string) {\n    this.value = value;\n    this.units = units !== void 0 ? units : \"\";\n  }\n\n  readonly value: number;\n\n  readonly units: string;\n\n  scale(k: number): number {\n    if (this.units === \"%\") {\n      return this.value * k / 100;\n    } else {\n      return this.value;\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Base10} from \"@swim/codec\";\nimport {ColorChannel} from \"./ColorChannel\";\n\n/** @internal */\nexport class ColorChannelParser extends Parser<ColorChannel> {\n  private readonly valueParser: Parser<number> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(valueParser?: Parser<number>, step?: number) {\n    super();\n    this.valueParser = valueParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<ColorChannel> {\n    return ColorChannelParser.parse(input, this.valueParser, this.step);\n  }\n\n  static parse(input: Input, valueParser?: Parser<number>, step: number = 1): Parser<ColorChannel> {\n    if (step === 1) {\n      if (valueParser === void 0) {\n        valueParser = Base10.parseNumber(input);\n      } else {\n        valueParser = valueParser.feed(input);\n      }\n      if (valueParser.isDone()) {\n        step = 2;\n      } else if (valueParser.isError()) {\n        return valueParser.asError();\n      }\n    }\n    if (step === 2) {\n      if (input.isCont() && input.head() === 37/*'%'*/) {\n        input = input.step();\n        return Parser.done(new ColorChannel(valueParser!.bind(), \"%\"));\n      } else if (!input.isEmpty()) {\n        return Parser.done(new ColorChannel(valueParser!.bind()));\n      }\n    }\n    return new ColorChannelParser(valueParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Mutable, Murmur3, Numbers, Constructors, Interpolator} from \"@swim/util\";\nimport {Output, Base16} from \"@swim/codec\";\nimport {Item, Value} from \"@swim/structure\";\nimport {AnyColor, Color} from \"../color/Color\";\nimport {RgbColorInterpolator} from \"../\"; // forward import\nimport {HslColor} from \"../\"; // forward import\n\n/** @public */\nexport type AnyRgbColor = RgbColor | RgbColorInit | string;\n\n/** @public */\nexport interface RgbColorInit {\n  readonly r: number;\n  readonly g: number;\n  readonly b: number;\n  readonly a?: number;\n}\n\n/** @public */\nexport class RgbColor extends Color {\n  constructor(r: number, g: number, b: number, a: number = 1) {\n    super();\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    this.a = a;\n    this.stringValue = void 0;\n  }\n\n  override isDefined(): boolean {\n    return isFinite(this.r) && isFinite(this.g)\n        && isFinite(this.b) && isFinite(this.a);\n  }\n\n  readonly r: number;\n\n  readonly g: number;\n\n  readonly b: number;\n\n  readonly a: number;\n\n  override alpha(): number;\n  override alpha(a: number): RgbColor;\n  override alpha(a?: number): number | RgbColor {\n    if (a === void 0) {\n      return this.a;\n    } else if (this.a !== a) {\n      return new RgbColor(this.r, this.g, this.b, a);\n    } else {\n      return this;\n    }\n  }\n\n  override get lightness(): number {\n    const r = this.r / 255;\n    const g = this.g / 255;\n    const b = this.b / 255;\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    return (max + min) / 2;\n  }\n\n  override plus(that: AnyColor): RgbColor {\n    that = Color.fromAny(that).rgb();\n    return new RgbColor(this.r + (that as RgbColor).r, this.g + (that as RgbColor).g,\n                        this.b + (that as RgbColor).b, this.a + (that as RgbColor).a);\n  }\n\n  override times(scalar: number): RgbColor {\n    return new RgbColor(this.r * scalar, this.g * scalar, this.b * scalar, this.a * scalar);\n  }\n\n  override combine(that: AnyColor, scalar: number = 1): Color {\n    that = Color.fromAny(that).rgb();\n    return new RgbColor(this.r + (that as RgbColor).r * scalar, this.g + (that as RgbColor).g * scalar,\n                        this.b + (that as RgbColor).b * scalar, this.a + (that as RgbColor).a * scalar);\n  }\n\n  override lighter(k?: number): RgbColor {\n    k = k === void 0 ? Color.Brighter : Math.pow(Color.Brighter, k);\n    return k !== 1 ? new RgbColor(this.r * k, this.g * k, this.b * k, this.a) : this;\n  }\n\n  override darker(k?: number): RgbColor {\n    k = k === void 0 ? Color.Darker : Math.pow(Color.Darker, k);\n    return k !== 1 ? new RgbColor(this.r * k, this.g * k, this.b * k, this.a) : this;\n  }\n\n  override rgb(): RgbColor {\n    return this;\n  }\n\n  override hsl(): HslColor {\n    const r = this.r / 255;\n    const g = this.g / 255;\n    const b = this.b / 255;\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    let h = NaN;\n    let s = max - min;\n    const l = (max + min) / 2;\n    if (s !== 0) {\n      if (r === max) {\n        h = (g - b) / s + +(g < b) * 6;\n      } else if (g === max) {\n        h = (b - r) / s + 2;\n      } else {\n        h = (r - g) / s + 4;\n      }\n      s /= l < 0.5 ? max + min : 2 - (max + min);\n      h *= 60;\n    } else {\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new HslColor(h, s, l, this.a);\n  }\n\n  override interpolateTo(that: RgbColor): Interpolator<RgbColor>;\n  override interpolateTo(that: Color): Interpolator<Color>;\n  override interpolateTo(that: unknown): Interpolator<Color> | null;\n  override interpolateTo(that: unknown): Interpolator<Color> | null {\n    if (that instanceof RgbColor) {\n      return RgbColorInterpolator(this, that);\n    } else {\n      return super.interpolateTo(that);\n    }\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Color) {\n      that = that.rgb();\n      return Numbers.equivalent(this.r, (that as RgbColor).r, epsilon)\n          && Numbers.equivalent(this.g, (that as RgbColor).g, epsilon)\n          && Numbers.equivalent(this.b, (that as RgbColor).b, epsilon)\n          && Numbers.equivalent(this.a, (that as RgbColor).a, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof RgbColor) {\n      return this.r === that.r && this.g === that.g && this.b === that.b && this.a === that.a;\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(Constructors.hash(RgbColor),\n        Numbers.hash(this.r)), Numbers.hash(this.g)), Numbers.hash(this.b)), Numbers.hash(this.a)));\n  }\n\n  override debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"Color\").write(46/*'.'*/).write(\"rgb\").write(40/*'('*/)\n                   .debug(this.r).write(\", \").debug(this.g).write(\", \").debug(this.b);\n    if (this.a !== 1) {\n      output = output.write(\", \").debug(this.a);\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n\n  override toHexString(): string {\n    const r = Math.min(Math.max(0, Math.round(this.r || 0)), 255);\n    const g = Math.min(Math.max(0, Math.round(this.g || 0)), 255);\n    const b = Math.min(Math.max(0, Math.round(this.b || 0)), 255);\n    let s = \"#\";\n    const base16Alphabet = Base16.lowercase.alphabet;\n    s += base16Alphabet.charAt(r >>> 4 & 0xf);\n    s += base16Alphabet.charAt(r & 0xf);\n    s += base16Alphabet.charAt(g >>> 4 & 0xf);\n    s += base16Alphabet.charAt(g & 0xf);\n    s += base16Alphabet.charAt(b >>> 4 & 0xf);\n    s += base16Alphabet.charAt(b & 0xf);\n    return s;\n  }\n\n  toRgbString(): string {\n    let a = this.a;\n    a = isNaN(a) ? 1 : Math.max(0, Math.min(this.a, 1));\n    let s = a === 1 ? \"rgb\" : \"rgba\";\n    s += \"(\";\n    s += Math.max(0, Math.min(Math.round(this.r) || 0, 255));\n    s += \",\";\n    s += Math.max(0, Math.min(Math.round(this.g) || 0, 255));\n    s += \",\";\n    s += Math.max(0, Math.min(Math.round(this.b) || 0, 255));\n    if (a !== 1) {\n      s += \",\";\n      s += a;\n    }\n    s += \")\";\n    return s;\n  }\n\n  override toHslString(): string {\n    return this.hsl().toHslString();\n  }\n\n  /** @internal */\n  readonly stringValue: string | undefined;\n\n  override toString(): string {\n    let s = this.stringValue;\n    if (s === void 0) {\n      let a = this.a;\n      a = isNaN(a) ? 1 : Math.max(0, Math.min(this.a, 1));\n      if (a === 1) {\n        s = this.toHexString();\n      } else {\n        s = this.toRgbString();\n      }\n      (this as Mutable<this>).stringValue = s;\n    }\n    return s;\n  }\n\n  @Lazy\n  static override transparent(): RgbColor {\n    return new RgbColor(0, 0, 0, 0);\n  }\n\n  static override black(alpha: number = 1): RgbColor {\n    return new RgbColor(0, 0, 0, alpha);\n  }\n\n  static override white(alpha: number = 1): RgbColor {\n    return new RgbColor(255, 255, 255, alpha);\n  }\n\n  static override fromInit(value: RgbColorInit): RgbColor {\n    return new RgbColor(value.r, value.g, value.b, value.a);\n  }\n\n  static override fromAny(value: AnyRgbColor): RgbColor {\n    if (value === void 0 || value === null || value instanceof RgbColor) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return RgbColor.parse(value);\n    } else if (RgbColor.isInit(value)) {\n      return RgbColor.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static override fromValue(value: Value): RgbColor | null {\n    const tag = value.tag;\n    let positional: boolean;\n    if (tag === \"rgb\" || tag === \"rgba\") {\n      value = value.header(tag);\n      positional = true;\n    } else {\n      positional = false;\n    }\n    let r: number | undefined;\n    let g: number | undefined;\n    let b: number | undefined;\n    let a: number | undefined;\n    value.forEach(function (member: Item, index: number): void {\n      const key = member.key.stringValue();\n      if (key !== void 0) {\n        if (key === \"r\") {\n          r = member.toValue().numberValue(r);\n        } else if (key === \"g\") {\n          g = member.toValue().numberValue(g);\n        } else if (key === \"b\") {\n          b = member.toValue().numberValue(b);\n        } else if (key === \"a\") {\n          a = member.toValue().numberValue(a);\n        }\n      } else if (member instanceof Value && positional) {\n        if (index === 0) {\n          r = member.numberValue(r);\n        } else if (index === 1) {\n          g = member.numberValue(g);\n        } else if (index === 2) {\n          b = member.numberValue(b);\n        } else if (index === 3) {\n          a = member.numberValue(a);\n        }\n      }\n    });\n    if (r !== void 0 && g !== void 0 && b !== void 0) {\n      return new RgbColor(r, g, b, a);\n    }\n    return null;\n  }\n\n  static override parse(str: string): RgbColor {\n    return Color.parse(str).rgb();\n  }\n\n  /** @internal */\n  static override isInit(value: unknown): value is RgbColorInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as RgbColorInit;\n      return typeof init.r === \"number\"\n          && typeof init.g === \"number\"\n          && typeof init.b === \"number\"\n          && (typeof init.a === \"number\" || typeof init.a === \"undefined\");\n    }\n    return false;\n  }\n\n  /** @internal */\n  static override isAny(value: unknown): value is AnyRgbColor {\n    return value instanceof RgbColor\n        || RgbColor.isInit(value)\n        || typeof value === \"string\";\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Interpolator} from \"@swim/util\";\nimport {RgbColor} from \"./RgbColor\";\n\n/** @internal */\nexport const RgbColorInterpolator = (function (_super: typeof Interpolator) {\n  const RgbColorInterpolator = function (c0: RgbColor, c1: RgbColor): Interpolator<RgbColor> {\n    const interpolator = function (u: number): RgbColor {\n      const c0 = interpolator[0];\n      const c1 = interpolator[1];\n      const r = c0.r + u * (c1.r - c0.r);\n      const g = c0.g + u * (c1.g - c0.g);\n      const b = c0.b + u * (c1.b - c0.b);\n      const a = c0.a + u * (c1.a - c0.a);\n      return new RgbColor(r, g, b, a);\n    } as Interpolator<RgbColor>;\n    Object.setPrototypeOf(interpolator, RgbColorInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>)[0] = c0;\n    (interpolator as Mutable<typeof interpolator>)[1] = c1;\n    return interpolator;\n  } as {\n    (c0: RgbColor, c1: RgbColor): Interpolator<RgbColor>;\n\n    /** @internal */\n    prototype: Interpolator<RgbColor>;\n  };\n\n  RgbColorInterpolator.prototype = Object.create(_super.prototype);\n  RgbColorInterpolator.prototype.constructor = RgbColorInterpolator;\n\n  return RgbColorInterpolator;\n})(Interpolator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic, Base16} from \"@swim/codec\";\nimport {RgbColor} from \"./RgbColor\";\n\n/** @internal */\nexport class HexColorParser extends Parser<RgbColor> {\n  private readonly value: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(value?: number, step?: number) {\n    super();\n    this.value = value;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<RgbColor> {\n    return HexColorParser.parse(input, this.value, this.step);\n  }\n\n  static parse(input: Input, value: number = 0, step: number = 1): Parser<RgbColor> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont() && input.head() === 35/*'#'*/) {\n        input = input.step();\n        step = 2;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"#\", input));\n      }\n    }\n    if (step >= 2) {\n      while (step <= 9 && input.isCont()) {\n        c = input.head();\n        if (Base16.isDigit(c)) {\n          input = input.step();\n          value = (value << 4) | Base16.decodeDigit(c);\n          step += 1;\n        } else {\n          break;\n        }\n      }\n      if (!input.isEmpty()) {\n        if (step === 5) { // #xxx\n          return Parser.done(new RgbColor(value >> 8 & 0x0f | value >> 4 & 0xf0,\n                                          value >> 4 & 0x0f | value & 0xf0,\n                                          value << 4 & 0xf0 | value & 0x0f));\n        } else if (step === 6) { // #xxxx\n          return Parser.done(new RgbColor(value >> 12 & 0x0f | value >> 8 & 0xf0,\n                                          value >> 8 & 0x0f | value >> 4 & 0xf0,\n                                          value >> 4 & 0x0f | value & 0xf0,\n                                          (value << 4 & 0xf0 | value & 0x0f) / 255));\n        } else if (step === 8) { // #xxxxxx\n          return Parser.done(new RgbColor(value >> 16 & 0xff,\n                                          value >> 8 & 0xff,\n                                          value & 0xff));\n        } else if (step === 10) { // #xxxxxxxx\n          return Parser.done(new RgbColor(value >> 24 & 0xff,\n                                          value >> 16 & 0xff,\n                                          value >> 8 & 0xff,\n                                          (value & 0xff) / 255));\n        } else {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n    }\n    return new HexColorParser(value, step);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport type {ColorChannel} from \"../color/ColorChannel\";\nimport {ColorChannelParser} from \"../color/ColorChannelParser\";\nimport {RgbColor} from \"./RgbColor\";\n\n/** @internal */\nexport class RgbColorParser extends Parser<RgbColor> {\n  private readonly rParser: Parser<ColorChannel> | undefined;\n  private readonly gParser: Parser<ColorChannel> | undefined;\n  private readonly bParser: Parser<ColorChannel> | undefined;\n  private readonly aParser: Parser<ColorChannel> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(rParser?: Parser<ColorChannel>, gParser?: Parser<ColorChannel>,\n              bParser?: Parser<ColorChannel>, aParser?: Parser<ColorChannel>,\n              step?: number) {\n    super();\n    this.rParser = rParser;\n    this.gParser = gParser;\n    this.bParser = bParser;\n    this.aParser = aParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<RgbColor> {\n    return RgbColorParser.parse(input, this.rParser, this.gParser,\n                                this.bParser, this.aParser, this.step);\n  }\n\n  static parse(input: Input, rParser?: Parser<ColorChannel>, gParser?: Parser<ColorChannel>,\n               bParser?: Parser<ColorChannel>, aParser?: Parser<ColorChannel>,\n               step?: number): Parser<RgbColor> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont() && input.head() === 114/*'r'*/) {\n        input = input.step();\n        step = 2;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"r\", input));\n      }\n    }\n    if (step === 2) {\n      if (input.isCont() && input.head() === 103/*'g'*/) {\n        input = input.step();\n        step = 3;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"g\", input));\n      }\n    }\n    if (step === 3) {\n      if (input.isCont() && input.head() === 98/*'b'*/) {\n        input = input.step();\n        step = 4;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"b\", input));\n      }\n    }\n    if (step === 4) {\n      if (input.isCont() && input.head() === 97/*'a'*/) {\n        input = input.step();\n        step = 5;\n      } else if (!input.isEmpty()) {\n        step = 5;\n      }\n    }\n    if (step === 5) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont() && c === 40/*'('*/) {\n        input = input.step();\n        step = 6;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"(\", input));\n      }\n    }\n    if (step === 6) {\n      if (rParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          rParser = ColorChannelParser.parse(input);\n        }\n      } else {\n        rParser = rParser.feed(input);\n      }\n      if (rParser !== void 0) {\n        if (rParser.isDone()) {\n          step = 7;\n        } else if (rParser.isError()) {\n          return rParser.asError();\n        }\n      }\n    }\n    if (step === 7) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 8;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 8) {\n      if (gParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          gParser = ColorChannelParser.parse(input);\n        }\n      } else {\n        gParser = gParser.feed(input);\n      }\n      if (gParser !== void 0) {\n        if (gParser.isDone()) {\n          step = 9;\n        } else if (gParser.isError()) {\n          return gParser.asError();\n        }\n      }\n    }\n    if (step === 9) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 10;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 10) {\n      if (bParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          bParser = ColorChannelParser.parse(input);\n        }\n      } else {\n        bParser = bParser.feed(input);\n      }\n      if (bParser !== void 0) {\n        if (bParser.isDone()) {\n          step = 11;\n        } else if (bParser.isError()) {\n          return bParser.asError();\n        }\n      }\n    }\n    if (step === 11) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 41/*')'*/) {\n          input = input.step();\n          return Parser.done(new RgbColor(rParser!.bind().scale(255),\n                                          gParser!.bind().scale(255),\n                                          bParser!.bind().scale(255)));\n        } else if (c === 44/*','*/ || c === 47/*'/'*/) {\n          input = input.step();\n        }\n        step = 12;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 12) {\n      if (aParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          aParser = ColorChannelParser.parse(input);\n        }\n      } else {\n        aParser = aParser.feed(input);\n      }\n      if (aParser !== void 0) {\n        if (aParser.isDone()) {\n          step = 13;\n        } else if (aParser.isError()) {\n          return aParser.asError();\n        }\n      }\n    }\n    if (step === 13) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont() && c === 41/*')'*/) {\n        input = input.step();\n        return Parser.done(new RgbColor(rParser!.bind().scale(255),\n                                        gParser!.bind().scale(255),\n                                        bParser!.bind().scale(255),\n                                        aParser!.bind().scale(1)));\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\")\", input));\n      }\n    }\n    return new RgbColorParser(rParser, gParser, bParser, aParser, step);\n  }\n\n  /** @internal */\n  static parseRest(input: Input): Parser<RgbColor> {\n    return RgbColorParser.parse(input, void 0, void 0, void 0, void 0, 5);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Mutable, Murmur3, Numbers, Constructors, Interpolator} from \"@swim/util\";\nimport type {Output} from \"@swim/codec\";\nimport {Item, Value} from \"@swim/structure\";\nimport {AnyAngle, Angle} from \"@swim/math\";\nimport {AnyColor, Color} from \"../color/Color\";\nimport {RgbColor} from \"../rgb/RgbColor\";\nimport {HslColorInterpolator} from \"../\"; // forward import\n\n/** @public */\nexport type AnyHslColor = HslColor | HslColorInit | string;\n\n/** @public */\nexport interface HslColorInit {\n  readonly h: AnyAngle;\n  readonly s: number;\n  readonly l: number;\n  readonly a?: number;\n}\n\n/** @public */\nexport class HslColor extends Color {\n  constructor(h: number, s: number, l: number, a: number = 1) {\n    super();\n    this.h = h;\n    this.s = s;\n    this.l = l;\n    this.a = a;\n    this.stringValue = void 0;\n  }\n\n  override isDefined(): boolean {\n    return isFinite(this.h) && isFinite(this.s)\n        && isFinite(this.l) && isFinite(this.a);\n  }\n\n  readonly h: number;\n\n  readonly s: number;\n\n  readonly l: number;\n\n  readonly a: number;\n\n  override alpha(): number;\n  override alpha(a: number): HslColor;\n  override alpha(a?: number): number | HslColor {\n    if (a === void 0) {\n      return this.a;\n    } else if (this.a !== a) {\n      return new HslColor(this.h, this.s, this.l, a);\n    } else {\n      return this;\n    }\n  }\n\n  override get lightness(): number {\n    return this.l;\n  }\n\n  override plus(that: AnyColor): HslColor {\n    that = Color.fromAny(that).hsl();\n    return new HslColor(this.h + (that as HslColor).h, this.s + (that as HslColor).s,\n                        this.l + (that as HslColor).l, this.a + (that as HslColor).a);\n  }\n\n  override times(scalar: number): HslColor {\n    return new HslColor(this.h * scalar, this.s * scalar, this.l * scalar, this.a * scalar);\n  }\n\n  override combine(that: AnyColor, scalar: number = 1): HslColor {\n    that = Color.fromAny(that).hsl();\n    return new HslColor(this.h + (that as HslColor).h * scalar, this.s + (that as HslColor).s * scalar,\n                        this.l + (that as HslColor).l * scalar, this.a + (that as HslColor).a * scalar);\n  }\n\n  override lighter(k?: number): HslColor {\n    k = k === void 0 ? Color.Brighter : Math.pow(Color.Brighter, k);\n    return k !== 1 ? new HslColor(this.h, this.s, this.l * k, this.a) : this;\n  }\n\n  override darker(k?: number): HslColor {\n    k = k === void 0 ? Color.Darker : Math.pow(Color.Darker, k);\n    return k !== 1 ? new HslColor(this.h, this.s, this.l * k, this.a) : this;\n  }\n\n  private static toRgb(h: number, m1: number, m2: number): number {\n    return 255 * (h < 60 ? m1 + (m2 - m1) * h / 60\n                         : h < 180 ? m2\n                                   : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n                                             : m1);\n  }\n\n  override rgb(): RgbColor {\n    const h = this.h % 360 + +(this.h < 0) * 360;\n    const s = isNaN(h) || isNaN(this.s) ? 0 : this.s;\n    const l = this.l;\n    const m2 = l + (l < 0.5 ? l : 1 - l) * s;\n    const m1 = 2 * l - m2;\n    return new RgbColor(HslColor.toRgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n                        HslColor.toRgb(h, m1, m2),\n                        HslColor.toRgb(h < 120 ? h + 240 : h - 120, m1, m2),\n                        this.a);\n  }\n\n  override hsl(): HslColor {\n    return this;\n  }\n\n  override interpolateTo(that: HslColor): Interpolator<HslColor>;\n  override interpolateTo(that: Color): Interpolator<Color>;\n  override interpolateTo(that: unknown): Interpolator<Color> | null;\n  override interpolateTo(that: unknown): Interpolator<Color> | null {\n    if (that instanceof HslColor) {\n      return HslColorInterpolator(this, that);\n    } else {\n      return super.interpolateTo(that);\n    }\n  }\n\n  override equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Color) {\n      that = that.hsl();\n      return Numbers.equivalent(this.h, (that as HslColor).h, epsilon)\n          && Numbers.equivalent(this.s, (that as HslColor).s, epsilon)\n          && Numbers.equivalent(this.l, (that as HslColor).l, epsilon)\n          && Numbers.equivalent(this.a, (that as HslColor).a, epsilon);\n    }\n    return false;\n  }\n\n  override equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof HslColor) {\n      return this.h === that.h && this.s === that.s && this.l === that.l && this.a === that.a;\n    }\n    return false;\n  }\n\n  override hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(Constructors.hash(HslColor),\n        Numbers.hash(this.h)), Numbers.hash(this.s)), Numbers.hash(this.l)), Numbers.hash(this.a)));\n  }\n\n  override debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"Color\").write(46/*'.'*/).write(\"hsl\").write(40/*'('*/)\n                   .debug(this.h).write(\", \").debug(this.s).write(\", \").debug(this.l);\n    if (this.a !== 1) {\n      output = output.write(\", \").debug(this.a);\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n\n  override toHexString(): string {\n    return this.rgb().toHexString();\n  }\n\n  override toRgbString(): string {\n    return this.rgb().toRgbString();\n  }\n\n  override toHslString(): string {\n    let a = this.a;\n    a = isNaN(a) ? 1 : Math.max(0, Math.min(this.a, 1));\n    let s = a === 1 ? \"hsl\" : \"hsla\";\n    s += \"(\";\n    s += Math.max(0, Math.min(Math.round(this.h) || 0, 360));\n    s += \",\";\n    s += Math.max(0, Math.min(100 * Math.round(this.s) || 0, 100)) + \"%\";\n    s += \",\";\n    s += Math.max(0, Math.min(100 * Math.round(this.l) || 0, 100)) + \"%\";\n    if (a !== 1) {\n      s += \",\";\n      s += a;\n    }\n    s += \")\";\n    return s;\n  }\n\n  /** @internal */\n  readonly stringValue: string | undefined;\n\n  override toString(): string {\n    let s = this.stringValue;\n    if (s === void 0) {\n      s = this.toHslString();\n      (this as Mutable<this>).stringValue = s;\n    }\n    return s;\n  }\n\n  @Lazy\n  static override transparent(): HslColor {\n    return new HslColor(0, 0, 0, 0);\n  }\n\n  static override black(alpha: number = 1): HslColor {\n    return new HslColor(0, 0, 0, alpha);\n  }\n\n  static override white(alpha: number = 1): HslColor {\n    return new HslColor(0, 1, 1, alpha);\n  }\n\n  static override fromInit(value: HslColorInit): HslColor {\n    const h = typeof value.h === \"number\" ? value.h : Angle.fromAny(value.h).degValue();\n    return new HslColor(h, value.s, value.l, value.a);\n  }\n\n  static override fromAny(value: AnyHslColor): HslColor {\n    if (value === void 0 || value === null || value instanceof HslColor) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return HslColor.parse(value);\n    } else if (HslColor.isInit(value)) {\n      return HslColor.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static override fromValue(value: Value): HslColor | null {\n    const tag = value.tag;\n    let positional: boolean;\n    if (tag === \"hsl\" || tag === \"hsla\") {\n      value = value.header(tag);\n      positional = true;\n    } else {\n      positional = false;\n    }\n    let h: Angle | undefined;\n    let s: number | undefined;\n    let l: number | undefined;\n    let a: number | undefined;\n    value.forEach(function (member: Item, index: number): void {\n      const key = member.key.stringValue();\n      if (key !== void 0) {\n        if (key === \"h\") {\n          h = member.toValue().cast(Angle.form(), h);\n        } else if (key === \"s\") {\n          s = member.toValue().numberValue(s);\n        } else if (key === \"l\") {\n          l = member.toValue().numberValue(l);\n        } else if (key === \"a\") {\n          a = member.toValue().numberValue(a);\n        }\n      } else if (member instanceof Value && positional) {\n        if (index === 0) {\n          h = member.cast(Angle.form(), h);\n        } else if (index === 1) {\n          s = member.numberValue(s);\n        } else if (index === 2) {\n          l = member.numberValue(l);\n        } else if (index === 3) {\n          a = member.numberValue(a);\n        }\n      }\n    });\n    if (h !== void 0 && s !== void 0 && l !== void 0) {\n      return new HslColor(h.degValue(), s, l, a);\n    }\n    return null;\n  }\n\n  static override parse(str: string): HslColor {\n    return Color.parse(str).hsl();\n  }\n\n  /** @internal */\n  static override isInit(value: unknown): value is HslColorInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as HslColorInit;\n      return Angle.isAny(init.h)\n          && typeof init.s === \"number\"\n          && typeof init.l === \"number\"\n          && (typeof init.a === \"number\" || typeof init.a === \"undefined\");\n    }\n    return false;\n  }\n\n  /** @internal */\n  static override isAny(value: unknown): value is AnyHslColor {\n    return value instanceof HslColor\n        || HslColor.isInit(value)\n        || typeof value === \"string\";\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Interpolator} from \"@swim/util\";\nimport {HslColor} from \"./HslColor\";\n\n/** @internal */\nexport const HslColorInterpolator = (function (_super: typeof Interpolator) {\n  const HslColorInterpolator = function (c0: HslColor, c1: HslColor): Interpolator<HslColor> {\n    const interpolator = function (u: number): HslColor {\n      const c0 = interpolator[0];\n      const c1 = interpolator[1];\n      const h = c0.h + u * (c1.h - c0.h);\n      const s = c0.s + u * (c1.s - c0.s);\n      const l = c0.l + u * (c1.l - c0.l);\n      const a = c0.a + u * (c1.a - c0.a);\n      return new HslColor(h, s, l, a);\n    } as Interpolator<HslColor>;\n    Object.setPrototypeOf(interpolator, HslColorInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>)[0] = c0;\n    (interpolator as Mutable<typeof interpolator>)[1] = c1;\n    return interpolator;\n  } as {\n    (c0: HslColor, c1: HslColor): Interpolator<HslColor>;\n\n    /** @internal */\n    prototype: Interpolator<HslColor>;\n  };\n\n  HslColorInterpolator.prototype = Object.create(_super.prototype);\n  HslColorInterpolator.prototype.constructor = HslColorInterpolator;\n\n  return HslColorInterpolator;\n})(Interpolator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport {Angle, AngleParser} from \"@swim/math\";\nimport type {ColorChannel} from \"../color/ColorChannel\";\nimport {ColorChannelParser} from \"../color/ColorChannelParser\";\nimport {HslColor} from \"./HslColor\";\n\n/** @internal */\nexport class HslColorParser extends Parser<HslColor> {\n  private readonly hParser: Parser<Angle> | undefined;\n  private readonly sParser: Parser<ColorChannel> | undefined;\n  private readonly lParser: Parser<ColorChannel> | undefined;\n  private readonly aParser: Parser<ColorChannel> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(hParser?: Parser<Angle>, sParser?: Parser<ColorChannel>,\n              lParser?: Parser<ColorChannel>, aParser?: Parser<ColorChannel>,\n              step?: number) {\n    super();\n    this.hParser = hParser;\n    this.sParser = sParser;\n    this.lParser = lParser;\n    this.aParser = aParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<HslColor> {\n    return HslColorParser.parse(input, this.hParser, this.sParser,\n                                this.lParser, this.aParser, this.step);\n  }\n\n  static parse(input: Input, hParser?: Parser<Angle>, sParser?: Parser<ColorChannel>,\n               lParser?: Parser<ColorChannel>, aParser?: Parser<ColorChannel>,\n               step?: number): Parser<HslColor> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont() && input.head() === 104/*'h'*/) {\n        input = input.step();\n        step = 2;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"h\", input));\n      }\n    }\n    if (step === 2) {\n      if (input.isCont() && input.head() === 115/*'s'*/) {\n        input = input.step();\n        step = 3;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"s\", input));\n      }\n    }\n    if (step === 3) {\n      if (input.isCont() && input.head() === 108/*'l'*/) {\n        input = input.step();\n        step = 4;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"l\", input));\n      }\n    }\n    if (step === 4) {\n      if (input.isCont() && input.head() === 97/*'a'*/) {\n        input = input.step();\n        step = 5;\n      } else if (!input.isEmpty()) {\n        step = 5;\n      }\n    }\n    if (step === 5) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont() && c === 40/*'('*/) {\n        input = input.step();\n        step = 6;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"(\", input));\n      }\n    }\n    if (step === 6) {\n      if (hParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          hParser = AngleParser.parse(input, \"deg\");\n        }\n      } else {\n        hParser = hParser.feed(input);\n      }\n      if (hParser !== void 0) {\n        if (hParser.isDone()) {\n          step = 7;\n        } else if (hParser.isError()) {\n          return hParser.asError();\n        }\n      }\n    }\n    if (step === 7) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 8;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 8) {\n      if (sParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          sParser = ColorChannelParser.parse(input);\n        }\n      } else {\n        sParser = sParser.feed(input);\n      }\n      if (sParser !== void 0) {\n        if (sParser.isDone()) {\n          if (sParser.bind().units === \"%\") {\n            step = 9;\n          } else {\n            return Parser.error(Diagnostic.expected(\"%\", input));\n          }\n        } else if (sParser.isError()) {\n          return sParser.asError();\n        }\n      }\n    }\n    if (step === 9) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input = input.step();\n        }\n        step = 10;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 10) {\n      if (lParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (input.isCont()) {\n          lParser = ColorChannelParser.parse(input);\n        }\n      } else {\n        lParser = lParser.feed(input);\n      }\n      if (lParser !== void 0) {\n        if (lParser.isDone()) {\n          if (lParser.bind().units === \"%\") {\n            step = 11;\n          } else {\n            return Parser.error(Diagnostic.expected(\"%\", input));\n          }\n        } else if (lParser.isError()) {\n          return lParser.asError();\n        }\n      }\n    }\n    if (step === 11) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont()) {\n        if (c === 41/*')'*/) {\n          input = input.step();\n          return Parser.done(new HslColor(hParser!.bind().degValue(),\n                                          sParser!.bind().scale(1),\n                                          lParser!.bind().scale(1)));\n        } else if (c === 44/*','*/ || c === 47/*'/'*/) {\n          input = input.step();\n        }\n        step = 12;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 12) {\n      if (aParser === void 0) {\n        while (input.isCont() && Unicode.isSpace(input.head())) {\n          input = input.step();\n        }\n        if (!input.isEmpty()) {\n          aParser = ColorChannelParser.parse(input);\n        }\n      } else {\n        aParser = aParser.feed(input);\n      }\n      if (aParser !== void 0) {\n        if (aParser.isDone()) {\n          step = 13;\n        } else if (aParser.isError()) {\n          return aParser.asError();\n        }\n      }\n    }\n    if (step === 13) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont() && c === 41/*')'*/) {\n        input = input.step();\n        return Parser.done(new HslColor(hParser!.bind().degValue(),\n                                        sParser!.bind().scale(1),\n                                        lParser!.bind().scale(1),\n                                        aParser!.bind().scale(1)));\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\")\", input));\n      }\n    }\n    return new HslColorParser(hParser, sParser, lParser, aParser, step);\n  }\n\n  /** @internal */\n  static parseRest(input: Input): Parser<HslColor> {\n    return HslColorParser.parse(input, void 0, void 0, void 0, void 0, 5);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals, Equivalent, Interpolate, Interpolator} from \"@swim/util\";\nimport {Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport {AnyColor, Color} from \"../color/Color\";\nimport {ColorStopInterpolator} from \"../\"; // forward import\nimport {ColorStopParser} from \"../\"; // forward import\nimport {ColorStopListParser} from \"../\"; // forward import\n\n/** @public */\nexport type AnyColorStop = ColorStop | ColorStopInit | ColorStopTuple | string;\n\n/** @public */\nexport interface ColorStopInit {\n  color: AnyColor;\n  stop?: AnyLength;\n  hint?: AnyLength;\n}\n\n/** @public */\nexport type ColorStopTuple = [AnyColor, AnyLength | null];\n\n/** @public */\nexport class ColorStop implements Interpolate<ColorStop>, Equals, Equivalent {\n  constructor(color: Color, stop: Length | null, hint: Length | null) {\n    this.color = color;\n    this.stop = stop;\n    this.hint = hint;\n  }\n\n  readonly color: Color;\n\n  withColor(color: AnyColor): ColorStop {\n    color = Color.fromAny(color);\n    return new ColorStop(color, this.stop, this.hint);\n  }\n\n  readonly stop: Length | null;\n\n  withStop(stop: AnyLength | null): ColorStop {\n    if (stop !== null) {\n      stop = Length.fromAny(stop, \"%\");\n    }\n    return new ColorStop(this.color, stop, this.hint);\n  }\n\n  readonly hint: Length | null;\n\n  withHint(hint: AnyLength | null): ColorStop {\n    if (hint !== null) {\n      hint = Length.fromAny(hint, \"%\");\n    }\n    return new ColorStop(this.color, this.stop, hint);\n  }\n\n  interpolateTo(that: ColorStop): Interpolator<ColorStop>;\n  interpolateTo(that: unknown): Interpolator<ColorStop> | null;\n  interpolateTo(that: unknown): Interpolator<ColorStop> | null {\n    if (that instanceof ColorStop) {\n      return ColorStopInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ColorStop) {\n      return Equivalent(this.color, that.color, epsilon)\n          && Equivalent(this.stop, that.stop, epsilon)\n          && Equivalent(this.hint, that.hint, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ColorStop) {\n      return this.color.equals(that.color)\n          && Equals(this.stop, that.stop)\n          && Equals(this.hint, that.hint);\n    }\n    return false;\n  }\n\n  toString(): string {\n    let s = \"\";\n    if (this.hint !== null) {\n      s += this.hint.toString();\n      s += \", \";\n    }\n    s += this.color.toString();\n    if (this.stop !== null) {\n      s += \" \";\n      s += this.stop.toString();\n    }\n    return s;\n  }\n\n  static create(color: AnyColor, stop: AnyLength | null = null,\n                hint: AnyLength | null = null): ColorStop {\n    color = Color.fromAny(color);\n    if (stop !== null) {\n      stop = Length.fromAny(stop, \"%\");\n    }\n    if (hint !== null) {\n      hint = Length.fromAny(hint, \"%\");\n    }\n    return new ColorStop(color, stop as Length | null, hint as Length | null);\n  }\n\n  static fromInit(init: ColorStopInit): ColorStop {\n    const color = Color.fromAny(init.color);\n    const stop = init.stop !== void 0 ? Length.fromAny(init.stop, \"%\") : null;\n    const hint = init.hint !== void 0 ? Length.fromAny(init.hint, \"%\") : null;\n    return new ColorStop(color, stop, hint);\n  }\n\n  static fromTuple(value: ColorStopTuple): ColorStop {\n    const color = Color.fromAny(value[0]);\n    const stop = value[1] !== null ? Length.fromAny(value[1], \"%\") : null;\n    return new ColorStop(color, stop, null);\n  }\n\n  static fromAny(value: AnyColorStop): ColorStop {\n    if (value === void 0 || value === null || value instanceof ColorStop) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return ColorStop.parse(value);\n    } else if (ColorStop.isInit(value)) {\n      return ColorStop.fromInit(value);\n    } else if (ColorStop.isTuple(value)) {\n      return ColorStop.fromTuple(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static parse(string: string): ColorStop {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = ColorStopParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  static parseHint(string: string): ColorStop {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = ColorStopParser.parseHint(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  static parseList(string: string): ColorStop[] {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = ColorStopListParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  /** @internal */\n  static isInit(value: unknown): value is ColorStopInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as ColorStopInit;\n      return init.color !== void 0;\n    }\n    return false;\n  }\n\n  /** @internal */\n  static isTuple(value: unknown): value is ColorStopTuple {\n    return Array.isArray(value)\n        && value.length === 2\n        && Color.isAny(value[0])\n        && (value[1] === null || Length.isAny(value[1]));\n  }\n\n  /** @internal */\n  static isAny(value: unknown): value is AnyColorStop {\n    return value instanceof ColorStop\n        || ColorStop.isInit(value)\n        || ColorStop.isTuple(value)\n        || typeof value === \"string\";\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Interpolator} from \"@swim/util\";\nimport type {Length} from \"@swim/math\";\nimport type {Color} from \"../color/Color\";\nimport {ColorStop} from \"./ColorStop\";\n\n/** @internal */\nexport interface ColorStopInterpolator extends Interpolator<ColorStop> {\n  /** @internal */\n  readonly colorInterpolator: Interpolator<Color>;\n  /** @internal */\n  readonly stopInterpolator: Interpolator<Length | null>;\n  /** @internal */\n  readonly hintInterpolator: Interpolator<Length | null>;\n\n  readonly 0: ColorStop;\n\n  readonly 1: ColorStop;\n\n  equals(that: unknown): boolean;\n}\n\n/** @internal */\nexport const ColorStopInterpolator = (function (_super: typeof Interpolator) {\n  const ColorStopInterpolator = function (y0: ColorStop, y1: ColorStop): ColorStopInterpolator {\n    const interpolator = function (u: number): ColorStop {\n      const color = interpolator.colorInterpolator(u);\n      const stop = interpolator.stopInterpolator(u);\n      const hint = interpolator.hintInterpolator(u);\n      return new ColorStop(color, stop, hint);\n    } as ColorStopInterpolator;\n    Object.setPrototypeOf(interpolator, ColorStopInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>).colorInterpolator = y0.color.interpolateTo(y1.color);\n    (interpolator as Mutable<typeof interpolator>).stopInterpolator = Interpolator(y0.stop, y1.stop);\n    (interpolator as Mutable<typeof interpolator>).hintInterpolator = Interpolator(y0.hint, y1.hint);\n    return interpolator;\n  } as {\n    (y0: ColorStop, y1: ColorStop): ColorStopInterpolator;\n\n    /** @internal */\n    prototype: ColorStopInterpolator;\n  };\n\n  ColorStopInterpolator.prototype = Object.create(_super.prototype);\n  ColorStopInterpolator.prototype.constructor = ColorStopInterpolator;\n\n  Object.defineProperty(ColorStopInterpolator.prototype, 0, {\n    get(this: ColorStopInterpolator): ColorStop {\n      const color = this.colorInterpolator[0];\n      const stop = this.stopInterpolator[0];\n      const hint = this.hintInterpolator[0];\n      return new ColorStop(color, stop, hint);\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(ColorStopInterpolator.prototype, 1, {\n    get(this: ColorStopInterpolator): ColorStop {\n      const color = this.colorInterpolator[1];\n      const stop = this.stopInterpolator[1];\n      const hint = this.hintInterpolator[1];\n      return new ColorStop(color, stop, hint);\n    },\n    configurable: true,\n  });\n\n  ColorStopInterpolator.prototype.equals = function (that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ColorStopInterpolator) {\n      return this.colorInterpolator.equals(that.colorInterpolator)\n          && this.stopInterpolator.equals(that.stopInterpolator)\n          && this.hintInterpolator.equals(that.hintInterpolator);\n    }\n    return false;\n  };\n\n  return ColorStopInterpolator;\n})(Interpolator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport {Length, LengthParser} from \"@swim/math\";\nimport type {Color} from \"../color/Color\";\nimport {ColorParser} from \"../color/ColorParser\";\nimport {ColorStop} from \"./ColorStop\";\n\n/** @internal */\nexport class ColorStopParser extends Parser<ColorStop> {\n  private readonly colorParser: Parser<Color> | undefined;\n  private readonly stopParser: Parser<Length> | undefined;\n  private readonly hintParser: Parser<Length> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(colorParser?: Parser<Color>, stopParser?: Parser<Length>,\n              hintParser?: Parser<Length>, step?: number) {\n    super();\n    this.colorParser = colorParser;\n    this.stopParser = stopParser;\n    this.hintParser = hintParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<ColorStop> {\n    return ColorStopParser.parse(input, this.colorParser, this.stopParser,\n                                 this.hintParser, this.step);\n  }\n\n  static parse(input: Input, colorParser?: Parser<Color>, stopParser?: Parser<Length>,\n               hintParser?: Parser<Length>, step: number = 4): Parser<ColorStop> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input.step();\n      }\n      if (input.isCont()) {\n        if (c === 45/*'-'*/ || c === 46/*'.'*/ || c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          step = 2;\n        } else {\n          step = 7;\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 2) {\n      if (hintParser === void 0) {\n        hintParser = LengthParser.parse(input);\n      } else {\n        hintParser = hintParser.feed(input);\n      }\n      if (hintParser !== void 0) {\n        if (hintParser.isDone()) {\n          step = 3;\n        } else if (hintParser.isError()) {\n          return hintParser.asError();\n        }\n      }\n    }\n    if (step === 3) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input.step();\n      }\n      if (input.isCont()) {\n        if (c === 44/*','*/) {\n          input.step();\n          step = 4;\n        } else {\n          stopParser = hintParser;\n          hintParser = void 0;\n          step = 7;\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 4) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input.step();\n      }\n      if (input.isCont()) {\n        if (c === 45/*'-'*/ || c === 46/*'.'*/ || c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          step = 5;\n        } else {\n          step = 7;\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 5) {\n      if (stopParser === void 0) {\n        stopParser = LengthParser.parse(input);\n      } else {\n        stopParser = stopParser.feed(input);\n      }\n      if (stopParser !== void 0) {\n        if (stopParser.isDone()) {\n          step = 6;\n        } else if (stopParser.isError()) {\n          return stopParser.asError();\n        }\n      }\n    }\n    if (step === 6) {\n      if (input.isCont()) {\n        if (Unicode.isSpace(input.head())) {\n          input.step();\n          step = 7;\n        } else {\n          return Parser.error(Diagnostic.expected(\"color\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 7) {\n      if (colorParser === void 0) {\n        colorParser = ColorParser.parse(input);\n      } else {\n        colorParser = colorParser.feed(input);\n      }\n      if (colorParser !== void 0) {\n        if (colorParser.isDone()) {\n          if (stopParser !== void 0) {\n            const hint = hintParser !== void 0 ? hintParser.bind() : null;\n            return Parser.done(new ColorStop(colorParser.bind(), stopParser.bind(), hint));\n          } else {\n            step = 8;\n          }\n        } else if (colorParser.isError()) {\n          return colorParser.asError();\n        }\n      }\n    }\n    if (step === 8) {\n      if (input.isCont() && Unicode.isSpace(input.head())) {\n        input.step();\n        step = 9;\n      } else if (!input.isEmpty()) {\n        const hint = hintParser !== void 0 ? hintParser.bind() : null;\n        return Parser.done(new ColorStop(colorParser!.bind(), null, hint));\n      }\n    }\n    if (step === 9) {\n      if (stopParser === void 0) {\n        stopParser = LengthParser.parse(input);\n      } else {\n        stopParser = stopParser.feed(input);\n      }\n      if (stopParser !== void 0) {\n        if (stopParser.isDone()) {\n          const hint = hintParser !== void 0 ? hintParser.bind() : null;\n          return Parser.done(new ColorStop(colorParser!.bind(), stopParser.bind(), hint));\n        } else if (stopParser.isError()) {\n          return stopParser.asError();\n        }\n      }\n    }\n    return new ColorStopParser(colorParser, stopParser, hintParser, step);\n  }\n\n  static parseHint(input: Input): Parser<ColorStop> {\n    return ColorStopParser.parse(input, void 0, void 0, void 0, 1);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Unicode} from \"@swim/codec\";\nimport type {ColorStop} from \"./ColorStop\";\nimport {ColorStopParser} from \"./ColorStopParser\";\n\n/** @internal */\nexport class ColorStopListParser extends Parser<ColorStop[]> {\n  private readonly stops: ReadonlyArray<ColorStop> | undefined;\n  private readonly stopParser: Parser<ColorStop> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(stops?: ReadonlyArray<ColorStop>, stopParser?: Parser<ColorStop>, step?: number) {\n    super();\n    this.stops = stops;\n    this.stopParser = stopParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<ColorStop[]> {\n    return ColorStopListParser.parse(input, this.stops !== void 0 ? this.stops.slice(0) : void 0,\n                                     this.stopParser, this.step);\n  }\n\n  static parse(input: Input, stops?: ColorStop[], stopParser?: Parser<ColorStop>,\n               step: number = 1): Parser<ColorStop[]> {\n    let c = 0;\n    if (step === 1) {\n      if (stopParser === void 0) {\n        while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n          input.step();\n        }\n        if (!input.isEmpty()) {\n          stopParser = ColorStopParser.parse(input);\n        }\n      } else {\n        stopParser = stopParser.feed(input);\n      }\n      if (stopParser !== void 0) {\n        if (stopParser.isDone()) {\n          if (stops === void 0) {\n            stops = [];\n          }\n          stops.push(stopParser.bind());\n          stopParser = void 0;\n          step = 2;\n        } else if (stopParser.isError()) {\n          return stopParser.asError();\n        }\n      }\n    }\n    do {\n      if (step === 2) {\n        while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont() && c === 44/*','*/) {\n          input = input.step();\n          step = 3;\n        } else {\n          return Parser.done(stops!);\n        }\n      }\n      if (step === 3) {\n        if (stopParser === void 0) {\n          while (input.isCont() && Unicode.isSpace(input.head())) {\n            input.step();\n          }\n          if (!input.isEmpty()) {\n            stopParser = ColorStopParser.parseHint(input);\n          }\n        } else {\n          stopParser = stopParser.feed(input);\n        }\n        if (stopParser !== void 0) {\n          if (stopParser.isDone()) {\n            stops!.push(stopParser.bind());\n            stopParser = void 0;\n            step = 2;\n            continue;\n          } else if (stopParser.isError()) {\n            return stopParser.asError();\n          }\n        }\n      }\n      break;\n    } while (true);\n    return new ColorStopListParser(stops, stopParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals, Equivalent, Mutable, Arrays, Values, Interpolate, Interpolator} from \"@swim/util\";\nimport {Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport {Angle} from \"@swim/math\";\nimport {AnyColorStop, ColorStop} from \"./ColorStop\";\nimport {LinearGradientInterpolator} from \"../\"; // forward import\nimport {LinearGradientAngleParser} from \"../\"; // forward import\nimport {LinearGradientParser} from \"../\"; // forward import\n\n/** @public */\nexport type AnyLinearGradient = LinearGradient | LinearGradientInit | string;\n\n/** @public */\nexport type AnyLinearGradientAngle = LinearGradientAngle | number;\n\n/** @public */\nexport type LinearGradientAngle = Angle | LinearGradientSide | LinearGradientCorner;\n\n/** @public */\nexport type LinearGradientCorner = [LinearGradientSide, LinearGradientSide];\n\n/** @public */\nexport type LinearGradientSide = \"left\" | \"right\" | \"top\" | \"bottom\";\n\n/** @public */\nexport interface LinearGradientInit {\n  angle: AnyLinearGradientAngle;\n  stops: AnyColorStop[];\n}\n\n/** @public */\nexport class LinearGradient implements Interpolate<LinearGradient>, Equals, Equivalent {\n  constructor(angle: LinearGradientAngle, stops: ReadonlyArray<ColorStop>) {\n    this.angle = angle;\n    this.stops = stops;\n    this.stringValue = void 0;\n  }\n\n  readonly angle: LinearGradientAngle;\n\n  withAngle(angle: AnyLinearGradientAngle): LinearGradient {\n    if (angle instanceof Angle || typeof angle === \"number\") {\n      angle = Angle.fromAny(angle, \"deg\");\n    }\n    return new LinearGradient(angle, this.stops);\n  }\n\n  readonly stops: ReadonlyArray<ColorStop>;\n\n  withStops(stops: ReadonlyArray<AnyColorStop>): LinearGradient {\n    const n = stops.length;\n    const array = new Array<ColorStop>(n);\n    for (let i = 0; i < n; i += 1) {\n      array[i] = ColorStop.fromAny(stops[i]!);\n    }\n    return new LinearGradient(this.angle, array);\n  }\n\n  interpolateTo(that: LinearGradient): Interpolator<LinearGradient>;\n  interpolateTo(that: unknown): Interpolator<LinearGradient> | null;\n  interpolateTo(that: unknown): Interpolator<LinearGradient> | null {\n    if (that instanceof LinearGradient) {\n      return LinearGradientInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LinearGradient) {\n      return Values.equivalent(this.angle, that.angle, epsilon)\n          && Arrays.equivalent(this.stops, that.stops, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LinearGradient) {\n      return Values.equal(this.angle, that.angle)\n          && Arrays.equal(this.stops, that.stops);\n    }\n    return false;\n  }\n\n  /** @internal */\n  readonly stringValue: string | undefined;\n\n  toString(): string {\n    let s = this.stringValue;\n    if (s === void 0) {\n      s = \"linear-gradient(\";\n      if (this.angle instanceof Angle) {\n        s += this.angle.toString();\n      } else {\n        s += \"to\"\n        if (typeof this.angle === \"string\") {\n          s += \" \";\n          s += this.angle;\n        } else {\n          for (let i = 0, n = this.angle.length; i < n; i += 1) {\n            s += \" \";\n            s += this.angle[i];\n          }\n        }\n      }\n      for (let i = 0, n = this.stops.length; i < n; i += 1) {\n        s += \", \";\n        s += this.stops[i]!.toString();\n      }\n      s += \")\";\n      (this as Mutable<this>).stringValue = s;\n    }\n    return s;\n  }\n\n  static create(angle: AnyLinearGradientAngle, ...stops: AnyColorStop[]): LinearGradient {\n    if (angle instanceof Angle || typeof angle === \"number\") {\n      angle = Angle.fromAny(angle, \"deg\");\n    }\n    const n = stops.length;\n    const array = new Array<ColorStop>(n);\n    for (let i = 0; i < n; i += 1) {\n      const stop = stops[i];\n      if (typeof stop === \"string\") {\n        if (i === 0) {\n          array[i] = ColorStop.parse(stop);\n        } else {\n          array[i] = ColorStop.parseHint(stop);\n        }\n      } else {\n        array[i] = ColorStop.fromAny(stops[i]!);\n      }\n    }\n    return new LinearGradient(angle, array);\n  }\n\n  static fromInit(init: LinearGradientInit): LinearGradient {\n    let angle: AnyLinearGradientAngle = init.angle;\n    if (angle instanceof Angle || typeof angle === \"number\") {\n      angle = Angle.fromAny(angle, \"deg\");\n    }\n    const n = init.stops.length;\n    const array = new Array<ColorStop>(n);\n    for (let i = 0; i < n; i += 1) {\n      array[i] = ColorStop.fromAny(init.stops[i]!);\n    }\n    return new LinearGradient(angle, array);\n  }\n\n  static fromAny(value: AnyLinearGradient): LinearGradient {\n    if (value === void 0 || value === null || value instanceof LinearGradient) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return LinearGradient.parse(value);\n    } else if (typeof value === \"object\" && value !== null) {\n      return LinearGradient.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static parse(string: string): LinearGradient {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = LinearGradientParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  static parseAngle(string: string): LinearGradientAngle {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = LinearGradientAngleParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  /** @internal */\n  static isInit(value: unknown): value is LinearGradientInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as LinearGradientInit;\n      return init.angle !== void 0 && init.stops !== void 0;\n    }\n    return false;\n  }\n\n  /** @internal */\n  static isAny(value: unknown): value is AnyLinearGradient {\n    return value instanceof LinearGradient\n        || LinearGradient.isInit(value)\n        || typeof value === \"string\";\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Interpolator} from \"@swim/util\";\nimport type {ColorStop} from \"./ColorStop\";\nimport {LinearGradientAngle, LinearGradient} from \"./LinearGradient\";\n\n/** @internal */\nexport interface LinearGradientInterpolator extends Interpolator<LinearGradient> {\n  /** @internal */\n  readonly angleInterpolator: Interpolator<LinearGradientAngle>;\n  /** @internal */\n  readonly stopInterpolators: ReadonlyArray<Interpolator<ColorStop>>;\n\n  readonly 0: LinearGradient;\n\n  readonly 1: LinearGradient;\n\n  equals(that: unknown): boolean;\n}\n\n/** @internal */\nexport const LinearGradientInterpolator = (function (_super: typeof Interpolator) {\n  const LinearGradientInterpolator = function (g0: LinearGradient, g1: LinearGradient): LinearGradientInterpolator {\n    const interpolator = function (u: number): LinearGradient {\n      const angle = interpolator.angleInterpolator(u);\n      const stopInterpolators = interpolator.stopInterpolators;\n      const stopCount = stopInterpolators.length;\n      const stops = new Array<ColorStop>(stopCount);\n      for (let i = 0; i < stopCount; i += 1) {\n        stops[i] = stopInterpolators[i]!(u);\n      }\n      return new LinearGradient(angle, stops);\n    } as LinearGradientInterpolator;\n    Object.setPrototypeOf(interpolator, LinearGradientInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>).angleInterpolator = Interpolator(g0.angle, g1.angle);\n    const stops0 = g0.stops;\n    const stops1 = g1.stops;\n    const stopCount = Math.min(stops0.length, stops1.length);\n    const stopInterpolators = new Array<Interpolator<ColorStop>>(stopCount);\n    for (let i = 0; i < stopCount; i += 1) {\n      stopInterpolators[i] = stops0[i]!.interpolateTo(stops1[i]!);\n    }\n    (interpolator as Mutable<typeof interpolator>).stopInterpolators = stopInterpolators;\n    return interpolator;\n  } as {\n    (g0: LinearGradient, g1: LinearGradient): LinearGradientInterpolator;\n\n    /** @internal */\n    prototype: LinearGradientInterpolator;\n  };\n\n  LinearGradientInterpolator.prototype = Object.create(_super.prototype);\n  LinearGradientInterpolator.prototype.constructor = LinearGradientInterpolator;\n\n  Object.defineProperty(LinearGradientInterpolator.prototype, 0, {\n    get(this: LinearGradientInterpolator): LinearGradient {\n      const angle = this.angleInterpolator[0];\n      const stopInterpolators = this.stopInterpolators;\n      const stopCount = stopInterpolators.length;\n      const stops = new Array<ColorStop>(stopCount);\n      for (let i = 0; i < stopCount; i += 1) {\n        stops[i] = stopInterpolators[i]![0];\n      }\n      return new LinearGradient(angle, stops);\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(LinearGradientInterpolator.prototype, 1, {\n    get(this: LinearGradientInterpolator): LinearGradient {\n      const angle = this.angleInterpolator[1];\n      const stopInterpolators = this.stopInterpolators;\n      const stopCount = stopInterpolators.length;\n      const stops = new Array<ColorStop>(stopCount);\n      for (let i = 0; i < stopCount; i += 1) {\n        stops[i] = stopInterpolators[i]![1];\n      }\n      return new LinearGradient(angle, stops);\n    },\n    configurable: true,\n  });\n\n  LinearGradientInterpolator.prototype.equals = function (that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LinearGradientInterpolator) {\n      if (this.angleInterpolator.equals(that.angleInterpolator)) {\n        const n = this.stopInterpolators.length;\n        if (n === that.stopInterpolators.length) {\n          for (let i = 0; i < n; i += 1) {\n            if (!this.stopInterpolators[i]!.equals(that.stopInterpolators[i]!)) {\n              return false;\n            }\n          }\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  return LinearGradientInterpolator;\n})(Interpolator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport {Angle, AngleParser} from \"@swim/math\";\nimport type {LinearGradientAngle, LinearGradientSide} from \"./LinearGradient\";\n\n/** @internal */\nexport class LinearGradientAngleParser extends Parser<LinearGradientAngle> {\n  private readonly identOutput: Output<string> | undefined;\n  private readonly angleParser: Parser<Angle> | undefined;\n  private readonly side: LinearGradientSide | undefined;\n  private readonly step: number | undefined;\n\n  constructor(identOutput?: Output<string>, angleParser?: Parser<Angle>,\n              side?: LinearGradientSide, step?: number) {\n    super();\n    this.identOutput = identOutput;\n    this.angleParser = angleParser;\n    this.side = side;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<LinearGradientAngle> {\n    return LinearGradientAngleParser.parse(input, this.identOutput, this.angleParser,\n                                           this.side, this.step);\n  }\n\n  static parse(input: Input, identOutput?: Output<string>, angleParser?: Parser<Angle>,\n               side?: LinearGradientSide, step: number = 1): Parser<LinearGradientAngle> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input.step();\n      }\n      if (input.isCont()) {\n        if (c === 45/*'-'*/ || c === 46/*'.'*/ || c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          step = 2;\n        } else {\n          step = 3;\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 2) {\n      if (angleParser === void 0) {\n        angleParser = AngleParser.parse(input, \"deg\");\n      } else {\n        angleParser = angleParser.feed(input);\n      }\n      if (angleParser !== void 0) {\n        if (angleParser.isDone()) {\n          return angleParser;\n        } else if (angleParser.isError()) {\n          return angleParser.asError();\n        }\n      }\n    }\n    if (step === 3) {\n      if (identOutput === void 0) {\n        identOutput = Unicode.stringOutput();\n      }\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n        input = input.step();\n        identOutput.write(c);\n      }\n      if (!input.isEmpty()) {\n        const ident = identOutput.bind();\n        if (ident === \"to\") {\n          identOutput = void 0;\n          step = 4;\n        } else {\n          return Parser.error(Diagnostic.message(\"unexpected \" + ident, input));\n        }\n      }\n    }\n    if (step === 4) {\n      if (input.isCont()) {\n        if (Unicode.isSpace(input.head())) {\n          input.step();\n          step = 5;\n        } else {\n          return Parser.error(Diagnostic.expected(\"side or corner\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 5) {\n      if (identOutput === void 0) {\n        identOutput = Unicode.stringOutput();\n      }\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n        input = input.step();\n        identOutput.write(c);\n      }\n      if (!input.isEmpty()) {\n        const ident = identOutput.bind();\n        identOutput = void 0;\n        switch (ident) {\n          case \"left\":\n          case \"right\":\n            side = ident;\n            step = 6;\n            break;\n          case \"top\":\n          case \"bottom\":\n            side = ident;\n            step = 7;\n            break;\n          default: return Parser.error(Diagnostic.message(\"unknown side: \" + ident, input));\n        }\n      }\n    }\n    if (step === 6) {\n      if (identOutput === void 0) {\n        while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont() && Unicode.isAlpha(c)) {\n          identOutput = Unicode.stringOutput();\n        } else if (!input.isEmpty()) {\n          return Parser.done(side!);\n        }\n      }\n      if (identOutput !== void 0) {\n        while (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n          input = input.step();\n          identOutput.write(c);\n        }\n        if (!input.isEmpty()) {\n          const ident = identOutput.bind();\n          identOutput = void 0;\n          switch (ident) {\n            case \"top\":\n            case \"bottom\": return Parser.done([side as \"left\" | \"right\", ident]);\n            default: return Parser.error(Diagnostic.message(\"unknown side: \" + ident, input));\n          }\n        }\n      }\n    }\n    if (step === 7) {\n      if (identOutput === void 0) {\n        while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n          input = input.step();\n        }\n        if (input.isCont() && Unicode.isAlpha(c)) {\n          identOutput = Unicode.stringOutput();\n        } else if (!input.isEmpty()) {\n          return Parser.done(side!);\n        }\n      }\n      if (identOutput !== void 0) {\n        while (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n          input = input.step();\n          identOutput.write(c);\n        }\n        if (!input.isEmpty()) {\n          const ident = identOutput.bind();\n          identOutput = void 0;\n          switch (ident) {\n            case \"left\":\n            case \"right\": return Parser.done([side as \"top\" | \"bottom\", ident])\n            default: return Parser.error(Diagnostic.message(\"unknown side: \" + ident, input));\n          }\n        }\n      }\n    }\n    return new LinearGradientAngleParser(identOutput, angleParser, side, step);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport type {ColorStop} from \"./ColorStop\";\nimport {ColorStopListParser} from \"./ColorStopListParser\";\nimport {LinearGradientAngle, LinearGradient} from \"./LinearGradient\";\nimport {LinearGradientAngleParser} from \"./LinearGradientAngleParser\";\n\n/** @internal */\nexport class LinearGradientParser extends Parser<LinearGradient> {\n  private readonly identOutput: Output<string> | undefined;\n  private readonly angleParser: Parser<LinearGradientAngle> | undefined;\n  private readonly stopsParser: Parser<ColorStop[]> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(identOutput?: Output<string>, angleParser?: Parser<LinearGradientAngle>,\n              stopsParser?: Parser<ColorStop[]>, step?: number) {\n    super();\n    this.identOutput = identOutput;\n    this.angleParser = angleParser;\n    this.stopsParser = stopsParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<LinearGradient> {\n    return LinearGradientParser.parse(input, this.identOutput, this.angleParser,\n                                      this.stopsParser, this.step);\n  }\n\n  static parse(input: Input, identOutput?: Output<string>, angleParser?: Parser<LinearGradientAngle>,\n               stopsParser?: Parser<ColorStop[]>, step: number = 1): Parser<LinearGradient> {\n    let c = 0;\n    if (step === 1) {\n      if (identOutput === void 0) {\n        identOutput = Unicode.stringOutput();\n      }\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c) || c === 45/*'-'*/)) {\n        input = input.step();\n        identOutput.write(c);\n      }\n      if (!input.isEmpty()) {\n        const ident = identOutput.bind();\n        if (ident === \"linear-gradient\") {\n          identOutput = void 0;\n          step = 2;\n        } else {\n          return Parser.error(Diagnostic.message(\"unexpected \" + ident, input));\n        }\n      }\n    }\n    if (step === 2) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont() && c === 40/*'('*/) {\n        input.step();\n        step = 3;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"(\", input));\n      }\n    }\n    if (step === 3) {\n      if (angleParser === void 0) {\n        angleParser = LinearGradientAngleParser.parse(input);\n      } else {\n        angleParser = angleParser.feed(input);\n      }\n      if (angleParser !== void 0) {\n        if (angleParser.isDone()) {\n          step = 4;\n        } else if (angleParser.isError()) {\n          return angleParser.asError();\n        }\n      }\n    }\n    if (step === 4) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input = input.step();\n      }\n      if (input.isCont() && c === 44/*','*/) {\n        input = input.step();\n        step = 5;\n      } else {\n        return Parser.error(Diagnostic.expected(\"color stops\", input));\n      }\n    }\n    if (step === 5) {\n      if (stopsParser === void 0) {\n        stopsParser = ColorStopListParser.parse(input);\n      } else {\n        stopsParser = stopsParser.feed(input);\n      }\n      if (stopsParser !== void 0) {\n        if (stopsParser.isDone()) {\n          step = 6;\n        } else if (stopsParser.isError()) {\n          return stopsParser.asError();\n        }\n      }\n    }\n    if (step === 6) {\n      while (input.isCont() && Unicode.isSpace(input.head())) {\n        input.step();\n      }\n      if (input.isCont() && input.head() === 41/*')'*/) {\n        input.step();\n        return Parser.done(new LinearGradient(angleParser!.bind(), stopsParser!.bind()));\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\")\", input));\n      }\n    }\n    return new LinearGradientParser(identOutput, angleParser, stopsParser, step);\n  }\n\n  /** @internal */\n  static parseRest(input: Input, identOutput?: Output<string>): Parser<LinearGradient> {\n    return LinearGradientParser.parse(input, identOutput, void 0, void 0, 2);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Equals, Equivalent, Mutable, Interpolate, Interpolator} from \"@swim/util\";\nimport {Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport {Item, Value, Text, Form} from \"@swim/structure\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport {AnyColor, Color} from \"../color/Color\";\nimport {BoxShadowInterpolator} from \"../\"; // forward import\nimport {BoxShadowForm} from \"../\"; // forward import\nimport {BoxShadowParser} from \"../\"; // forward import\n\n/** @public */\nexport type AnyBoxShadow = BoxShadow | BoxShadowInit | string | ReadonlyArray<AnyBoxShadow>;\n\n/** @public */\nexport interface BoxShadowInit {\n  inset?: boolean;\n  offsetX?: AnyLength;\n  offsetY?: AnyLength;\n  blurRadius?: AnyLength;\n  spreadRadius?: AnyLength;\n  color?: AnyColor;\n}\n\n/** @public */\nexport class BoxShadow implements Interpolate<BoxShadow>, Equals, Equivalent {\n  constructor(inset: boolean, offsetX: Length, offsetY: Length, blurRadius: Length,\n              spreadRadius: Length, color: Color, next: BoxShadow | null) {\n    this.inset = inset;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    this.blurRadius = blurRadius;\n    this.spreadRadius = spreadRadius;\n    this.color = color;\n    this.next = next;\n    this.stringValue = void 0;\n  }\n\n  readonly inset: boolean;\n\n  withInset(inset: boolean): BoxShadow {\n    if (inset === this.inset) {\n      return this;\n    } else {\n      return new BoxShadow(inset, this.offsetX, this.offsetY, this.blurRadius,\n                           this.spreadRadius, this.color, this.next);\n    }\n  }\n\n  readonly offsetX: Length;\n\n  withOffsetX(offsetX: AnyLength): BoxShadow {\n    offsetX = Length.fromAny(offsetX);\n    if (offsetX.equals(this.offsetX)) {\n      return this;\n    } else {\n      return new BoxShadow(this.inset, offsetX, this.offsetY, this.blurRadius,\n                           this.spreadRadius, this.color, this.next);\n    }\n  }\n\n  readonly offsetY: Length;\n\n  withOffsetY(offsetY: AnyLength): BoxShadow {\n    offsetY = Length.fromAny(offsetY);\n    if (offsetY.equals(this.offsetY)) {\n      return this;\n    } else {\n      return new BoxShadow(this.inset, this.offsetX, offsetY, this.blurRadius,\n                           this.spreadRadius, this.color, this.next);\n    }\n  }\n\n  readonly blurRadius: Length;\n\n  withBlurRadius(blurRadius: AnyLength): BoxShadow {\n    blurRadius = Length.fromAny(blurRadius);\n    if (blurRadius.equals(this.blurRadius)) {\n      return this;\n    } else {\n      return new BoxShadow(this.inset, this.offsetX, this.offsetY, blurRadius,\n                           this.spreadRadius, this.color, this.next);\n    }\n  }\n\n  readonly spreadRadius: Length;\n\n  withSpreadRadius(spreadRadius: AnyLength): BoxShadow {\n    spreadRadius = Length.fromAny(spreadRadius);\n    if (spreadRadius.equals(this.spreadRadius)) {\n      return this;\n    } else {\n      return new BoxShadow(this.inset, this.offsetX, this.offsetY, this.blurRadius,\n                           spreadRadius, this.color, this.next);\n    }\n  }\n\n  readonly color: Color;\n\n  withColor(color: AnyColor): BoxShadow {\n    color = Color.fromAny(color);\n    if (color.equals(this.color)) {\n      return this;\n    } else {\n      return new BoxShadow(this.inset, this.offsetX, this.offsetY, this.blurRadius,\n                           this.spreadRadius, color, this.next);\n    }\n  }\n\n  readonly next: BoxShadow | null;\n\n  and(value: AnyBoxShadow): BoxShadow;\n  and(offsetX: AnyLength, offsetY: AnyLength, color: AnyColor): BoxShadow;\n  and(offsetX: AnyLength, offsetY: AnyLength, blurRadius: AnyLength, color: AnyColor): BoxShadow;\n  and(offsetX: AnyLength, offsetY: AnyLength, blurRadius: AnyLength, spreadRadius: AnyLength, color: AnyColor): BoxShadow;\n  and(inset: boolean, offsetX: AnyLength, offsetY: AnyLength, color: AnyColor): BoxShadow;\n  and(inset: boolean, offsetX: AnyLength, offsetY: AnyLength, blurRadius: AnyLength, color: AnyColor): BoxShadow;\n  and(inset: boolean, offsetX: AnyLength, offsetY: AnyLength, blurRadius: AnyLength, spreadRadius: AnyLength, color: AnyColor): BoxShadow;\n  and(inset: AnyBoxShadow | AnyLength | boolean, offsetX?: AnyLength, offsetY?: AnyColor | AnyLength, blurRadius?: AnyColor | AnyLength, spreadRadius?: AnyColor | AnyLength, color?: AnyColor): BoxShadow {\n    let next: BoxShadow | null;\n    if (this.next !== null) {\n      // eslint-disable-next-line prefer-rest-params, prefer-spread\n      next = this.next.and.apply(this.next, arguments as any);\n    } else {\n      // eslint-disable-next-line prefer-rest-params, prefer-spread\n      next = BoxShadow.create.apply(BoxShadow, arguments as any);\n    }\n    return new BoxShadow(this.inset, this.offsetX, this.offsetY, this.blurRadius,\n                         this.spreadRadius, this.color, next);\n  }\n\n  interpolateTo(that: BoxShadow): Interpolator<BoxShadow>;\n  interpolateTo(that: unknown): Interpolator<BoxShadow> | null;\n  interpolateTo(that: unknown): Interpolator<BoxShadow> | null {\n    if (that instanceof BoxShadow) {\n      return BoxShadowInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BoxShadow) {\n      return this.inset === that.inset\n          && this.offsetX.equivalentTo(that.offsetX, epsilon)\n          && this.offsetY.equivalentTo(that.offsetY, epsilon)\n          && this.blurRadius.equivalentTo(that.blurRadius, epsilon)\n          && this.spreadRadius.equivalentTo(that.spreadRadius, epsilon)\n          && this.color.equivalentTo(that.color, epsilon)\n          && Equivalent(this.next, that.next, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BoxShadow) {\n      return this.inset === that.inset && this.offsetX.equals(that.offsetX)\n          && this.offsetY.equals(that.offsetY) && this.blurRadius.equals(that.blurRadius)\n          && this.spreadRadius.equals(that.spreadRadius) && this.color.equals(that.color)\n          && Equals(this.next, that.next);\n    }\n    return false;\n  }\n\n  /** @internal */\n  readonly stringValue: string | undefined;\n\n  toString(): string {\n    let s = this.stringValue;\n    if (s === void 0) {\n      s = \"\";\n      if (this.inset) {\n        s += \"inset\";\n        s += \" \";\n      }\n      s += this.offsetX.toString();\n      s += \" \";\n      s += this.offsetY.toString();\n      s += \" \";\n      s += this.blurRadius.toString();\n      s += \" \";\n      s += this.spreadRadius.toString();\n      s += \" \";\n      s += this.color.toString();\n      if (this.next !== null) {\n        s += \", \";\n        s += this.next.toString();\n      }\n      (this as Mutable<this>).stringValue = s;\n    }\n    return s;\n  }\n\n  static create(value: AnyBoxShadow): BoxShadow;\n  static create(offsetX: AnyLength, offsetY: AnyLength, color: AnyColor): BoxShadow;\n  static create(offsetX: AnyLength, offsetY: AnyLength, blurRadius: AnyLength, color: AnyColor): BoxShadow;\n  static create(offsetX: AnyLength, offsetY: AnyLength, blurRadius: AnyLength, spreadRadius: AnyLength, color: AnyColor): BoxShadow;\n  static create(inset: boolean, offsetX: AnyLength, offsetY: AnyLength, color: AnyColor): BoxShadow;\n  static create(inset: boolean, offsetX: AnyLength, offsetY: AnyLength, blurRadius: AnyLength, color: AnyColor): BoxShadow;\n  static create(inset: boolean, offsetX: AnyLength, offsetY: AnyLength, blurRadius: AnyLength, spreadRadius: AnyLength, color: AnyColor): BoxShadow;\n  static create(inset: AnyBoxShadow | AnyLength | boolean, offsetX?: AnyLength, offsetY?: AnyColor | AnyLength, blurRadius?: AnyColor | AnyLength, spreadRadius?: AnyColor | AnyLength, color?: AnyColor): BoxShadow {\n    if (arguments.length === 1) {\n      return BoxShadow.fromAny(inset as AnyBoxShadow)!;\n    } else if (typeof inset !== \"boolean\") {\n      if (arguments.length === 3) {\n        color = Color.fromAny(offsetY as AnyColor);\n        spreadRadius = Length.zero();\n        blurRadius = Length.zero();\n        offsetY = Length.fromAny(offsetX!);\n        offsetX = Length.fromAny(inset as AnyLength);\n      } else if (arguments.length === 4) {\n        color = Color.fromAny(blurRadius as AnyColor);\n        spreadRadius = Length.zero();\n        blurRadius = Length.fromAny(offsetY as AnyLength);\n        offsetY = Length.fromAny(offsetX!);\n        offsetX = Length.fromAny(inset as AnyLength);\n      } else if (arguments.length === 5) {\n        color = Color.fromAny(spreadRadius as AnyColor);\n        spreadRadius = Length.fromAny(blurRadius as AnyLength);\n        blurRadius = Length.fromAny(offsetY as AnyLength);\n        offsetY = Length.fromAny(offsetX!);\n        offsetX = Length.fromAny(inset as AnyLength);\n      } else {\n        throw new Error(inset + \", \" + offsetX + \", \" + offsetY + \", \" + blurRadius + \", \" + spreadRadius + \", \" + color);\n      }\n      inset = false;\n    } else {\n      if (arguments.length === 4) {\n        color = Color.fromAny(blurRadius as AnyColor);\n        spreadRadius = Length.zero();\n        blurRadius = Length.zero();\n        offsetY = Length.fromAny(offsetY as AnyLength);\n        offsetX = Length.fromAny(offsetX!);\n      } else if (arguments.length === 5) {\n        color = Color.fromAny(spreadRadius as AnyColor);\n        spreadRadius = Length.zero();\n        blurRadius = Length.fromAny(blurRadius as AnyLength);\n        offsetY = Length.fromAny(offsetY as AnyLength);\n        offsetX = Length.fromAny(offsetX!);\n      } else if (arguments.length === 6) {\n        color = Color.fromAny(color!);\n        spreadRadius = Length.fromAny(spreadRadius as AnyLength);\n        blurRadius = Length.fromAny(blurRadius as AnyLength);\n        offsetY = Length.fromAny(offsetY as AnyLength);\n        offsetX = Length.fromAny(offsetX!);\n      } else {\n        throw new Error(inset + \", \" + offsetX + \", \" + offsetY + \", \" + blurRadius + \", \" + spreadRadius + \", \" + color);\n      }\n    }\n    return new BoxShadow(inset, offsetX, offsetY, blurRadius, spreadRadius, color, null);\n  }\n\n  static fromInit(init: BoxShadowInit): BoxShadow {\n    const inset = init.inset || false;\n    const offsetX = init.offsetX !== void 0 ? Length.fromAny(init.offsetX) : Length.zero();\n    const offsetY = init.offsetY !== void 0 ? Length.fromAny(init.offsetY) : Length.zero();\n    const blurRadius = init.blurRadius !== void 0 ? Length.fromAny(init.blurRadius) : Length.zero();\n    const spreadRadius = init.spreadRadius !== void 0 ? Length.fromAny(init.spreadRadius) : Length.zero();\n    const color = init.color !== void 0 ? Color.fromAny(init.color) : Color.black();\n    return new BoxShadow(inset, offsetX, offsetY, blurRadius, spreadRadius, color, null);\n  }\n\n  static fromArray(array: ReadonlyArray<BoxShadow>): BoxShadow {\n    let boxShadow = BoxShadow.fromAny(array[0]!)!;\n    for (let i = 1; i < array.length; i += 1) {\n      boxShadow = boxShadow.and(array[i]!);\n    }\n    return boxShadow;\n  }\n\n  static fromAny(...values: AnyBoxShadow[]): BoxShadow | null {\n    let value: AnyBoxShadow;\n    if (arguments.length === 0) {\n      return null;\n    } else if (arguments.length === 1) {\n      value = values[0]!;\n    } else {\n      value = values;\n    }\n    if (value === void 0 || value === null || value instanceof BoxShadow) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return BoxShadow.parse(value);\n    } else if (typeof value === \"object\" && value !== null && (value as any).length === void 0) {\n      return BoxShadow.fromInit(value as BoxShadowInit);\n    } else if (typeof value === \"object\" && value !== null && (value as any).length > 0) {\n      return BoxShadow.fromArray(value as ReadonlyArray<BoxShadow>);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromValue(value: Value): BoxShadow | null {\n    let boxShadow: BoxShadow | null = null;\n    value.forEach(function (item: Item, index: number) {\n      const header = item.header(\"boxShadow\");\n      if (header.isDefined()) {\n        let inset: boolean | undefined;\n        let offsetX: Length | undefined;\n        let offsetY: Length | undefined;\n        let blurRadius: Length | undefined;\n        let spreadRadius: Length | undefined;\n        let color: Color | undefined;\n        header.forEach(function (item: Item, index: number): void {\n          const key = item.key.stringValue();\n          if (key !== void 0) {\n            if (key === \"inset\") {\n              inset = item.toValue().booleanValue(inset);\n            } else if (key === \"offsetX\") {\n              offsetX = item.toValue().cast(Length.form(), offsetX);\n            } else if (key === \"offsetY\") {\n              offsetY = item.toValue().cast(Length.form(), offsetY);\n            } else if (key === \"blurRadius\") {\n              blurRadius = item.toValue().cast(Length.form(), blurRadius);\n            } else if (key === \"spreadRadius\") {\n              spreadRadius = item.toValue().cast(Length.form(), spreadRadius);\n            } else if (key === \"color\") {\n              color = item.toValue().cast(Color.form(), color);\n            }\n          } else if (item instanceof Value) {\n            if (index === 0 && item instanceof Text && item.value === \"inset\") {\n              inset = true;\n            } else if (index === 0 || index === 1 && inset !== void 0) {\n              offsetX = item.cast(Length.form(), offsetX);\n            } else if (index === 1 || index === 2 && inset !== void 0) {\n              offsetY = item.cast(Length.form(), offsetY);\n            } else if (index === 2 || index === 3 && inset !== void 0) {\n              blurRadius = item.cast(Length.form(), blurRadius);\n              if (blurRadius === void 0) {\n                color = item.cast(Color.form(), color);\n              }\n            } else if ((index === 3 || index === 4 && inset === void 0) && color === void 0) {\n              spreadRadius = item.cast(Length.form(), spreadRadius);\n              if (spreadRadius === void 0) {\n                color = item.cast(Color.form(), color);\n              }\n            } else if ((index === 4 || index === 5 && inset === void 0) && color === void 0) {\n              color = item.cast(Color.form(), color);\n            }\n          }\n        });\n        inset = inset !== void 0 ? inset : false;\n        offsetX = offsetX !== void 0 ? offsetX : Length.zero();\n        offsetY = offsetY !== void 0 ? offsetY : Length.zero();\n        blurRadius = blurRadius !== void 0 ? blurRadius : Length.zero();\n        spreadRadius = spreadRadius !== void 0 ? spreadRadius : Length.zero();\n        color = color !== void 0 ? color : Color.black();\n        const next = new BoxShadow(inset || false, offsetX, offsetY, blurRadius, spreadRadius, color, null);\n        if (boxShadow !== null) {\n          boxShadow = boxShadow.and(next);\n        } else {\n          boxShadow = next;\n        }\n      }\n    });\n    return boxShadow;\n  }\n\n  static parse(string: string): BoxShadow | null {\n    let input = Unicode.stringInput(string);\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = BoxShadowParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  /** @internal */\n  static isInit(value: unknown): value is BoxShadowInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as BoxShadowInit;\n      return init.offsetX !== void 0 && init.offsetY !== void 0 && init.color !== void 0;\n    }\n    return false;\n  }\n\n  /** @internal */\n  static isArray(value: unknown): value is ReadonlyArray<BoxShadow> {\n    if (Array.isArray(value)) {\n      const n = value.length;\n      if (n !== 0) {\n        for (let i = 0; i < n; i += 1) {\n          if (!BoxShadow.isAny(value)) {\n            return false;\n          }\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal */\n  static isAny(value: unknown): value is AnyBoxShadow {\n    return value instanceof BoxShadow\n        || BoxShadow.isArray(value)\n        || BoxShadow.isInit(value)\n        || typeof value === \"string\";\n  }\n\n  @Lazy\n  static form(): Form<BoxShadow | null, AnyBoxShadow> {\n    return new BoxShadowForm(null);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Interpolator} from \"@swim/util\";\nimport type {Length} from \"@swim/math\";\nimport type {Color} from \"../color/Color\";\nimport {BoxShadow} from \"./BoxShadow\";\n\n/** @internal */\nexport interface BoxShadowInterpolator extends Interpolator<BoxShadow> {\n  /** @internal */\n  readonly insetInterpolator: Interpolator<boolean>;\n  /** @internal */\n  readonly offsetXInterpolator: Interpolator<Length>;\n  /** @internal */\n  readonly offsetYInterpolator: Interpolator<Length>;\n  /** @internal */\n  readonly blurRadiusInterpolator: Interpolator<Length>;\n  /** @internal */\n  readonly spreadRadiusInterpolator: Interpolator<Length>;\n  /** @internal */\n  readonly colorInterpolator: Interpolator<Color>;\n  /** @internal */\n  readonly nextInterpolator: Interpolator<BoxShadow | null>;\n\n  get 0(): BoxShadow;\n\n  get 1(): BoxShadow;\n\n  equals(that: unknown): boolean;\n}\n\n/** @internal */\nexport const BoxShadowInterpolator = (function (_super: typeof Interpolator) {\n  const BoxShadowInterpolator = function (b0: BoxShadow, b1: BoxShadow): BoxShadowInterpolator {\n    const interpolator = function (u: number): BoxShadow {\n      const inset = interpolator.insetInterpolator(u);\n      const offsetX = interpolator.offsetXInterpolator(u);\n      const offsetY = interpolator.offsetYInterpolator(u);\n      const blurRadius = interpolator.blurRadiusInterpolator(u);\n      const spreadRadius = interpolator.spreadRadiusInterpolator(u);\n      const color = interpolator.colorInterpolator(u);\n      const next = interpolator.nextInterpolator(u);\n      return new BoxShadow(inset, offsetX, offsetY, blurRadius, spreadRadius, color, next);\n    } as BoxShadowInterpolator;\n    Object.setPrototypeOf(interpolator, BoxShadowInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>).insetInterpolator = Interpolator(b0.inset, b1.inset);\n    (interpolator as Mutable<typeof interpolator>).offsetXInterpolator = b0.offsetX.interpolateTo(b1.offsetX);\n    (interpolator as Mutable<typeof interpolator>).offsetYInterpolator = b0.offsetY.interpolateTo(b1.offsetY);\n    (interpolator as Mutable<typeof interpolator>).blurRadiusInterpolator = b0.blurRadius.interpolateTo(b1.blurRadius);\n    (interpolator as Mutable<typeof interpolator>).spreadRadiusInterpolator = b0.spreadRadius.interpolateTo(b1.spreadRadius);\n    (interpolator as Mutable<typeof interpolator>).colorInterpolator = b0.color.interpolateTo(b1.color);\n    (interpolator as Mutable<typeof interpolator>).nextInterpolator = Interpolator(b0.next, b1.next);\n    return interpolator;\n  } as {\n    (b0: BoxShadow, b1: BoxShadow): BoxShadowInterpolator;\n\n    /** @internal */\n    prototype: BoxShadowInterpolator;\n  };\n\n  BoxShadowInterpolator.prototype = Object.create(_super.prototype);\n  BoxShadowInterpolator.prototype.constructor = BoxShadowInterpolator;\n\n  Object.defineProperty(BoxShadowInterpolator.prototype, 0, {\n    get(this: BoxShadowInterpolator): BoxShadow {\n      const inset = this.insetInterpolator[0];\n      const offsetX = this.offsetXInterpolator[0];\n      const offsetY = this.offsetYInterpolator[0];\n      const blurRadius = this.blurRadiusInterpolator[0];\n      const spreadRadius = this.spreadRadiusInterpolator[0];\n      const color = this.colorInterpolator[0];\n      const next = this.nextInterpolator[0];\n      return new BoxShadow(inset, offsetX, offsetY, blurRadius, spreadRadius, color, next);\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(BoxShadowInterpolator.prototype, 1, {\n    get(this: BoxShadowInterpolator): BoxShadow {\n      const inset = this.insetInterpolator[1];\n      const offsetX = this.offsetXInterpolator[1];\n      const offsetY = this.offsetYInterpolator[1];\n      const blurRadius = this.blurRadiusInterpolator[1];\n      const spreadRadius = this.spreadRadiusInterpolator[1];\n      const color = this.colorInterpolator[1];\n      const next = this.nextInterpolator[1];\n      return new BoxShadow(inset, offsetX, offsetY, blurRadius, spreadRadius, color, next);\n    },\n    configurable: true,\n  });\n\n  BoxShadowInterpolator.prototype.equals = function (that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BoxShadowInterpolator) {\n      return this.insetInterpolator.equals(that.insetInterpolator)\n          && this.offsetXInterpolator.equals(that.offsetXInterpolator)\n          && this.offsetYInterpolator.equals(that.offsetYInterpolator)\n          && this.blurRadiusInterpolator.equals(that.blurRadiusInterpolator)\n          && this.spreadRadiusInterpolator.equals(that.spreadRadiusInterpolator)\n          && this.colorInterpolator.equals(that.colorInterpolator)\n          && this.nextInterpolator.equals(that.nextInterpolator);\n    }\n    return false;\n  };\n\n  return BoxShadowInterpolator;\n})(Interpolator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Record, Form} from \"@swim/structure\";\nimport {Length} from \"@swim/math\";\nimport {Color} from \"../color/Color\";\nimport {AnyBoxShadow, BoxShadow} from \"./BoxShadow\";\n\n/** @internal */\nexport class BoxShadowForm extends Form<BoxShadow | null, AnyBoxShadow> {\n  constructor(unit: BoxShadow | null | undefined) {\n    super();\n    Object.defineProperty(this, \"unit\", {\n      value: unit,\n      enumerable: true,\n    });\n  }\n\n  override readonly unit!: BoxShadow | null | undefined;\n\n  override withUnit(unit: BoxShadow | null | undefined): Form<BoxShadow | null, AnyBoxShadow> {\n    if (unit !== this.unit) {\n      return new BoxShadowForm(unit);\n    } else {\n      return this;\n    }\n  }\n\n  override mold(boxShadow: AnyBoxShadow): Item {\n    let shadow = BoxShadow.fromAny(boxShadow)!;\n    const record = Record.create();\n    do {\n      const header = Record.create(5);\n      if (shadow.inset) {\n        header.push(\"inset\");\n      }\n      header.push(Length.form().mold(shadow.offsetX));\n      header.push(Length.form().mold(shadow.offsetY));\n      header.push(Length.form().mold(shadow.blurRadius));\n      header.push(Length.form().mold(shadow.spreadRadius));\n      header.push(Color.form().mold(shadow.color));\n      record.attr(\"boxShadow\", header);\n      if (shadow.next !== null) {\n        shadow = shadow.next;\n        continue;\n      }\n      break;\n    } while (true);\n    return record;\n  }\n\n  override cast(item: Item): BoxShadow | null | undefined {\n    const value = item.toValue();\n    let boxShadow: BoxShadow | null | undefined;\n    try {\n      boxShadow = BoxShadow.fromValue(value);\n      if (boxShadow === void 0) {\n        const string = value.stringValue();\n        if (string !== void 0) {\n          boxShadow = BoxShadow.parse(string);\n        }\n      }\n    } catch (e) {\n      // swallow\n    }\n    return boxShadow;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport {Length, LengthParser} from \"@swim/math\";\nimport type {Color} from \"../color/Color\";\nimport {ColorParser} from \"../color/ColorParser\";\nimport {BoxShadow} from \"./BoxShadow\";\n\n/** @internal */\nexport class BoxShadowParser extends Parser<BoxShadow | null> {\n  private readonly boxShadow: BoxShadow | undefined;\n  private readonly identOutput: Output<string> | undefined;\n  private readonly offsetXParser: Parser<Length> | undefined;\n  private readonly offsetYParser: Parser<Length> | undefined;\n  private readonly blurRadiusParser: Parser<Length> | undefined;\n  private readonly spreadRadiusParser: Parser<Length> | undefined;\n  private readonly colorParser: Parser<Color> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(boxShadow?: BoxShadow, identOutput?: Output<string>,\n              offsetXParser?: Parser<Length>, offsetYParser?: Parser<Length>,\n              blurRadiusParser?: Parser<Length>, spreadRadiusParser?: Parser<Length>,\n              colorParser?: Parser<Color>, step?: number) {\n    super();\n    this.boxShadow = boxShadow;\n    this.identOutput = identOutput;\n    this.offsetXParser = offsetXParser;\n    this.offsetYParser = offsetYParser;\n    this.blurRadiusParser = blurRadiusParser;\n    this.spreadRadiusParser = spreadRadiusParser;\n    this.colorParser = colorParser;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<BoxShadow | null> {\n    return BoxShadowParser.parse(input, this.boxShadow, this.identOutput, this.offsetXParser,\n                                 this.offsetYParser, this.blurRadiusParser, this.spreadRadiusParser,\n                                 this.colorParser, this.step);\n  }\n\n  static parse(input: Input, boxShadow?: BoxShadow, identOutput?: Output<string>,\n               offsetXParser?: Parser<Length>, offsetYParser?: Parser<Length>,\n               blurRadiusParser?: Parser<Length>, spreadRadiusParser?: Parser<Length>,\n               colorParser?: Parser<Color>, step: number = 1): Parser<BoxShadow | null> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n          input.step();\n        }\n        if (input.isCont()) {\n          if (Unicode.isAlpha(c)) {\n            step = 2;\n          } else {\n            step = 4;\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 2) {\n        identOutput = identOutput || Unicode.stringOutput();\n        while (input.isCont() && (c = input.head(), Unicode.isAlpha(c))) {\n          input = input.step();\n          identOutput.write(c);\n        }\n        if (!input.isEmpty()) {\n          const ident = identOutput.bind();\n          switch (ident) {\n            case \"inset\": step = 3; break;\n            case \"none\": return Parser.done(null);\n            default: return Parser.error(Diagnostic.message(\"unknown box-shadow: \" + ident, input));\n          }\n        }\n      }\n      if (step === 3) {\n        if (input.isCont()) {\n          if (Unicode.isSpace(input.head())) {\n            input.step();\n            step = 4;\n          } else {\n            return Parser.error(Diagnostic.expected(\"space\", input));\n          }\n        } else if (input.isDone()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 4) {\n        if (offsetXParser === void 0) {\n          while (input.isCont() && Unicode.isSpace(input.head())) {\n            input.step();\n          }\n          if (!input.isEmpty()) {\n            offsetXParser = LengthParser.parse(input);\n          }\n        } else {\n          offsetXParser = offsetXParser.feed(input);\n        }\n        if (offsetXParser !== void 0) {\n          if (offsetXParser.isDone()) {\n            step = 5;\n          } else if (offsetXParser.isError()) {\n            return offsetXParser.asError();\n          }\n        }\n      }\n      if (step === 5) {\n        if (input.isCont()) {\n          if (Unicode.isSpace(input.head())) {\n            input.step();\n            step = 6;\n          } else {\n            return Parser.error(Diagnostic.expected(\"space\", input));\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 6) {\n        if (offsetYParser === void 0) {\n          while (input.isCont() && Unicode.isSpace(input.head())) {\n            input.step();\n          }\n          if (!input.isEmpty()) {\n            offsetYParser = LengthParser.parse(input);\n          }\n        } else {\n          offsetYParser = offsetYParser.feed(input);\n        }\n        if (offsetYParser !== void 0) {\n          if (offsetYParser.isDone()) {\n            step = 7;\n          } else if (offsetYParser.isError()) {\n            return offsetYParser.asError();\n          }\n        }\n      }\n      if (step === 7) {\n        if (input.isCont()) {\n          if (Unicode.isSpace(input.head())) {\n            input.step();\n            step = 8;\n          } else {\n            return Parser.error(Diagnostic.expected(\"space\", input));\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 8) {\n        if (blurRadiusParser === void 0) {\n          while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n            input.step();\n          }\n          if (input.isCont() && (c === 45/*'-'*/ || c >= 48/*'0'*/ && c <= 57/*'9'*/)) {\n            blurRadiusParser = LengthParser.parse(input);\n          } else if (!input.isEmpty()) {\n            step = 12;\n          }\n        } else {\n          blurRadiusParser = blurRadiusParser.feed(input);\n        }\n        if (blurRadiusParser !== void 0) {\n          if (blurRadiusParser.isDone()) {\n            step = 9;\n          } else if (blurRadiusParser.isError()) {\n            return blurRadiusParser.asError();\n          }\n        }\n      }\n      if (step === 9) {\n        if (input.isCont()) {\n          if (Unicode.isSpace(input.head())) {\n            input.step();\n            step = 10;\n          } else {\n            return Parser.error(Diagnostic.expected(\"space\", input));\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 10) {\n        if (spreadRadiusParser === void 0) {\n          while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n            input.step();\n          }\n          if (input.isCont() && (c === 45/*'-'*/ || c >= 48/*'0'*/ && c <= 57/*'9'*/)) {\n            spreadRadiusParser = LengthParser.parse(input);\n          } else if (!input.isEmpty()) {\n            step = 12;\n          }\n        } else {\n          spreadRadiusParser = spreadRadiusParser.feed(input);\n        }\n        if (spreadRadiusParser !== void 0) {\n          if (spreadRadiusParser.isDone()) {\n            step = 11;\n          } else if (spreadRadiusParser.isError()) {\n            return spreadRadiusParser.asError();\n          }\n        }\n      }\n      if (step === 11) {\n        if (input.isCont()) {\n          if (Unicode.isSpace(input.head())) {\n            input.step();\n            step = 12;\n          } else {\n            return Parser.error(Diagnostic.expected(\"space\", input));\n          }\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.unexpected(input));\n        }\n      }\n      if (step === 12) {\n        if (colorParser === void 0) {\n          while (input.isCont() && Unicode.isSpace(input.head())) {\n            input.step();\n          }\n          if (!input.isEmpty()) {\n            colorParser = ColorParser.parse(input);\n          }\n        } else {\n          colorParser = colorParser.feed(input);\n        }\n        if (colorParser !== void 0) {\n          if (colorParser.isDone()) {\n            const inset = identOutput !== void 0 ? identOutput.bind() === \"inset\" : false;\n            const offsetX = offsetXParser!.bind();\n            const offsetY = offsetYParser!.bind();\n            const blurRadius = blurRadiusParser !== void 0 ? blurRadiusParser.bind() : Length.zero();\n            const spreadRadius = spreadRadiusParser !== void 0 ? spreadRadiusParser.bind() : Length.zero();\n            const color = colorParser!.bind();\n            const next = new BoxShadow(inset, offsetX, offsetY, blurRadius, spreadRadius, color, null);\n            if (boxShadow === void 0) {\n              boxShadow = next;\n            } else {\n              boxShadow = boxShadow.and(next);\n            }\n            identOutput = void 0;\n            offsetXParser = void 0;\n            offsetYParser = void 0;\n            blurRadiusParser = void 0;\n            spreadRadiusParser = void 0;\n            colorParser = void 0;\n            step = 13;\n          } else if (colorParser.isError()) {\n            return colorParser.asError();\n          }\n        }\n      }\n      if (step === 13) {\n        while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n          input.step();\n        }\n        if (input.isCont() && c === 44/*','*/) {\n          input.step();\n          step = 1;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.done(boxShadow!);\n        }\n      }\n      break;\n    } while (true);\n    return new BoxShadowParser(boxShadow, identOutput, offsetXParser, offsetYParser,\n                               blurRadiusParser, spreadRadiusParser, colorParser, step);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Interpolator} from \"@swim/util\";\nimport {Focus} from \"./Focus\";\n\n/** @internal */\nexport const FocusInterpolator = (function (_super: typeof Interpolator) {\n  const FocusInterpolator = function (f0: Focus, f1: Focus): Interpolator<Focus> {\n    const interpolator = function (u: number): Focus {\n      const f0 = interpolator[0];\n      const f1 = interpolator[1];\n      const phase = f0.phase + u * (f1.phase - f0.phase);\n      const direction = u !== 1 ? f0.direction : 0;\n      return Focus.create(phase, direction);\n    } as Interpolator<Focus>;\n    Object.setPrototypeOf(interpolator, FocusInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>)[0] = f0;\n    (interpolator as Mutable<typeof interpolator>)[1] = f1;\n    return interpolator;\n  } as {\n    (f0: Focus, f1: Focus): Interpolator<Focus>;\n\n    /** @internal */\n    prototype: Interpolator<Focus>;\n  };\n\n  FocusInterpolator.prototype = Object.create(_super.prototype);\n  FocusInterpolator.prototype.constructor = FocusInterpolator;\n\n  return FocusInterpolator;\n})(Interpolator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  Lazy,\n  Equivalent,\n  HashCode,\n  Murmur3,\n  Numbers,\n  Constructors,\n  Interpolate,\n  Interpolator,\n} from \"@swim/util\";\nimport {Output, Debug, Format} from \"@swim/codec\";\nimport {FocusInterpolator} from \"./FocusInterpolator\";\n\n/** @public */\nexport type AnyFocus = Focus | FocusInit;\n\n/** @public */\nexport interface FocusInit {\n  readonly phase: number;\n  readonly direction: number;\n}\n\n/** @public */\nexport class Focus implements Interpolate<Focus>, HashCode, Equivalent, Debug {\n  constructor(phase: number, direction: number) {\n    this.phase = phase;\n    this.direction = direction;\n  }\n\n  readonly phase: number;\n\n  withPhase(phase: number): Focus {\n    if (phase !== this.phase) {\n      return Focus.create(phase, this.direction);\n    } else {\n      return this;\n    }\n  }\n\n  readonly direction: number;\n\n  withDirection(direction: number): Focus {\n    if (direction !== this.direction) {\n      return Focus.create(this.phase, direction);\n    } else {\n      return this;\n    }\n  }\n\n  get unfocused(): boolean {\n    return this.phase === 0 && this.direction === 0;\n  }\n\n  get focused(): boolean {\n    return this.phase === 1 && this.direction === 0;\n  }\n\n  get focusing(): boolean {\n    return this.direction > 0;\n  }\n\n  get unfocusing(): boolean {\n    return this.direction < 0;\n  }\n\n  asFocusing(): Focus {\n    if (!this.focusing) {\n      return Focus.focusing(this.phase);\n    } else {\n      return this;\n    }\n  }\n\n  asUnfocusing(): Focus {\n    if (!this.unfocusing) {\n      return Focus.unfocusing(this.phase);\n    } else {\n      return this;\n    }\n  }\n\n  asToggling(): Focus {\n    if (this.direction > 0 || this.phase >= 0.5) {\n      return Focus.unfocusing(this.phase);\n    } else if (this.direction < 0 || this.phase < 0.5) {\n      return Focus.focusing(this.phase);\n    } else {\n      return this;\n    }\n  }\n\n  asToggled(): Focus {\n    if (this.direction > 0 || this.phase >= 0.5) {\n      return Focus.unfocused();\n    } else if (this.direction < 0 || this.phase < 0.5) {\n      return Focus.focused();\n    } else {\n      return this;\n    }\n  }\n\n  interpolateTo(that: Focus): Interpolator<Focus>;\n  interpolateTo(that: unknown): Interpolator<Focus> | null;\n  interpolateTo(that: unknown): Interpolator<Focus> | null {\n    if (that instanceof Focus) {\n      return FocusInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Focus) {\n      return Numbers.equivalent(this.phase, that.phase, epsilon)\n          && Numbers.equivalent(this.direction, that.direction, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Focus) {\n      return this.phase === that.phase && this.direction === that.direction;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(Focus),\n        Numbers.hash(this.phase)), Numbers.hash(this.direction)));\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"Focus\").write(46/*'.'*/);\n    if (this.phase === 0 && this.direction === 0) {\n      output = output.write(\"unfocused\").write(40/*'('*/);\n    } else if (this.phase === 1 && this.direction === 0) {\n      output = output.write(\"focused\").write(40/*'('*/);\n    } else if (this.direction === 1) {\n      output = output.write(\"focusing\").write(40/*'('*/);\n      if (this.phase !== 0) {\n        output = output.debug(this.phase);\n      }\n    } else if (this.direction === -1) {\n      output = output.write(\"unfocusing\").write(40/*'('*/);\n      if (this.phase !== 1) {\n        output = output.debug(this.phase);\n      }\n    } else {\n      output = output.write(\"create\").write(40/*'('*/).debug(this.phase);\n      if (this.direction !== 0) {\n        output = output.write(\", \").debug(this.direction);\n      }\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static unfocused(): Focus {\n    return new Focus(0, 0);\n  }\n\n  @Lazy\n  static focused(): Focus {\n    return new Focus(1, 0);\n  }\n\n  static focusing(phase?: number): Focus {\n    if (phase === void 0) {\n      phase = 0;\n    }\n    return new Focus(phase, 1);\n  }\n\n  static unfocusing(phase?: number): Focus {\n    if (phase === void 0) {\n      phase = 1;\n    }\n    return new Focus(phase, -1);\n  }\n\n  static create(phase: number, direction?: number): Focus {\n    if (direction === void 0) {\n      direction = 0;\n    }\n    if (phase === 0 && direction === 0) {\n      return Focus.unfocused();\n    } else if (phase === 1 && direction === 0) {\n      return Focus.focused();\n    } else {\n      return new Focus(phase, direction);\n    }\n  }\n\n  static fromInit(value: FocusInit): Focus {\n    return new Focus(value.phase, value.direction);\n  }\n\n  static fromAny(value: AnyFocus): Focus {\n    if (value === void 0 || value === null || value instanceof Focus) {\n      return value;\n    } else if (Focus.isInit(value)) {\n      return Focus.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @internal */\n  static isInit(value: unknown): value is FocusInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as FocusInit;\n      return typeof init.phase === \"number\"\n          && typeof init.direction === \"number\";\n    }\n    return false;\n  }\n\n  /** @internal */\n  static isAny(value: unknown): value is AnyFocus {\n    return value instanceof Focus\n        || Focus.isInit(value);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Interpolator} from \"@swim/util\";\nimport {Presence} from \"./Presence\";\n\n/** @internal */\nexport const PresenceInterpolator = (function (_super: typeof Interpolator) {\n  const PresenceInterpolator = function (p0: Presence, p1: Presence): Interpolator<Presence> {\n    const interpolator = function (u: number): Presence {\n      const p0 = interpolator[0];\n      const p1 = interpolator[1];\n      const phase = p0.phase + u * (p1.phase - p0.phase);\n      const direction = u !== 1 ? p0.direction : 0;\n      return Presence.create(phase, direction);\n    } as Interpolator<Presence>;\n    Object.setPrototypeOf(interpolator, PresenceInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>)[0] = p0;\n    (interpolator as Mutable<typeof interpolator>)[1] = p1;\n    return interpolator;\n  } as {\n    (p0: Presence, p1: Presence): Interpolator<Presence>;\n\n    /** @internal */\n    prototype: Interpolator<Presence>;\n  };\n\n  PresenceInterpolator.prototype = Object.create(_super.prototype);\n  PresenceInterpolator.prototype.constructor = PresenceInterpolator;\n\n  return PresenceInterpolator;\n})(Interpolator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  Lazy,\n  Equivalent,\n  HashCode,\n  Murmur3,\n  Numbers,\n  Constructors,\n  Interpolate,\n  Interpolator,\n} from \"@swim/util\";\nimport {Output, Debug, Format} from \"@swim/codec\";\nimport {PresenceInterpolator} from \"./PresenceInterpolator\";\n\n/** @public */\nexport type AnyPresence = Presence | PresenceInit;\n\n/** @public */\nexport interface PresenceInit {\n  readonly phase: number;\n  readonly direction: number;\n}\n\n/** @public */\nexport class Presence implements Interpolate<Presence>, HashCode, Equivalent, Debug {\n  constructor(phase: number, direction: number) {\n    this.phase = phase;\n    this.direction = direction;\n  }\n\n  readonly phase: number;\n\n  withPhase(phase: number): Presence {\n    if (phase !== this.phase) {\n      return Presence.create(phase, this.direction);\n    } else {\n      return this;\n    }\n  }\n\n  readonly direction: number;\n\n  withDirection(direction: number): Presence {\n    if (direction !== this.direction) {\n      return Presence.create(this.phase, direction);\n    } else {\n      return this;\n    }\n  }\n\n  get modalState(): \"hidden\" | \"showing\" | \"shown\" | \"hiding\" | undefined {\n    if (this.phase === 0 && this.direction === 0) {\n      return \"hidden\";\n    } else if (this.phase === 1 && this.direction === 0) {\n      return \"shown\";\n    } else if (this.direction > 0) {\n      return \"showing\";\n    } else if (this.direction < 0) {\n      return \"hiding\";\n    } else {\n      return void 0;\n    }\n  }\n\n  get dismissed(): boolean {\n    return this.phase === 0 && this.direction === 0;\n  }\n\n  get presented(): boolean {\n    return this.phase === 1 && this.direction === 0;\n  }\n\n  get presenting(): boolean {\n    return this.direction > 0;\n  }\n\n  get dismissing(): boolean {\n    return this.direction < 0;\n  }\n\n  asPresenting(): Presence {\n    if (!this.presenting) {\n      return Presence.presenting(this.phase);\n    } else {\n      return this;\n    }\n  }\n\n  asDismissing(): Presence {\n    if (!this.dismissing) {\n      return Presence.dismissing(this.phase);\n    } else {\n      return this;\n    }\n  }\n\n  asToggling(): Presence {\n    if (this.direction > 0 || this.phase >= 0.5) {\n      return Presence.dismissing(this.phase);\n    } else if (this.direction < 0 || this.phase < 0.5) {\n      return Presence.presenting(this.phase);\n    } else {\n      return this;\n    }\n  }\n\n  asToggled(): Presence {\n    if (this.direction > 0 || this.phase >= 0.5) {\n      return Presence.dismissed();\n    } else if (this.direction < 0 || this.phase < 0.5) {\n      return Presence.presented();\n    } else {\n      return this;\n    }\n  }\n\n  interpolateTo(that: Presence): Interpolator<Presence>;\n  interpolateTo(that: unknown): Interpolator<Presence> | null;\n  interpolateTo(that: unknown): Interpolator<Presence> | null {\n    if (that instanceof Presence) {\n      return PresenceInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Presence) {\n      return Numbers.equivalent(this.phase, that.phase, epsilon)\n          && Numbers.equivalent(this.direction, that.direction, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Presence) {\n      return this.phase === that.phase && this.direction === that.direction;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(Presence),\n        Numbers.hash(this.phase)), Numbers.hash(this.direction)));\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"Presence\").write(46/*'.'*/);\n    if (this.phase === 0 && this.direction === 0) {\n      output = output.write(\"dismissed\").write(40/*'('*/);\n    } else if (this.phase === 1 && this.direction === 0) {\n      output = output.write(\"presented\").write(40/*'('*/);\n    } else if (this.direction === 1) {\n      output = output.write(\"presenting\").write(40/*'('*/);\n      if (this.phase !== 0) {\n        output = output.debug(this.phase);\n      }\n    } else if (this.direction === -1) {\n      output = output.write(\"dismissing\").write(40/*'('*/);\n      if (this.phase !== 1) {\n        output = output.debug(this.phase);\n      }\n    } else {\n      output = output.write(\"create\").write(40/*'('*/).debug(this.phase);\n      if (this.direction !== 0) {\n        output = output.write(\", \").debug(this.direction);\n      }\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static dismissed(): Presence {\n    return new Presence(0, 0);\n  }\n\n  @Lazy\n  static presented(): Presence {\n    return new Presence(1, 0);\n  }\n\n  static presenting(phase?: number): Presence {\n    if (phase === void 0) {\n      phase = 0;\n    }\n    return new Presence(phase, 1);\n  }\n\n  static dismissing(phase?: number): Presence {\n    if (phase === void 0) {\n      phase = 1;\n    }\n    return new Presence(phase, -1);\n  }\n\n  static create(phase: number, direction?: number): Presence {\n    if (direction === void 0) {\n      direction = 0;\n    }\n    if (phase === 0 && direction === 0) {\n      return Presence.dismissed();\n    } else if (phase === 1 && direction === 0) {\n      return Presence.presented();\n    } else {\n      return new Presence(phase, direction);\n    }\n  }\n\n  static fromInit(value: PresenceInit): Presence {\n    return new Presence(value.phase, value.direction);\n  }\n\n  static fromAny(value: AnyPresence): Presence {\n    if (value === void 0 || value === null || value instanceof Presence) {\n      return value;\n    } else if (Presence.isInit(value)) {\n      return Presence.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @internal */\n  static isInit(value: unknown): value is PresenceInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as PresenceInit;\n      return typeof init.phase === \"number\"\n          && typeof init.direction === \"number\";\n    }\n    return false;\n  }\n\n  /** @internal */\n  static isAny(value: unknown): value is AnyPresence {\n    return value instanceof Presence\n        || Presence.isInit(value);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Interpolator} from \"@swim/util\";\nimport {Expansion} from \"./Expansion\";\n\n/** @internal */\nexport const ExpansionInterpolator = (function (_super: typeof Interpolator) {\n  const ExpansionInterpolator = function (e0: Expansion, e1: Expansion): Interpolator<Expansion> {\n    const interpolator = function (u: number): Expansion {\n      const e0 = interpolator[0];\n      const e1 = interpolator[1];\n      const phase = e0.phase + u * (e1.phase - e0.phase);\n      const direction = u !== 1 ? e0.direction : 0;\n      return Expansion.create(phase, direction);\n    } as Interpolator<Expansion>;\n    Object.setPrototypeOf(interpolator, ExpansionInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>)[0] = e0;\n    (interpolator as Mutable<typeof interpolator>)[1] = e1;\n    return interpolator;\n  } as {\n    (e0: Expansion, e1: Expansion): Interpolator<Expansion>;\n\n    /** @internal */\n    prototype: Interpolator<Expansion>;\n  };\n\n  ExpansionInterpolator.prototype = Object.create(_super.prototype);\n  ExpansionInterpolator.prototype.constructor = ExpansionInterpolator;\n\n  return ExpansionInterpolator;\n})(Interpolator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  Lazy,\n  Equivalent,\n  HashCode,\n  Murmur3,\n  Numbers,\n  Constructors,\n  Interpolate,\n  Interpolator,\n} from \"@swim/util\";\nimport {Output, Debug, Format} from \"@swim/codec\";\nimport {ExpansionInterpolator} from \"./ExpansionInterpolator\";\n\n/** @public */\nexport type AnyExpansion = Expansion | ExpansionInit;\n\n/** @public */\nexport interface ExpansionInit {\n  readonly phase: number;\n  readonly direction: number;\n}\n\n/** @public */\nexport class Expansion implements Interpolate<Expansion>, HashCode, Equivalent, Debug {\n  constructor(phase: number, direction: number) {\n    this.phase = phase;\n    this.direction = direction;\n  }\n\n  readonly phase: number;\n\n  withPhase(phase: number): Expansion {\n    if (phase !== this.phase) {\n      return Expansion.create(phase, this.direction);\n    } else {\n      return this;\n    }\n  }\n\n  readonly direction: number;\n\n  withDirection(direction: number): Expansion {\n    if (direction !== this.direction) {\n      return Expansion.create(this.phase, direction);\n    } else {\n      return this;\n    }\n  }\n\n  get modalState(): \"hidden\" | \"showing\" | \"shown\" | \"hiding\" | undefined {\n    if (this.phase === 0 && this.direction === 0) {\n      return \"hidden\";\n    } else if (this.phase === 1 && this.direction === 0) {\n      return \"shown\";\n    } else if (this.direction > 0) {\n      return \"showing\";\n    } else if (this.direction < 0) {\n      return \"hiding\";\n    } else {\n      return void 0;\n    }\n  }\n\n  get collapsed(): boolean {\n    return this.phase === 0 && this.direction === 0;\n  }\n\n  get expanded(): boolean {\n    return this.phase === 1 && this.direction === 0;\n  }\n\n  get expanding(): boolean {\n    return this.direction > 0;\n  }\n\n  get collapsing(): boolean {\n    return this.direction < 0;\n  }\n\n  asExpanding(): Expansion {\n    if (!this.expanding) {\n      return Expansion.expanding(this.phase);\n    } else {\n      return this;\n    }\n  }\n\n  asCollapsing(): Expansion {\n    if (!this.collapsing) {\n      return Expansion.collapsing(this.phase);\n    } else {\n      return this;\n    }\n  }\n\n  asToggling(): Expansion {\n    if (this.direction > 0 || this.phase >= 0.5) {\n      return Expansion.collapsing(this.phase);\n    } else if (this.direction < 0 || this.phase < 0.5) {\n      return Expansion.expanding(this.phase);\n    } else {\n      return this;\n    }\n  }\n\n  asToggled(): Expansion {\n    if (this.direction > 0 || this.phase >= 0.5) {\n      return Expansion.collapsed();\n    } else if (this.direction < 0 || this.phase < 0.5) {\n      return Expansion.expanded();\n    } else {\n      return this;\n    }\n  }\n\n  interpolateTo(that: Expansion): Interpolator<Expansion>;\n  interpolateTo(that: unknown): Interpolator<Expansion> | null;\n  interpolateTo(that: unknown): Interpolator<Expansion> | null {\n    if (that instanceof Expansion) {\n      return ExpansionInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Expansion) {\n      return Numbers.equivalent(this.phase, that.phase, epsilon)\n          && Numbers.equivalent(this.direction, that.direction, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Expansion) {\n      return this.phase === that.phase && this.direction === that.direction;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Constructors.hash(Expansion),\n        Numbers.hash(this.phase)), Numbers.hash(this.direction)));\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"Expansion\").write(46/*'.'*/);\n    if (this.phase === 0 && this.direction === 0) {\n      output = output.write(\"collapsed\").write(40/*'('*/);\n    } else if (this.phase === 1 && this.direction === 0) {\n      output = output.write(\"expanded\").write(40/*'('*/);\n    } else if (this.direction === 1) {\n      output = output.write(\"expanding\").write(40/*'('*/);\n      if (this.phase !== 0) {\n        output = output.debug(this.phase);\n      }\n    } else if (this.direction === -1) {\n      output = output.write(\"collapsing\").write(40/*'('*/);\n      if (this.phase !== 1) {\n        output = output.debug(this.phase);\n      }\n    } else {\n      output = output.write(\"create\").write(40/*'('*/).debug(this.phase);\n      if (this.direction !== 0) {\n        output = output.write(\", \").debug(this.direction);\n      }\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static collapsed(): Expansion {\n    return new Expansion(0, 0);\n  }\n\n  @Lazy\n  static expanded(): Expansion {\n    return new Expansion(1, 0);\n  }\n\n  static expanding(phase?: number): Expansion {\n    if (phase === void 0) {\n      phase = 0;\n    }\n    return new Expansion(phase, 1);\n  }\n\n  static collapsing(phase?: number): Expansion {\n    if (phase === void 0) {\n      phase = 1;\n    }\n    return new Expansion(phase, -1);\n  }\n\n  static create(phase: number, direction?: number): Expansion {\n    if (direction === void 0) {\n      direction = 0;\n    }\n    if (phase === 0 && direction === 0) {\n      return Expansion.collapsed();\n    } else if (phase === 1 && direction === 0) {\n      return Expansion.expanded();\n    } else {\n      return new Expansion(phase, direction);\n    }\n  }\n\n  static fromInit(value: ExpansionInit): Expansion {\n    return new Expansion(value.phase, value.direction);\n  }\n\n  static fromAny(value: AnyExpansion): Expansion {\n    if (value === void 0 || value === null || value instanceof Expansion) {\n      return value;\n    } else if (Expansion.isInit(value)) {\n      return Expansion.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @internal */\n  static isInit(value: unknown): value is ExpansionInit {\n    if (typeof value === \"object\" && value !== null) {\n      const init = value as ExpansionInit;\n      return typeof init.phase === \"number\"\n          && typeof init.direction === \"number\";\n    }\n    return false;\n  }\n\n  /** @internal */\n  static isAny(value: unknown): value is AnyExpansion {\n    return value instanceof Expansion\n        || Expansion.isInit(value);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator} from \"@swim/util\";\nimport {Input, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport type {Form} from \"@swim/structure\";\nimport {AnyLength, Length, AnyAngle, Angle, AnyTransform, Transform} from \"@swim/math\";\nimport {AnyDateTime, DateTime} from \"@swim/time\";\nimport {AnyFont, Font} from \"../font/Font\";\nimport {AnyColor, Color} from \"../color/Color\";\nimport type {RgbColorInit} from \"../rgb/RgbColor\";\nimport type {HslColorInit} from \"../hsl/HslColor\";\nimport {AnyLinearGradient, LinearGradient} from \"../gradient/LinearGradient\";\nimport {AnyBoxShadow, BoxShadowInit, BoxShadow} from \"../shadow/BoxShadow\";\nimport {StyleValueForm} from \"../\"; // forward import\nimport {StyleValueParser} from \"../\"; // forward import\n\n/** @public */\nexport type AnyStyleValue = AnyDateTime\n                          | AnyAngle\n                          | AnyLength\n                          | AnyFont\n                          | AnyColor | RgbColorInit | HslColorInit\n                          | AnyLinearGradient\n                          | AnyBoxShadow | BoxShadowInit\n                          | AnyTransform\n                          | Interpolator<any>\n                          | number\n                          | boolean;\n\n/** @public */\nexport type StyleValue = DateTime\n                       | Angle\n                       | Length\n                       | Font\n                       | Color\n                       | LinearGradient\n                       | BoxShadow\n                       | Transform\n                       | Interpolator<any>\n                       | number\n                       | boolean;\n\n/** @public */\nexport const StyleValue = (function () {\n  const StyleValue = {} as {\n    fromAny(value: AnyStyleValue): StyleValue;\n\n    parse(input: Input | string): StyleValue;\n\n    form(): Form<StyleValue, AnyStyleValue>;\n  };\n\n  StyleValue.fromAny = function (value: AnyStyleValue): StyleValue {\n    if (value instanceof DateTime\n        || value instanceof Angle\n        || value instanceof Length\n        || value instanceof Color\n        || value instanceof Font\n        || value instanceof BoxShadow\n        || value instanceof LinearGradient\n        || value instanceof Transform\n        || value instanceof Interpolator\n        || typeof value === \"number\"\n        || typeof value === \"boolean\") {\n      return value;\n    } else if (value instanceof Date || DateTime.isInit(value)) {\n      return DateTime.fromAny(value);\n    } else if (Font.isInit(value)) {\n      return Font.fromAny(value);\n    } else if (Color.isInit(value)) {\n      return Color.fromAny(value);\n    } else if (BoxShadow.isInit(value)) {\n      return BoxShadow.fromAny(value)!;\n    } else if (typeof value === \"string\") {\n      return StyleValue.parse(value);\n    }\n    throw new TypeError(\"\" + value);\n  };\n\n  StyleValue.parse = function (input: Input | string): StyleValue {\n    if (typeof input === \"string\") {\n      input = Unicode.stringInput(input);\n    }\n    while (input.isCont() && Unicode.isWhitespace(input.head())) {\n      input = input.step();\n    }\n    let parser = StyleValueParser.parse(input);\n    if (parser.isDone()) {\n      while (input.isCont() && Unicode.isWhitespace(input.head())) {\n        input = input.step();\n      }\n    }\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  };\n\n  Object.defineProperty(StyleValue, \"form\", {\n    value: function (): Form<StyleValue, AnyStyleValue> {\n      const form = new StyleValueForm(void 0);\n      Object.defineProperty(StyleValue, \"form\", {\n        value: function (): Form<StyleValue, AnyStyleValue> {\n          return form;\n        },\n        enumerable: true,\n        configurable: true,\n      });\n      return form;\n    },\n    enumerable: true,\n    configurable: true,\n  });\n\n  return StyleValue;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Record, Num, Bool, Form} from \"@swim/structure\";\nimport {Length, Angle, Transform} from \"@swim/math\";\nimport {DateTime} from \"@swim/time\";\nimport {Font} from \"../font/Font\";\nimport {Color} from \"../color/Color\";\nimport {BoxShadow} from \"../shadow/BoxShadow\";\nimport {AnyStyleValue, StyleValue} from \"./StyleValue\";\n\n/** @internal */\nexport class StyleValueForm extends Form<StyleValue, AnyStyleValue> {\n  constructor(unit: StyleValue | undefined) {\n    super();\n    Object.defineProperty(this, \"unit\", {\n      value: unit,\n      enumerable: true,\n    });\n  }\n\n  override readonly unit!: StyleValue | undefined;\n\n  override withUnit(unit: StyleValue | undefined): Form<StyleValue, AnyStyleValue> {\n    if (unit !== this.unit) {\n      return new StyleValueForm(unit);\n    } else {\n      return this;\n    }\n  }\n\n  override mold(value: AnyStyleValue): Item {\n    if (value !== void 0) {\n      value = StyleValue.fromAny(value);\n      if (value instanceof DateTime) {\n        return DateTime.form().mold(value);\n      } else if (value instanceof Angle) {\n        return Angle.form().mold(value);\n      } else if (value instanceof Length) {\n        return Length.form().mold(value);\n      } else if (value instanceof Font) {\n        return Font.form().mold(value);\n      } else if (value instanceof Color) {\n        return Color.form().mold(value);\n      } else if (value instanceof BoxShadow) {\n        return BoxShadow.form().mold(value);\n      } else if (value instanceof Transform) {\n        return Transform.form().mold(value);\n      } else if (typeof value === \"number\") {\n        return Num.from(value);\n      }\n      throw new TypeError(\"\" + value);\n    } else {\n      return Item.extant();\n    }\n  }\n\n  override cast(item: Item): StyleValue | undefined {\n    const value = item.toValue();\n    if (value instanceof Num) {\n      return value.numberValue();\n    }\n    if (value instanceof Bool) {\n      return value.booleanValue();\n    }\n    const string = value.stringValue(void 0);\n    if (string !== void 0) {\n      try {\n        return StyleValue.parse(string);\n      } catch (e) {\n        // swallow\n      }\n    }\n    if (value instanceof Record) {\n      const date = DateTime.fromValue(value);\n      if (date !== null) {\n        return date;\n      }\n      const angle = Angle.fromValue(value);\n      if (angle !== null) {\n        return angle;\n      }\n      const length = Length.fromValue(value);\n      if (length !== null) {\n        return length;\n      }\n      const font = Font.fromValue(value);\n      if (font !== null) {\n        return font;\n      }\n      const color = Color.fromValue(value);\n      if (color !== null) {\n        return color;\n      }\n      const boxShadow = BoxShadow.fromValue(value);\n      if (boxShadow !== null) {\n        return boxShadow;\n      }\n      const transform = Transform.fromValue(value);\n      if (transform !== null) {\n        return transform;\n      }\n    }\n    return void 0;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Unicode, Base10} from \"@swim/codec\";\nimport {\n  Length,\n  Angle,\n  Transform,\n  TranslateTransformParser,\n  ScaleTransformParser,\n  RotateTransformParser,\n  SkewTransformParser,\n  AffineTransformParser,\n} from \"@swim/math\";\nimport {DateTimeInit, DateTimeFormat} from \"@swim/time\";\nimport type {FontWeight} from \"../font/FontWeight\";\nimport {FontParser} from \"../font/FontParser\";\nimport {Color} from \"../color/Color\";\nimport {HexColorParser} from \"../rgb/HexColorParser\";\nimport {RgbColorParser} from \"../rgb/RgbColorParser\";\nimport {HslColorParser} from \"../hsl/HslColorParser\";\nimport {LinearGradientParser} from \"../gradient/LinearGradientParser\";\nimport type {StyleValue} from \"./StyleValue\";\n\n/** @internal */\nexport class StyleValueParser extends Parser<StyleValue> {\n  private readonly identOutput: Output<string> | undefined;\n  private readonly valueParser: Parser<number> | undefined;\n  private readonly unitsOutput: Output<string> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(identOutput?: Output<string>, valueParser?: Parser<number>,\n              unitsOutput?: Output<string>, step?: number) {\n    super();\n    this.identOutput = identOutput;\n    this.valueParser = valueParser;\n    this.unitsOutput = unitsOutput;\n    this.step = step;\n  }\n\n  override feed(input: Input): Parser<StyleValue> {\n    return StyleValueParser.parse(input, this.identOutput, this.valueParser,\n                                  this.unitsOutput, this.step);\n  }\n\n  static parse(input: Input, identOutput?: Output<string>, valueParser?: Parser<number>,\n               unitsOutput?: Output<string>, step: number = 1): Parser<StyleValue> {\n    let c = 0;\n    if (step === 1) {\n      while (input.isCont() && (c = input.head(), Unicode.isSpace(c))) {\n        input.step();\n      }\n      if (input.isCont()) {\n        if (c === 35/*'#'*/) {\n          return HexColorParser.parse(input);\n        } else if (Unicode.isAlpha(c)) {\n          step = 2;\n        } else {\n          step = 3;\n        }\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 2) {\n      identOutput = identOutput || Unicode.stringOutput();\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c) || Unicode.isDigit(c) || c === 45/*'-'*/)) {\n        input = input.step();\n        identOutput.write(c);\n      }\n      if (!input.isEmpty()) {\n        const ident = identOutput.bind();\n        switch (ident) {\n          case \"rgb\":\n          case \"rgba\": return RgbColorParser.parseRest(input);\n\n          case \"hsl\":\n          case \"hsla\": return HslColorParser.parseRest(input);\n\n          case \"linear-gradient\": return LinearGradientParser.parseRest(input, identOutput);\n\n          case \"normal\":\n          case \"italic\":\n          case \"oblique\": return FontParser.parseRest(input, ident);\n          case \"small-caps\": return FontParser.parseRest(input, void 0, ident);\n          case \"bold\":\n          case \"bolder\":\n          case \"lighter\": return FontParser.parseRest(input, void 0, void 0, ident);\n          case \"ultra-condensed\":\n          case \"extra-condensed\":\n          case \"semi-condensed\":\n          case \"condensed\":\n          case \"expanded\":\n          case \"semi-expanded\":\n          case \"extra-expanded\":\n          case \"ultra-expanded\": return FontParser.parseRest(input, void 0, void 0, void 0, ident);\n          case \"large\":\n          case \"larger\":\n          case \"medium\":\n          case \"small\":\n          case \"smaller\":\n          case \"x-large\":\n          case \"x-small\":\n          case \"xx-large\":\n          case \"xx-small\": return FontParser.parseRest(input, void 0, void 0, void 0, void 0, ident);\n\n          case \"translate3d\":\n          case \"translateX\":\n          case \"translateY\":\n          case \"translate\": return TranslateTransformParser.parseRest(input, identOutput);\n          case \"scaleX\":\n          case \"scaleY\":\n          case \"scale\": return ScaleTransformParser.parseRest(input, identOutput);\n          case \"rotate\": return RotateTransformParser.parseRest(input, identOutput);\n          case \"skewX\":\n          case \"skewY\":\n          case \"skew\": return SkewTransformParser.parseRest(input, identOutput);\n          case \"matrix\": return AffineTransformParser.parseRest(input, identOutput);\n          case \"none\": return Parser.done(Transform.identity());\n\n          case \"true\": return Parser.done(true);\n          case \"false\": return Parser.done(false);\n          default: {\n            const color = Color.forName(ident);\n            if (color !== null) {\n              return Parser.done(color);\n            }\n            return Parser.error(Diagnostic.message(\"unknown style value: \" + ident, input));\n          }\n        }\n      }\n    }\n    if (step === 3) {\n      if (valueParser === void 0) {\n        valueParser = Base10.parseDecimal(input);\n      } else {\n        valueParser = valueParser.feed(input);\n      }\n      if (valueParser.isDone()) {\n        step = 4;\n      } else if (valueParser.isError()) {\n        return valueParser.asError();\n      }\n    }\n    if (step === 4) {\n      if (input.isCont() && (c = input.head(), c === 45/*'-'*/)) {\n        input.step();\n        const date = {} as DateTimeInit;\n        date.year = valueParser!.bind();\n        return DateTimeFormat.pattern('%m-%dT%H:%M:%S.%LZ').parseDate(input, date);\n      } else if (!input.isEmpty()) {\n        step = 5;\n      }\n    }\n    if (step === 5) {\n      unitsOutput = unitsOutput || Unicode.stringOutput();\n      while (input.isCont() && (c = input.head(), Unicode.isAlpha(c) || c === 37/*'%'*/)) {\n        input.step();\n        unitsOutput.push(c);\n      }\n      if (!input.isEmpty()) {\n        step = 6;\n      }\n    }\n    if (step === 6) {\n      if (!input.isEmpty()) {\n        const value = valueParser!.bind();\n        const units = unitsOutput!.bind();\n        let styleValue: Angle | Length | number;\n        switch (units) {\n          case \"deg\": styleValue = Angle.deg(value); break;\n          case \"rad\": styleValue = Angle.rad(value); break;\n          case \"grad\": styleValue = Angle.grad(value); break;\n          case \"turn\": styleValue = Angle.turn(value); break;\n\n          case \"px\": styleValue = Length.px(value); break;\n          case \"em\": styleValue = Length.em(value); break;\n          case \"rem\": styleValue = Length.rem(value); break;\n          case \"%\": styleValue = Length.pct(value); break;\n\n          case \"\": styleValue = value; break;\n          default: return Parser.error(Diagnostic.message(\"unknown style units: \" + units, input));\n        }\n        if (input.isCont() && (c = input.head(), Unicode.isSpace(c) || c === 47/*'/'*/)) {\n          if (styleValue instanceof Length) {\n            return FontParser.parseRest(input, void 0, void 0, void 0, void 0, styleValue as Length);\n          } else if (typeof styleValue === \"number\") {\n            switch (value) {\n              case 100:\n              case 200:\n              case 300:\n              case 400:\n              case 500:\n              case 600:\n              case 700:\n              case 800:\n              case 900: return FontParser.parseRest(input, void 0, void 0, String(value) as FontWeight);\n            }\n          }\n        }\n        return Parser.done(styleValue);\n      }\n    }\n    return new StyleValueParser(identOutput, valueParser, unitsOutput, step);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/** @public */\nexport interface ToAttributeString {\n  toAttributeString(): string;\n}\n\n/** @public */\nexport function ToAttributeString(value: unknown): string {\n  if (typeof value === \"object\" && value !== null) {\n    if (typeof (value as ToAttributeString).toAttributeString === \"function\") {\n      return (value as ToAttributeString).toAttributeString();\n    } else {\n      return value.toString();\n    }\n  } else {\n    return \"\" + value;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/** @public */\nexport interface ToStyleString {\n  toStyleString(): string;\n}\n\n/** @public */\nexport function ToStyleString(value: unknown): string {\n  if (typeof value === \"object\" && value !== null) {\n    if (typeof (value as ToStyleString).toStyleString === \"function\") {\n      return (value as ToStyleString).toStyleString();\n    } else {\n      return value.toString();\n    }\n  } else {\n    return \"\" + value;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ToStyleString} from \"./ToStyleString\";\n\n/** @public */\nexport interface ToCssValue {\n  toCssValue(): CSSStyleValue | null;\n}\n\n/** @public */\nexport const ToCssValue = (function () {\n  let ToCssValue: (value: unknown) => CSSStyleValue | null;\n\n  if (typeof CSSStyleValue !== \"undefined\") { // CSS Typed OM support\n    ToCssValue = function (value: unknown): CSSStyleValue | null {\n      if (typeof value === \"object\" && value !== null &&\n          typeof (value as ToCssValue).toCssValue === \"function\") {\n        return (value as ToCssValue).toCssValue();\n      } else if (typeof value === \"number\") {\n        return new CSSUnitValue(value, \"number\");\n      } else {\n        return null;\n      }\n    };\n  } else {\n    ToCssValue = ToStyleString;\n  }\n\n  return ToCssValue;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals, Lazy, Arrays} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport type {Feel} from \"../feel/Feel\";\n\n/** @public */\nexport type AnyLookVector<T> = LookVector<T> | LookVectorArray<T>;\n\n/** @public */\nexport type LookVectorArray<T> = ReadonlyArray<[Feel, T]>;\n\n/** @public */\nexport type LookVectorUpdates<T> = ReadonlyArray<[Feel, T | undefined]>;\n\n/** @public */\nexport class LookVector<T> implements Equals, Debug {\n  constructor(array: ReadonlyArray<[Feel, T]>,\n              index: {readonly [name: string]: number | undefined}) {\n    this.array = array;\n    this.index = index;\n  }\n\n  /** @internal */\n  readonly array: ReadonlyArray<[Feel, T]>;\n\n  /** @internal */\n  readonly index: {readonly [name: string]: number | undefined};\n\n  get size(): number {\n    return this.array.length;\n  }\n\n  isEmpty(): boolean {\n    return this.array.length === 0;\n  }\n\n  has(feel: Feel): boolean;\n  has(name: string): boolean;\n  has(feel: Feel | string): boolean {\n    if (typeof feel === \"object\" && feel !== null || typeof feel === \"function\") {\n      feel = feel.name;\n    }\n    return this.index[feel] !== void 0;\n  }\n\n  get(feel: Feel): T | undefined;\n  get(name: string): T | undefined;\n  get(index: number): T | undefined;\n  get(feel: Feel | string | number | undefined): T | undefined {\n    if (typeof feel === \"object\" && feel !== null || typeof feel === \"function\") {\n      feel = feel.name;\n    }\n    if (typeof feel === \"string\") {\n      feel = this.index[feel];\n    }\n    const entry = typeof feel === \"number\" ? this.array[feel] : void 0;\n    return entry !== void 0 ? entry[1] : void 0;\n  }\n\n  getOr<E>(feel: Feel, elseValue: E): T | E;\n  getOr<E>(name: string, elseValue: E): T | E;\n  getOr<E>(index: number, elseValue: E): T | E;\n  getOr<E>(feel: Feel | string | number | undefined, elseValue: E): T | E {\n    if (typeof feel === \"object\" && feel !== null || typeof feel === \"function\") {\n      feel = feel.name;\n    }\n    if (typeof feel === \"string\") {\n      feel = this.index[feel];\n    }\n    const entry = typeof feel === \"number\" ? this.array[feel] : void 0;\n    return entry !== void 0 ? entry[1] : elseValue;\n  }\n\n  updated(feel: Feel, value: T | undefined): LookVector<T>;\n  updated(updates: LookVectorUpdates<T>): LookVector<T>;\n  updated(updates: LookVectorUpdates<T> | Feel, value?: T | undefined): LookVector<T> {\n    let feel: Feel;\n    let oldArray = this.array;\n    let oldIndex = this.index;\n    let newArray: [Feel, T][] | undefined;\n    let newIndex: {[name: string]: number | undefined} | undefined;\n    const updateCount = Array.isArray(updates) ? updates.length : 1;\n    for (let updateIndex = 0; updateIndex < updateCount; updateIndex += 1) {\n      if (updateIndex === 0 && !Array.isArray(updates)) {\n        feel = updates as Feel;\n      } else {\n        [feel, value] = (updates as LookVectorUpdates<T>)[updateIndex]!;\n      }\n      const i = oldIndex[feel.name];\n      if (value !== void 0 && i !== void 0) { // update\n        const newArray = oldArray.slice(0);\n        newArray[i] = [feel, value];\n        newIndex = oldIndex;\n        oldArray = newArray;\n      } else if (value !== void 0) { // insert\n        const newArray = oldArray.slice(0);\n        const newIndex: {[name: string]: number | undefined} = {};\n        for (const name in oldIndex) {\n          newIndex[name] = oldIndex[name];\n        }\n        newIndex[feel.name] = newArray.length;\n        newArray.push([feel, value]);\n        oldArray = newArray;\n        oldIndex = newIndex;\n      } else if (i !== void 0) { // remove\n        const newArray = new Array<[Feel, T]>();\n        const newIndex: {[name: string]: number | undefined} = {};\n        let k = 0;\n        for (let j = 0, n = oldArray.length; j < n; j += 1) {\n          const entry = oldArray[j]!;\n          if (entry[0] !== feel) {\n            newArray[k] = entry;\n            newIndex[entry[0].name] = k;\n            k += 1;\n          }\n        }\n        oldArray = newArray;\n        oldIndex = newIndex;\n      }\n    }\n    if (newArray !== void 0 && newIndex !== void 0) {\n      return this.copy(newArray, newIndex);\n    } else {\n      return this;\n    }\n  }\n\n  protected copy(array: ReadonlyArray<[Feel, T]>,\n                 index?: {readonly [name: string]: number | undefined}): LookVector<T> {\n    return LookVector.fromArray(array, index);\n  }\n\n  forEach<R>(callback: (value: T, feel: Feel) => R | void): R | undefined;\n  forEach<R, S>(callback: (this: S, value: T, feel: Feel) => R | void,\n                thisArg: S): R | undefined;\n  forEach<R, S>(callback: (this: S | undefined, value: T, feel: Feel) => R | void,\n                thisArg?: S): R | undefined {\n    const array = this.array;\n    for (let i = 0, n = array.length; i < n; i += 1) {\n      const entry = array[i]!;\n      const result = callback.call(thisArg, entry[1], entry[0]);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LookVector) {\n      return Arrays.equal(this.array, that.array);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    const array = this.array;\n    const n = array.length;\n    output = output.write(\"LookVector\").write(46/*'.'*/)\n                   .write(n !== 0 ? \"of\" : \"empty\").write(40/*'('*/);\n    for (let i = 0; i < n; i += 1) {\n      const [feel, value] = array[i]!;\n      if (i !== 0) {\n        output = output.write(\", \");\n      }\n      output = output.write(91/*'['*/).debug(feel).write(\", \").debug(value).write(93/*']'*/);\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static empty<T>(): LookVector<T> {\n    return new LookVector(Arrays.empty, {});\n  }\n\n  static of<T>(...feels: [Feel, T][]): LookVector<T> {\n    return new LookVector(feels, LookVector.index(feels));\n  }\n\n  static fromArray<T>(array: ReadonlyArray<[Feel, T]>,\n                      index?: {[name: string]: number | undefined}): LookVector<T> {\n    if (index === void 0) {\n      index = LookVector.index(array);\n    }\n    return new LookVector(array, index);\n  }\n\n  static fromAny<T>(value: AnyLookVector<T>): LookVector<T> {\n    if (value === void 0 || value === null || value instanceof LookVector) {\n      return value;\n    } else if (Array.isArray(value)) {\n      return LookVector.fromArray(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @internal */\n  static index<T>(array: ReadonlyArray<[Feel, T]>): {readonly [name: string]: number | undefined} {\n    const index: {[name: string]: number | undefined} = {};\n    for (let i = 0, n = array.length; i < n; i += 1) {\n      const entry = array[i]!;\n      index[entry[0].name] = i;\n    }\n    return index\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {AnyTiming, Timing, Interpolator} from \"@swim/util\";\nimport type {AnyLength, Length} from \"@swim/math\";\nimport type {AnyFont, Font, AnyColor, Color, AnyBoxShadow, BoxShadow} from \"@swim/style\";\nimport {LookVector} from \"./LookVector\";\nimport type {Feel} from \"../feel/Feel\";\nimport type {Mood} from \"../mood/Mood\";\nimport type {MoodVector} from \"../mood/MoodVector\";\n\n/** @public */\nexport abstract class Look<T, U = never> implements Mood {\n  constructor(name: string) {\n    this.name = name;\n  }\n\n  readonly name: string;\n\n  add(a: LookVector<T>, b: LookVector<T>): LookVector<T> {\n    const aArray = a.array;\n    const bArray = b.array;\n    const newArray = new Array<[Feel, T]>();\n    const newIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0, n = aArray.length; i < n; i += 1) {\n      const entry = aArray[i]!;\n      const feel = entry[0];\n      const y = b.get(feel);\n      newIndex[feel.name] = newArray.length;\n      newArray.push(y === void 0 ? entry : [feel, feel.combine(this, entry[1], y)]);\n    }\n    for (let i = 0, n = bArray.length; i < n; i += 1) {\n      const entry = bArray[i]!;\n      const feel = entry[0];\n      if (newIndex[feel.name] === void 0) {\n        newIndex[feel.name] = newArray.length;\n        newArray.push(entry);\n      }\n    }\n    return this.fromArray(newArray, newIndex);\n  }\n\n  negate(a: LookVector<T>): LookVector<T> {\n    const oldArray = a.array;\n    const n = oldArray.length;\n    const newArray = new Array<[Feel, T]>(n);\n    for (let i = 0; i < n; i += 1) {\n      const [feel, x] = oldArray[i]!;\n      newArray[i] = [feel, feel.combine(this, void 0, x, -1)];\n    }\n    return this.fromArray(newArray, a.index);\n  }\n\n  subtract(a: LookVector<T>, b: LookVector<T>): LookVector<T> {\n    const aArray = a.array;\n    const bArray = b.array;\n    const newArray = new Array<[Feel, T]>();\n    const newIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0, n = aArray.length; i < n; i += 1) {\n      const entry = aArray[i]!;\n      const feel = entry[0];\n      const y = b.get(feel);\n      newIndex[feel.name] = newArray.length;\n      newArray.push(y === void 0 ? entry : [feel, feel.combine(this, entry[1], y, -1)]);\n    }\n    for (let i = 0, n = bArray.length; i < n; i += 1) {\n      const [feel, y] = bArray[i]!;\n      if (newIndex[feel.name] === void 0) {\n        newIndex[feel.name] = newArray.length;\n        newArray.push([feel, feel.combine(this, void 0, y, -1)]);\n      }\n    }\n    return this.fromArray(newArray, newIndex);\n  }\n\n  multiply(a: LookVector<T>, scalar: number): LookVector<T> {\n    const oldArray = a.array;\n    const n = oldArray.length;\n    const newArray = new Array<[Feel, T]>(n);\n    for (let i = 0; i < n; i += 1) {\n      const [feel, x] = oldArray[i]!;\n      newArray[i] = [feel, feel.combine(this, void 0, x, scalar)];\n    }\n    return this.fromArray(newArray, a.index);\n  }\n\n  dot(a: LookVector<T>, b: MoodVector): T | undefined {\n    const array = a.array;\n    let combination: T | undefined;\n    for (let i = 0, n = array.length; i < n; i += 1) {\n      const [feel, value] = array[i]!;\n      const weight = b.get(feel);\n      if (weight !== void 0 && weight !== 0) {\n        combination = feel.combine(this, combination, value, weight);\n      }\n    }\n    return combination;\n  }\n\n  dotOr<E>(a: LookVector<T>, b: MoodVector, elseValue: E): T | E {\n    const array = a.array;\n    const n = array.length;\n    if (n !== 0) {\n      let combination: T | undefined;\n      for (let i = 0, n = array.length; i < n; i += 1) {\n        const [feel, value] = array[i]!;\n        const weight = b.get(feel);\n        if (weight !== void 0 && weight !== 0) {\n          combination = feel.combine(this, combination, value, weight);\n        }\n      }\n      return combination!;\n    } else {\n      return elseValue;\n    }\n  }\n\n  abstract combine(combination: T | undefined, value: T, weight?: number): T;\n\n  abstract between(a: T, b: T): Interpolator<T>;\n\n  abstract coerce(value: T | U): T;\n\n  empty(): LookVector<T> {\n    return LookVector.empty();\n  }\n\n  of(...feels: [Feel, T | U][]): LookVector<T> {\n    const n = feels.length;\n    const array = new Array<[Feel, T]>(n);\n    const index: {[name: string]: number | undefined} = {};\n    for (let i = 0; i < n; i += 1) {\n      const [feel, value] = feels[i]!;\n      array[i] = [feel, this.coerce(value)];\n      index[feel.name] = i;\n    }\n    return this.fromArray(array, index);\n  }\n\n  fromArray(array: ReadonlyArray<[Feel, T]>,\n            index?: {readonly [name: string]: number | undefined}): LookVector<T> {\n    return LookVector.fromArray(array, index);\n  }\n\n  toString(): string {\n    return \"Look\" + \".\" + this.name;\n  }\n\n  static font: Look<Font, AnyFont>; // defined by looks\n\n  static color: Look<Color, AnyColor>; // defined by looks\n  static iconColor: Look<Color, AnyColor>; // defined by looks\n  static statusColor: Look<Color, AnyColor>; // defined by looks\n  static accentColor: Look<Color, AnyColor>; // defined by looks\n  static mutedColor: Look<Color, AnyColor>; // defined by looks\n  static neutralColor: Look<Color, AnyColor>; // defined by looks\n  static subduedColor: Look<Color, AnyColor>; // defined by looks\n  static faintColor: Look<Color, AnyColor>; // defined by looks\n  static highlightColor: Look<Color, AnyColor>; // defined by looks\n\n  static backgroundColor: Look<Color, AnyColor>; // defined by looks\n  static borderColor: Look<Color, AnyColor>; // defined by looks\n\n  static opacity: Look<number>; // defined by looks\n  static shadow: Look<BoxShadow, AnyBoxShadow>; // defined by looks\n  static spacing: Look<Length, AnyLength>; // defined by looks\n  static timing: Look<Timing, AnyTiming>; // defined by looks\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Interpolator, NumberInterpolator} from \"@swim/util\";\nimport {Look} from \"./Look\";\n\n/** @internal */\nexport class NumberLook extends Look<number> {\n  override combine(combination: number | undefined, value: number, weight: number): number {\n    if (combination !== void 0) {\n      if (weight === void 0 || weight === 1) {\n        return value;\n      } else if (weight === 0) {\n        return combination;\n      } else {\n        return (1.0 - weight) * combination + weight * value;\n      }\n    } else if (weight !== void 0 && weight !== 1) {\n      return value * weight;\n    } else {\n      return value;\n    }\n  }\n\n  override between(a: number, b: number): Interpolator<number> {\n    return NumberInterpolator(a, b);\n  }\n\n  override coerce(value: number): number {\n    return value;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Interpolator} from \"@swim/util\";\nimport {AnyLength, Length, LengthInterpolator} from \"@swim/math\";\nimport {Look} from \"./Look\";\n\n/** @internal */\nexport class LengthLook extends Look<Length, AnyLength> {\n  override combine(combination: Length | undefined, value: Length, weight?: number): Length {\n    if (combination !== void 0) {\n      if (weight === void 0 || weight === 1) {\n        return value;\n      } else if (weight === 0) {\n        return combination;\n      } else {\n        return LengthInterpolator(combination, value)(weight);\n      }\n    } else if (weight !== void 0 && weight !== 1) {\n      return value.times(weight);\n    } else {\n      return value;\n    }\n  }\n\n  override between(a: Length, b: Length): Interpolator<Length> {\n    return LengthInterpolator(a, b);\n  }\n\n  override coerce(value: AnyLength): Length {\n    return Length.fromAny(value);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Interpolator} from \"@swim/util\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {Look} from \"./Look\";\n\n/** @internal */\nexport class ColorLook extends Look<Color, AnyColor> {\n  override combine(combination: Color | undefined, value: Color, weight?: number): Color {\n    if (combination !== void 0) {\n      if (weight === void 0 || weight === 1) {\n        return value;\n      } else if (weight === 0) {\n        return combination;\n      } else {\n        return combination.interpolateTo(value)(weight);\n      }\n    } else if (weight !== void 0 && weight !== 1) {\n      return value.times(weight);\n    } else {\n      return value;\n    }\n  }\n\n  override between(a: Color, b: Color): Interpolator<Color> {\n    return a.interpolateTo(b);\n  }\n\n  override coerce(value: AnyColor): Color {\n    return Color.fromAny(value);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Interpolator} from \"@swim/util\";\nimport {AnyFont, Font, FontInterpolator} from \"@swim/style\";\nimport {Look} from \"./Look\";\n\n/** @internal */\nexport class FontLook extends Look<Font, AnyFont> {\n  override combine(combination: Font | undefined, value: Font, weight?: number): Font {\n    if (weight === void 0 || weight !== 0) {\n      return value;\n    } else if (combination !== void 0) {\n      return combination;\n    } else {\n      return Font.family(value.family);\n    }\n  }\n\n  override between(a: Font, b: Font): Interpolator<Font> {\n    return FontInterpolator(a, b);\n  }\n\n  override coerce(value: AnyFont): Font {\n    return Font.fromAny(value);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Interpolator} from \"@swim/util\";\nimport {AnyBoxShadow, BoxShadow, BoxShadowInterpolator} from \"@swim/style\";\nimport {Look} from \"./Look\";\n\n/** @internal */\nexport class ShadowLook extends Look<BoxShadow, AnyBoxShadow> {\n  override combine(combination: BoxShadow | undefined, value: BoxShadow, weight?: number): BoxShadow {\n    if (weight === void 0 || weight !== 0) {\n      return value;\n    } else if (combination !== void 0) {\n      return combination;\n    } else {\n      return value;\n    }\n  }\n\n  override between(a: BoxShadow, b: BoxShadow): Interpolator<BoxShadow> {\n    return BoxShadowInterpolator(a, b);\n  }\n\n  override coerce(value: AnyBoxShadow): BoxShadow {\n    return BoxShadow.fromAny(value)!;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyTiming, Timing, Interpolator} from \"@swim/util\";\nimport {Look} from \"./Look\";\n\n/** @internal */\nexport class TimingLook extends Look<Timing, AnyTiming> {\n  override combine(combination: Timing | undefined, value: Timing, weight: number): Timing {\n    if (weight === void 0 || weight !== 0) {\n      return value;\n    } else if (combination !== void 0) {\n      return combination;\n    } else {\n      return value\n    }\n  }\n\n  override between(a: Timing, b: Timing): Interpolator<Timing> {\n    return Interpolator(a, b);\n  }\n\n  override coerce(value: AnyTiming): Timing {\n    return Timing.fromAny(value);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Equals, Arrays, Interpolate, Interpolator} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport type {Look} from \"../look/Look\";\nimport {FeelVectorInterpolator} from \"../\"; // forward import\n\n/** @public */\nexport type AnyFeelVector = FeelVector | FeelVectorArray;\n\n/** @public */\nexport type FeelVectorArray = ReadonlyArray<[Look<unknown>, unknown]>;\n\n/** @public */\nexport type FeelVectorUpdates = ReadonlyArray<[Look<unknown>, unknown | undefined]>;\n\n/** @public */\nexport class FeelVector implements Interpolate<FeelVector>, Equals, Debug {\n  constructor(array: ReadonlyArray<[Look<unknown>, unknown]>,\n              index: {readonly [name: string]: number | undefined}) {\n    this.array = array;\n    this.index = index;\n  }\n\n  /** @internal */\n  readonly array: ReadonlyArray<[Look<unknown>, unknown]>;\n\n  /** @internal */\n  readonly index: {readonly [name: string]: number | undefined};\n\n  get size(): number {\n    return this.array.length;\n  }\n\n  isEmpty(): boolean {\n    return this.array.length === 0;\n  }\n\n  has(look: Look<any>): boolean;\n  has(name: string): boolean;\n  has(look: Look<any> | string): boolean {\n    if (typeof look === \"object\" && look !== null || typeof look === \"function\") {\n      look = look.name;\n    }\n    return this.index[look] !== void 0;\n  }\n\n  get<T>(look: Look<T, any>): T | undefined;\n  get(name: string): unknown | undefined;\n  get(index: number): unknown | undefined;\n  get<T>(look: Look<T, any> | string | number | undefined): T | unknown | undefined {\n    if (typeof look === \"object\" && look !== null || typeof look === \"function\") {\n      look = look.name;\n    }\n    if (typeof look === \"string\") {\n      look = this.index[look];\n    }\n    const entry = typeof look === \"number\" ? this.array[look] : void 0;\n    return entry !== void 0 ? entry[1] : void 0;\n  }\n\n  getOr<T, E>(look: Look<T, any>, elseValue: E): T | E;\n  getOr(name: string, elseValue: unknown): unknown;\n  getOr(index: number, elseValue: unknown): unknown;\n  getOr<T, E>(look: Look<T, any> | string | number | undefined, elseValue: E): T | unknown | E {\n    if (typeof look === \"object\" && look !== null || typeof look === \"function\") {\n      look = look.name;\n    }\n    if (typeof look === \"string\") {\n      look = this.index[look];\n    }\n    const entry = typeof look === \"number\" ? this.array[look] : void 0;\n    return entry !== void 0 ? entry[1] : elseValue;\n  }\n\n  updated<T, U = never>(look: Look<T, U>, value: T | U | undefined): FeelVector;\n  updated(updates: FeelVectorUpdates): FeelVector;\n  updated(updates: FeelVectorUpdates | Look<unknown>, value?: unknown | undefined): FeelVector {\n    let look: Look<unknown>;\n    let oldArray = this.array;\n    let oldIndex = this.index;\n    let newArray: [Look<unknown>, unknown][] | undefined;\n    let newIndex: {[name: string]: number | undefined} | undefined;\n    const updateCount = Array.isArray(updates) ? updates.length : 1;\n    for (let updateIndex = 0; updateIndex < updateCount; updateIndex += 1) {\n      if (updateIndex === 0 && !Array.isArray(updates)) {\n        look = updates as Look<unknown>;\n      } else {\n        [look, value] = (updates as FeelVectorUpdates)[updateIndex]!;\n      }\n      const i = oldIndex[look.name];\n      if (value !== void 0 && i !== void 0) { // update\n        const newArray = oldArray.slice(0);\n        newIndex = oldIndex;\n        newArray[i] = [look, value];\n        oldArray = newArray;\n      } else if (value !== void 0) { // insert\n        const newArray = oldArray.slice(0);\n        const newIndex: {[name: string]: number | undefined} = {};\n        for (const name in oldIndex) {\n          newIndex[name] = oldIndex[name];\n        }\n        newIndex[look.name] = newArray.length;\n        newArray.push([look, value]);\n        oldArray = newArray;\n        oldIndex = newIndex;\n      } else if (i !== void 0) { // remove\n        const newArray = new Array<[Look<unknown>, unknown]>();\n        const newIndex: {[name: string]: number | undefined} = {};\n        let k = 0;\n        for (let j = 0, n = oldArray.length; j < n; j += 1) {\n          const entry = oldArray[j]!;\n          if (entry[0] !== look) {\n            newArray[k] = entry;\n            newIndex[entry[0].name] = k;\n            k += 1;\n          }\n        }\n        oldArray = newArray;\n        oldIndex = newIndex;\n      }\n    }\n    if (newArray !== void 0 && newIndex !== void 0) {\n      return this.copy(newArray, newIndex);\n    } else {\n      return this;\n    }\n  }\n\n  plus(that: FeelVector): FeelVector {\n    const thisArray = this.array;\n    const thatArray = that.array;\n    const newArray = new Array<[Look<unknown>, unknown]>();\n    const newIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0, n = thisArray.length; i < n; i += 1) {\n      const entry = thisArray[i]!;\n      const look = entry[0];\n      const y = that.get(look);\n      newIndex[look.name] = newArray.length;\n      newArray.push(y === void 0 ? entry : [look, look.combine(entry[1], y)]);\n    }\n    for (let i = 0, n = thatArray.length; i < n; i += 1) {\n      const entry = thatArray[i]!;\n      const look = entry[0];\n      if (newIndex[look.name] === void 0) {\n        newIndex[look.name] = newArray.length;\n        newArray.push(entry);\n      }\n    }\n    return this.copy(newArray, newIndex);\n  }\n\n  negative(): FeelVector {\n    const oldArray = this.array;\n    const n = oldArray.length;\n    const newArray = new Array<[Look<unknown>, unknown]>(n);\n    for (let i = 0; i < n; i += 1) {\n      const [look, x] = oldArray[i]!;\n      newArray[i] = [look, look.combine(void 0, x, -1)];\n    }\n    return this.copy(newArray, this.index);\n  }\n\n  minus(that: FeelVector): FeelVector {\n    const thisArray = this.array;\n    const thatArray = that.array;\n    const newArray = new Array<[Look<unknown>, unknown]>();\n    const newIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0, n = thisArray.length; i < n; i += 1) {\n      const entry = thisArray[i]!;\n      const look = entry[0];\n      const y = that.get(look);\n      newIndex[look.name] = newArray.length;\n      newArray.push(y === void 0 ? entry : [look, look.combine(entry[1], y, -1)]);\n    }\n    for (let i = 0, n = thatArray.length; i < n; i += 1) {\n      const [look, y] = thatArray[i]!;\n      if (newIndex[look.name] === void 0) {\n        newIndex[look.name] = newArray.length;\n        newArray.push([look, look.combine(void 0, y, -1)]);\n      }\n    }\n    return this.copy(newArray, newIndex);\n  }\n\n  times(scalar: number): FeelVector {\n    const oldArray = this.array;\n    const n = oldArray.length;\n    const newArray = new Array<[Look<unknown>, unknown]>(n);\n    for (let i = 0; i < n; i += 1) {\n      const [look, x] = oldArray[i]!;\n      newArray[i] = [look, look.combine(void 0, x, scalar)];\n    }\n    return this.copy(newArray, this.index);\n  }\n\n  protected copy(array: ReadonlyArray<[Look<unknown>, unknown]>,\n                 index?: {readonly [name: string]: number | undefined}): FeelVector {\n    return FeelVector.fromArray(array, index);\n  }\n\n  forEach<R>(callback: <T>(value: T, look: Look<T>) => R | void): R | undefined;\n  forEach<R, S>(callback: <T>(this: S, value: T, look: Look<T>) => R | void,\n                thisArg: S): R | undefined;\n  forEach<R, S>(callback: <T>(this: S | undefined, value: T, look: Look<T>) => R | void,\n                thisArg?: S): R | undefined {\n    const array = this.array;\n    for (let i = 0, n = array.length; i < n; i += 1) {\n      const entry = array[i]!;\n      const result = callback.call(thisArg, entry[1], entry[0]);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  interpolateTo(that: FeelVector): Interpolator<FeelVector>;\n  interpolateTo(that: unknown): Interpolator<FeelVector> | null;\n  interpolateTo(that: unknown): Interpolator<FeelVector> | null {\n    if (that instanceof FeelVector) {\n      return FeelVectorInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof FeelVector) {\n      return Arrays.equal(this.array, that.array);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    const array = this.array;\n    const n = array.length;\n    output = output.write(\"FeelVector\").write(46/*'.'*/)\n                   .write(n !== 0 ? \"of\" : \"empty\").write(40/*'('*/);\n    for (let i = 0; i < n; i += 1) {\n      const [look, value] = array[i]!;\n      if (i !== 0) {\n        output = output.write(\", \");\n      }\n      output = output.write(91/*'['*/).debug(look).write(\", \").debug(value).write(93/*']'*/);\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static empty(): FeelVector {\n    return new FeelVector([], {});\n  }\n\n  static of(...looks: [Look<unknown>, unknown][]): FeelVector {\n    const n = looks.length;\n    const array = new Array<[Look<unknown>, unknown]>(n);\n    const index: {[name: string]: number | undefined} = {};\n    for (let i = 0; i < n; i += 1) {\n      const [look, value] = looks[i]!;\n      array[i] = [look, look.coerce(value)];\n      index[look.name] = i;\n    }\n    return new FeelVector(array, index);\n  }\n\n  static fromArray(array: ReadonlyArray<[Look<unknown>, unknown]>,\n                   index?: {readonly [name: string]: number | undefined}): FeelVector {\n    if (index === void 0) {\n      index = FeelVector.index(array);\n    }\n    return new FeelVector(array, index);\n  }\n\n  static fromAny(value: AnyFeelVector): FeelVector {\n    if (value === void 0 || value === null || value instanceof FeelVector) {\n      return value;\n    } else if (Array.isArray(value)) {\n      return FeelVector.of(...value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @internal */\n  static index<T>(array: ReadonlyArray<[Look<T>, T]>): {readonly [name: string]: number | undefined} {\n    const index: {[name: string]: number | undefined} = {};\n    for (let i = 0, n = array.length; i < n; i += 1) {\n      const entry = array[i]!;\n      index[entry[0].name] = i;\n    }\n    return index;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mood} from \"../mood/Mood\";\nimport type {Look} from \"../look/Look\";\nimport {FeelVector} from \"./FeelVector\";\n\n/** @public */\nexport abstract class Feel implements Mood {\n  constructor(name: string) {\n    this.name = name;\n  }\n\n  readonly name: string;\n\n  abstract combine<T>(look: Look<T, any>, combination: T | undefined,\n                      value: T, weight?: number): T;\n\n  empty(): FeelVector {\n    return FeelVector.empty();\n  }\n\n  of(...looks: [Look<unknown>, any][]): FeelVector {\n    return FeelVector.of(...looks);\n  }\n\n  from(array: ReadonlyArray<[Look<unknown>, unknown]>,\n       index?: {readonly [name: string]: number | undefined}): FeelVector {\n    return FeelVector.fromArray(array, index);\n  }\n\n  toString(): string {\n    return \"Feel\" + \".\" + this.name;\n  }\n\n  static ambient: Feel; // defined by feels\n  static default: Feel; // defined by feels\n\n  static primary: Feel; // defined by feels\n  static secondary: Feel; // defined by feels\n\n  static unselected: Feel; // defined by feels\n  static selected: Feel; // defined by feels\n  static disabled: Feel; // defined by feels\n  static inactive: Feel; // defined by feels\n  static warning: Feel; // defined by feels\n  static alert: Feel; // defined by feels\n\n  static darker: Feel; // defined by feels\n  static lighter: Feel; // defined by feels\n  static contrasted: Feel; // defined by feels\n\n  static raised: Feel; // defined by feels\n  static covered: Feel; // defined by feels\n\n  static opaque: Feel; // defined by feels\n  static floating: Feel; // defined by feels\n  static transparent: Feel; // defined by feels\n  static translucent: Feel; // defined by feels\n  static embossed: Feel; // defined by feels\n  static nested: Feel; // defined by feels\n  static hovering: Feel; // defined by feels\n\n  static navigating: Feel; // defined by feels\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Arrays, Interpolator} from \"@swim/util\";\nimport type {Look} from \"../look/Look\";\nimport {FeelVector} from \"./FeelVector\";\n\n/** @internal */\nexport interface FeelVectorInterpolator extends Interpolator<FeelVector> {\n  /** @internal */\n  readonly interpolators: ReadonlyArray<[Look<unknown>, Interpolator<unknown>]>;\n  /** @internal */\n  readonly index: {readonly [name: string]: number | undefined};\n\n  get 0(): FeelVector;\n\n  get 1(): FeelVector;\n\n  equals(that: unknown): boolean;\n}\n\n/** @internal */\nexport const FeelVectorInterpolator = (function (_super: typeof Interpolator) {\n  const FeelVectorInterpolator = function (v0: FeelVector, v1: FeelVector): FeelVectorInterpolator {\n    const interpolator = function (u: number): FeelVector {\n      const interpolators = interpolator.interpolators;\n      const interpolatorCount = interpolators.length;\n      const array = new Array<[Look<unknown>, unknown]>(interpolatorCount);\n      const index = interpolator.index;\n      for (let i = 0; i < interpolatorCount; i += 1) {\n        const [look, interpolator] = interpolators[i]!;\n        const value = interpolator(u);\n        array[i] = [look, value];\n      }\n      return FeelVector.fromArray(array, index);\n    } as FeelVectorInterpolator;\n    Object.setPrototypeOf(interpolator, FeelVectorInterpolator.prototype);\n    const interpolators = new Array<[Look<unknown>, Interpolator<unknown>]>();\n    const index: {[name: string]: number | undefined} = {};\n    v0.forEach(function <T>(a: T, look: Look<T>): void {\n      const b = v1.get(look);\n      if (b !== void 0) {\n        const interpolator = look.between(a, b);\n        index[look.name] = interpolators.length;\n        interpolators.push([look, interpolator]);\n      }\n    });\n    (interpolator as Mutable<typeof interpolator>).interpolators = interpolators;\n    (interpolator as Mutable<typeof interpolator>).index = index;\n    return interpolator;\n  } as {\n    (v0: FeelVector, v1: FeelVector): FeelVectorInterpolator;\n\n    /** @internal */\n    prototype: FeelVectorInterpolator;\n  };\n\n  FeelVectorInterpolator.prototype = Object.create(_super.prototype);\n  FeelVectorInterpolator.prototype.constructor = FeelVectorInterpolator;\n\n  Object.defineProperty(FeelVectorInterpolator.prototype, 0, {\n    get(this: FeelVectorInterpolator): FeelVector {\n      const interpolators = this.interpolators;\n      const interpolatorCount = interpolators.length;\n      const array = new Array<[Look<unknown>, unknown]>(interpolatorCount);\n      const index = this.index;\n      for (let i = 0; i < interpolatorCount; i += 1) {\n        const [look, interpolator] = interpolators[i]!;\n        const value = interpolator[0];\n        array[i] = [look, value];\n      }\n      return FeelVector.fromArray(array, index);\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(FeelVectorInterpolator.prototype, 1, {\n    get(this: FeelVectorInterpolator): FeelVector {\n      const interpolators = this.interpolators;\n      const interpolatorCount = interpolators.length;\n      const array = new Array<[Look<unknown>, unknown]>(interpolatorCount);\n      const index = this.index;\n      for (let i = 0; i < interpolatorCount; i += 1) {\n        const [look, interpolator] = interpolators[i]!;\n        const value = interpolator[1];\n        array[i] = [look, value];\n      }\n      return FeelVector.fromArray(array, index);\n    },\n    configurable: true,\n  });\n\n  FeelVectorInterpolator.prototype.equals = function (that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof FeelVectorInterpolator) {\n      const n = this.interpolators.length;\n      if (n === that.interpolators.length) {\n        for (let i = 0; i < n; i += 1) {\n          if (!Arrays.equal(this.interpolators[i]!, that.interpolators[i]!)) {\n            return false;\n          }\n        }\n        return true;\n      }\n    }\n    return false;\n  };\n\n  return FeelVectorInterpolator;\n})(Interpolator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Look} from \"../look/Look\";\nimport {Feel} from \"../feel/Feel\";\n\n/** @public */\nexport class InterpolatedFeel extends Feel {\n  override combine<T>(look: Look<T, any>, combination: T | undefined,\n                      value: T, weight?: number): T {\n    return look.combine(combination, value, weight);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Color} from \"@swim/style\";\nimport type {Look} from \"../look/Look\";\nimport {Feel} from \"../feel/Feel\";\n\n/** @public */\nexport class BrightnessFeel extends Feel {\n  override combine<T>(look: Look<T, any>, combination: T | undefined,\n                      value: T, weight?: number): T {\n    if (combination instanceof Color && value instanceof Color) {\n      const amount = weight === void 0 ? value.alpha() : value.alpha() * weight;\n      if (amount >= 0) {\n        return combination.darker(amount) as unknown as T;\n      } else {\n        return combination.lighter(-amount) as unknown as T;\n      }\n    } else {\n      return look.combine(combination, value, weight);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Color} from \"@swim/style\";\nimport type {Look} from \"../look/Look\";\nimport {Feel} from \"../feel/Feel\";\n\n/** @public */\nexport class OpacityFeel extends Feel {\n  override combine<T>(look: Look<T, any>, combination: T | undefined,\n                      value: T, weight?: number): T {\n    if (combination instanceof Color && value instanceof Color) {\n      if (weight === void 0 || weight === 1) {\n        return combination.alpha(value.alpha()) as unknown as T;\n      } else if (weight === 0) {\n        return combination;\n      } else {\n        const alpha = (1.0 - weight) * combination.alpha() + weight * value.alpha();\n        return combination.alpha(alpha) as unknown as T;\n      }\n    } else {\n      return look.combine(combination, value, weight);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {MoodVector} from \"./MoodVector\";\n\n/** @public */\nexport interface Mood {\n  readonly name: string;\n}\n\n/** @public */\nexport const Mood = {} as {\n  ambient: MoodVector; // defined by moods\n  default: MoodVector; // defined by moods\n\n  primary: MoodVector; // defined by moods\n  secondary: MoodVector; // defined by moods\n\n  selected: MoodVector; // defined by moods\n  disabled: MoodVector; // defined by moods\n  inactive: MoodVector; // defined by moods\n  warning: MoodVector; // defined by moods\n  alert: MoodVector; // defined by moods\n\n  darker: MoodVector; // defined by moods\n  lighter: MoodVector; // defined by moods\n  contrasted: MoodVector; // defined by moods\n\n  raised: MoodVector; // defined by moods\n  covered: MoodVector; // defined by moods\n\n  opaque: MoodVector; // defined by moods\n  floating: MoodVector; // defined by moods\n  transparent: MoodVector; // defined by moods\n  translucent: MoodVector; // defined by moods\n  embossed: MoodVector; // defined by moods\n  nested: MoodVector; // defined by moods\n  hovering: MoodVector; // defined by moods\n\n  navigating: MoodVector; // defined by moods\n};\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals, Lazy, Arrays} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport type {Feel} from \"../feel/Feel\";\nimport type {Mood} from \"./Mood\";\n\n/** @public */\nexport type AnyMoodVector<M extends Mood = Feel> = MoodVector<M> | MoodVectorArray<M>;\n\n/** @public */\nexport type MoodVectorArray<M extends Mood = Feel> = ReadonlyArray<[M, number]>;\n\n/** @public */\nexport type MoodVectorUpdates<M extends Mood = Feel> = ReadonlyArray<[M, number | undefined]>;\n\n/** @public */\nexport class MoodVector<M extends Mood = Feel> implements Equals, Debug {\n  constructor(array: ReadonlyArray<[M, number]>,\n              index: {readonly [name: string]: number | undefined}) {\n    this.array = array;\n    this.index = index;\n  }\n\n  /** @internal */\n  readonly array: ReadonlyArray<[M, number]>;\n\n  /** @internal */\n  readonly index: {readonly [name: string]: number | undefined};\n\n  get size(): number {\n    return this.array.length;\n  }\n\n  isEmpty(): boolean {\n    return this.array.length === 0;\n  }\n\n  has(key: M): boolean;\n  has(name: string): boolean;\n  has(key: M | string): boolean {\n    if (typeof key === \"object\" && key !== null || typeof key === \"function\") {\n      key = key.name;\n    }\n    return this.index[key] !== void 0;\n  }\n\n  get(key: M): number | undefined;\n  get(name: string): number | undefined;\n  get(index: number): number | undefined;\n  get(key: M | string | number | undefined): number | undefined {\n    if (typeof key === \"object\" && key !== null || typeof key === \"function\") {\n      key = key.name;\n    }\n    if (typeof key === \"string\") {\n      key = this.index[key];\n    }\n    const entry = typeof key === \"number\" ? this.array[key] : void 0;\n    return entry !== void 0 ? entry[1] : void 0;\n  }\n\n  getOr<E>(key: M, elseValue: E): number | E;\n  getOr<E>(name: string, elseValue: E): number | E;\n  getOr<E>(index: number, elseValue: E): number | E;\n  getOr<E>(key: M | string | number | undefined, elseValue: E): number | E {\n    if (typeof key === \"object\" && key !== null || typeof key === \"function\") {\n      key = key.name;\n    }\n    if (typeof key === \"string\") {\n      key = this.index[key];\n    }\n    const entry = typeof key === \"number\" ? this.array[key] : void 0;\n    return entry !== void 0 ? entry[1] : elseValue;\n  }\n\n  updated(key: M, value: number | undefined): MoodVector<M>;\n  updated(updates: MoodVectorUpdates<M>): MoodVector<M>;\n  updated(updates: MoodVectorUpdates<M> | M, value?: number | undefined): MoodVector<M> {\n    let key: M;\n    let oldArray = this.array;\n    let oldIndex = this.index;\n    let newArray: [M, number][] | undefined;\n    let newIndex: {[name: string]: number | undefined} | undefined;\n    const updateCount = Array.isArray(updates) ? updates.length : 1;\n    for (let updateIndex = 0; updateIndex < updateCount; updateIndex += 1) {\n      if (updateIndex === 0 && !Array.isArray(updates)) {\n        key = updates as M;\n      } else {\n        [key, value] = (updates as MoodVectorUpdates<M>)[updateIndex]!;\n      }\n      const i = oldIndex[key.name];\n      if (value !== void 0 && i !== void 0) { // update\n        newArray = oldArray.slice(0);\n        newIndex = oldIndex;\n        newArray[i] = [key, value];\n        oldArray = newArray;\n      } else if (value !== void 0) { // insert\n        newArray = oldArray.slice(0);\n        newIndex = {};\n        for (const name in oldIndex) {\n          newIndex[name] = oldIndex[name];\n        }\n        newIndex[key.name] = newArray.length;\n        newArray.push([key, value]);\n        oldArray = newArray;\n        oldIndex = newIndex;\n      } else if (i !== void 0) { // remove\n        newArray = new Array<[M, number]>();\n        newIndex = {};\n        let k = 0;\n        for (let j = 0, n = oldArray.length; j < n; j += 1) {\n          const entry = oldArray[j]!;\n          if (entry[0] !== key) {\n            newArray[k] = entry;\n            newIndex[entry[0].name] = k;\n            k += 1;\n          }\n        }\n        oldArray = newArray;\n        oldIndex = newIndex;\n      }\n    }\n    if (newArray !== void 0 && newIndex !== void 0) {\n      return this.copy(newArray, newIndex);\n    } else {\n      return this;\n    }\n  }\n\n  plus(that: MoodVector<M>): MoodVector<M> {\n    const thisArray = this.array;\n    const thatArray = that.array;\n    const newArray = new Array<[M, number]>();\n    const newIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0, n = thisArray.length; i < n; i += 1) {\n      const entry = thisArray[i]!;\n      const key = entry[0];\n      const y = that.get(key);\n      newIndex[key.name] = newArray.length;\n      newArray.push(y === void 0 ? entry : [key, entry[1] + y]);\n    }\n    for (let i = 0, n = thatArray.length; i < n; i += 1) {\n      const entry = thatArray[i]!;\n      const key = entry[0];\n      if (newIndex[key.name] === void 0) {\n        newIndex[key.name] = newArray.length;\n        newArray.push(entry);\n      }\n    }\n    return this.copy(newArray, newIndex);\n  }\n\n  negative(): MoodVector<M> {\n    const oldArray = this.array;\n    const n = oldArray.length;\n    const newArray = new Array<[M, number]>(n);\n    for (let i = 0; i < n; i += 1) {\n      const [key, x] = oldArray[i]!;\n      newArray[i] = [key, -x];\n    }\n    return this.copy(newArray, this.index);\n  }\n\n  minus(that: MoodVector<M>): MoodVector<M> {\n    const thisArray = this.array;\n    const thatArray = that.array;\n    const newArray = new Array<[M, number]>();\n    const newIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0, n = thisArray.length; i < n; i += 1) {\n      const entry = thisArray[i]!;\n      const key = entry[0];\n      const y = that.get(key);\n      newIndex[key.name] = newArray.length;\n      newArray.push(y === void 0 ? entry : [key, entry[1] - y]);\n    }\n    for (let i = 0, n = thatArray.length; i < n; i += 1) {\n      const [key, y] = thatArray[i]!;\n      if (newIndex[key.name] === void 0) {\n        newIndex[key.name] = newArray.length;\n        newArray.push([key, -y]);\n      }\n    }\n    return this.copy(newArray, newIndex);\n  }\n\n  times(scalar: number): MoodVector<M> {\n    const oldArray = this.array;\n    const n = oldArray.length;\n    const newArray = new Array<[M, number]>(n);\n    for (let i = 0; i < n; i += 1) {\n      const [key, x] = oldArray[i]!;\n      newArray[i] = [key, x * scalar];\n    }\n    return this.copy(newArray, this.index);\n  }\n\n  dot(that: MoodVector<M>): number | undefined {\n    const array = this.array;\n    let combination: number | undefined;\n    for (let i = 0, n = array.length; i < n; i += 1) {\n      const [key, x] = array[i]!;\n      const y = that.get(key);\n      if (y !== void 0) {\n        if (combination === void 0) {\n          combination = x * y;\n        } else {\n          combination += x * y\n        }\n      }\n    }\n    return combination;\n  }\n\n  protected copy(array: ReadonlyArray<[M, number]>,\n                 index?: {readonly [name: string]: number | undefined}): MoodVector<M> {\n    return MoodVector.fromArray(array, index);\n  }\n\n  forEach<R>(callback: (value: number, key: M) => R | void): R | undefined;\n  forEach<R, S>(callback: (this: S, value: number, key: M) => R | void,\n                thisArg: S): R | undefined;\n  forEach<R, S>(callback: (this: S | undefined, value: number, key: M) => R | void,\n                thisArg?: S): R | undefined {\n    const array = this.array;\n    for (let i = 0, n = array.length; i < n; i += 1) {\n      const entry = array[i]!;\n      const result = callback.call(thisArg, entry[1], entry[0]);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof MoodVector) {\n      return Arrays.equal(this.array, that.array);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    const array = this.array;\n    const n = array.length;\n    output = output.write(\"MoodVector\").write(46/*'.'*/)\n                   .write(n !== 0 ? \"of\" : \"empty\").write(40/*'('*/);\n    for (let i = 0; i < n; i += 1) {\n      const [key, value] = array[i]!;\n      if (i !== 0) {\n        output = output.write(\", \");\n      }\n      output = output.write(91/*'['*/).debug(key).write(\", \").debug(value).write(93/*']'*/);\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static empty<M extends Mood>(): MoodVector<M> {\n    return new MoodVector([], {});\n  }\n\n  static of<M extends Mood>(...keys: [M, number][]): MoodVector<M> {\n    return new MoodVector(keys, MoodVector.index(keys));\n  }\n\n  static fromArray<M extends Mood>(array: ReadonlyArray<[M, number]>,\n                                   index?: {[name: string]: number | undefined}): MoodVector<M> {\n    if (index === void 0) {\n      index = MoodVector.index(array);\n    }\n    return new MoodVector(array, index);\n  }\n\n  static fromAny<M extends Mood>(value: AnyMoodVector<M>): MoodVector<M> {\n    if (value === void 0 || value === null || value instanceof MoodVector) {\n      return value;\n    } else if (Array.isArray(value)) {\n      return MoodVector.fromArray(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /** @internal */\n  static index<M extends Mood>(array: ReadonlyArray<[M, unknown]>): {readonly [name: string]: number | undefined} {\n    const index: {[name: string]: number | undefined} = {};\n    for (let i = 0, n = array.length; i < n; i += 1) {\n      const entry = array[i]!;\n      index[entry[0].name] = i;\n    }\n    return index;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals, Lazy, Arrays} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport type {Feel} from \"../feel/Feel\";\nimport type {Mood} from \"./Mood\";\nimport {AnyMoodVector, MoodVectorUpdates, MoodVector} from \"./MoodVector\";\n\n/** @public */\nexport class MoodMatrix<M extends Mood = Feel, N extends Mood = Feel> implements Equals, Debug {\n  constructor(rowArray: ReadonlyArray<[M, MoodVector<N>]>,\n              rowIndex: {readonly [name: string]: number | undefined},\n              colArray: ReadonlyArray<[N, MoodVector<M>]>,\n              colIndex: {readonly [name: string]: number | undefined}) {\n    this.rowArray = rowArray;\n    this.rowIndex = rowIndex;\n    this.colArray = colArray;\n    this.colIndex = colIndex;\n  }\n\n  /** @internal */\n  readonly rowArray: ReadonlyArray<[M, MoodVector<N>]>;\n\n  /** @internal */\n  readonly rowIndex: {readonly [name: string]: number | undefined};\n\n  /** @internal */\n  readonly colArray: ReadonlyArray<[N, MoodVector<M>]>;\n\n  /** @internal */\n  readonly colIndex: {readonly [name: string]: number | undefined};\n\n  get rowCount(): number {\n    return this.rowArray.length;\n  }\n\n  get colCount(): number {\n    return this.colArray.length;\n  }\n\n  hasRow(rowKey: M): boolean;\n  hasRow(rowKey: string): boolean;\n  hasRow(rowKey: M | string): boolean {\n    if (typeof rowKey === \"object\" && rowKey !== null || typeof rowKey === \"function\") {\n      rowKey = rowKey.name;\n    }\n    return this.rowIndex[rowKey] !== void 0;\n  }\n\n  hasCol(colKey: N): boolean;\n  hasCol(colKey: string): boolean;\n  hasCol(colKey: N | string): boolean {\n    if (typeof colKey === \"object\" && colKey !== null || typeof colKey === \"function\") {\n      colKey = colKey.name;\n    }\n    return this.colIndex[colKey] !== void 0;\n  }\n\n  getRow(rowKey: M): MoodVector<N> | undefined;\n  getRow(rowKey: string): MoodVector<N> | undefined;\n  getRow(rowIndex: number): MoodVector<N> | undefined;\n  getRow(rowKey: M | string | number | undefined): MoodVector<N> | undefined {\n    if (typeof rowKey === \"object\" && rowKey !== null || typeof rowKey === \"function\") {\n      rowKey = rowKey.name;\n    }\n    if (typeof rowKey === \"string\") {\n      rowKey = this.rowIndex[rowKey];\n    }\n    const entry = typeof rowKey === \"number\" ? this.rowArray[rowKey] : void 0;\n    return entry !== void 0 ? entry[1] : void 0;\n  }\n\n  getCol(colKey: N): MoodVector<M> | undefined;\n  getCol(colKey: string): MoodVector<M> | undefined;\n  getCol(colIndex: number): MoodVector<M> | undefined;\n  getCol(colKey: N | string | number | undefined): MoodVector<M> | undefined {\n    if (typeof colKey === \"object\" && colKey !== null || typeof colKey === \"function\") {\n      colKey = colKey.name;\n    }\n    if (typeof colKey === \"string\") {\n      colKey = this.colIndex[colKey];\n    }\n    const entry = typeof colKey === \"number\" ? this.colArray[colKey] : void 0;\n    return entry !== void 0 ? entry[1] : void 0;\n  }\n\n  plus(that: MoodMatrix<M, N>): MoodMatrix<M, N> {\n    const thisColArray = this.colArray;\n    const thatColArray = that.colArray;\n    const newColArray = new Array<[N, MoodVector<M>]>();\n    const newColIndex: {[name: string]: number | undefined} = {};\n    for (let j = 0, n = thisColArray.length; j < n; j += 1) {\n      const entry = thisColArray[j]!;\n      const colKey = entry[0];\n      const b = that.getCol(colKey);\n      newColIndex[colKey.name] = newColArray.length;\n      newColArray.push(b === void 0 ? entry : [colKey, entry[1].plus(b)]);\n    }\n    for (let j = 0, n = thatColArray.length; j < n; j += 1) {\n      const entry = thatColArray[j]!;\n      const colKey = entry[0];\n      if (newColIndex[colKey.name] === void 0) {\n        newColIndex[colKey.name] = newColArray.length;\n        newColArray.push(entry);\n      }\n    }\n    return MoodMatrix.fromColArray(newColArray, newColIndex);\n  }\n\n  negative(): MoodMatrix<M, N> {\n    const oldColArray = this.colArray;\n    const n = oldColArray.length;\n    const newColArray = new Array<[N, MoodVector<M>]>(n);\n    for (let j = 0; j < n; j += 1) {\n      const [colKey, a] = oldColArray[j]!;\n      newColArray[j] = [colKey, a.negative()];\n    }\n    return MoodMatrix.fromColArray(newColArray, this.colIndex);\n  }\n\n  minus(that: MoodMatrix<M, N>): MoodMatrix<M, N> {\n    const thisColArray = this.colArray;\n    const thatColArray = that.colArray;\n    const newColArray = new Array<[N, MoodVector<M>]>();\n    const newColIndex: {[name: string]: number | undefined} = {};\n    for (let j = 0, n = thisColArray.length; j < n; j += 1) {\n      const entry = thisColArray[j]!;\n      const colKey = entry[0];\n      const b = that.getCol(colKey);\n      newColIndex[colKey.name] = newColArray.length;\n      newColArray.push(b === void 0 ? entry : [colKey, entry[1].minus(b)]);\n    }\n    for (let j = 0, n = thatColArray.length; j < n; j += 1) {\n      const [colKey, b] = thatColArray[j]!;\n      if (newColIndex[colKey.name] === void 0) {\n        newColIndex[colKey.name] = newColArray.length;\n        newColArray.push([colKey, b.negative()]);\n      }\n    }\n    return MoodMatrix.fromColArray(newColArray, newColIndex);\n  }\n\n  times(scalar: number): MoodMatrix<M, N> {\n    const oldColArray = this.colArray;\n    const n = oldColArray.length;\n    const newColArray = new Array<[N, MoodVector<M>]>(n);\n    for (let j = 0; j < n; j += 1) {\n      const [colKey, a] = oldColArray[j]!;\n      newColArray[j] = [colKey, a.times(scalar)];\n    }\n    return MoodMatrix.fromColArray(newColArray, this.colIndex);\n  }\n\n  dot(rowKey: M | string | number, col: MoodVector<N>): number | undefined;\n  dot(rowKey: M | string | number | undefined, col: MoodVector<N>): number | undefined {\n    if (typeof rowKey === \"object\" && rowKey !== null || typeof rowKey === \"function\") {\n      rowKey = rowKey.name;\n    }\n    if (typeof rowKey === \"string\") {\n      rowKey = this.rowIndex[rowKey];\n    }\n    const entry = typeof rowKey === \"number\" ? this.rowArray[rowKey] : void 0;\n    if (entry !== void 0) {\n      rowKey = entry[0];\n      const row = entry[1];\n      return row.dot(col);\n    }\n    return void 0;\n  }\n\n  timesCol(col: MoodVector<N>): MoodVector<M>;\n  timesCol(col: MoodVector<M & N>, implicitIdentity?: boolean): MoodVector<M | M>;\n  timesCol(col: MoodVector<M & N>, implicitIdentity: boolean = false): MoodVector<M | N> {\n    const rowArray = this.rowArray;\n    const newArray = new Array<[M, number]>();\n    const newIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0, m = rowArray.length; i < m; i += 1) {\n      const [rowKey, row] = rowArray[i]!;\n      const value = row.dot(col);\n      if (value !== void 0) {\n        newIndex[rowKey.name] = newArray.length;\n        newArray.push([rowKey, value]);\n      }\n    }\n    if (implicitIdentity) {\n      const thatArray = col.array;\n      for (let i = 0, m = thatArray.length; i < m; i += 1) {\n        const rowKey = thatArray[i]![0];\n        if (!this.hasRow(rowKey)) {\n          newIndex[rowKey.name] = newArray.length;\n          newArray.push(thatArray[i]!);\n        }\n      }\n    }\n    return MoodVector.fromArray(newArray, newIndex);\n  }\n\n  timesRow(row: MoodVector<M>): MoodVector<N>;\n  timesRow(row: MoodVector<M & N>, implicitIdentity?: boolean): MoodVector<M | M>;\n  timesRow(row: MoodVector<M & N>, implicitIdentity: boolean = false): MoodVector<M | N> {\n    const colArray = this.colArray;\n    const newArray = new Array<[N, number]>();\n    const newIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0, n = colArray.length; i < n; i += 1) {\n      const [colKey, col] = colArray[i]!;\n      const value = row.dot(col as MoodVector<M & N>);\n      if (value !== void 0) {\n        newIndex[colKey.name] = newArray.length;\n        newArray.push([colKey, value]);\n      }\n    }\n    if (implicitIdentity) {\n      const thatArray = row.array;\n      for (let i = 0, n = thatArray.length; i < n; i += 1) {\n        const colKey = thatArray[i]![0];\n        if (!this.hasCol(colKey)) {\n          newIndex[colKey.name] = newArray.length;\n          newArray.push(thatArray[i]!);\n        }\n      }\n    }\n    return MoodVector.fromArray(newArray, newIndex);\n  }\n\n  transform(that: MoodMatrix<N, N>, implicitIdentity: boolean = true): MoodMatrix<M, N> {\n    const thisRowArray = this.rowArray;\n    const thisColArray = this.colArray;\n    const newRowArray = new Array<[M, MoodVector<N>]>();\n    const newRowIndex: {[name: string]: number | undefined} = {};\n    const newColArray = new Array<[N, MoodVector<M>]>();\n    const newColIndex: {[name: string]: number | undefined} = {};\n    for (let j = 0, n = thisColArray.length; j < n; j += 1) {\n      const colKey = thisColArray[j]![0];\n      let col = that.getCol(colKey);\n      if (col === void 0 && implicitIdentity) {\n        col = MoodVector.of([colKey, 1]);\n      }\n      if (col !== void 0) {\n        for (let i = 0, m = thisRowArray.length; i < m; i += 1) {\n          const [rowKey, row] = thisRowArray[i]!;\n          const value = row.dot(col);\n          if (value !== void 0) {\n            const i2 = newRowIndex[rowKey.name];\n            if (i2 !== void 0) {\n              const newRow = newRowArray[i2]![1];\n              (newRow.index as {[name: string]: number | undefined})[rowKey.name] = newRow.array.length;\n              (newRow.array as [N, number][]).push([colKey, value]);\n            } else {\n              newRowIndex[rowKey.name] = newRowArray.length;\n              newRowArray.push([rowKey, MoodVector.of([colKey, value])]);\n            }\n            const j2 = newColIndex[colKey.name];\n            if (j2 !== void 0) {\n              const newCol = newColArray[j2]![1];\n              (newCol.index as {[name: string]: number | undefined})[colKey.name] = newCol.array.length;\n              (newCol.array as [M, number][]).push([rowKey, value]);\n            } else {\n              newColIndex[colKey.name] = newColArray.length;\n              newColArray.push([colKey, MoodVector.of([rowKey, value])]);\n            }\n          }\n        }\n      }\n    }\n    return new MoodMatrix(newRowArray, newRowIndex, newColArray, newColIndex);\n  }\n\n  /** @internal */\n  identityFor(that: MoodMatrix<N, M & N>): MoodMatrix<M, N> {\n    const thisRowArray = this.rowArray;\n    const thatColArray = that.colArray;\n    let newRowArray: Array<[M, MoodVector<N>]> | undefined;\n    let newRowIndex: {[name: string]: number | undefined} | undefined;\n    for (let j = 0, n = thatColArray.length; j < n; j += 1) {\n      const colKey = thatColArray[j]![0];\n      if (!this.hasRow(colKey)) {\n        if (newRowArray === void 0) {\n          newRowArray = thisRowArray.slice(0);\n        }\n        if (newRowIndex === void 0) {\n          newRowIndex = {};\n          for (const name in this.rowIndex) {\n            newRowIndex[name] = this.rowIndex[name];\n          }\n        }\n        newRowIndex[colKey.name] = newRowArray.length;\n        newRowArray.push([colKey, MoodVector.of([colKey, 1])]);\n      }\n    }\n    if (newRowArray !== void 0 && newRowIndex !== void 0) {\n      return MoodMatrix.fromRowArray(newRowArray, newRowIndex);\n    } else {\n      return this;\n    }\n  }\n\n  row(rowKey: M, row: AnyMoodVector<N> | undefined): MoodMatrix<M, N> {\n    if (row !== void 0) {\n      row = MoodVector.fromAny(row);\n    }\n    const oldRowArray = this.rowArray;\n    const oldRowIndex = this.rowIndex;\n    const i = oldRowIndex[rowKey.name];\n    if (row !== void 0 && i !== void 0) { // update\n      const newRowArray = oldRowArray.slice(0);\n      newRowArray[i] = [rowKey, row];\n      return MoodMatrix.fromRowArray(newRowArray, oldRowIndex);\n    } else if (row !== void 0) { // insert\n      const newRowArray = oldRowArray.slice(0);\n      const newRowIndex: {[name: string]: number | undefined} = {};\n      for (const name in oldRowIndex) {\n        newRowIndex[name] = oldRowIndex[name];\n      }\n      newRowIndex[rowKey.name] = newRowArray.length;\n      newRowArray.push([rowKey, row]);\n      return MoodMatrix.fromRowArray(newRowArray, newRowIndex);\n    } else if (i !== void 0) { // remove\n      const newRowArray = new Array<[M, MoodVector<N>]>();\n      const newRowIndex: {[name: string]: number | undefined} = {};\n      let k = 0;\n      for (let j = 0, n = oldRowArray.length; j < n; j += 1) {\n        const entry = oldRowArray[j]!;\n        if (entry[0] !== rowKey) {\n          newRowArray[k] = entry;\n          newRowIndex[entry[0].name] = k;\n          k += 1;\n        }\n      }\n      return MoodMatrix.fromRowArray(newRowArray, newRowIndex);\n    } else { // nop\n      return this;\n    }\n  }\n\n  col(colKey: N, col: AnyMoodVector<M> | undefined): MoodMatrix<M, N> {\n    if (col !== void 0) {\n      col = MoodVector.fromAny(col);\n    }\n    const oldColArray = this.colArray;\n    const oldColIndex = this.colIndex;\n    const i = oldColIndex[colKey.name];\n    if (col !== void 0 && i !== void 0) { // update\n      const newColArray = oldColArray.slice(0);\n      newColArray[i] = [colKey, col];\n      return MoodMatrix.fromColArray(newColArray, oldColIndex);\n    } else if (col !== void 0) { // insert\n      const newColArray = oldColArray.slice(0);\n      const newColIndex: {[name: string]: number | undefined} = {};\n      for (const name in oldColIndex) {\n        newColIndex[name] = oldColIndex[name];\n      }\n      newColIndex[colKey.name] = newColArray.length;\n      newColArray.push([colKey, col]);\n      return MoodMatrix.fromColArray(newColArray, newColIndex);\n    } else if (i !== void 0) { // remove\n      const newColArray = new Array<[N, MoodVector<M>]>();\n      const newColIndex: {[name: string]: number | undefined} = {};\n      let k = 0;\n      for (let j = 0, n = oldColArray.length; j < n; j += 1) {\n        const entry = oldColArray[j]!;\n        if (entry[0] !== colKey) {\n          newColArray[k] = entry;\n          newColIndex[entry[0].name] = k;\n          k += 1;\n        }\n      }\n      return MoodMatrix.fromColArray(newColArray, newColIndex);\n    } else { // nop\n      return this;\n    }\n  }\n\n  updatedRow(rowKey: M, updates: MoodVectorUpdates<N>,\n             defaultRow?: AnyMoodVector<N>): MoodMatrix<M, N>;\n  updatedRow(rowKey: M & N, updates: MoodVectorUpdates<M & N>,\n             defaultRow?: AnyMoodVector<N> | boolean): MoodMatrix<M | N, N>\n  updatedRow(rowKey: M & N, updates: MoodVectorUpdates<M & N>,\n             defaultRow?: AnyMoodVector<N> | boolean): MoodMatrix<M | N, N> {\n    const oldRow = this.getRow(rowKey);\n    let newRow = oldRow;\n    if (newRow === void 0) {\n      if (defaultRow === true) {\n        defaultRow = MoodVector.of([rowKey, 1]);\n      } else if (defaultRow === false) {\n        defaultRow = void 0;\n      }\n      if (defaultRow !== void 0) {\n        defaultRow = MoodVector.fromAny(defaultRow);\n      } else {\n        defaultRow = MoodVector.empty();\n      }\n      newRow = defaultRow;\n    }\n    newRow = newRow.updated(updates);\n    if (!newRow.equals(oldRow)) {\n      return this.row(rowKey, newRow);\n    } else {\n      return this;\n    }\n  }\n\n  updatedCol(colKey: N, updates: MoodVectorUpdates<M>,\n             defaultCol?: AnyMoodVector<M>): MoodMatrix<M, N>;\n  updatedCol(colKey: M & N, updates: MoodVectorUpdates<M & N>,\n             defaultCol?: AnyMoodVector<M> | boolean): MoodMatrix<M | N, N>;\n  updatedCol(colKey: M & N, updates: MoodVectorUpdates<M & N>,\n             defaultCol?: AnyMoodVector<M> | boolean): MoodMatrix<M | N, N> {\n    const oldCol = this.getCol(colKey);\n    let newCol = oldCol;\n    if (newCol === void 0) {\n      if (defaultCol === true) {\n        defaultCol = MoodVector.of([colKey, 1]);\n      } else if (defaultCol === false) {\n        defaultCol = void 0;\n      }\n      if (defaultCol !== void 0) {\n        defaultCol = MoodVector.fromAny(defaultCol);\n      } else {\n        defaultCol = MoodVector.empty();\n      }\n      newCol = defaultCol;\n    }\n    newCol = newCol.updated(updates);\n    if (!newCol.equals(oldCol)) {\n      return this.col(colKey, newCol);\n    } else {\n      return this;\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof MoodMatrix) {\n      const equal = Arrays.equal(this.colArray, that.colArray);\n      return equal;\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    const cols = this.colArray;\n    const n = cols.length;\n    output = output.write(\"MoodMatrix\").write(46/*'.'*/)\n                   .write(n !== 0 ? \"forCols\" : \"empty\").write(40/*'('*/);\n    for (let j = 0; j < n; j += 1) {\n      const [colKey, col] = cols[j]!;\n      if (j !== 0) {\n        output = output.write(\", \");\n      }\n      output = output.write(91/*'['*/).debug(colKey).write(\", \").debug(col).write(93/*']'*/);\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static empty<M extends Mood = Feel, N extends Mood = Feel>(): MoodMatrix<M, N> {\n    return new MoodMatrix([], {}, [], {});\n  }\n\n  static forRows<M extends Mood, N extends Mood>(...rows: [M, AnyMoodVector<N>][]): MoodMatrix<M, N> {\n    const m = rows.length;\n    const rowArray = new Array<[M, MoodVector<N>]>(m);\n    for (let i = 0; i < m; i += 1) {\n      const [rowKey, row] = rows[i]!;\n      rowArray[i] = [rowKey, MoodVector.fromAny(row)];\n    }\n    return this.fromRowArray(rowArray);\n  }\n\n  static forCols<M extends Mood, N extends Mood>(...cols: [N, AnyMoodVector<M>][]): MoodMatrix<M, N> {\n    const m = cols.length;\n    const colArray = new Array<[N, MoodVector<M>]>(m);\n    for (let j = 0; j < m; j += 1) {\n      const [colKey, col] = cols[j]!;\n      colArray[j] = [colKey, MoodVector.fromAny(col)];\n    }\n    return this.fromColArray(colArray);\n  }\n\n  static fromRowArray<M extends Mood, N extends Mood>(\n      rowArray: ReadonlyArray<[M, MoodVector<N>]>,\n      rowIndex?: {readonly [name: string]: number | undefined}): MoodMatrix<M, N> {\n    if (rowIndex === void 0) {\n      rowIndex = MoodVector.index(rowArray);\n    }\n    const colArray = new Array<[N, MoodVector<M>]>();\n    const colIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0, m = rowArray.length; i < m; i += 1) {\n      const row = rowArray[i]![1];\n      row.forEach(function (value: number, colKey: N): void {\n        if (colIndex[colKey.name] === void 0) {\n          colIndex[colKey.name] = colArray.length;\n          colArray.push([colKey, void 0 as unknown as MoodVector<M>]);\n        }\n      }, this);\n    }\n    for (let j = 0, n = colArray.length; j < n; j += 1) {\n      const entry = colArray[j]!;\n      const colKey = entry[0];\n      const array = new Array<[M, number]>();\n      const index: {[name: string]: number | undefined} = {};\n      for (let i = 0, m = rowArray.length; i < m; i += 1) {\n        const [rowKey, row] = rowArray[i]!;\n        const value = row.get(colKey);\n        if (value !== void 0) {\n          index[rowKey.name] = array.length;\n          array.push([rowKey, value]);\n        }\n      }\n      const col = MoodVector.fromArray(array, index);\n      entry[1] = col;\n    }\n    return new MoodMatrix(rowArray, rowIndex, colArray, colIndex);\n  }\n\n  static fromColArray<M extends Mood, N extends Mood>(\n      colArray: ReadonlyArray<[N, MoodVector<M>]>,\n      colIndex?: {readonly [name: string]: number | undefined}): MoodMatrix<M, N> {\n    if (colIndex === void 0) {\n      colIndex = MoodVector.index(colArray);\n    }\n    const rowArray = new Array<[M, MoodVector<N>]>();\n    const rowIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0, n = colArray.length; i < n; i += 1) {\n      const col = colArray[i]![1];\n      col.forEach(function (value: number, rowKey: M): void {\n        if (rowIndex[rowKey.name] === void 0) {\n          rowIndex[rowKey.name] = rowArray.length;\n          rowArray.push([rowKey, void 0 as unknown as MoodVector<N>]);\n        }\n      }, this);\n    }\n    for (let i = 0, m = rowArray.length; i < m; i += 1) {\n      const entry = rowArray[i]!;\n      const rowKey = entry[0];\n      const array = new Array<[N, number]>();\n      const index: {[name: string]: number | undefined} = {};\n      for (let j = 0, n = colArray.length; j < n; j += 1) {\n        const [colKey, col] = colArray[j]!;\n        const value = col.get(rowKey);\n        if (value !== void 0) {\n          index[colKey.name] = array.length;\n          array.push([colKey, value]);\n        }\n      }\n      const row = MoodVector.fromArray(array, index);\n      entry[1] = row;\n    }\n    return new MoodMatrix(rowArray, rowIndex, colArray, colIndex);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {ThemeMatrix} from \"./ThemeMatrix\";\n\n/** @public */\nexport const Theme = {} as {\n  dark: ThemeMatrix, // defined by DarkTheme\n  light: ThemeMatrix, // defined by LightTheme\n};\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals, Lazy, Arrays} from \"@swim/util\";\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport type {Look} from \"../look/Look\";\nimport {AnyLookVector, LookVectorUpdates, LookVector} from \"../look/LookVector\";\nimport type {Feel} from \"../feel/Feel\";\nimport {AnyFeelVector, FeelVectorUpdates, FeelVector} from \"../feel/FeelVector\";\nimport {MoodVector} from \"../mood/MoodVector\";\nimport type {MoodMatrix} from \"../mood/MoodMatrix\";\n\n/** @public */\nexport class ThemeMatrix implements Equals, Debug {\n  constructor(rowArray: ReadonlyArray<[Look<unknown>, LookVector<unknown>]>,\n              rowIndex: {readonly [name: string]: number | undefined},\n              colArray: ReadonlyArray<[Feel, FeelVector]>,\n              colIndex: {readonly [name: string]: number | undefined}) {\n    this.rowArray = rowArray;\n    this.rowIndex = rowIndex;\n    this.colArray = colArray;\n    this.colIndex = colIndex;\n  }\n\n  /** @internal */\n  readonly rowArray: ReadonlyArray<[Look<unknown>, LookVector<unknown>]>;\n\n  /** @internal */\n  readonly rowIndex: {readonly [name: string]: number | undefined};\n\n  /** @internal */\n  readonly colArray: ReadonlyArray<[Feel, FeelVector]>;\n\n  /** @internal */\n  readonly colIndex: {readonly [name: string]: number | undefined};\n\n  get rowCount(): number {\n    return this.rowArray.length;\n  }\n\n  get colCount(): number {\n    return this.colArray.length;\n  }\n\n  hasRow(look: Look<unknown>): boolean;\n  hasRow(name: string): boolean;\n  hasRow(look: Look<unknown> | string): boolean {\n    if (typeof look === \"object\" && look !== null || typeof look === \"function\") {\n      look = look.name;\n    }\n    return this.rowIndex[look] !== void 0;\n  }\n\n  hasCol(feel: Feel): boolean;\n  hasCol(name: string): boolean;\n  hasCol(feel: Feel | string): boolean {\n    if (typeof feel === \"object\" && feel !== null || typeof feel === \"function\") {\n      feel = feel.name;\n    }\n    return this.colIndex[feel] !== void 0;\n  }\n\n  getRow<T>(look: Look<T>): LookVector<T> | undefined;\n  getRow(name: string): LookVector<unknown> | undefined;\n  getRow(index: number): LookVector<unknown> | undefined;\n  getRow<T>(look: Look<T> | string | number | undefined): LookVector<unknown> | undefined {\n    if (typeof look === \"object\" && look !== null || typeof look === \"function\") {\n      look = look.name;\n    }\n    if (typeof look === \"string\") {\n      look = this.rowIndex[look];\n    }\n    const entry = typeof look === \"number\" ? this.rowArray[look] : void 0;\n    return entry !== void 0 ? entry[1] : void 0;\n  }\n\n  getCol(feel: Feel): FeelVector | undefined;\n  getCol(name: string): FeelVector | undefined;\n  getCol(index: number): FeelVector | undefined;\n  getCol(feel: Feel | string | number | undefined): FeelVector | undefined {\n    if (typeof feel === \"object\" && feel !== null || typeof feel === \"function\") {\n      feel = feel.name;\n    }\n    if (typeof feel === \"string\") {\n      feel = this.colIndex[feel];\n    }\n    const entry = typeof feel === \"number\" ? this.colArray[feel] : void 0;\n    return entry !== void 0 ? entry[1] : void 0;\n  }\n\n  get<T>(look: Look<T>, mood: MoodVector): T | undefined {\n    return this.dot(look, mood);\n  }\n\n  getOr<T, E>(look: Look<T>, mood: MoodVector, elseValue: E): T | E {\n    return this.dotOr(look, mood, elseValue);\n  }\n\n  plus(that: ThemeMatrix): ThemeMatrix {\n    const thisColArray = this.colArray;\n    const thatColArray = that.colArray;\n    const newColArray = new Array<[Feel, FeelVector]>();\n    const newColIndex: {[name: string]: number | undefined} = {};\n    for (let j = 0, n = thisColArray.length; j < n; j += 1) {\n      const entry = thisColArray[j]!;\n      const feel = entry[0];\n      const b = that.getCol(feel);\n      newColIndex[feel.name] = newColArray.length;\n      newColArray.push(b === void 0 ? entry : [feel, entry[1].plus(b)]);\n    }\n    for (let j = 0, n = thatColArray.length; j < n; j += 1) {\n      const entry = thatColArray[j]!;\n      const feel = entry[0];\n      if (newColIndex[feel.name] === void 0) {\n        newColIndex[feel.name] = newColArray.length;\n        newColArray.push(entry);\n      }\n    }\n    return ThemeMatrix.fromColArray(newColArray, newColIndex);\n  }\n\n  negative(): ThemeMatrix {\n    const oldColArray = this.colArray;\n    const n = oldColArray.length;\n    const newColArray = new Array<[Feel, FeelVector]>(n);\n    for (let j = 0; j < n; j += 1) {\n      const [feel, a] = oldColArray[j]!;\n      newColArray[j] = [feel, a.negative()];\n    }\n    return ThemeMatrix.fromColArray(newColArray, this.colIndex);\n  }\n\n  minus(that: ThemeMatrix): ThemeMatrix {\n    const thisColArray = this.colArray;\n    const thatColArray = that.colArray;\n    const newColArray = new Array<[Feel, FeelVector]>();\n    const newColIndex: {[name: string]: number | undefined} = {};\n    for (let j = 0, n = thisColArray.length; j < n; j += 1) {\n      const entry = thisColArray[j]!;\n      const feel = entry[0];\n      const b = that.getCol(feel);\n      newColIndex[feel.name] = newColArray.length;\n      newColArray.push(b === void 0 ? entry : [feel, entry[1].minus(b)]);\n    }\n    for (let j = 0, n = thatColArray.length; j < n; j += 1) {\n      const [feel, b] = thatColArray[j]!;\n      if (newColIndex[feel.name] === void 0) {\n        newColIndex[feel.name] = newColArray.length;\n        newColArray.push([feel, b.negative()]);\n      }\n    }\n    return ThemeMatrix.fromColArray(newColArray, newColIndex);\n  }\n\n  times(scalar: number): ThemeMatrix {\n    const oldColArray = this.colArray;\n    const n = oldColArray.length;\n    const newColArray = new Array<[Feel, FeelVector]>(n);\n    for (let j = 0; j < n; j += 1) {\n      const [feel, a] = oldColArray[j]!;\n      newColArray[j] = [feel, a.times(scalar)];\n    }\n    return ThemeMatrix.fromColArray(newColArray, this.colIndex);\n  }\n\n  dot<T>(look: Look<T>, col: MoodVector): T | undefined;\n  dot(look: string | number, col: MoodVector): unknown | undefined;\n  dot(look: Look<unknown> | string | number | undefined, col: MoodVector): unknown | undefined {\n    if (typeof look === \"object\" && look !== null || typeof look === \"function\") {\n      look = look.name;\n    }\n    if (typeof look === \"string\") {\n      look = this.rowIndex[look];\n    }\n    const entry = typeof look === \"number\" ? this.rowArray[look] : void 0;\n    if (entry !== void 0) {\n      look = entry[0];\n      const row = entry[1];\n      return look.dot(row, col);\n    }\n    return void 0;\n  }\n\n  dotOr<T, E>(look: Look<T>, col: MoodVector, elseValue: E): T | E;\n  dotOr(look: string | number, col: MoodVector, elseValue: unknown): unknown;\n  dotOr(look: Look<unknown> | string | number | undefined, col: MoodVector, elseValue: unknown): unknown {\n    if (typeof look === \"object\" && look !== null || typeof look === \"function\") {\n      look = look.name;\n    }\n    if (typeof look === \"string\") {\n      look = this.rowIndex[look];\n    }\n    const entry = typeof look === \"number\" ? this.rowArray[look] : void 0;\n    if (entry !== void 0) {\n      look = entry[0];\n      const row = entry[1];\n      return look.dotOr(row, col, elseValue);\n    }\n    return elseValue;\n  }\n\n  timesCol(col: MoodVector): FeelVector {\n    const rowArray = this.rowArray;\n    const newArray = new Array<[Look<unknown>, unknown]>();\n    const newIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0, m = rowArray.length; i < m; i += 1) {\n      const [look, row] = rowArray[i]!;\n      const value = look.dot(row, col);\n      if (value !== void 0) {\n        newIndex[look.name] = newArray.length;\n        newArray.push([look, value]);\n      }\n    }\n    return FeelVector.fromArray(newArray, newIndex);\n  }\n\n  transform(that: MoodMatrix, implicitIdentity: boolean = true): ThemeMatrix {\n    const thisRowArray = this.rowArray;\n    const thisColArray = this.colArray;\n    const newRowArray = new Array<[Look<unknown>, LookVector<unknown>]>();\n    const newRowIndex: {[name: string]: number | undefined} = {};\n    const newColArray = new Array<[Feel, FeelVector]>();\n    const newColIndex: {[name: string]: number | undefined} = {};\n    for (let j = 0, n = thisColArray.length; j < n; j += 1) {\n      const feel = thisColArray[j]![0];\n      let col = that.getCol(feel);\n      if (col === void 0 && implicitIdentity) {\n        col = MoodVector.of([feel, 1]);\n      }\n      if (col !== void 0) {\n        for (let i = 0, m = thisRowArray.length; i < m; i += 1) {\n          const [look, row] = thisRowArray[i]!;\n          const value = look.dot(row, col);\n          if (value !== void 0) {\n            const i2 = newRowIndex[look.name];\n            if (i2 !== void 0) {\n              const newRow = newRowArray[i2]![1];\n              (newRow.index as {[name: string]: number | undefined})[look.name] = newRow.array.length;\n              (newRow.array as [Feel, unknown][]).push([feel, value]);\n            } else {\n              newRowIndex[look.name] = newRowArray.length;\n              newRowArray.push([look, LookVector.of([feel, value])]);\n            }\n            const j2 = newColIndex[feel.name];\n            if (j2 !== void 0) {\n              const newCol = newColArray[j2]![1];\n              (newCol.index as {[name: string]: number | undefined})[feel.name] = newCol.array.length;\n              (newCol.array as [Look<unknown>, unknown][]).push([look, value]);\n            } else {\n              newColIndex[feel.name] = newColArray.length;\n              newColArray.push([feel, FeelVector.of([look, value])]);\n            }\n          }\n        }\n      }\n    }\n    return new ThemeMatrix(newRowArray, newRowIndex, newColArray, newColIndex);\n  }\n\n  row<T, U = never>(look: Look<T, U>, row: AnyLookVector<T> | undefined): ThemeMatrix {\n    if (row !== void 0) {\n      row = LookVector.fromAny(row);\n    }\n    const oldRowArray = this.rowArray;\n    const oldRowIndex = this.rowIndex;\n    const i = oldRowIndex[look.name];\n    if (row !== void 0 && i !== void 0) { // update\n      const newRowArray = oldRowArray.slice(0);\n      newRowArray[i] = [look, row];\n      return ThemeMatrix.fromRowArray(newRowArray, oldRowIndex);\n    } else if (row !== void 0) { // insert\n      const newRowArray = oldRowArray.slice(0);\n      const newRowIndex: {[name: string]: number | undefined} = {};\n      for (const name in oldRowIndex) {\n        newRowIndex[name] = oldRowIndex[name];\n      }\n      newRowIndex[look.name] = newRowArray.length;\n      newRowArray.push([look, row]);\n      return ThemeMatrix.fromRowArray(newRowArray, newRowIndex);\n    } else if (i !== void 0) { // remove\n      const newRowArray = new Array<[Look<unknown>, LookVector<unknown>]>();\n      const newRowIndex: {[name: string]: number | undefined} = {};\n      let k = 0;\n      for (let j = 0, n = oldRowArray.length; j < n; j += 1) {\n        const entry = oldRowArray[j]!;\n        if (entry[0] !== look) {\n          newRowArray[k] = entry;\n          newRowIndex[entry[0].name] = k;\n          k += 1;\n        }\n      }\n      return ThemeMatrix.fromRowArray(newRowArray, newRowIndex);\n    } else { // nop\n      return this;\n    }\n  }\n\n  col(feel: Feel, col: AnyFeelVector | undefined): ThemeMatrix {\n    if (col !== void 0) {\n      col = FeelVector.fromAny(col);\n    }\n    const oldColArray = this.colArray;\n    const oldColIndex = this.colIndex;\n    const i = oldColIndex[feel.name];\n    if (col !== void 0 && i !== void 0) { // update\n      const newColArray = oldColArray.slice(0);\n      newColArray[i] = [feel, col];\n      return ThemeMatrix.fromColArray(newColArray, oldColIndex);\n    } else if (col !== void 0) { // insert\n      const newColArray = oldColArray.slice(0);\n      const newColIndex: {[name: string]: number | undefined} = {};\n      for (const name in oldColIndex) {\n        newColIndex[name] = oldColIndex[name];\n      }\n      newColIndex[feel.name] = newColArray.length;\n      newColArray.push([feel, col]);\n      return ThemeMatrix.fromColArray(newColArray, newColIndex);\n    } else if (i !== void 0) { // remove\n      const newColArray = new Array<[Feel, FeelVector]>();\n      const newColIndex: {[name: string]: number | undefined} = {};\n      let k = 0;\n      for (let j = 0, n = oldColArray.length; j < n; j += 1) {\n        const entry = oldColArray[j]!;\n        if (entry[0] !== feel) {\n          newColArray[k] = entry;\n          newColIndex[entry[0].name] = k;\n          k += 1;\n        }\n      }\n      return ThemeMatrix.fromColArray(newColArray, newColIndex);\n    } else { // nop\n      return this;\n    }\n  }\n\n  updatedRow<T, U = never>(look: Look<T, U>, updates: LookVectorUpdates<T>,\n                           defaultRow?: AnyLookVector<T>): ThemeMatrix {\n    const oldRow = this.getRow(look);\n    let newRow = oldRow;\n    if (newRow === void 0) {\n      if (defaultRow !== void 0) {\n        defaultRow = LookVector.fromAny(defaultRow);\n      } else {\n        defaultRow = LookVector.empty();\n      }\n      newRow = defaultRow;\n    }\n    newRow = newRow.updated(updates);\n    if (!newRow.equals(oldRow)) {\n      return this.row(look, newRow);\n    } else {\n      return this;\n    }\n  }\n\n  updatedCol(feel: Feel, updates: FeelVectorUpdates,\n             defaultCol?: AnyFeelVector): ThemeMatrix {\n    const oldCol = this.getCol(feel);\n    let newCol = oldCol;\n    if (newCol === void 0) {\n      if (defaultCol !== void 0) {\n        defaultCol = FeelVector.fromAny(defaultCol);\n      } else {\n        defaultCol = FeelVector.empty();\n      }\n      newCol = defaultCol;\n    }\n    newCol = newCol.updated(updates);\n    if (!newCol.equals(oldCol)) {\n      return this.col(feel, newCol);\n    } else {\n      return this;\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ThemeMatrix) {\n      return Arrays.equal(this.colArray, that.colArray);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    const cols = this.colArray;\n    const n = cols.length;\n    output = output.write(\"ThemeMatrix\").write(46/*'.'*/)\n                   .write(n !== 0 ? \"forCols\" : \"empty\").write(40/*'('*/);\n    for (let j = 0; j < n; j += 1) {\n      const [feel, col] = cols[j]!;\n      if (j !== 0) {\n        output = output.write(\", \");\n      }\n      output = output.write(91/*'['*/).debug(feel).write(\", \").debug(col).write(93/*']'*/);\n    }\n    output = output.write(41/*')'*/);\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static empty(): ThemeMatrix {\n    return new ThemeMatrix([], {}, [], {});\n  }\n\n  static forRows(...rows: [Look<unknown>, AnyLookVector<unknown>][]): ThemeMatrix {\n    const m = rows.length;\n    const rowArray = new Array<[Look<unknown>, LookVector<unknown>]>(m);\n    for (let i = 0; i < m; i += 1) {\n      const [look, row] = rows[i]!;\n      rowArray[i] = [look, LookVector.fromAny(row)];\n    }\n    return this.fromRowArray(rowArray);\n  }\n\n  static forCols(...cols: [Feel, AnyFeelVector][]): ThemeMatrix {\n    const m = cols.length;\n    const colArray = new Array<[Feel, FeelVector]>(m);\n    for (let j = 0; j < m; j += 1) {\n      const [feel, col] = cols[j]!;\n      colArray[j] = [feel, FeelVector.fromAny(col)];\n    }\n    return this.fromColArray(colArray);\n  }\n\n  static fromRowArray(rowArray: ReadonlyArray<[Look<unknown>, LookVector<unknown>]>,\n                      rowIndex?: {readonly [name: string]: number | undefined}): ThemeMatrix {\n    if (rowIndex === void 0) {\n      rowIndex = FeelVector.index(rowArray);\n    }\n    const colArray = new Array<[Feel, FeelVector]>();\n    const colIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0, m = rowArray.length; i < m; i += 1) {\n      const row = rowArray[i]![1];\n      row.forEach(function (value: unknown, feel: Feel): void {\n        if (colIndex[feel.name] === void 0) {\n          colIndex[feel.name] = colArray.length;\n          colArray.push([feel, void 0 as unknown as FeelVector]);\n        }\n      }, this);\n    }\n    for (let j = 0, n = colArray.length; j < n; j += 1) {\n      const entry = colArray[j]!;\n      const feel = entry[0];\n      const array = new Array<[Look<unknown>, unknown]>();\n      const index: {[name: string]: number | undefined} = {};\n      for (let i = 0, m = rowArray.length; i < m; i += 1) {\n        const [look, row] = rowArray[i]!;\n        const value = row.get(feel);\n        if (value !== void 0) {\n          index[look.name] = array.length;\n          array.push([look, value]);\n        }\n      }\n      const col = FeelVector.fromArray(array, index);\n      entry[1] = col;\n    }\n    return new ThemeMatrix(rowArray, rowIndex, colArray, colIndex);\n  }\n\n  static fromColArray(colArray: ReadonlyArray<[Feel, FeelVector]>,\n                      colIndex?: {readonly [name: string]: number | undefined}): ThemeMatrix {\n    if (colIndex === void 0) {\n      colIndex = LookVector.index(colArray);\n    }\n    const rowArray = new Array<[Look<unknown>, LookVector<unknown>]>();\n    const rowIndex: {[name: string]: number | undefined} = {};\n    for (let i = 0, n = colArray.length; i < n; i += 1) {\n      const col = colArray[i]![1];\n      col.forEach(function <T>(value: T, look: Look<T>): void {\n        if (rowIndex[look.name] === void 0) {\n          rowIndex[look.name] = rowArray.length;\n          rowArray.push([look, void 0 as unknown as LookVector<T>]);\n        }\n      }, this);\n    }\n    for (let i = 0, m = rowArray.length; i < m; i += 1) {\n      const entry = rowArray[i]!;\n      const look = entry[0];\n      const array = new Array<[Feel, unknown]>();\n      const index: {[name: string]: number | undefined} = {};\n      for (let j = 0, n = colArray.length; j < n; j += 1) {\n        const [feel, col] = colArray[j]!;\n        const value = col.get(look);\n        if (value !== void 0) {\n          index[feel.name] = array.length;\n          array.push([feel, value]);\n        }\n      }\n      const row = LookVector.fromArray(array, index);\n      entry[1] = row;\n    }\n    return new ThemeMatrix(rowArray, rowIndex, colArray, colIndex);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Look} from \"../look/Look\";\nimport type {Feel} from \"../feel/Feel\";\nimport type {MoodVector} from \"../mood/MoodVector\";\n\n/** @public */\nexport interface ThemeContext {\n  getLook<T>(look: Look<T, unknown>, mood?: MoodVector<Feel> | null): T | undefined;\n\n  getLookOr<T, E>(look: Look<T, unknown>, elseValue: E): T | E;\n  getLookOr<T, E>(look: Look<T, unknown>, mood: MoodVector<Feel> | null, elseValue: E): T | E;\n}\n\n/** @public */\nexport const ThemeContext = (function () {\n  const ThemeContext = {} as {\n    is(object: unknown): object is ThemeContext;\n  };\n\n  ThemeContext.is = function (object: unknown): object is ThemeContext {\n    if (typeof object === \"object\" && object !== null || typeof object === \"function\") {\n      const themeContext = object as ThemeContext;\n      return \"getLook\" in themeContext;\n    }\n    return false;\n  };\n\n  return ThemeContext;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, FromAny, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, FastenerOwner, Property, AnimatorInit, AnimatorClass, Animator} from \"@swim/component\";\nimport {AnyLength, Length, AnyAngle, Angle, AnyTransform, Transform} from \"@swim/math\";\nimport {AnyFont, Font, AnyColor, Color, AnyFocus, Focus, AnyPresence, Presence, AnyExpansion, Expansion} from \"@swim/style\";\nimport {Look} from \"../look/Look\";\nimport type {MoodVector} from \"../mood/MoodVector\";\nimport type {ThemeMatrix} from \"../theme/ThemeMatrix\";\nimport {ThemeContext} from \"../theme/ThemeContext\";\nimport {StringThemeAnimator} from \"./\"; // forward import\nimport {NumberThemeAnimator} from \"./\"; // forward import\nimport {BooleanThemeAnimator} from \"./\"; // forward import\nimport {AngleThemeAnimator} from \"./\"; // forward import\nimport {LengthThemeAnimator} from \"./\"; // forward import\nimport {TransformThemeAnimator} from \"./\"; // forward import\nimport {ColorThemeAnimator} from \"./\"; // forward import\nimport {FontThemeAnimator} from \"./\"; // forward import\nimport {FocusThemeAnimatorInit, FocusThemeAnimator} from \"./\"; // forward import\nimport {PresenceThemeAnimatorInit, PresenceThemeAnimator} from \"./\"; // forward import\nimport {ExpansionThemeAnimatorInit, ExpansionThemeAnimator} from \"./\"; // forward import\n\n/** @public */\nexport interface ThemeAnimatorInit<T = unknown, U = T> extends AnimatorInit<T, U> {\n  extends?: {prototype: ThemeAnimator<any, any>} | string | boolean | null;\n  look?: Look<T>;\n\n  willSetLook?(newLook: Look<T> | null, oldLook: Look<T> | null, timing: Timing | boolean): void;\n  didSetLook?(newLook: Look<T> | null, oldLook: Look<T> | null, timing: Timing | boolean): void;\n}\n\n/** @public */\nexport type ThemeAnimatorDescriptor<O = unknown, T = unknown, U = T, I = {}> = ThisType<ThemeAnimator<O, T, U> & I> & ThemeAnimatorInit<T, U> & Partial<I>;\n\n/** @public */\nexport interface ThemeAnimatorClass<A extends ThemeAnimator<any, any> = ThemeAnimator<any, any>> extends AnimatorClass<A> {\n}\n\n/** @public */\nexport interface ThemeAnimatorFactory<A extends ThemeAnimator<any, any> = ThemeAnimator<any, any>> extends ThemeAnimatorClass<A> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): ThemeAnimatorFactory<A> & I;\n\n  specialize(type: unknown): ThemeAnimatorFactory | null;\n\n  define<O, T, U = T>(className: string, descriptor: ThemeAnimatorDescriptor<O, T, U>): ThemeAnimatorFactory<ThemeAnimator<any, T, U>>;\n  define<O, T, U = T, I = {}>(className: string, descriptor: {implements: unknown} & ThemeAnimatorDescriptor<O, T, U, I>): ThemeAnimatorFactory<ThemeAnimator<any, T, U> & I>;\n\n  <O, T extends Angle | null | undefined = Angle | null | undefined, U extends AnyAngle | null | undefined = AnyAngle | null | undefined>(descriptor: {type: typeof Angle} & ThemeAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T extends Length | null | undefined = Length | null | undefined, U extends AnyLength | null | undefined = AnyLength | null | undefined>(descriptor: {type: typeof Length} & ThemeAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T extends Transform | null | undefined = Transform | null | undefined, U extends AnyTransform | null | undefined = AnyTransform | null | undefined>(descriptor: {type: typeof Transform} & ThemeAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T extends Color | null | undefined = Color | null | undefined, U extends AnyColor | null | undefined = AnyColor | null | undefined>(descriptor: {type: typeof Color} & ThemeAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T extends Font | null | undefined = Font | null | undefined, U extends AnyFont | null | undefined = AnyFont | null | undefined>(descriptor: {type: typeof Font} & ThemeAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T extends Focus | null | undefined = Focus | null | undefined, U extends AnyFocus | null | undefined = AnyFocus | null | undefined>(descriptor: {type: typeof Focus} & ThemeAnimatorDescriptor<O, T, U> & FocusThemeAnimatorInit): PropertyDecorator;\n  <O, T extends Presence | null | undefined = Presence | null | undefined, U extends AnyPresence | null | undefined = AnyPresence | null | undefined>(descriptor: {type: typeof Presence} & ThemeAnimatorDescriptor<O, T, U> & PresenceThemeAnimatorInit): PropertyDecorator;\n  <O, T extends Expansion | null | undefined = Expansion | null | undefined, U extends AnyExpansion | null | undefined = AnyExpansion | null | undefined>(descriptor: {type: typeof Expansion} & ThemeAnimatorDescriptor<O, T, U> & ExpansionThemeAnimatorInit): PropertyDecorator;\n  <O, T extends string | undefined = string | undefined, U extends string | undefined = string | undefined>(descriptor: {type: typeof String} & ThemeAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T extends number | undefined = number | undefined, U extends number | string | undefined = number | string | undefined>(descriptor: {type: typeof Number} & ThemeAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T extends boolean | undefined = boolean | undefined, U extends boolean | string | undefined = boolean | string | undefined>(descriptor: {type: typeof Boolean} & ThemeAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T, U = T>(descriptor: ({type: FromAny<T, U>} | {fromAny(value: T | U): T}) & ThemeAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T, U = T>(descriptor: ThemeAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T, U = T, I = {}>(descriptor: {implements: unknown} & ThemeAnimatorDescriptor<O, T, U, I>): PropertyDecorator;\n}\n\n/** @public */\nexport interface ThemeAnimator<O = unknown, T = unknown, U = T> extends Animator<O, T, U> {\n  /** @protected @override */\n  onSetAffinity(newAffinity: Affinity, oldAffinity: Affinity): void;\n\n  /** @protected @override */\n  onInherit(superFastener: Property<unknown, T>): void;\n\n  get superLook(): Look<T> | null;\n\n  getSuperLook(): Look<T>;\n\n  getSuperLookOr<E>(elseLook: E): Look<T> | E;\n\n  readonly look: Look<T> | null;\n\n  getLook(): Look<T>;\n\n  getLookOr<E>(elseLook: E): Look<T> | E;\n\n  setLook(newLook: Look<T> | null, timingOrAffinity: Affinity | AnyTiming | boolean | null | undefined): void;\n  setLook(newLook: Look<T> | null, timing?: AnyTiming | boolean | null, affinity?: Affinity): void;\n\n  /** @protected */\n  willSetLook(newLook: Look<T> | null, oldLook: Look<T> | null, timing: Timing | boolean): void;\n\n  /** @protected */\n  onSetLook(newLook: Look<T> | null, oldLook: Look<T> | null, timing: Timing | boolean): void;\n\n  /** @protected */\n  didSetLook(newLook: Look<T> | null, oldLook: Look<T> | null, timing: Timing | boolean): void;\n\n  /** @internal */\n  applyLook(look: Look<T>, timing: Timing | boolean): void;\n\n  applyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void;\n\n  /** @internal @protected @override */\n  tweenInherited(t: number): void;\n\n  /** @protected @override */\n  onMount(): void;\n}\n\n/** @public */\nexport const ThemeAnimator = (function (_super: typeof Animator) {\n  const ThemeAnimator: ThemeAnimatorFactory = _super.extend(\"ThemeAnimator\");\n\n  ThemeAnimator.prototype.onSetAffinity = function (this: ThemeAnimator, newAffinity: Affinity, oldAffinity: Affinity): void {\n    if (newAffinity > Affinity.Intrinsic) {\n      this.setLook(null, newAffinity);\n    }\n    _super.prototype.onSetAffinity.call(this, newAffinity, oldAffinity);\n  };\n\n  ThemeAnimator.prototype.onInherit = function <T>(this: ThemeAnimator<unknown, T>, superFastener: Property<any, T>): void {\n    if (superFastener instanceof ThemeAnimator) {\n      this.setLook(superFastener.look, superFastener.timing, Affinity.Reflexive);\n    } else {\n      this.setLook(null, Affinity.Reflexive);\n    }\n    if (this.look === null) {\n      _super.prototype.onInherit.call(this, superFastener);\n    }\n  };\n\n  Object.defineProperty(ThemeAnimator.prototype, \"superLook\", {\n    get: function <T>(this: ThemeAnimator<unknown, T>): Look<T> | null {\n      const superFastener = this.superFastener;\n      return superFastener instanceof ThemeAnimator ? superFastener.look : null;\n    },\n    configurable: true,\n  });\n\n  ThemeAnimator.prototype.getSuperLook = function <T>(this: ThemeAnimator<unknown, T>): Look<T> {\n    const superLook = this.superLook;\n    if (superLook === null) {\n      throw new TypeError(superLook + \" \" + this.name + \" super look\");\n    }\n    return superLook;\n  };\n\n  ThemeAnimator.prototype.getSuperLookOr = function <T, E>(this: ThemeAnimator<unknown, T>, elseLook: E): Look<T> | E {\n    let superLook: Look<T> | E | null = this.superLook;\n    if (superLook === null) {\n      superLook = elseLook;\n    }\n    return superLook;\n  };\n\n  ThemeAnimator.prototype.getLook = function <T>(this: ThemeAnimator<unknown, T>): Look<T> {\n    const look = this.look;\n    if (look === null) {\n      throw new TypeError(look + \" \" + this.name + \" look\");\n    }\n    return look;\n  };\n\n  ThemeAnimator.prototype.getLookOr = function <T, E>(this: ThemeAnimator<unknown, T>, elseLook: E): Look<T> | E {\n    let look: Look<T> | E | null = this.look;\n    if (look === null) {\n      look = elseLook;\n    }\n    return look;\n  };\n\n  ThemeAnimator.prototype.setLook = function <T>(this: ThemeAnimator<unknown, T>, newLook: Look<T> | null, timing?: Affinity | AnyTiming | boolean | null, affinity?: Affinity): void {\n    if (typeof timing === \"number\") {\n      affinity = timing;\n      timing = void 0;\n    }\n    if (affinity === void 0) {\n      affinity = Affinity.Extrinsic;\n    }\n    if (this.minAffinity(affinity)) {\n      const oldLook = this.look;\n      if (newLook !== oldLook) {\n        if (timing === void 0 || timing === null) {\n          timing = false;\n        } else {\n          timing = Timing.fromAny(timing);\n        }\n        this.willSetLook(newLook, oldLook, timing as Timing | boolean);\n        (this as Mutable<typeof this>).look = newLook;\n        this.onSetLook(newLook, oldLook, timing as Timing | boolean);\n        this.didSetLook(newLook, oldLook, timing as Timing | boolean);\n      }\n    }\n  };\n\n  ThemeAnimator.prototype.willSetLook = function <T>(this: ThemeAnimator<unknown, T>, newLook: Look<T> | null, oldLook: Look<T> | null, timing: Timing | boolean): void {\n    // hook\n  };\n\n  ThemeAnimator.prototype.onSetLook = function <T>(this: ThemeAnimator<unknown, T>, newLook: Look<T> | null, oldLook: Look<T> | null, timing: Timing | boolean): void {\n    if (newLook !== null) {\n      this.applyLook(newLook, timing);\n    }\n  };\n\n  ThemeAnimator.prototype.didSetLook = function <T>(this: ThemeAnimator<unknown, T>, newLook: Look<T> | null, oldLook: Look<T> | null, timing: Timing | boolean): void {\n    // hook\n  };\n\n  ThemeAnimator.prototype.applyLook = function <T>(this: ThemeAnimator<unknown, T>, look: Look<T>, timing: Timing | boolean): void {\n    const themeContext = this.owner;\n    if (this.mounted && ThemeContext.is(themeContext)) {\n      const state = themeContext.getLook(look);\n      if (state !== void 0) {\n        if (timing === true) {\n          timing = themeContext.getLookOr(Look.timing, true);\n        }\n        this.setState(state, timing, Affinity.Reflexive);\n      }\n    }\n  };\n\n  ThemeAnimator.prototype.applyTheme = function <T>(this: ThemeAnimator<unknown, T>, theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean | undefined): void {\n    const look = this.look;\n    if (look !== null) {\n      const state = theme.get(look, mood);\n      if (state !== void 0) {\n        if (timing === true) {\n          timing = theme.get(Look.timing, mood);\n          if (timing === void 0) {\n            timing = true;\n          }\n        }\n        this.setState(state, timing, Affinity.Reflexive);\n      }\n    }\n  };\n\n  ThemeAnimator.prototype.tweenInherited = function <T>(this: ThemeAnimator<unknown, T>, t: number): void {\n    const superFastener = this.superFastener;\n    if (superFastener instanceof ThemeAnimator) {\n      this.setLook(superFastener.look, superFastener.timing, Affinity.Reflexive);\n    } else {\n      this.setLook(null, Affinity.Reflexive);\n    }\n    if (this.look !== null) {\n      _super.prototype.tween.call(this, t);\n    } else {\n      _super.prototype.tweenInherited.call(this, t);\n    }\n  }\n\n  ThemeAnimator.prototype.onMount = function (this: ThemeAnimator): void {\n    _super.prototype.onMount.call(this);\n    const look = this.look;\n    if (look !== null) {\n      this.applyLook(look, false);\n    }\n  };\n\n  ThemeAnimator.construct = function <A extends ThemeAnimator<any, any>>(animatorClass: {prototype: A}, animator: A | null, owner: FastenerOwner<A>): A {\n    animator = _super.construct(animatorClass, animator, owner) as A;\n    (animator as Mutable<typeof animator>).look = null;\n    return animator;\n  };\n\n  ThemeAnimator.specialize = function (type: unknown): ThemeAnimatorFactory | null {\n    if (type === String) {\n      return StringThemeAnimator;\n    } else if (type === Number) {\n      return NumberThemeAnimator;\n    } else if (type === Boolean) {\n      return BooleanThemeAnimator;\n    } else if (type === Angle) {\n      return AngleThemeAnimator;\n    } else if (type === Length) {\n      return LengthThemeAnimator;\n    } else if (type === Transform) {\n      return TransformThemeAnimator;\n    } else if (type === Color) {\n      return ColorThemeAnimator;\n    } else if (type === Font) {\n      return FontThemeAnimator;\n    } else if (type === Focus) {\n      return FocusThemeAnimator;\n    } else if (type === Presence) {\n      return PresenceThemeAnimator;\n    } else if (type === Expansion) {\n      return ExpansionThemeAnimator;\n    }\n    return null;\n  };\n\n  ThemeAnimator.define = function <O, T, U>(className: string, descriptor: ThemeAnimatorDescriptor<O, T, U>): ThemeAnimatorFactory<ThemeAnimator<any, T, U>> {\n    let superClass = descriptor.extends as ThemeAnimatorFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    const look = descriptor.look;\n    const value = descriptor.value;\n    const initValue = descriptor.initValue;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n    delete descriptor.look;\n    delete descriptor.value;\n    delete descriptor.initValue;\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this.specialize(descriptor.type);\n    }\n    if (superClass === null) {\n      superClass = this;\n      if (descriptor.fromAny === void 0 && FromAny.is<T, U>(descriptor.type)) {\n        descriptor.fromAny = descriptor.type.fromAny;\n      }\n    }\n\n    const animatorClass = superClass.extend(className, descriptor);\n\n    animatorClass.construct = function (animatorClass: {prototype: ThemeAnimator<any, any>}, animator: ThemeAnimator<O, T, U> | null, owner: O): ThemeAnimator<O, T, U> {\n      animator = superClass!.construct(animatorClass, animator, owner);\n      if (affinity !== void 0) {\n        animator.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        animator.initInherits(inherits);\n      }\n      if (look !== void 0) {\n        (animator as Mutable<typeof animator>).look = look;\n      }\n      if (initValue !== void 0) {\n        (animator as Mutable<typeof animator>).value = animator.fromAny(initValue());\n        (animator as Mutable<typeof animator>).state = animator.value;\n      } else if (value !== void 0) {\n        (animator as Mutable<typeof animator>).value = animator.fromAny(value);\n        (animator as Mutable<typeof animator>).state = animator.value;\n      }\n      return animator;\n    };\n\n    return animatorClass;\n  };\n\n  return ThemeAnimator;\n})(Animator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ThemeAnimatorFactory, ThemeAnimator} from \"./ThemeAnimator\";\n\n/** @internal */\nexport const StringThemeAnimator = (function (_super: typeof ThemeAnimator) {\n  const StringThemeAnimator = _super.extend(\"StringThemeAnimator\") as ThemeAnimatorFactory<ThemeAnimator<any, string | null | undefined, string | null | undefined>>;\n\n  StringThemeAnimator.prototype.fromAny = function (value: string | null | undefined): string | null | undefined {\n    return value;\n  };\n\n  StringThemeAnimator.prototype.equalValues = function (newValue: string | null | undefined, oldValue: string | null | undefined): boolean {\n    return newValue === oldValue;\n  };\n\n  return StringThemeAnimator;\n})(ThemeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ThemeAnimatorFactory, ThemeAnimator} from \"./ThemeAnimator\";\n\n/** @internal */\nexport const NumberThemeAnimator = (function (_super: typeof ThemeAnimator) {\n  const NumberThemeAnimator = _super.extend(\"NumberThemeAnimator\") as ThemeAnimatorFactory<ThemeAnimator<any, number | null | undefined, number | string | null | undefined>>;\n\n  NumberThemeAnimator.prototype.fromAny = function (value: number | string | null | undefined): number | null | undefined {\n    if (typeof value === \"string\") {\n      const number = +value;\n      if (isFinite(number)) {\n        return number;\n      } else {\n        throw new Error(value);\n      }\n    } else {\n      return value;\n    }\n  };\n\n  NumberThemeAnimator.prototype.equalValues = function (newValue: number | null | undefined, oldValue: number | null | undefined): boolean {\n    return newValue === oldValue;\n  };\n\n  return NumberThemeAnimator;\n})(ThemeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ThemeAnimatorFactory, ThemeAnimator} from \"./ThemeAnimator\";\n\n/** @internal */\nexport const BooleanThemeAnimator = (function (_super: typeof ThemeAnimator) {\n  const BooleanThemeAnimator = _super.extend(\"BooleanThemeAnimator\") as ThemeAnimatorFactory<ThemeAnimator<any, boolean | null | undefined, boolean | string | null | undefined>>;\n\n  BooleanThemeAnimator.prototype.fromAny = function (value: boolean | string | null | undefined): boolean | null | undefined {\n    return !!value;\n  };\n\n  BooleanThemeAnimator.prototype.equalValues = function (newValue: boolean | null | undefined, oldValue: boolean | null | undefined): boolean {\n    return newValue === oldValue;\n  };\n\n  return BooleanThemeAnimator;\n})(ThemeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyAngle, Angle} from \"@swim/math\";\nimport {ThemeAnimatorFactory, ThemeAnimator} from \"./ThemeAnimator\";\n\n/** @internal */\nexport const AngleThemeAnimator = (function (_super: typeof ThemeAnimator) {\n  const AngleThemeAnimator = _super.extend(\"AngleThemeAnimator\") as ThemeAnimatorFactory<ThemeAnimator<any, Angle | null | undefined, AnyAngle | null | undefined>>;\n\n  AngleThemeAnimator.prototype.fromAny = function (value: AnyAngle | null): Angle | null {\n    return value !== void 0 && value !== null ? Angle.fromAny(value) : value;\n  };\n\n  AngleThemeAnimator.prototype.equalValues = function (newValue: Angle | null | undefined, oldValue: Angle | null | undefined): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    } else {\n      return newValue === oldValue;\n    }\n  };\n\n  return AngleThemeAnimator;\n})(ThemeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyLength, Length} from \"@swim/math\";\nimport {ThemeAnimatorFactory, ThemeAnimator} from \"./ThemeAnimator\";\n\n/** @internal */\nexport const LengthThemeAnimator = (function (_super: typeof ThemeAnimator) {\n  const LengthThemeAnimator = _super.extend(\"LengthThemeAnimator\") as ThemeAnimatorFactory<ThemeAnimator<any, Length | null | undefined, AnyLength | null | undefined>>;\n\n  LengthThemeAnimator.prototype.fromAny = function (value: AnyLength | null | undefined): Length | null | undefined {\n    return value !== void 0 && value !== null ? Length.fromAny(value) : null;\n  };\n\n  LengthThemeAnimator.prototype.equalValues = function (newValue: Length | null | undefined, oldValue: Length | null | undefined): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    } else {\n      return newValue === oldValue;\n    }\n  };\n\n  return LengthThemeAnimator;\n})(ThemeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyTransform, Transform} from \"@swim/math\";\nimport {ThemeAnimatorFactory, ThemeAnimator} from \"./ThemeAnimator\";\n\n/** @internal */\nexport const TransformThemeAnimator = (function (_super: typeof ThemeAnimator) {\n  const TransformThemeAnimator = _super.extend(\"TransformThemeAnimator\") as ThemeAnimatorFactory<ThemeAnimator<any, Transform | null | undefined, AnyTransform | null | undefined>>;\n\n  TransformThemeAnimator.prototype.fromAny = function (value: AnyTransform | null | undefined): Transform | null | undefined {\n    return value !== void 0 && value !== null ? Transform.fromAny(value) : null;\n  };\n\n  TransformThemeAnimator.prototype.equalValues = function (newValue: Transform | null | undefined, oldValue: Transform | null | undefined): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    } else {\n      return newValue === oldValue;\n    }\n  };\n\n  return TransformThemeAnimator;\n})(ThemeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyColor, Color} from \"@swim/style\";\nimport {ThemeAnimatorFactory, ThemeAnimator} from \"./ThemeAnimator\";\n\n/** @internal */\nexport const ColorThemeAnimator = (function (_super: typeof ThemeAnimator) {\n  const ColorThemeAnimator = _super.extend(\"ColorThemeAnimator\") as ThemeAnimatorFactory<ThemeAnimator<any, Color | null | undefined, AnyColor | null | undefined>>;\n\n  ColorThemeAnimator.prototype.fromAny = function (value: AnyColor | null): Color | null {\n    return value !== void 0 && value !== null ? Color.fromAny(value) : value;\n  };\n\n  ColorThemeAnimator.prototype.equalValues = function (newValue: Color | null | undefined, oldValue: Color | null | undefined): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    } else {\n      return newValue === oldValue;\n    }\n  };\n\n  return ColorThemeAnimator;\n})(ThemeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyFont, Font} from \"@swim/style\";\nimport {ThemeAnimatorFactory, ThemeAnimator} from \"./ThemeAnimator\";\n\n/** @internal */\nexport const FontThemeAnimator = (function (_super: typeof ThemeAnimator) {\n  const FontThemeAnimator = _super.extend(\"FontThemeAnimator\") as ThemeAnimatorFactory<ThemeAnimator<any, Font | null | undefined, AnyFont | null | undefined>>;\n\n  FontThemeAnimator.prototype.fromAny = function (value: AnyFont | null | undefined): Font | null | undefined {\n    return value !== void 0 && value !== null ? Font.fromAny(value) : value;\n  };\n\n  FontThemeAnimator.prototype.equalValues = function (newValue: Font | null | undefined, oldValue: Font | null | undefined): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    } else {\n      return newValue === oldValue;\n    }\n  };\n\n  return FontThemeAnimator;\n})(ThemeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {AnyTiming} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {AnyFocus, Focus} from \"@swim/style\";\nimport {Look} from \"../look/Look\";\nimport {ThemeContext} from \"../theme/ThemeContext\";\nimport {ThemeAnimatorFactory, ThemeAnimator} from \"./ThemeAnimator\";\n\n/** @public */\nexport interface FocusThemeAnimatorInit {\n  willFocus?(): void;\n  didFocus?(): void;\n  willUnfocus?(): void;\n  didUnfocus?(): void;\n}\n\n/** @public */\nexport interface FocusThemeAnimator<O = unknown, T extends Focus | null | undefined = Focus, U extends AnyFocus | null | undefined = AnyFocus> extends ThemeAnimator<O, T, U> {\n  get phase(): number | undefined;\n\n  getPhase(): number;\n\n  getPhaseOr<E>(elsePhase: E): number | E;\n\n  setPhase(newPhase: number, timingOrAffinity: Affinity | AnyTiming | boolean | undefined): void;\n  setPhase(newPhase: number, timing?: AnyTiming | boolean, affinity?: Affinity): void;\n\n  get direction(): number;\n\n  setDirection(newDirection: number, timingOrAffinity: Affinity | AnyTiming | boolean | undefined): void;\n  setDirection(newDirection: number, timing?: AnyTiming | boolean, affinity?: Affinity): void;\n\n  get unfocused(): boolean;\n\n  get focused(): boolean;\n\n  get focusing(): boolean;\n\n  get unfocusing(): boolean;\n\n  focus(timingOrAffinity: Affinity | AnyTiming | boolean | undefined): void;\n  focus(timing?: AnyTiming | boolean, affinity?: Affinity): void;\n\n  unfocus(timingOrAffinity: Affinity | AnyTiming | boolean | undefined): void;\n  unfocus(timing?: AnyTiming | boolean, affinity?: Affinity): void;\n\n  toggle(timingOrAffinity: Affinity | AnyTiming | boolean | undefined): void;\n  toggle(timing?: AnyTiming | boolean, affinity?: Affinity): void;\n\n  /** @override @protected */\n  onSetValue(newValue: T, oldValue: T): void;\n\n  /** @protected */\n  willFocus(): void;\n\n  /** @protected */\n  didFocus(): void;\n\n  /** @protected */\n  willUnfocus(): void;\n\n  /** @protected */\n  didUnfocus(): void;\n\n  /** @override */\n  (newState: T, oldState: T | undefined): boolean;\n\n  /** @override */\n  fromAny(value: T | U): T\n}\n\n/** @public */\nexport const FocusThemeAnimator = (function (_super: typeof ThemeAnimator) {\n  const FocusThemeAnimator = _super.extend(\"FocusThemeAnimator\") as ThemeAnimatorFactory<FocusThemeAnimator<any, Focus | null | undefined, AnyFocus | null | undefined>>;\n\n  Object.defineProperty(FocusThemeAnimator.prototype, \"phase\", {\n    get(this: FocusThemeAnimator): number | undefined {\n      const value = this.value;\n      return value !== void 0 && value !== null ? value.phase : void 0;\n    },\n    configurable: true,\n  });\n\n  FocusThemeAnimator.prototype.getPhase = function (this: FocusThemeAnimator): number {\n    return this.getValue().phase;\n  };\n\n  FocusThemeAnimator.prototype.getPhaseOr = function <E>(this: FocusThemeAnimator, elsePhase: E): number | E {\n    const value = this.value;\n    if (value !== void 0 && value !== null) {\n      return value.phase;\n    } else {\n      return elsePhase;\n    }\n  };\n\n  FocusThemeAnimator.prototype.setPhase = function (this: FocusThemeAnimator, newPhase: number, timing?: Affinity | AnyTiming | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue !== void 0 && oldValue !== null) {\n      if (typeof timing === \"number\") {\n        affinity = timing;\n        timing = void 0;\n      }\n      this.setState(oldValue.withPhase(newPhase), timing, affinity);\n    }\n  };\n\n  Object.defineProperty(FocusThemeAnimator.prototype, \"direction\", {\n    get(this: FocusThemeAnimator): number {\n      const value = this.value;\n      return value !== void 0 && value !== null ? value.direction : 0;\n    },\n    configurable: true,\n  });\n\n  FocusThemeAnimator.prototype.setDirection = function (this: FocusThemeAnimator, newDirection: number, timing?: Affinity | AnyTiming | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue !== void 0 && oldValue !== null) {\n      if (typeof timing === \"number\") {\n        affinity = timing;\n        timing = void 0;\n      }\n      this.setState(oldValue.withDirection(newDirection), timing, affinity);\n    }\n  };\n\n  Object.defineProperty(FocusThemeAnimator.prototype, \"unfocused\", {\n    get(this: FocusThemeAnimator): boolean {\n      const value = this.value;\n      return value !== void 0 && value !== null && value.unfocused;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(FocusThemeAnimator.prototype, \"focused\", {\n    get(this: FocusThemeAnimator): boolean {\n      const value = this.value;\n      return value !== void 0 && value !== null && value.focused;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(FocusThemeAnimator.prototype, \"focusing\", {\n    get(this: FocusThemeAnimator): boolean {\n      const value = this.value;\n      return value !== void 0 && value !== null && value.focusing;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(FocusThemeAnimator.prototype, \"unfocusing\", {\n    get(this: FocusThemeAnimator): boolean {\n      const value = this.value;\n      return value !== void 0 && value !== null && value.unfocusing;\n    },\n    configurable: true,\n  });\n\n  FocusThemeAnimator.prototype.focus = function (this: FocusThemeAnimator, timing?: Affinity | AnyTiming | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue === void 0 || oldValue === null || !oldValue.focused) {\n      if (typeof timing === \"number\") {\n        affinity = timing;\n        timing = void 0;\n      }\n      if (timing === void 0 || timing === true) {\n        const themeContext = this.owner;\n        if (this.mounted && ThemeContext.is(themeContext)) {\n          timing = themeContext.getLook(Look.timing);\n        }\n      }\n      if (oldValue !== void 0 && oldValue !== null) {\n        this.setValue(oldValue.asFocusing(), Affinity.Reflexive);\n      }\n      this.setState(Focus.focused(), timing, affinity);\n    }\n  };\n\n  FocusThemeAnimator.prototype.unfocus = function (this: FocusThemeAnimator, timing?: Affinity | AnyTiming | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue === void 0 || oldValue === null || !oldValue.unfocused) {\n      if (typeof timing === \"number\") {\n        affinity = timing;\n        timing = void 0;\n      }\n      if (timing === void 0 || timing === true) {\n        const themeContext = this.owner;\n        if (this.mounted && ThemeContext.is(themeContext)) {\n          timing = themeContext.getLook(Look.timing);\n        }\n      }\n      if (oldValue !== void 0 && oldValue !== null) {\n        this.setValue(oldValue.asUnfocusing(), Affinity.Reflexive);\n      }\n      this.setState(Focus.unfocused(), timing, affinity);\n    }\n  };\n\n  FocusThemeAnimator.prototype.toggle = function (this: FocusThemeAnimator, timing?: Affinity | AnyTiming | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue !== void 0 && oldValue !== null) {\n      if (typeof timing === \"number\") {\n        affinity = timing;\n        timing = void 0;\n      }\n      if (timing === void 0 || timing === true) {\n        const themeContext = this.owner;\n        if (this.mounted && ThemeContext.is(themeContext)) {\n          timing = themeContext.getLook(Look.timing);\n        }\n      }\n      this.setValue(oldValue.asToggling(), Affinity.Reflexive);\n      this.setState(oldValue.asToggled(), timing, affinity);\n    }\n  };\n\n  FocusThemeAnimator.prototype.onSetValue = function (this: FocusThemeAnimator, newValue: Focus | null | undefined, oldValue: Focus | null | undefined): void {\n    _super.prototype.onSetValue.call(this, newValue, oldValue);\n    if (newValue !== void 0 && newValue !== null && oldValue !== void 0 && oldValue !== null) {\n      if (newValue.focusing && !oldValue.focusing) {\n        this.willFocus();\n      } else if (newValue.focused && !oldValue.focused) {\n        this.didFocus();\n      } else if (newValue.unfocusing && !oldValue.unfocusing) {\n        this.willUnfocus();\n      } else if (newValue.unfocused && !oldValue.unfocused) {\n        this.didUnfocus();\n      }\n    }\n  };\n\n  FocusThemeAnimator.prototype.willFocus = function (this: FocusThemeAnimator): void {\n    // hook\n  };\n\n  FocusThemeAnimator.prototype.didFocus = function (this: FocusThemeAnimator): void {\n    // hook\n  };\n\n  FocusThemeAnimator.prototype.willUnfocus = function (this: FocusThemeAnimator): void {\n    // hook\n  };\n\n  FocusThemeAnimator.prototype.didUnfocus = function (this: FocusThemeAnimator): void {\n    // hook\n  };\n\n  FocusThemeAnimator.prototype.fromAny = function (this: FocusThemeAnimator, value: AnyFocus | null | undefined): Focus | null | undefined {\n    return value !== void 0 && value !== null ? Focus.fromAny(value) : null;\n  };\n\n  FocusThemeAnimator.prototype.equalValues = function (this: FocusThemeAnimator, newState: Focus | null | undefined, oldState: Focus | null | undefined): boolean {\n    if (newState !== void 0 && newState !== null) {\n      return newState.equals(oldState);\n    } else {\n      return newState === oldState;\n    }\n  };\n\n  return FocusThemeAnimator;\n})(ThemeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {AnyTiming} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {AnyPresence, Presence} from \"@swim/style\";\nimport {Look} from \"../look/Look\";\nimport {ThemeContext} from \"../theme/ThemeContext\";\nimport {ThemeAnimatorFactory, ThemeAnimator} from \"./ThemeAnimator\";\n\n/** @public */\nexport interface PresenceThemeAnimatorInit {\n  willPresent?(): void;\n  didPresent?(): void;\n  willDismiss?(): void;\n  didDismiss?(): void;\n}\n\n/** @public */\nexport interface PresenceThemeAnimator<O = unknown, T extends Presence | null | undefined = Presence, U extends AnyPresence | null | undefined = AnyPresence> extends ThemeAnimator<O, T, U> {\n  get phase(): number | undefined;\n\n  getPhase(): number;\n\n  getPhaseOr<E>(elsePhase: E): number | E;\n\n  setPhase(newPhase: number, timingOrAffinity: Affinity | AnyTiming | boolean | null | undefined): void;\n  setPhase(newPhase: number, timing?: AnyTiming | boolean | null, affinity?: Affinity): void;\n\n  get direction(): number;\n\n  setDirection(newDirection: number, timingOrAffinity: Affinity | AnyTiming | boolean | null | undefined): void;\n  setDirection(newDirection: number, timing?: AnyTiming | boolean | null, affinity?: Affinity): void;\n\n  get modalState(): string | undefined;\n\n  get dismissed(): boolean;\n\n  get presented(): boolean;\n\n  get presenting(): boolean;\n\n  get dismissing(): boolean;\n\n  present(timingOrAffinity: Affinity | AnyTiming | boolean | null | undefined): void;\n  present(timing?: AnyTiming | boolean | null, affinity?: Affinity): void;\n\n  dismiss(timingOrAffinity: Affinity | AnyTiming | boolean | null | undefined): void;\n  dismiss(timing?: AnyTiming | boolean | null, affinity?: Affinity): void;\n\n  toggle(timingOrAffinity: Affinity | AnyTiming | boolean | null | undefined): void;\n  toggle(timing?: AnyTiming | boolean | null, affinity?: Affinity): void;\n\n  /** @override @protected */\n  onSetValue(newValue: T, oldValue: T): void;\n\n  /** @protected */\n  willPresent(): void;\n\n  /** @protected */\n  didPresent(): void;\n\n  /** @protected */\n  willDismiss(): void;\n\n  /** @protected */\n  didDismiss(): void;\n\n  /** @override */\n  (newValue: T, oldValue: T | undefined): boolean;\n\n  /** @override */\n  fromAny(value: T | U): T\n}\n\n/** @public */\nexport const PresenceThemeAnimator = (function (_super: typeof ThemeAnimator) {\n  const PresenceThemeAnimator = _super.extend(\"PresenceThemeAnimator\") as ThemeAnimatorFactory<PresenceThemeAnimator<any, Presence | null | undefined, AnyPresence | null | undefined>>;\n\n  Object.defineProperty(PresenceThemeAnimator.prototype, \"phase\", {\n    get(this: PresenceThemeAnimator): number | undefined {\n      const value = this.value;\n      return value !== void 0 && value !== null ? value.phase : void 0;\n    },\n    configurable: true,\n  });\n\n  PresenceThemeAnimator.prototype.getPhase = function (this: PresenceThemeAnimator): number {\n    return this.getValue().phase;\n  };\n\n  PresenceThemeAnimator.prototype.getPhaseOr = function <E>(this: PresenceThemeAnimator, elsePhase: E): number | E {\n    const value = this.value;\n    if (value !== void 0 && value !== null) {\n      return value.phase;\n    } else {\n      return elsePhase;\n    }\n  };\n\n  PresenceThemeAnimator.prototype.setPhase = function (this: PresenceThemeAnimator, newPhase: number, timing?: Affinity | AnyTiming | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue !== void 0 && oldValue !== null) {\n      if (typeof timing === \"number\") {\n        affinity = timing;\n        timing = void 0;\n      }\n      this.setState(oldValue.withPhase(newPhase), timing, affinity);\n    }\n  };\n\n  Object.defineProperty(PresenceThemeAnimator.prototype, \"direction\", {\n    get(this: PresenceThemeAnimator): number {\n      const value = this.value;\n      return value !== void 0 && value !== null ? value.direction : 0;\n    },\n    configurable: true,\n  });\n\n  PresenceThemeAnimator.prototype.setDirection = function (this: PresenceThemeAnimator, newDirection: number, timing?: Affinity | AnyTiming | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue !== void 0 && oldValue !== null) {\n      if (typeof timing === \"number\") {\n        affinity = timing;\n        timing = void 0;\n      }\n      this.setState(oldValue.withDirection(newDirection), timing, affinity);\n    }\n  };\n\n  Object.defineProperty(PresenceThemeAnimator.prototype, \"modalState\", {\n    get(this: PresenceThemeAnimator): string | undefined {\n      const value = this.value;\n      return value !== void 0 && value !== null ? value.modalState : void 0;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(PresenceThemeAnimator.prototype, \"dismissed\", {\n    get(this: PresenceThemeAnimator): boolean {\n      const value = this.value;\n      return value !== void 0 && value !== null && value.dismissed;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(PresenceThemeAnimator.prototype, \"presented\", {\n    get(this: PresenceThemeAnimator): boolean {\n      const value = this.value;\n      return value !== void 0 && value !== null && value.presented;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(PresenceThemeAnimator.prototype, \"presenting\", {\n    get(this: PresenceThemeAnimator): boolean {\n      const value = this.value;\n      return value !== void 0 && value !== null && value.presenting;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(PresenceThemeAnimator.prototype, \"dismissing\", {\n    get(this: PresenceThemeAnimator): boolean {\n      const value = this.value;\n      return value !== void 0 && value !== null && value.dismissing;\n    },\n    configurable: true,\n  });\n\n  PresenceThemeAnimator.prototype.present = function (this: PresenceThemeAnimator, timing?: Affinity | AnyTiming | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue === void 0 || oldValue === null || !oldValue.presented) {\n      if (typeof timing === \"number\") {\n        affinity = timing;\n        timing = void 0;\n      }\n      if (timing === void 0 || timing === true) {\n        const themeContext = this.owner;\n        if (this.mounted && ThemeContext.is(themeContext)) {\n          timing = themeContext.getLook(Look.timing);\n        }\n      }\n      if (oldValue !== void 0 && oldValue !== null) {\n        this.setValue(oldValue.asPresenting(), Affinity.Reflexive);\n      }\n      this.setState(Presence.presented(), timing, affinity);\n    }\n  };\n\n  PresenceThemeAnimator.prototype.dismiss = function (this: PresenceThemeAnimator, timing?: Affinity | AnyTiming | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue === void 0 || oldValue === null || !oldValue.dismissed) {\n      if (typeof timing === \"number\") {\n        affinity = timing;\n        timing = void 0;\n      }\n      if (timing === void 0 || timing === true) {\n        const themeContext = this.owner;\n        if (this.mounted && ThemeContext.is(themeContext)) {\n          timing = themeContext.getLook(Look.timing);\n        }\n      }\n      if (oldValue !== void 0 && oldValue !== null) {\n        this.setValue(oldValue.asDismissing(), Affinity.Reflexive);\n      }\n      this.setState(Presence.dismissed(), timing, affinity);\n    }\n  };\n\n  PresenceThemeAnimator.prototype.toggle = function (this: PresenceThemeAnimator, timing?: Affinity | AnyTiming | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue !== void 0 && oldValue !== null) {\n      if (typeof timing === \"number\") {\n        affinity = timing;\n        timing = void 0;\n      }\n      if (timing === void 0 || timing === true) {\n        const themeContext = this.owner;\n        if (this.mounted && ThemeContext.is(themeContext)) {\n          timing = themeContext.getLook(Look.timing);\n        }\n      }\n      this.setValue(oldValue.asToggling(), Affinity.Reflexive);\n      this.setState(oldValue.asToggled(), timing, affinity);\n    }\n  };\n\n  PresenceThemeAnimator.prototype.onSetValue = function (this: PresenceThemeAnimator, newValue: Presence | null | undefined, oldValue: Presence | null | undefined): void {\n    _super.prototype.onSetValue.call(this, newValue, oldValue);\n    if (newValue !== void 0 && newValue !== null && oldValue !== void 0 && oldValue !== null) {\n      if (newValue.presenting && !oldValue.presenting) {\n        this.willPresent();\n      } else if (newValue.presented && !oldValue.presented) {\n        this.didPresent();\n      } else if (newValue.dismissing && !oldValue.dismissing) {\n        this.willDismiss();\n      } else if (newValue.dismissed && !oldValue.dismissed) {\n        this.didDismiss();\n      }\n    }\n  };\n\n  PresenceThemeAnimator.prototype.willPresent = function (this: PresenceThemeAnimator): void {\n    // hook\n  };\n\n  PresenceThemeAnimator.prototype.didPresent = function (this: PresenceThemeAnimator): void {\n    // hook\n  };\n\n  PresenceThemeAnimator.prototype.willDismiss = function (this: PresenceThemeAnimator): void {\n    // hook\n  };\n\n  PresenceThemeAnimator.prototype.didDismiss = function (this: PresenceThemeAnimator): void {\n    // hook\n  };\n\n  PresenceThemeAnimator.prototype.fromAny = function (this: PresenceThemeAnimator, value: AnyPresence | null | undefined): Presence | null | undefined {\n    return value !== void 0 && value !== null ? Presence.fromAny(value) : null;\n  };\n\n  PresenceThemeAnimator.prototype.equalValues = function (this: PresenceThemeAnimator, newValue: Presence | null | undefined, oldState: Presence | null | undefined): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldState);\n    } else {\n      return newValue === oldState;\n    }\n  };\n\n  return PresenceThemeAnimator;\n})(ThemeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {AnyTiming} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {AnyExpansion, Expansion} from \"@swim/style\";\nimport {Look} from \"../look/Look\";\nimport {ThemeContext} from \"../theme/ThemeContext\";\nimport {ThemeAnimatorFactory, ThemeAnimator} from \"./ThemeAnimator\";\n\n/** @public */\nexport interface ExpansionThemeAnimatorInit {\n  willExpand?(): void;\n  didExpand?(): void;\n  willCollapse?(): void;\n  didCollapse?(): void;\n}\n\n/** @public */\nexport interface ExpansionThemeAnimator<O = unknown, T extends Expansion | null | undefined = Expansion, U extends AnyExpansion | null | undefined = AnyExpansion> extends ThemeAnimator<O, T, U> {\n  get phase(): number | undefined;\n\n  getPhase(): number;\n\n  getPhaseOr<E>(elsePhase: E): number | E;\n\n  setPhase(newPhase: number, timingOrAffinity: Affinity | AnyTiming | boolean | null | undefined): void;\n  setPhase(newPhase: number, timing?: AnyTiming | boolean | null, affinity?: Affinity): void;\n\n  get direction(): number;\n\n  setDirection(newDirection: number, timingOrAffinity: Affinity | AnyTiming | boolean | null | undefined): void;\n  setDirection(newDirection: number, timing?: AnyTiming | boolean | null, affinity?: Affinity): void;\n\n  get modalState(): string | undefined;\n\n  get collapsed(): boolean;\n\n  get expanded(): boolean;\n\n  get expanding(): boolean;\n\n  get collapsing(): boolean;\n\n  expand(timingOrAffinity: Affinity | AnyTiming | boolean | null | undefined): void;\n  expand(timing?: AnyTiming | boolean | null, affinity?: Affinity): void;\n\n  collapse(timingOrAffinity: Affinity | AnyTiming | boolean | null | undefined): void;\n  collapse(timing?: AnyTiming | boolean | null, affinity?: Affinity): void;\n\n  toggle(timingOrAffinity: Affinity | AnyTiming | boolean | null | undefined): void;\n  toggle(timing?: AnyTiming | boolean | null, affinity?: Affinity): void;\n\n  /** @override @protected */\n  onSetValue(newValue: T, oldValue: T): void;\n\n  /** @protected */\n  willExpand(): void;\n\n  /** @protected */\n  didExpand(): void;\n\n  /** @protected */\n  willCollapse(): void;\n\n  /** @protected */\n  didCollapse(): void;\n\n  /** @override */\n  (newValue: T, oldValue: T | undefined): boolean;\n\n  /** @override */\n  fromAny(value: T | U): T\n}\n\n/** @public */\nexport const ExpansionThemeAnimator = (function (_super: typeof ThemeAnimator) {\n  const ExpansionThemeAnimator = _super.extend(\"ExpansionThemeAnimator\") as ThemeAnimatorFactory<ExpansionThemeAnimator<any, Expansion | null | undefined, AnyExpansion | null | undefined>>;\n\n  Object.defineProperty(ExpansionThemeAnimator.prototype, \"phase\", {\n    get(this: ExpansionThemeAnimator): number | undefined {\n      const value = this.value;\n      return value !== void 0 && value !== null ? value.phase : void 0;\n    },\n    configurable: true,\n  });\n\n  ExpansionThemeAnimator.prototype.getPhase = function (this: ExpansionThemeAnimator): number {\n    return this.getValue().phase;\n  };\n\n  ExpansionThemeAnimator.prototype.getPhaseOr = function <E>(this: ExpansionThemeAnimator, elsePhase: E): number | E {\n    const value = this.value;\n    if (value !== void 0 && value !== null) {\n      return value.phase;\n    } else {\n      return elsePhase;\n    }\n  };\n\n  ExpansionThemeAnimator.prototype.setPhase = function (this: ExpansionThemeAnimator, newPhase: number, timing?: Affinity | AnyTiming | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue !== void 0 && oldValue !== null) {\n      if (typeof timing === \"number\") {\n        affinity = timing;\n        timing = void 0;\n      }\n      this.setState(oldValue.withPhase(newPhase), timing, affinity);\n    }\n  };\n\n  Object.defineProperty(ExpansionThemeAnimator.prototype, \"direction\", {\n    get(this: ExpansionThemeAnimator): number {\n      const value = this.value;\n      return value !== void 0 && value !== null ? value.direction : 0;\n    },\n    configurable: true,\n  });\n\n  ExpansionThemeAnimator.prototype.setDirection = function (this: ExpansionThemeAnimator, newDirection: number, timing?: Affinity | AnyTiming | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue !== void 0 && oldValue !== null) {\n      if (typeof timing === \"number\") {\n        affinity = timing;\n        timing = void 0;\n      }\n      this.setState(oldValue.withDirection(newDirection), timing, affinity);\n    }\n  };\n\n  Object.defineProperty(ExpansionThemeAnimator.prototype, \"modalState\", {\n    get(this: ExpansionThemeAnimator): string | undefined {\n      const value = this.value;\n      return value !== void 0 && value !== null ? value.modalState : void 0;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(ExpansionThemeAnimator.prototype, \"collapsed\", {\n    get(this: ExpansionThemeAnimator): boolean {\n      const value = this.value;\n      return value !== void 0 && value !== null && value.collapsed;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(ExpansionThemeAnimator.prototype, \"expanded\", {\n    get(this: ExpansionThemeAnimator): boolean {\n      const value = this.value;\n      return value !== void 0 && value !== null && value.expanded;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(ExpansionThemeAnimator.prototype, \"expanding\", {\n    get(this: ExpansionThemeAnimator): boolean {\n      const value = this.value;\n      return value !== void 0 && value !== null && value.expanding;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(ExpansionThemeAnimator.prototype, \"collapsing\", {\n    get(this: ExpansionThemeAnimator): boolean {\n      const value = this.value;\n      return value !== void 0 && value !== null && value.collapsing;\n    },\n    configurable: true,\n  });\n\n  ExpansionThemeAnimator.prototype.expand = function (this: ExpansionThemeAnimator, timing?: Affinity | AnyTiming | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue === void 0 || oldValue === null || !oldValue.expanded) {\n      if (typeof timing === \"number\") {\n        affinity = timing;\n        timing = void 0;\n      }\n      if (timing === void 0 || timing === true) {\n        const themeContext = this.owner;\n        if (this.mounted && ThemeContext.is(themeContext)) {\n          timing = themeContext.getLook(Look.timing);\n        }\n      }\n      if (oldValue !== void 0 && oldValue !== null) {\n        this.setValue(oldValue.asExpanding(), Affinity.Reflexive);\n      }\n      this.setState(Expansion.expanded(), timing, affinity);\n    }\n  };\n\n  ExpansionThemeAnimator.prototype.collapse = function (this: ExpansionThemeAnimator, timing?: Affinity | AnyTiming | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue === void 0 || oldValue === null || !oldValue.collapsed) {\n      if (typeof timing === \"number\") {\n        affinity = timing;\n        timing = void 0;\n      }\n      if (timing === void 0 || timing === true) {\n        const themeContext = this.owner;\n        if (this.mounted && ThemeContext.is(themeContext)) {\n          timing = themeContext.getLook(Look.timing);\n        }\n      }\n      if (oldValue !== void 0 && oldValue !== null) {\n        this.setValue(oldValue.asCollapsing(), Affinity.Reflexive);\n      }\n      this.setState(Expansion.collapsed(), timing, affinity);\n    }\n  };\n\n  ExpansionThemeAnimator.prototype.toggle = function (this: ExpansionThemeAnimator, timing?: Affinity | AnyTiming | boolean | null, affinity?: Affinity): void {\n    const oldValue = this.value;\n    if (oldValue !== void 0 && oldValue !== null) {\n      if (typeof timing === \"number\") {\n        affinity = timing;\n        timing = void 0;\n      }\n      if (timing === void 0 || timing === true) {\n        const themeContext = this.owner;\n        if (this.mounted && ThemeContext.is(themeContext)) {\n          timing = themeContext.getLook(Look.timing);\n        }\n      }\n      this.setValue(oldValue.asToggling(), Affinity.Reflexive);\n      this.setState(oldValue.asToggled(), timing, affinity);\n    }\n  };\n\n  ExpansionThemeAnimator.prototype.onSetValue = function (this: ExpansionThemeAnimator, newValue: Expansion | null | undefined, oldValue: Expansion | null | undefined): void {\n    _super.prototype.onSetValue.call(this, newValue, oldValue);\n    if (newValue !== void 0 && newValue !== null && oldValue !== void 0 && oldValue !== null) {\n      if (newValue.expanding && !oldValue.expanding) {\n        this.willExpand();\n      } else if (newValue.expanded && !oldValue.expanded) {\n        this.didExpand();\n      } else if (newValue.collapsing && !oldValue.collapsing) {\n        this.willCollapse();\n      } else if (newValue.collapsed && !oldValue.collapsed) {\n        this.didCollapse();\n      }\n    }\n  };\n\n  ExpansionThemeAnimator.prototype.willExpand = function (this: ExpansionThemeAnimator): void {\n    // hook\n  };\n\n  ExpansionThemeAnimator.prototype.didExpand = function (this: ExpansionThemeAnimator): void {\n    // hook\n  };\n\n  ExpansionThemeAnimator.prototype.willCollapse = function (this: ExpansionThemeAnimator): void {\n    // hook\n  };\n\n  ExpansionThemeAnimator.prototype.didCollapse = function (this: ExpansionThemeAnimator): void {\n    // hook\n  };\n\n  ExpansionThemeAnimator.prototype.fromAny = function (this: ExpansionThemeAnimator, value: AnyExpansion | null | undefined): Expansion | null | undefined {\n    return value !== void 0 && value !== null ? Expansion.fromAny(value) : null;\n  };\n\n  ExpansionThemeAnimator.prototype.equalValues = function (this: ExpansionThemeAnimator, newValue: Expansion | null | undefined, oldValue: Expansion | null | undefined): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    } else {\n      return newValue === oldValue;\n    }\n  };\n\n  return ExpansionThemeAnimator;\n})(ThemeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, FromAny} from \"@swim/util\";\nimport {Affinity, FastenerOwner, FastenerFlags} from \"@swim/component\";\nimport {\n  ConstraintId,\n  ConstraintMap,\n  AnyConstraintExpression,\n  ConstraintExpression,\n  ConstraintTerm,\n  ConstraintVariable,\n  AnyConstraintStrength,\n  ConstraintStrength,\n  Constraint,\n  ConstraintScope,\n  ConstraintSolver,\n} from \"@swim/constraint\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport {ThemeAnimatorInit, ThemeAnimatorClass, ThemeAnimator} from \"./ThemeAnimator\";\nimport {NumberThemeConstraintAnimator} from \"./\"; // forward import\nimport {LengthThemeConstraintAnimator} from \"./\"; // forward import\n\n/** @public */\nexport interface ThemeConstraintAnimatorInit<T = unknown, U = T> extends ThemeAnimatorInit<T, U> {\n  extends?: {prototype: ThemeConstraintAnimator<any, any>} | string | boolean | null;\n  constrain?: boolean;\n  strength?: AnyConstraintStrength;\n\n  willStartConstraining?(): void;\n  didStartConstraining?(): void;\n  willStopConstraining?(): void;\n  didStopConstraining?(): void;\n\n  toNumber?(value: T): number;\n}\n\n/** @public */\nexport type ThemeConstraintAnimatorDescriptor<O = unknown, T = unknown, U = T, I = {}> = ThisType<ThemeConstraintAnimator<O, T, U> & I> & ThemeConstraintAnimatorInit<T, U> & Partial<I>;\n\n/** @public */\nexport interface ThemeConstraintAnimatorClass<A extends ThemeConstraintAnimator<any, any> = ThemeConstraintAnimator<any, any>> extends ThemeAnimatorClass<A> {\n  /** @internal */\n  readonly ConstrainedFlag: FastenerFlags;\n  /** @internal */\n  readonly ConstrainingFlag: FastenerFlags;\n\n  /** @internal @override */\n  readonly FlagShift: number;\n  /** @internal @override */\n  readonly FlagMask: FastenerFlags;\n}\n\n/** @public */\nexport interface ThemeConstraintAnimatorFactory<A extends ThemeConstraintAnimator<any, any> = ThemeConstraintAnimator<any, any>> extends ThemeConstraintAnimatorClass<A> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): ThemeConstraintAnimatorFactory<A> & I;\n\n  specialize(type: unknown): ThemeConstraintAnimatorFactory | null;\n\n  define<O, T, U = T>(className: string, descriptor: ThemeConstraintAnimatorDescriptor<O, T, U>): ThemeConstraintAnimatorFactory<ThemeConstraintAnimator<any, T, U>>;\n  define<O, T, U = T, I = {}>(className: string, descriptor: {implements: unknown} & ThemeConstraintAnimatorDescriptor<O, T, U, I>): ThemeConstraintAnimatorFactory<ThemeConstraintAnimator<any, T, U> & I>;\n\n  <O, T extends Length | null | undefined = Length | null | undefined, U extends AnyLength | null | undefined = AnyLength | null | undefined>(descriptor: {type: typeof Length} & ThemeConstraintAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T extends number | null | undefined = number | null | undefined, U extends number | string | null | undefined = number | string | null | undefined>(descriptor: {type: typeof Number} & ThemeConstraintAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T, U = T>(descriptor: ({type: FromAny<T, U>} | {fromAny(value: T | U): T}) & ThemeConstraintAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T, U = T>(descriptor: ThemeConstraintAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T, U = T, I = {}>(descriptor: {implements: unknown} & ThemeConstraintAnimatorDescriptor<O, T, U, I>): PropertyDecorator;\n}\n\n/** @public */\nexport interface ThemeConstraintAnimator<O = unknown, T = unknown, U = T> extends ThemeAnimator<O, T, U>, ConstraintVariable {\n  /** @internal @override */\n  readonly id: number;\n\n  /** @internal @override */\n  isExternal(): boolean;\n\n  /** @internal @override */\n  isDummy(): boolean;\n\n  /** @internal @override */\n  isInvalid(): boolean;\n\n  /** @override */\n  isConstant(): boolean;\n\n  /** @internal @override */\n  evaluateConstraintVariable(): void;\n\n  /** @internal @override */\n  updateConstraintSolution(value: number): void;\n\n  /** @override */\n  readonly strength: ConstraintStrength;\n\n  setStrength(strength: AnyConstraintStrength): void;\n\n  /** @override */\n  get coefficient(): number;\n\n  /** @override */\n  get variable(): ConstraintVariable | null;\n\n  /** @override */\n  get terms(): ConstraintMap<ConstraintVariable, number>;\n\n  /** @override */\n  get constant(): number;\n\n  /** @override */\n  plus(that: AnyConstraintExpression): ConstraintExpression;\n\n  /** @override */\n  negative(): ConstraintTerm;\n\n  /** @override */\n  minus(that: AnyConstraintExpression): ConstraintExpression;\n\n  /** @override */\n  times(scalar: number): ConstraintExpression;\n\n  /** @override */\n  divide(scalar: number): ConstraintExpression;\n\n  get constrained(): boolean;\n\n  constrain(constrained?: boolean): this;\n\n  /** @internal */\n  readonly conditionCount: number;\n\n  /** @internal @override */\n  addConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void;\n\n  /** @internal @override */\n  removeConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void;\n\n  /** @internal */\n  get constraining(): boolean;\n\n  /** @internal */\n  startConstraining(): void;\n\n  /** @protected */\n  willStartConstraining(): void;\n\n  /** @protected */\n  onStartConstraining(): void;\n\n  /** @protected */\n  didStartConstraining(): void;\n\n  /** @internal */\n  stopConstraining(): void;\n\n  /** @protected */\n  willStopConstraining(): void;\n\n  /** @protected */\n  onStopConstraining(): void;\n\n  /** @protected */\n  didStopConstraining(): void;\n\n  /** @internal */\n  updateConstraintVariable(): void;\n\n  /** @protected @override */\n  onSetValue(newValue: T, oldValue: T): void;\n\n  /** @protected @override */\n  onMount(): void;\n\n  /** @protected @override */\n  onUnmount(): void;\n\n  /** @override */\n  fromAny(value: T | U): T;\n\n  /** @internal @protected */\n  toNumber(value: T): number;\n}\n\n/** @public */\nexport const ThemeConstraintAnimator = (function (_super: typeof ThemeAnimator) {\n  const ThemeConstraintAnimator: ThemeConstraintAnimatorFactory = _super.extend(\"ThemeConstraintAnimator\");\n\n  ThemeConstraintAnimator.prototype.isExternal = function (this: ThemeConstraintAnimator): boolean {\n    return true;\n  };\n\n  ThemeConstraintAnimator.prototype.isDummy = function (this: ThemeConstraintAnimator): boolean {\n    return false;\n  };\n\n  ThemeConstraintAnimator.prototype.isInvalid = function (this: ThemeConstraintAnimator): boolean {\n    return false;\n  };\n\n  ThemeConstraintAnimator.prototype.isConstant = function (this: ThemeConstraintAnimator): boolean {\n    return false;\n  };\n\n  ThemeConstraintAnimator.prototype.evaluateConstraintVariable = function <T>(this: ThemeConstraintAnimator<unknown, T>): void {\n    // hook\n  };\n\n  ThemeConstraintAnimator.prototype.updateConstraintSolution = function <T>(this: ThemeConstraintAnimator<unknown, T>, state: number): void {\n    if (this.constrained && this.toNumber(this.state) !== state) {\n      this.setState(state as unknown as T, Affinity.Reflexive);\n    }\n  };\n\n  ThemeConstraintAnimator.prototype.setStrength = function (this: ThemeConstraintAnimator, strength: AnyConstraintStrength): void {\n    (this as Mutable<typeof this>).strength = ConstraintStrength.fromAny(strength);\n  };\n\n  Object.defineProperty(ThemeConstraintAnimator.prototype, \"coefficient\", {\n    get(this: ThemeConstraintAnimator): number {\n      return 1;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(ThemeConstraintAnimator.prototype, \"variable\", {\n    get(this: ThemeConstraintAnimator): ConstraintVariable {\n      return this;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(ThemeConstraintAnimator.prototype, \"terms\", {\n    get(this: ThemeConstraintAnimator): ConstraintMap<ConstraintVariable, number> {\n      const terms = new ConstraintMap<ConstraintVariable, number>();\n      terms.set(this, 1);\n      return terms;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(ThemeConstraintAnimator.prototype, \"constant\", {\n    get(this: ThemeConstraintAnimator): number {\n      return 0;\n    },\n    configurable: true,\n  });\n\n  ThemeConstraintAnimator.prototype.plus = function (this: ThemeConstraintAnimator, that: AnyConstraintExpression): ConstraintExpression {\n    that = ConstraintExpression.fromAny(that);\n    if (this === that) {\n      return ConstraintExpression.product(2, this);\n    } else {\n      return ConstraintExpression.sum(this, that);\n    }\n  };\n\n  ThemeConstraintAnimator.prototype.negative = function (this: ThemeConstraintAnimator): ConstraintTerm {\n    return ConstraintExpression.product(-1, this);\n  };\n\n  ThemeConstraintAnimator.prototype.minus = function (this: ThemeConstraintAnimator, that: AnyConstraintExpression): ConstraintExpression {\n    that = ConstraintExpression.fromAny(that);\n    if (this === that) {\n      return ConstraintExpression.zero;\n    } else {\n      return ConstraintExpression.sum(this, that.negative());\n    }\n  };\n\n  ThemeConstraintAnimator.prototype.times = function (this: ThemeConstraintAnimator, scalar: number): ConstraintExpression {\n    return ConstraintExpression.product(scalar, this);\n  };\n\n  ThemeConstraintAnimator.prototype.divide = function (this: ThemeConstraintAnimator, scalar: number): ConstraintExpression {\n    return ConstraintExpression.product(1 / scalar, this);\n  };\n\n  Object.defineProperty(ThemeConstraintAnimator.prototype, \"constrained\", {\n    get(this: ThemeConstraintAnimator): boolean {\n      return (this.flags & ThemeConstraintAnimator.ConstrainedFlag) !== 0;\n    },\n    configurable: true,\n  });\n\n  ThemeConstraintAnimator.prototype.constrain = function (this: ThemeConstraintAnimator<unknown, unknown, unknown>, constrained?: boolean): typeof this {\n    if (constrained === void 0) {\n      constrained = true;\n    }\n    const flags = this.flags;\n    if (constrained && (flags & ThemeConstraintAnimator.ConstrainedFlag) === 0) {\n      this.setFlags(flags | ThemeConstraintAnimator.ConstrainedFlag);\n      if (this.conditionCount !== 0 && this.mounted) {\n        this.stopConstraining();\n      }\n    } else if (!constrained && (flags & ThemeConstraintAnimator.ConstrainedFlag) !== 0) {\n      this.setFlags(flags & ~ThemeConstraintAnimator.ConstrainedFlag);\n      if (this.conditionCount !== 0 && this.mounted) {\n        this.startConstraining();\n        this.updateConstraintVariable();\n      }\n    }\n    return this;\n  };\n\n  ThemeConstraintAnimator.prototype.addConstraintCondition = function (this: ThemeConstraintAnimator, constraint: Constraint, solver: ConstraintSolver): void {\n    (this as Mutable<typeof this>).conditionCount += 1;\n    if (!this.constrained && this.conditionCount === 1 && this.mounted) {\n      this.startConstraining();\n      this.updateConstraintVariable();\n    }\n  };\n\n  ThemeConstraintAnimator.prototype.removeConstraintCondition = function (this: ThemeConstraintAnimator, constraint: Constraint, solver: ConstraintSolver): void {\n    (this as Mutable<typeof this>).conditionCount -= 1;\n    if (!this.constrained && this.conditionCount === 0 && this.mounted) {\n      this.stopConstraining();\n    }\n  };\n\n  Object.defineProperty(ThemeConstraintAnimator.prototype, \"constraining\", {\n    get(this: ThemeConstraintAnimator): boolean {\n      return (this.flags & ThemeConstraintAnimator.ConstrainingFlag) !== 0;\n    },\n    configurable: true,\n  });\n\n  ThemeConstraintAnimator.prototype.startConstraining = function (this: ThemeConstraintAnimator): void {\n    if ((this.flags & ThemeConstraintAnimator.ConstrainingFlag) === 0) {\n      this.willStartConstraining();\n      this.setFlags(this.flags | ThemeConstraintAnimator.ConstrainingFlag);\n      this.onStartConstraining();\n      this.didStartConstraining();\n    }\n  };\n\n  ThemeConstraintAnimator.prototype.willStartConstraining = function (this: ThemeConstraintAnimator): void {\n    // hook\n  };\n\n  ThemeConstraintAnimator.prototype.onStartConstraining = function (this: ThemeConstraintAnimator): void {\n    const constraintScope = this.owner;\n    if (ConstraintScope.is(constraintScope)) {\n      constraintScope.addConstraintVariable(this);\n    }\n  };\n\n  ThemeConstraintAnimator.prototype.didStartConstraining = function (this: ThemeConstraintAnimator): void {\n    // hook\n  };\n\n  ThemeConstraintAnimator.prototype.stopConstraining = function (this: ThemeConstraintAnimator): void {\n    if ((this.flags & ThemeConstraintAnimator.ConstrainingFlag) !== 0) {\n      this.willStopConstraining();\n      this.setFlags(this.flags & ~ThemeConstraintAnimator.ConstrainingFlag);\n      this.onStopConstraining();\n      this.didStopConstraining();\n    }\n  };\n\n  ThemeConstraintAnimator.prototype.willStopConstraining = function (this: ThemeConstraintAnimator): void {\n    // hook\n  };\n\n  ThemeConstraintAnimator.prototype.onStopConstraining = function (this: ThemeConstraintAnimator): void {\n    const constraintScope = this.owner;\n    if (ConstraintScope.is(constraintScope)) {\n      constraintScope.removeConstraintVariable(this);\n    }\n  };\n\n  ThemeConstraintAnimator.prototype.didStopConstraining = function (this: ThemeConstraintAnimator): void {\n    // hook\n  };\n\n  ThemeConstraintAnimator.prototype.updateConstraintVariable = function (this: ThemeConstraintAnimator): void {\n    const constraintScope = this.owner;\n    const value = this.value;\n    if (value !== void 0 && ConstraintScope.is(constraintScope)) {\n      constraintScope.setConstraintVariable(this, this.toNumber(value));\n    }\n  };\n\n  ThemeConstraintAnimator.prototype.onSetValue = function <T>(this: ThemeConstraintAnimator<unknown, T>, newValue: T, oldValue: T): void {\n    _super.prototype.onSetValue.call(this, newValue, oldValue);\n    const constraintScope = this.owner;\n    if (this.constraining && ConstraintScope.is(constraintScope)) {\n      constraintScope.setConstraintVariable(this, newValue !== void 0 && newValue !== null ? this.toNumber(newValue) : 0);\n    }\n  };\n\n  ThemeConstraintAnimator.prototype.onMount = function <T>(this: ThemeConstraintAnimator<unknown, T>): void {\n    _super.prototype.onMount.call(this);\n    if (!this.constrained && this.conditionCount !== 0) {\n      this.startConstraining();\n    }\n  };\n\n  ThemeConstraintAnimator.prototype.onUnmount = function <T>(this: ThemeConstraintAnimator<unknown, T>): void {\n    if (!this.constrained && this.conditionCount !== 0) {\n      this.stopConstraining();\n    }\n    _super.prototype.onUnmount.call(this);\n  };\n\n  ThemeConstraintAnimator.prototype.fromAny = function <T, U>(this: ThemeConstraintAnimator<unknown, T, U>, value: T | U): T {\n    if (typeof value === \"string\") {\n      const number = +value;\n      if (isFinite(number)) {\n        return number as unknown as T;\n      }\n    }\n    return value as T;\n  };\n\n  ThemeConstraintAnimator.prototype.toNumber = function <T>(this: ThemeConstraintAnimator<unknown, T>, value: T): number {\n    return value !== void 0 && value !== null ? +value : 0;\n  };\n\n  ThemeConstraintAnimator.construct = function <A extends ThemeConstraintAnimator<any, any>>(animatorClass: {prototype: A}, animator: A | null, owner: FastenerOwner<A>): A {\n    animator = _super.construct(animatorClass, animator, owner) as A;\n    (animator as Mutable<typeof animator>).id = ConstraintId.next();\n    (animator as Mutable<typeof animator>).strength = ConstraintStrength.Strong;\n    (animator as Mutable<typeof animator>).conditionCount = 0;\n    return animator;\n  };\n\n  ThemeConstraintAnimator.specialize = function (type: unknown): ThemeConstraintAnimatorFactory | null {\n  if (type === Number) {\n    return NumberThemeConstraintAnimator;\n  } else if (type === Length) {\n    return LengthThemeConstraintAnimator;\n  }\n    return null;\n  };\n\n  ThemeConstraintAnimator.define = function <O, T, U>(className: string, descriptor: ThemeConstraintAnimatorDescriptor<O, T, U>): ThemeConstraintAnimatorFactory<ThemeConstraintAnimator<any, T, U>> {\n    let superClass = descriptor.extends as ThemeConstraintAnimatorFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    const strength = descriptor.strength !== void 0 ? ConstraintStrength.fromAny(descriptor.strength) : void 0;\n    const constrain = descriptor.constrain;\n    const look = descriptor.look;\n    const value = descriptor.value;\n    const initValue = descriptor.initValue;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n    delete descriptor.strength;\n    delete descriptor.constrain;\n    delete descriptor.look;\n    delete descriptor.value;\n    delete descriptor.initValue;\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this.specialize(descriptor.type);\n    }\n    if (superClass === null) {\n      superClass = this;\n      if (descriptor.fromAny === void 0 && FromAny.is<T, U>(descriptor.type)) {\n        descriptor.fromAny = descriptor.type.fromAny;\n      }\n    }\n\n    const animatorClass = superClass.extend(className, descriptor);\n\n    animatorClass.construct = function (animatorClass: {prototype: ThemeConstraintAnimator<any, any>}, animator: ThemeConstraintAnimator<O, T, U> | null, owner: O): ThemeConstraintAnimator<O, T, U> {\n      animator = superClass!.construct(animatorClass, animator, owner);\n      if (affinity !== void 0) {\n        animator.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        animator.initInherits(inherits);\n      }\n      if (strength !== void 0) {\n        (animator as Mutable<typeof animator>).strength = strength;\n      }\n      if (look !== void 0) {\n        (animator as Mutable<typeof animator>).look = look;\n      }\n      if (initValue !== void 0) {\n        (animator as Mutable<typeof animator>).value = animator.fromAny(initValue());\n        (animator as Mutable<typeof animator>).state = animator.value;\n      } else if (value !== void 0) {\n        (animator as Mutable<typeof animator>).value = animator.fromAny(value);\n        (animator as Mutable<typeof animator>).state = animator.value;\n      }\n      if (constrain === true) {\n        animator.constrain();\n      }\n      return animator;\n    };\n\n    return animatorClass;\n  };\n\n  (ThemeConstraintAnimator as Mutable<typeof ThemeConstraintAnimator>).ConstrainedFlag = 1 << (_super.FlagShift + 0);\n  (ThemeConstraintAnimator as Mutable<typeof ThemeConstraintAnimator>).ConstrainingFlag = 1 << (_super.FlagShift + 1);\n\n  (ThemeConstraintAnimator as Mutable<typeof ThemeConstraintAnimator>).FlagShift = _super.FlagShift + 2;\n  (ThemeConstraintAnimator as Mutable<typeof ThemeConstraintAnimator>).FlagMask = (1 << ThemeConstraintAnimator.FlagShift) - 1;\n\n  return ThemeConstraintAnimator;\n})(ThemeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ThemeConstraintAnimatorFactory, ThemeConstraintAnimator} from \"./ThemeConstraintAnimator\";\n\n/** @internal */\nexport const NumberThemeConstraintAnimator = (function (_super: typeof ThemeConstraintAnimator) {\n  const NumberThemeConstraintAnimator = _super.extend(\"NumberThemeConstraintAnimator\") as ThemeConstraintAnimatorFactory<ThemeConstraintAnimator<any, number | null | undefined, number | string | null | undefined>>;\n\n  NumberThemeConstraintAnimator.prototype.toNumber = function (value: number | null): number {\n    return typeof value === \"number\" ? value : 0;\n  };\n\n  NumberThemeConstraintAnimator.prototype.fromAny = function (value: number | string | null | undefined): number | null | undefined {\n    if (typeof value === \"string\") {\n      const number = +value;\n      if (isFinite(number)) {\n        return number;\n      } else {\n        throw new Error(value);\n      }\n    } else {\n      return value;\n    }\n  };\n\n  NumberThemeConstraintAnimator.prototype.equalValues = function (newValue: number | null | undefined, oldValue: number | null | undefined): boolean {\n    return newValue === oldValue;\n  };\n\n  return NumberThemeConstraintAnimator;\n})(ThemeConstraintAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyLength, Length} from \"@swim/math\";\nimport {ThemeConstraintAnimatorFactory, ThemeConstraintAnimator} from \"./ThemeConstraintAnimator\";\n\n/** @internal */\nexport const LengthThemeConstraintAnimator = (function (_super: typeof ThemeConstraintAnimator) {\n  const LengthThemeConstraintAnimator = _super.extend(\"LengthThemeConstraintAnimator\") as ThemeConstraintAnimatorFactory<ThemeConstraintAnimator<any, Length | null | undefined, AnyLength | null | undefined>>;\n\n  LengthThemeConstraintAnimator.prototype.toNumber = function (value: Length | null | undefined): number {\n    try {\n      return value !== void 0 && value !== null ? value.pxValue() : 0;\n    } catch (swallow) {\n      return 0;\n    }\n  };\n\n  LengthThemeConstraintAnimator.prototype.fromAny = function (value: AnyLength | null | undefined): Length | null | undefined {\n    return value !== void 0 && value !== null ? Length.fromAny(value) : null;\n  };\n\n  LengthThemeConstraintAnimator.prototype.equalValues = function (newValue: Length | null | undefined, oldValue: Length | null | undefined): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    } else {\n      return newValue === oldValue;\n    }\n  };\n\n  return LengthThemeConstraintAnimator;\n})(ThemeConstraintAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Look} from \"../look/Look\";\nimport {NumberLook} from \"../look/NumberLook\";\nimport {LengthLook} from \"../look/LengthLook\";\nimport {ColorLook} from \"../look/ColorLook\";\nimport {FontLook} from \"../look/FontLook\";\nimport {ShadowLook} from \"../look/ShadowLook\";\nimport {TimingLook} from \"../look/TimingLook\";\n\nLook.font = new FontLook(\"font\");\n\nLook.color = new ColorLook(\"color\");\nLook.iconColor = new ColorLook(\"iconColor\");\nLook.statusColor = new ColorLook(\"statusColor\");\nLook.accentColor = new ColorLook(\"accentColor\");\nLook.mutedColor = new ColorLook(\"mutedColor\");\nLook.neutralColor = new ColorLook(\"neutralColor\");\nLook.subduedColor = new ColorLook(\"subduedColor\");\nLook.faintColor = new ColorLook(\"faintColor\");\nLook.highlightColor = new ColorLook(\"highlightColor\");\n\nLook.backgroundColor = new ColorLook(\"backgroundColor\");\nLook.borderColor = new ColorLook(\"borderColor\");\n\nLook.opacity = new NumberLook(\"opacity\");\nLook.shadow = new ShadowLook(\"shadow\");\nLook.spacing = new LengthLook(\"spacing\");\nLook.timing = new TimingLook(\"timing\");\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Feel} from \"../feel/Feel\";\nimport {InterpolatedFeel} from \"../feel/InterpolatedFeel\";\nimport {BrightnessFeel} from \"../feel/BrightnessFeel\";\nimport {OpacityFeel} from \"../feel/OpacityFeel\";\n\nFeel.ambient = new InterpolatedFeel(\"ambient\");\nFeel.default = new InterpolatedFeel(\"default\");\n\nFeel.primary = new InterpolatedFeel(\"primary\");\nFeel.secondary = new InterpolatedFeel(\"secondary\");\n\nFeel.unselected = new InterpolatedFeel(\"unselected\");\nFeel.selected = new InterpolatedFeel(\"selected\");\nFeel.disabled = new InterpolatedFeel(\"disabled\");\nFeel.inactive = new InterpolatedFeel(\"inactive\");\nFeel.warning = new InterpolatedFeel(\"warning\");\nFeel.alert = new InterpolatedFeel(\"alert\");\n\nFeel.darker = new BrightnessFeel(\"darker\");\nFeel.lighter = new BrightnessFeel(\"lighter\");\nFeel.contrasted = new BrightnessFeel(\"contrasted\");\n\nFeel.raised = new InterpolatedFeel(\"raised\");\nFeel.covered = new InterpolatedFeel(\"covered\");\n\nFeel.opaque = new InterpolatedFeel(\"opaque\");\nFeel.floating = new InterpolatedFeel(\"floating\");\nFeel.transparent = new InterpolatedFeel(\"transparent\");\nFeel.translucent = new OpacityFeel(\"translucent\");\nFeel.embossed = new BrightnessFeel(\"embossed\");\nFeel.nested = new BrightnessFeel(\"nested\");\nFeel.hovering = new BrightnessFeel(\"hovering\");\n\nFeel.navigating = new InterpolatedFeel(\"navigating\");\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Feel} from \"../feel/Feel\";\nimport {Mood} from \"../mood/Mood\";\nimport {MoodVector} from \"../mood/MoodVector\";\n\nMood.ambient = MoodVector.of([Feel.ambient, 1]);\nMood.default = MoodVector.of([Feel.default, 1]);\n\nMood.primary = MoodVector.of([Feel.primary, 1]);\nMood.secondary = MoodVector.of([Feel.secondary, 1]);\n\nMood.selected = MoodVector.of([Feel.selected, 1]);\nMood.disabled = MoodVector.of([Feel.disabled, 1]);\nMood.inactive = MoodVector.of([Feel.inactive, 1]);\nMood.warning = MoodVector.of([Feel.warning, 1]);\nMood.alert = MoodVector.of([Feel.alert, 1]);\n\nMood.darker = MoodVector.of([Feel.darker, 1]);\nMood.lighter = MoodVector.of([Feel.lighter, 1]);\nMood.contrasted = MoodVector.of([Feel.contrasted, 1]);\n\nMood.raised = MoodVector.of([Feel.raised, 1]);\nMood.covered = MoodVector.of([Feel.covered, 1]);\n\nMood.opaque = MoodVector.of([Feel.opaque, 1]);\nMood.floating = MoodVector.of([Feel.floating, 1]);\nMood.transparent = MoodVector.of([Feel.transparent, 1]);\nMood.translucent = MoodVector.of([Feel.translucent, 1]);\nMood.embossed = MoodVector.of([Feel.embossed, 1]);\nMood.nested = MoodVector.of([Feel.nested, 1]);\nMood.hovering = MoodVector.of([Feel.hovering, 1]);\n\nMood.navigating = MoodVector.of([Feel.navigating, 1]);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Easing} from \"@swim/util\";\nimport {Length} from \"@swim/math\";\nimport {Font, Color, BoxShadow} from \"@swim/style\";\nimport {Look} from \"../look/Look\";\nimport {Feel} from \"../feel/Feel\";\nimport {FeelVector} from \"../feel/FeelVector\";\nimport {Theme} from \"../theme/Theme\";\nimport {ThemeMatrix} from \"../theme/ThemeMatrix\";\n\nconst DarkFont = Font.parse(\"14px -apple-system, system-ui, sans-serif\");\n\nconst DarkColor = Color.parse(\"#d8d8d8\");\nconst DarkIconColor = Color.parse(\"#d8d8d8\");\nconst DarkAccentColor = Color.parse(\"#6c6d6e\");\nconst DarkMutedColor = Color.parse(\"#989898\");\nconst DarkNeutralColor = Color.parse(\"#808080\");\nconst DarkSubduedColor = Color.parse(\"#28292a\");\nconst DarkFaintColor = Color.parse(\"#1f2123\");\nconst DarkHighlightColor = Color.white(0.1);\n\nconst DarkBackgroundColor = Color.parse(\"#161719\");\nconst DarkBorderColor = DarkBackgroundColor.lighter(2 / 3);\n\nconst DarkRaisedColor = Color.parse(\"#18191b\");\nconst DarkCoveredColor = Color.parse(\"#1e2022\");\n\nconst DarkPrimaryColor = Color.parse(\"#66ffdd\");\nconst DarkSecondaryColor = Color.parse(\"#32c5ff\");\n\nconst DarkDisabledColor = Color.parse(\"#7b7c7d\");\nconst DarkInactiveColor = Color.parse(\"#7b7c7d\");\nconst DarkWarningColor = Color.parse(\"#f9f070\");\nconst DarkAlertColor = Color.parse(\"#f6511d\");\n\nconst DarkSpacing = Length.px(10);\n\nconst DarkAmbient = FeelVector.of(\n  [Look.font, DarkFont],\n\n  [Look.color, DarkColor],\n  [Look.iconColor, DarkIconColor],\n  [Look.statusColor, DarkColor],\n  [Look.accentColor, DarkAccentColor],\n  [Look.mutedColor, DarkMutedColor],\n  [Look.neutralColor, DarkNeutralColor],\n  [Look.subduedColor, DarkSubduedColor],\n  [Look.faintColor, DarkFaintColor],\n  [Look.highlightColor, DarkHighlightColor],\n\n  [Look.backgroundColor, DarkBackgroundColor],\n  [Look.borderColor, DarkBorderColor],\n\n  [Look.spacing, DarkSpacing],\n  [Look.timing, Easing.linear.withDuration(1000)],\n);\n\nconst DarkDefault = FeelVector.of(\n  [Look.font, DarkFont],\n\n  [Look.color, DarkColor],\n  [Look.iconColor, DarkIconColor],\n  [Look.statusColor, DarkColor],\n  [Look.accentColor, DarkAccentColor],\n  [Look.mutedColor, DarkMutedColor],\n  [Look.neutralColor, DarkNeutralColor],\n  [Look.subduedColor, DarkSubduedColor],\n  [Look.faintColor, DarkFaintColor],\n  [Look.highlightColor, DarkHighlightColor],\n\n  [Look.backgroundColor, DarkBackgroundColor],\n  [Look.borderColor, DarkBorderColor],\n\n  [Look.spacing, DarkSpacing],\n  [Look.timing, Easing.cubicOut.withDuration(250)],\n);\n\nconst DarkPrimary = FeelVector.of(\n  [Look.accentColor, DarkPrimaryColor],\n);\n\nconst DarkSecondary = FeelVector.of(\n  [Look.accentColor, DarkSecondaryColor],\n);\n\nconst DarkUnselected = FeelVector.of(\n  [Look.color, DarkMutedColor],\n  [Look.iconColor, DarkMutedColor],\n  [Look.backgroundColor, DarkBackgroundColor.darker(1)],\n);\n\nconst DarkSelected = FeelVector.of(\n  [Look.color, DarkColor],\n  [Look.iconColor, DarkIconColor],\n  [Look.backgroundColor, DarkBackgroundColor.darker(1)],\n);\n\nconst DarkDisabled = FeelVector.of(\n  [Look.color, DarkDisabledColor],\n  [Look.iconColor, DarkDisabledColor],\n  [Look.statusColor, DarkDisabledColor],\n  [Look.accentColor, DarkDisabledColor],\n);\n\nconst DarkInactive = FeelVector.of(\n  [Look.statusColor, DarkInactiveColor],\n  [Look.accentColor, DarkInactiveColor],\n);\n\nconst DarkWarning = FeelVector.of(\n  [Look.statusColor, DarkWarningColor],\n  [Look.accentColor, DarkWarningColor],\n);\n\nconst DarkAlert = FeelVector.of(\n  [Look.statusColor, DarkAlertColor],\n  [Look.accentColor, DarkAlertColor],\n);\n\nconst DarkRaised = FeelVector.of(\n  [Look.mutedColor, DarkMutedColor.darker(1 / 3)],\n  [Look.neutralColor, DarkNeutralColor.darker(1 / 3)],\n\n  [Look.backgroundColor, DarkRaisedColor],\n);\n\nconst DarkCovered = FeelVector.of(\n  [Look.mutedColor, DarkMutedColor.darker(1 / 3)],\n  [Look.neutralColor, DarkNeutralColor.darker(1 / 3)],\n\n  [Look.backgroundColor, DarkCoveredColor],\n);\n\nconst DarkOpaque = FeelVector.of(\n  [Look.backgroundColor, DarkBackgroundColor],\n  [Look.borderColor, DarkBorderColor],\n);\n\nconst DarkFloating = FeelVector.of(\n  [Look.shadow, BoxShadow.create(0, 2, 4, 0, Color.black(0.5))],\n);\n\nconst DarkTransparent = FeelVector.of(\n  [Look.backgroundColor, DarkBackgroundColor.alpha(0)],\n  [Look.borderColor, DarkBorderColor.alpha(0)],\n);\n\nconst DarkTranslucent = FeelVector.of(\n  [Look.iconColor, Color.black(0.8)],\n  [Look.statusColor, Color.black(0.8)],\n  [Look.accentColor, Color.black(0.8)],\n\n  [Look.backgroundColor, Color.black(0.8)],\n  [Look.borderColor, Color.black(0.8)],\n);\n\nconst DarkDarker = FeelVector.of(\n  [Look.iconColor, Color.black(1)],\n  [Look.statusColor, Color.black(1)],\n  [Look.accentColor, Color.black(1)],\n);\n\nconst DarkLighter = FeelVector.of(\n  [Look.iconColor, Color.black(-1)],\n  [Look.statusColor, Color.black(-1)],\n  [Look.accentColor, Color.black(-1)],\n);\n\nconst DarkContrasted = FeelVector.of(\n  [Look.iconColor, Color.black(-1)],\n  [Look.statusColor, Color.black(-1)],\n  [Look.accentColor, Color.black(-1)],\n);\n\nconst DarkEmbossed = FeelVector.of(\n  [Look.iconColor, Color.black(2)],\n  [Look.statusColor, Color.black(2)],\n  [Look.accentColor, Color.black(2)],\n);\n\nconst DarkNested = FeelVector.of(\n  [Look.backgroundColor, Color.black(1 / 3)],\n  [Look.borderColor, Color.black(1 / 3)],\n);\n\nconst DarkHovering = FeelVector.of(\n  [Look.statusColor, Color.black(1)],\n  [Look.accentColor, Color.black(1)],\n\n  [Look.backgroundColor, Color.black(-2)],\n);\n\nconst DarkNavigating = FeelVector.of(\n  [Look.timing, Easing.cubicOut.withDuration(350)],\n);\n\nconst DarkTheme = ThemeMatrix.forCols(\n  [Feel.ambient, DarkAmbient],\n  [Feel.default, DarkDefault],\n\n  [Feel.primary, DarkPrimary],\n  [Feel.secondary, DarkSecondary],\n\n  [Feel.unselected, DarkUnselected],\n  [Feel.selected, DarkSelected],\n  [Feel.disabled, DarkDisabled],\n  [Feel.inactive, DarkInactive],\n  [Feel.warning, DarkWarning],\n  [Feel.alert, DarkAlert],\n\n  [Feel.darker, DarkDarker],\n  [Feel.lighter, DarkLighter],\n  [Feel.contrasted, DarkContrasted],\n\n  [Feel.raised, DarkRaised],\n  [Feel.covered, DarkCovered],\n\n  [Feel.opaque, DarkOpaque],\n  [Feel.floating, DarkFloating],\n  [Feel.transparent, DarkTransparent],\n  [Feel.translucent, DarkTranslucent],\n  [Feel.embossed, DarkEmbossed],\n  [Feel.nested, DarkNested],\n  [Feel.hovering, DarkHovering],\n\n  [Feel.navigating, DarkNavigating],\n);\n\nTheme.dark = DarkTheme;\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Easing} from \"@swim/util\";\nimport {Length} from \"@swim/math\";\nimport {Font, Color, BoxShadow} from \"@swim/style\";\nimport {Look} from \"../look/Look\";\nimport {Feel} from \"../feel/Feel\";\nimport {FeelVector} from \"../feel/FeelVector\";\nimport {Theme} from \"../theme/Theme\";\nimport {ThemeMatrix} from \"../theme/ThemeMatrix\";\n\nconst LightFont = Font.parse(\"14px -apple-system, system-ui, sans-serif\");\n\nconst LightColor = Color.parse(\"#4a4a4a\");\nconst LightIconColor = Color.parse(\"#4a4a4a\");\nconst LightAccentColor = Color.parse(\"#5c5d5e\");\nconst LightMutedColor = Color.parse(\"#989898\");\nconst LightNeutralColor = Color.parse(\"#808080\");\nconst LightSubduedColor = Color.parse(\"#d7d6d5\");\nconst LightFaintColor = Color.parse(\"#e0dedc\");\nconst LightHighlightColor = Color.black(0.05);\n\nconst LightBackgroundColor = Color.parse(\"#f9f8f6\");\nconst LightBorderColor = LightBackgroundColor.darker(1 / 2);\n\nconst LightRaisedColor = Color.parse(\"#f7f6f4\");\nconst LightCoveredColor = Color.parse(\"#f1efed\");\n\nconst LightPrimaryColor = Color.parse(\"#4fcfb3\");\nconst LightSecondaryColor = Color.parse(\"#008cc7\");\n\nconst LightDisabledColor = Color.parse(\"#7b7c7d\");\nconst LightInactiveColor = Color.parse(\"#7b7c7d\");\nconst LightWarningColor = Color.parse(\"#e6de65\");\nconst LightAlertColor = Color.parse(\"#df4616\");\n\nconst LightSpacing = Length.px(10);\n\nconst LightAmbient = FeelVector.of(\n  [Look.font, LightFont],\n\n  [Look.color, LightColor],\n  [Look.iconColor, LightIconColor],\n  [Look.statusColor, LightColor],\n  [Look.accentColor, LightAccentColor],\n  [Look.mutedColor, LightMutedColor],\n  [Look.neutralColor, LightNeutralColor],\n  [Look.subduedColor, LightSubduedColor],\n  [Look.faintColor, LightFaintColor],\n  [Look.highlightColor, LightHighlightColor],\n\n  [Look.backgroundColor, LightBackgroundColor],\n  [Look.borderColor, LightBorderColor],\n\n  [Look.spacing, LightSpacing],\n  [Look.timing, Easing.linear.withDuration(1000)],\n);\n\nconst LightDefault = FeelVector.of(\n  [Look.font, LightFont],\n\n  [Look.color, LightColor],\n  [Look.iconColor, LightIconColor],\n  [Look.statusColor, LightColor],\n  [Look.accentColor, LightAccentColor],\n  [Look.mutedColor, LightMutedColor],\n  [Look.neutralColor, LightNeutralColor],\n  [Look.subduedColor, LightSubduedColor],\n  [Look.faintColor, LightFaintColor],\n  [Look.highlightColor, LightHighlightColor],\n\n  [Look.backgroundColor, LightBackgroundColor],\n  [Look.borderColor, LightBorderColor],\n\n  [Look.spacing, LightSpacing],\n  [Look.timing, Easing.cubicOut.withDuration(250)],\n);\n\nconst LightPrimary = FeelVector.of(\n  [Look.accentColor, LightPrimaryColor],\n);\n\nconst LightSecondary = FeelVector.of(\n  [Look.accentColor, LightSecondaryColor],\n);\n\nconst LightUnselected = FeelVector.of(\n  [Look.color, LightMutedColor],\n  [Look.iconColor, LightMutedColor],\n  [Look.backgroundColor, LightBackgroundColor.darker(1 / 2)],\n);\n\nconst LightSelected = FeelVector.of(\n  [Look.color, LightColor],\n  [Look.iconColor, LightIconColor],\n  [Look.backgroundColor, LightBackgroundColor.darker(1 / 2)],\n);\n\nconst LightDisabled = FeelVector.of(\n  [Look.color, LightDisabledColor],\n  [Look.iconColor, LightDisabledColor],\n  [Look.statusColor, LightDisabledColor],\n  [Look.accentColor, LightDisabledColor],\n);\n\nconst LightInactive = FeelVector.of(\n  [Look.statusColor, LightInactiveColor],\n  [Look.accentColor, LightInactiveColor],\n);\n\nconst LightWarning = FeelVector.of(\n  [Look.statusColor, LightWarningColor],\n  [Look.accentColor, LightWarningColor],\n);\n\nconst LightAlert = FeelVector.of(\n  [Look.statusColor, LightAlertColor],\n  [Look.accentColor, LightAlertColor],\n);\n\nconst LightRaised = FeelVector.of(\n  [Look.mutedColor, LightMutedColor.darker(1 / 3)],\n  [Look.neutralColor, LightNeutralColor.darker(1 / 3)],\n\n  [Look.backgroundColor, LightRaisedColor],\n);\n\nconst LightCovered = FeelVector.of(\n  [Look.mutedColor, LightMutedColor.darker(1 / 3)],\n  [Look.neutralColor, LightNeutralColor.darker(1 / 3)],\n\n  [Look.backgroundColor, LightCoveredColor],\n);\n\nconst LightOpaque = FeelVector.of(\n  [Look.backgroundColor, LightBackgroundColor],\n  [Look.borderColor, LightBorderColor],\n);\n\nconst LightFloating = FeelVector.of(\n  [Look.shadow, BoxShadow.create(0, 2, 4, 0, Color.black(0.5))],\n);\n\nconst LightTransparent = FeelVector.of(\n  [Look.backgroundColor, LightBackgroundColor.alpha(0)],\n  [Look.borderColor, LightBorderColor.alpha(0)],\n);\n\nconst LightTranslucent = FeelVector.of(\n  [Look.iconColor, Color.black(0.8)],\n  [Look.statusColor, Color.black(0.8)],\n  [Look.accentColor, Color.black(0.8)],\n\n  [Look.backgroundColor, Color.black(0.8)],\n  [Look.borderColor, Color.black(0.8)],\n);\n\nconst LightDarker = FeelVector.of(\n  [Look.iconColor, Color.black(1)],\n  [Look.statusColor, Color.black(1)],\n  [Look.accentColor, Color.black(1)],\n);\n\nconst LightLighter = FeelVector.of(\n  [Look.iconColor, Color.black(-1)],\n  [Look.statusColor, Color.black(-1)],\n  [Look.accentColor, Color.black(-1)],\n);\n\nconst LightContrasted = FeelVector.of(\n  [Look.iconColor, Color.black(1)],\n  [Look.statusColor, Color.black(1)],\n  [Look.accentColor, Color.black(1)],\n);\n\nconst LightEmbossed = FeelVector.of(\n  [Look.iconColor, Color.black(1)],\n  [Look.statusColor, Color.black(1)],\n  [Look.accentColor, Color.black(1)],\n);\n\nconst LightNested = FeelVector.of(\n  [Look.backgroundColor, Color.black(1 / 24)],\n  [Look.borderColor, Color.black(1 / 24)],\n);\n\nconst LightHovering = FeelVector.of(\n  [Look.statusColor, Color.black(1 / 4)],\n  [Look.accentColor, Color.black(1 / 4)],\n\n  [Look.backgroundColor, Color.black(1 / 4)],\n);\n\nconst LightNavigating = FeelVector.of(\n  [Look.timing, Easing.cubicOut.withDuration(350)],\n);\n\nconst LightTheme = ThemeMatrix.forCols(\n  [Feel.ambient, LightAmbient],\n  [Feel.default, LightDefault],\n\n  [Feel.primary, LightPrimary],\n  [Feel.secondary, LightSecondary],\n\n  [Feel.unselected, LightUnselected],\n  [Feel.selected, LightSelected],\n  [Feel.disabled, LightDisabled],\n  [Feel.inactive, LightInactive],\n  [Feel.warning, LightWarning],\n  [Feel.alert, LightAlert],\n\n  [Feel.darker, LightDarker],\n  [Feel.lighter, LightLighter],\n  [Feel.contrasted, LightContrasted],\n\n  [Feel.raised, LightRaised],\n  [Feel.covered, LightCovered],\n\n  [Feel.opaque, LightOpaque],\n  [Feel.floating, LightFloating],\n  [Feel.transparent, LightTransparent],\n  [Feel.translucent, LightTranslucent],\n  [Feel.embossed, LightEmbossed],\n  [Feel.nested, LightNested],\n  [Feel.hovering, LightHovering],\n\n  [Feel.navigating, LightNavigating],\n);\n\nTheme.light = LightTheme;\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {ViewportColorScheme} from \"./ViewportColorScheme\";\nimport type {ViewportInsets} from \"./ViewportInsets\";\nimport type {ViewportArea} from \"./ViewportArea\";\n\n/** @public */\nexport interface Viewport {\n  readonly width: number;\n  readonly height: number;\n  readonly visual: ViewportArea;\n  readonly safeArea: ViewportInsets;\n  readonly orientation: OrientationType;\n  readonly colorScheme: ViewportColorScheme;\n}\n\n/** @public */\nexport const Viewport = (function () {\n  const Viewport = {} as {\n    detect(): Viewport;\n  };\n\n  Viewport.detect = function (): Viewport {\n    let insetTop = 0;\n    let insetRight = 0;\n    let insetBottom = 0;\n    let insetLeft = 0;\n    const documentWidth = document.documentElement.style.width;\n    const documentHeight = document.documentElement.style.height;\n    document.documentElement.style.width = \"100%\";\n    document.documentElement.style.height = \"100%\";\n    const div = document.createElement(\"div\");\n    div.style.setProperty(\"position\", \"fixed\");\n    div.style.setProperty(\"top\", \"0\");\n    div.style.setProperty(\"right\", \"0\");\n    div.style.setProperty(\"width\", window.innerWidth === document.documentElement.offsetWidth ? \"100%\" : \"100vw\");\n    div.style.setProperty(\"height\", window.innerHeight === document.documentElement.offsetHeight ? \"100%\" : \"100vh\");\n    div.style.setProperty(\"box-sizing\", \"border-box\");\n    div.style.setProperty(\"padding-top\", \"env(safe-area-inset-top)\");\n    div.style.setProperty(\"padding-right\", \"env(safe-area-inset-right)\");\n    div.style.setProperty(\"padding-bottom\", \"env(safe-area-inset-bottom)\");\n    div.style.setProperty(\"padding-left\", \"env(safe-area-inset-left)\");\n    div.style.setProperty(\"overflow\", \"hidden\");\n    div.style.setProperty(\"visibility\", \"hidden\");\n    document.body.appendChild(div);\n    const style = window.getComputedStyle(div);\n    const width = parseFloat(style.getPropertyValue(\"width\"));\n    const height = parseFloat(style.getPropertyValue(\"height\"));\n    let visualWidth = width;\n    let visualHeight = height;\n    let visualOffsetLeft = 0;\n    let visualOffsetTop = 0;\n    let visualPageLeft = 0;\n    let visualPageTop = 0;\n    let visualScale = 1;\n    if (window.visualViewport !== void 0) {\n      visualWidth = window.visualViewport.width;\n      visualHeight = window.visualViewport.height;\n      visualOffsetLeft = window.visualViewport.offsetLeft;\n      visualOffsetTop = window.visualViewport.offsetTop;\n      visualPageLeft = window.visualViewport.pageLeft;\n      visualPageTop = window.visualViewport.pageTop;\n      visualScale = window.visualViewport.scale;\n    }\n    const visual: ViewportArea = {\n      width: visualWidth,\n      height: visualHeight,\n      offsetLeft: visualOffsetLeft,\n      offsetTop: visualOffsetTop,\n      pageLeft: visualPageLeft,\n      pageTop: visualPageTop,\n      scale: visualScale,\n    };\n    if (typeof CSS !== \"undefined\" && typeof CSS.supports === \"function\"\n        && CSS.supports(\"padding-top: env(safe-area-inset-top)\")) {\n      insetTop = parseFloat(style.getPropertyValue(\"padding-top\"));\n      insetRight = parseFloat(style.getPropertyValue(\"padding-right\"));\n      insetBottom = parseFloat(style.getPropertyValue(\"padding-bottom\"));\n      insetLeft = parseFloat(style.getPropertyValue(\"padding-left\"));\n    }\n    document.body.removeChild(div);\n    document.documentElement.style.width = documentWidth;\n    document.documentElement.style.height = documentHeight;\n    const safeArea: ViewportInsets = {insetTop, insetRight, insetBottom, insetLeft};\n    let orientation: OrientationType | undefined =\n        (screen as any).msOrientation ||\n        (screen as any).mozOrientation ||\n        (screen.orientation || {}).type;\n    if (orientation === void 0) {\n      switch (window.orientation) {\n        case 0: orientation = \"portrait-primary\"; break;\n        case 180: orientation = \"portrait-secondary\"; break;\n        case -90: orientation = \"landscape-primary\"; break;\n        case 90: orientation = \"landscape-secondary\"; break;\n        default: orientation = \"landscape-primary\";\n      }\n    }\n    let colorScheme: ViewportColorScheme;\n    if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n      colorScheme = \"dark\";\n    } else if (window.matchMedia(\"(prefers-color-scheme: light)\").matches) {\n      colorScheme = \"light\";\n    } else {\n      colorScheme = \"no-preference\";\n    }\n    return {width, height, visual, safeArea, orientation, colorScheme};\n  };\n\n  return Viewport;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {R2Box} from \"@swim/math\";\nimport type {ViewportIdiom} from \"../viewport/ViewportIdiom\";\nimport {Viewport} from \"../viewport/Viewport\";\n\n/** @public */\nexport interface ViewContext {\n  readonly updateTime: number;\n\n  readonly viewportIdiom: ViewportIdiom;\n\n  readonly viewport: Viewport;\n\n  readonly viewFrame: R2Box;\n}\n\n/** @public */\nexport const ViewContext = (function () {\n  const ViewContext = {} as {\n    current: ViewContext | null;\n    create(): ViewContext;\n  };\n\n  ViewContext.current = null;\n\n  ViewContext.create = function (): ViewContext {\n    const viewport = Viewport.detect();\n    const viewFrame = new R2Box(0, 0, viewport.width, viewport.height);\n    return {\n      updateTime: performance.now(),\n      viewportIdiom: \"unspecified\",\n      viewport: viewport,\n      viewFrame: viewFrame,\n    };\n  };\n\n  return ViewContext;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, Lazy, ObserverType} from \"@swim/util\";\nimport {Service} from \"@swim/component\";\nimport {R2Box} from \"@swim/math\";\nimport type {ViewportIdiom} from \"./ViewportIdiom\";\nimport {Viewport} from \"./Viewport\";\nimport type {ViewportServiceObserver} from \"./ViewportServiceObserver\";\nimport {ViewContext} from \"../view/ViewContext\";\nimport {View} from \"../\"; // forward import\n\n/** @public */\nexport class ViewportService<V extends View = View> extends Service<V> {\n  constructor() {\n    super();\n    this.viewContext = ViewContext.create();\n    this.viewportResizeTimer = 0;\n    this.reorientationTimer = 0;\n\n    this.throttleScroll = this.throttleScroll.bind(this);\n    this.throttleResize = this.throttleResize.bind(this);\n    this.debounceViewportResize = this.debounceViewportResize.bind(this);\n    this.throttleViewportResize = this.throttleViewportResize.bind(this);\n    this.debounceReorientation = this.debounceReorientation.bind(this);\n    this.throttleReorientation = this.throttleReorientation.bind(this);\n  }\n\n  override readonly observerType?: Class<ViewportServiceObserver<V>>;\n\n  readonly viewContext: ViewContext;\n\n  get viewport(): Viewport {\n    return this.viewContext.viewport;\n  }\n\n  get viewportIdiom(): ViewportIdiom {\n    return this.viewContext.viewportIdiom;\n  }\n\n  /** @internal */\n  detectViewportIdiom(viewport: Viewport): ViewportIdiom | undefined {\n    if (viewport.width < 960 || viewport.height < 480) {\n      return \"mobile\";\n    } else {\n      return \"desktop\";\n    }\n  }\n\n  /** @internal */\n  updateViewportIdiom(viewport: Viewport): void {\n    let viewportIdiom: ViewportIdiom | undefined;\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.detectViewportIdiom !== void 0) {\n        viewportIdiom = observer.detectViewportIdiom(viewport, this) as ViewportIdiom | undefined;\n        if (viewportIdiom !== void 0) {\n          break;\n        }\n      }\n    }\n    if (viewportIdiom === void 0) {\n      viewportIdiom = this.detectViewportIdiom(viewport);\n    }\n    if (viewportIdiom !== void 0) {\n      this.setViewportIdiom(viewportIdiom);\n    }\n  }\n\n  setViewportIdiom(newViewportIdiom: ViewportIdiom): void {\n    const viewContext = this.viewContext;\n    const oldViewportIdiom = viewContext.viewportIdiom;\n    if (oldViewportIdiom !== newViewportIdiom) {\n      this.willSetViewportIdiom(newViewportIdiom, oldViewportIdiom);\n      (viewContext as Mutable<ViewContext>).viewportIdiom = newViewportIdiom;\n      this.onSetViewportIdiom(newViewportIdiom, oldViewportIdiom);\n      this.didSetViewportIdiom(newViewportIdiom, oldViewportIdiom);\n    }\n  }\n\n  protected willSetViewportIdiom(newViewportIdiom: ViewportIdiom, oldViewportIdiom: ViewportIdiom): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceWillSetViewportIdiom !== void 0) {\n        observer.serviceWillSetViewportIdiom(newViewportIdiom, oldViewportIdiom, this);\n      }\n    }\n  }\n\n  protected onSetViewportIdiom(newViewportIdiom: ViewportIdiom, oldViewportIdiom: ViewportIdiom): void {\n    const roots = this.roots;\n    for (let i = 0, n = roots.length; i < n; i += 1) {\n      roots[i]!.requireUpdate(View.NeedsLayout);\n    }\n  }\n\n  protected didSetViewportIdiom(newViewportIdiom: ViewportIdiom, oldViewportIdiom: ViewportIdiom): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceDidSetViewportIdiom !== void 0) {\n        observer.serviceDidSetViewportIdiom(newViewportIdiom, oldViewportIdiom, this);\n      }\n    }\n  }\n\n  protected willReorient(orientation: OrientationType): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceWillReorient !== void 0) {\n        observer.serviceWillReorient(orientation, this);\n      }\n    }\n  }\n\n  protected onReorient(orientation: OrientationType): void {\n    // hook\n  }\n\n  protected didReorient(orientation: OrientationType): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceDidReorient !== void 0) {\n        observer.serviceDidReorient(orientation, this);\n      }\n    }\n  }\n\n  protected override onObserve(observer: ObserverType<this>): void {\n    super.onObserve(observer);\n    if (this.attached) {\n      this.updateViewportIdiom(this.viewport);\n    }\n  }\n\n  protected override onAttach(): void {\n    super.onAttach();\n    this.attachEvents();\n    this.updateViewportIdiom(this.viewport);\n  }\n\n  protected override onDetach(): void {\n    this.detachEvents();\n    super.onDetach();\n  }\n\n  protected attachEvents(): void {\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"scroll\", this.throttleScroll, {passive: true});\n      window.addEventListener(\"resize\", this.throttleResize);\n      window.addEventListener(\"orientationchange\", this.debounceReorientation);\n      if (window.visualViewport !== void 0) {\n        window.visualViewport.addEventListener('resize', this.debounceViewportResize);\n      }\n    }\n  }\n\n  protected detachEvents(): void {\n    if (typeof window !== \"undefined\") {\n      window.removeEventListener(\"scroll\", this.throttleScroll);\n      window.removeEventListener(\"resize\", this.throttleResize);\n      window.removeEventListener(\"orientationchange\", this.debounceReorientation);\n      if (window.visualViewport !== void 0) {\n        window.visualViewport.removeEventListener('resize', this.debounceViewportResize);\n      }\n    }\n  }\n\n  /** @internal */\n  throttleScroll(): void {\n    const roots = this.roots;\n    for (let i = 0, n = roots.length; i < n; i += 1) {\n      roots[i]!.requireUpdate(View.NeedsScroll);\n    }\n  }\n\n  /** @internal */\n  throttleResize(): void {\n    const viewport = Viewport.detect();\n    const viewFrame = new R2Box(0, 0, viewport.width, viewport.height);\n    (this.viewContext as Mutable<ViewContext>).viewport = viewport;\n    (this.viewContext as Mutable<ViewContext>).viewFrame = viewFrame;\n    this.updateViewportIdiom(viewport);\n\n    const roots = this.roots;\n    for (let i = 0, n = roots.length; i < n; i += 1) {\n      roots[i]!.requireUpdate(View.NeedsResize | View.NeedsLayout);\n    }\n  }\n\n  /** @internal */\n  viewportResizeTimer: number;\n\n  /** @internal */\n  protected debounceViewportResize(): void {\n    if (this.viewportResizeTimer !== 0) {\n      clearTimeout(this.viewportResizeTimer);\n      this.viewportResizeTimer = 0;\n    }\n    this.viewportResizeTimer = setTimeout(this.throttleViewportResize, ViewportService.ViewportResizeDelay) as any;\n  }\n\n  /** @internal */\n  protected throttleViewportResize(): void {\n    if (this.viewportResizeTimer !== 0) {\n      clearTimeout(this.viewportResizeTimer);\n      this.viewportResizeTimer = 0;\n    }\n\n    const viewport = Viewport.detect();\n    const viewFrame = new R2Box(0, 0, viewport.width, viewport.height);\n    (this.viewContext as Mutable<ViewContext>).viewport = viewport;\n    (this.viewContext as Mutable<ViewContext>).viewFrame = viewFrame;\n    this.updateViewportIdiom(viewport);\n\n    const roots = this.roots;\n    for (let i = 0, n = roots.length; i < n; i += 1) {\n      roots[i]!.requireUpdate(View.NeedsResize | View.NeedsScroll | View.NeedsLayout);\n    }\n  }\n\n  /** @internal */\n  reorientationTimer: number;\n\n  /** @internal */\n  protected debounceReorientation(): void {\n    if (this.reorientationTimer !== 0) {\n      clearTimeout(this.reorientationTimer);\n      this.reorientationTimer = 0;\n    }\n    this.reorientationTimer = setTimeout(this.throttleReorientation, ViewportService.ReorientationDelay) as any;\n  }\n\n  /** @internal */\n  protected throttleReorientation(): void {\n    if (this.reorientationTimer !== 0) {\n      clearTimeout(this.reorientationTimer);\n      this.reorientationTimer = 0;\n    }\n\n    const viewport = Viewport.detect();\n    const viewFrame = new R2Box(0, 0, viewport.width, viewport.height);\n    (this.viewContext as Mutable<ViewContext>).viewport = viewport;\n    (this.viewContext as Mutable<ViewContext>).viewFrame = viewFrame;\n    this.willReorient(viewport.orientation);\n    this.updateViewportIdiom(viewport);\n    this.onReorient(viewport.orientation);\n    this.didReorient(viewport.orientation);\n\n    const roots = this.roots;\n    for (let i = 0, n = roots.length; i < n; i += 1) {\n      roots[i]!.requireUpdate(View.NeedsResize | View.NeedsScroll | View.NeedsLayout);\n    }\n  }\n\n  /** @internal */\n  static ViewportResizeDelay: number = 200;\n  /** @internal */\n  static ReorientationDelay: number = 100;\n\n  @Lazy\n  static global<V extends View>(): ViewportService<V> {\n    return new ViewportService();\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ProviderClass, Provider} from \"@swim/component\";\nimport type {ViewportIdiom} from \"./ViewportIdiom\";\nimport type {Viewport} from \"./Viewport\";\nimport {ViewportService} from \"./ViewportService\";\nimport type {ViewContext} from \"../view/ViewContext\";\nimport type {View} from \"../view/View\";\n\n/** @public */\nexport interface ViewportProvider<V extends View, S extends ViewportService<V> | null | undefined = ViewportService<V>> extends Provider<V, S> {\n  get viewContext(): ViewContext;\n\n  get viewport(): Viewport;\n\n  get viewportIdiom(): ViewportIdiom;\n\n  setViewportIdiom(viewportIdiom: ViewportIdiom): void;\n\n  createService(): S;\n}\n\n/** @public */\nexport const ViewportProvider = (function (_super: typeof Provider) {\n  const ViewportProvider = _super.extend(\"ViewportProvider\") as ProviderClass<ViewportProvider<any, any>>;\n\n  Object.defineProperty(ViewportProvider.prototype, \"viewContext\", {\n    get<V extends View, S extends ViewportService<V> | null | undefined>(this: ViewportProvider<V, S>): ViewContext {\n      let service: ViewportService<V> | null | undefined = this.service;\n      if (service === void 0 || service === null) {\n        service = ViewportService.global();\n      }\n      return service.viewContext;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(ViewportProvider.prototype, \"viewport\", {\n    get<V extends View, S extends ViewportService<V> | null | undefined>(this: ViewportProvider<V, S>): Viewport {\n      let service: ViewportService<V> | null | undefined = this.service;\n      if (service === void 0 || service === null) {\n        service = ViewportService.global();\n      }\n      return service.viewport;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(ViewportProvider.prototype, \"viewportIdiom\", {\n    get<V extends View, S extends ViewportService<V> | null | undefined>(this: ViewportProvider<V, S>): ViewportIdiom {\n      let service: ViewportService<V> | null | undefined = this.service;\n      if (service === void 0 || service === null) {\n        service = ViewportService.global();\n      }\n      return service.viewportIdiom;\n    },\n    configurable: true,\n  });\n\n  ViewportProvider.prototype.setViewportIdiom = function <V extends View, S extends ViewportService<V> | null | undefined>(this: ViewportProvider<V, S>, viewportIdiom: ViewportIdiom): void {\n    let service: ViewportService<V> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = ViewportService.global();\n    }\n    service.setViewportIdiom(viewportIdiom);\n  }\n\n  ViewportProvider.prototype.createService = function <V extends View, S extends ViewportService<V> | null | undefined>(this: ViewportProvider<V, S>): S {\n    return ViewportService.global() as S;\n  }\n\n  return ViewportProvider;\n})(Provider);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, Lazy} from \"@swim/util\";\nimport {Service} from \"@swim/component\";\nimport type {DisplayServiceObserver} from \"./DisplayServiceObserver\";\nimport type {ViewContext} from \"../view/ViewContext\";\nimport {ViewFlags, View} from \"../\"; // forward import\n\n/** @public */\nexport class DisplayService<V extends View = View> extends Service<V> {\n  constructor() {\n    super();\n    this.flags = 0;\n    this.updateDelay = DisplayService.MinUpdateDelay;\n    this.processTimer = 0;\n    this.displayFrame = 0;\n\n    this.runProcessPass = this.runProcessPass.bind(this);\n    this.runDisplayPass = this.runDisplayPass.bind(this);\n    this.onVisibilityChange = this.onVisibilityChange.bind(this);\n  }\n\n  override readonly observerType?: Class<DisplayServiceObserver<V>>;\n\n  /** @internal */\n  readonly flags: ViewFlags;\n\n  /** @internal */\n  setFlags(flags: ViewFlags): void {\n    (this as Mutable<this>).flags = flags;\n  }\n\n  updatedViewContext(viewContext: ViewContext): ViewContext {\n    (viewContext as Mutable<ViewContext>).updateTime = performance.now();\n    return viewContext;\n  }\n\n  /** @internal */\n  updateDelay: number;\n\n  protected needsUpdate(updateFlags: ViewFlags, immediate: boolean): ViewFlags {\n    return updateFlags;\n  }\n\n  requestUpdate(targetView: View, updateFlags: ViewFlags, immediate: boolean): void {\n    updateFlags = this.needsUpdate(updateFlags, immediate);\n    let deltaUpdateFlags = this.flags & ~updateFlags & View.UpdateMask;\n    if ((updateFlags & View.ProcessMask) !== 0) {\n      deltaUpdateFlags |= View.NeedsProcess;\n    }\n    if ((updateFlags & View.DisplayMask) !== 0) {\n      deltaUpdateFlags |= View.NeedsDisplay;\n    }\n    this.setFlags(this.flags | deltaUpdateFlags);\n    if (immediate && (this.flags & (View.ProcessingFlag | View.DisplayingFlag)) === 0 && this.updateDelay <= DisplayService.MaxProcessInterval) {\n      this.runImmediatePass();\n    } else {\n      this.scheduleUpdate();\n    }\n  }\n\n  protected scheduleUpdate(): void {\n    const flags = this.flags;\n    if ((flags & View.ProcessingFlag) === 0 && (flags & View.ProcessMask) !== 0) {\n      this.scheduleProcessPass(this.updateDelay);\n    } else if ((flags & View.DisplayingFlag) === 0 && (flags & View.DisplayMask) !== 0) {\n      this.scheduleDisplayPass();\n    }\n  }\n\n  protected cancelUpdate(): void {\n    this.cancelProcessPass();\n    this.cancelDisplayPass();\n  }\n\n  protected runImmediatePass(): void {\n    if ((this.flags & View.ProcessMask) !== 0) {\n      this.cancelUpdate();\n      this.runProcessPass(true);\n    }\n    if ((this.flags & View.DisplayMask) !== 0 && this.updateDelay <= DisplayService.MaxProcessInterval) {\n      this.cancelUpdate();\n      this.runDisplayPass(void 0, true);\n    }\n  }\n\n  /** @internal */\n  processTimer: number;\n\n  protected scheduleProcessPass(updateDelay: number): void {\n    if (this.processTimer === 0) {\n      this.processTimer = setTimeout(this.runProcessPass, updateDelay) as any;\n    }\n  }\n\n  protected cancelProcessPass(): void {\n    if (this.processTimer !== 0) {\n      clearTimeout(this.processTimer);\n      this.processTimer = 0;\n    }\n  }\n\n  protected runProcessPass(immediate: boolean = false): void {\n    this.setFlags(this.flags & ~View.ProcessMask | View.ProcessingFlag);\n    try {\n      const t0 = performance.now();\n      const roots = this.roots;\n      for (let i = 0; i < roots.length; i += 1) {\n        const root = roots[i]!;\n        if ((root.flags & View.ProcessMask) !== 0) {\n          const viewContext = root.viewportProvider.viewContext;\n          (viewContext as Mutable<ViewContext>).updateTime = t0;\n          root.cascadeProcess(0, viewContext);\n        }\n      }\n\n      const t1 = performance.now();\n      let processDelay = Math.max(DisplayService.MinProcessInterval, this.updateDelay);\n      if (t1 - t0 > processDelay) {\n        this.updateDelay = Math.min(Math.max(2, this.updateDelay * 2), DisplayService.MaxUpdateDelay);\n      } else {\n        this.updateDelay = Math.min(DisplayService.MinUpdateDelay, this.updateDelay / 2);\n      }\n\n      this.cancelProcessPass();\n      if ((this.flags & View.DisplayMask) !== 0) {\n        this.scheduleDisplayPass();\n      } else if ((this.flags & View.ProcessMask) !== 0) {\n        if (immediate) {\n          processDelay = Math.max(DisplayService.MaxProcessInterval, processDelay);\n        }\n        this.cancelDisplayPass();\n        this.scheduleProcessPass(processDelay);\n      }\n    } finally {\n      this.setFlags(this.flags & ~View.ProcessingFlag);\n    }\n  }\n\n  /** @internal */\n  displayFrame: number;\n\n  protected scheduleDisplayPass(): void {\n    if (this.displayFrame === 0) {\n      this.displayFrame = requestAnimationFrame(this.runDisplayPass);\n    }\n  }\n\n  protected cancelDisplayPass(): void {\n    if (this.displayFrame !== 0) {\n      cancelAnimationFrame(this.displayFrame);\n      this.displayFrame = 0;\n    }\n  }\n\n  protected runDisplayPass(time?: number, immediate: boolean = false): void {\n    this.setFlags(this.flags & ~View.DisplayMask | View.DisplayingFlag);\n    try {\n      if (time === void 0) {\n        time = performance.now();\n      }\n      const roots = this.roots;\n      for (let i = 0; i < roots.length; i += 1) {\n        const root = roots[i]!;\n        if ((root.flags & View.DisplayMask) !== 0) {\n          const viewContext = root.viewportProvider.viewContext;\n          (viewContext as Mutable<ViewContext>).updateTime = time;\n          root.cascadeDisplay(0, viewContext);\n        }\n      }\n\n      this.cancelDisplayPass();\n      if ((this.flags & View.ProcessMask) !== 0) {\n        let processDelay = this.updateDelay;\n        if (immediate) {\n          processDelay = Math.max(DisplayService.MaxProcessInterval, processDelay);\n        }\n        this.scheduleProcessPass(processDelay);\n      } else if ((this.flags & View.DisplayMask) !== 0) {\n        this.cancelProcessPass();\n        this.scheduleDisplayPass();\n      }\n    } finally {\n      this.setFlags(this.flags & ~View.DisplayingFlag);\n    }\n  }\n\n  get powerFlags(): ViewFlags {\n    return View.NeedsResize | View.NeedsScroll;\n  }\n\n  power(): void {\n    const roots = this.roots;\n    for (let i = 0, n = roots.length; i < n; i += 1) {\n      const root = roots[i]!;\n      root.requireUpdate(this.powerFlags);\n    }\n  }\n\n  unpower(): void {\n    this.cancelUpdate();\n    this.updateDelay = DisplayService.MinUpdateDelay;\n  }\n\n  protected override onAttachRoot(root: V): void {\n    super.onAttachRoot(root);\n    this.requestUpdate(root, root.flags & View.UpdateMask, false);\n  }\n\n  protected override onAttach(): void {\n    super.onAttach();\n    this.attachEvents();\n  }\n\n  protected override onDetach(): void {\n    this.detachEvents();\n    super.onDetach();\n  }\n\n  protected attachEvents(): void {\n    if (typeof document !== \"undefined\") {\n      document.addEventListener(\"visibilitychange\", this.onVisibilityChange);\n    }\n  }\n\n  protected detachEvents(): void {\n    if (typeof document !== \"undefined\") {\n      document.removeEventListener(\"visibilitychange\", this.onVisibilityChange);\n    }\n  }\n\n  /** @internal */\n  protected onVisibilityChange(): void {\n    if (document.visibilityState === \"visible\") {\n      this.power();\n    } else {\n      this.unpower();\n    }\n  }\n\n  /** @internal */\n  static MinUpdateDelay: number = 0;\n  /** @internal */\n  static MaxUpdateDelay: number = 167;\n  /** @internal */\n  static MinProcessInterval: number = 12;\n  /** @internal */\n  static MaxProcessInterval: number = 33;\n\n  @Lazy\n  static global<V extends View>(): DisplayService<V> {\n    return new DisplayService();\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ProviderClass, Provider} from \"@swim/component\";\nimport {DisplayService} from \"./DisplayService\";\nimport type {ViewContext} from \"../view/ViewContext\";\nimport type {ViewFlags, View} from \"../view/View\";\n\n/** @public */\nexport interface DisplayProvider<V extends View, S extends DisplayService<V> | null | undefined = DisplayService<V>> extends Provider<V, S> {\n  updatedViewContext(viewContext: ViewContext): ViewContext;\n\n  requestUpdate(target: View, updateFlags: ViewFlags, immediate: boolean): void;\n\n  createService(): S;\n}\n\n/** @public */\nexport const DisplayProvider = (function (_super: typeof Provider) {\n  const DisplayProvider = _super.extend(\"DisplayProvider\") as ProviderClass<DisplayProvider<any, any>>;\n\n  DisplayProvider.prototype.updatedViewContext = function <V extends View, S extends DisplayService<V> | null | undefined>(this: DisplayProvider<V, S>, viewContext: ViewContext): ViewContext {\n    let service: DisplayService<V> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = DisplayService.global();\n    }\n    return service.updatedViewContext(viewContext);\n  };\n\n  DisplayProvider.prototype.requestUpdate = function <V extends View, S extends DisplayService<V> | null | undefined>(this: DisplayProvider<V, S>, target: View, updateFlags: ViewFlags, immediate: boolean): void {\n    let service: DisplayService<V> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = DisplayService.global();\n    }\n    service.requestUpdate(target, updateFlags, immediate);\n  };\n\n  DisplayProvider.prototype.createService = function <V extends View, S extends DisplayService<V> | null | undefined>(this: DisplayProvider<V, S>): S {\n    return DisplayService.global() as S;\n  };\n\n  return DisplayProvider;\n})(Provider);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, Lazy} from \"@swim/util\";\nimport {Service} from \"@swim/component\";\nimport {ConstraintVariable, Constraint, ConstraintContext, ConstraintSolver} from \"@swim/constraint\";\nimport type {LayoutServiceObserver} from \"./LayoutServiceObserver\";\nimport type {View} from \"../view/View\";\n\n/** @public */\nexport class LayoutService<V extends View = View> extends Service<V> implements ConstraintContext {\n  constructor() {\n    super();\n    this.solver = this.createSolver();\n  }\n\n  override readonly observerType?: Class<LayoutServiceObserver<V>>;\n\n  readonly solver: ConstraintSolver;\n\n  /** @internal */\n  protected createSolver(): ConstraintSolver {\n    return new ConstraintSolver();\n  }\n\n  /** @override */\n  activateConstraint(constraint: Constraint): void {\n    this.solver.addConstraint(constraint);\n  }\n\n  /** @override */\n  deactivateConstraint(constraint: Constraint): void {\n    this.solver.removeConstraint(constraint);\n  }\n\n  /** @override */\n  activateConstraintVariable(variable: ConstraintVariable): void {\n    this.solver.addConstraintVariable(variable);\n  }\n\n  /** @override */\n  deactivateConstraintVariable(variable: ConstraintVariable): void {\n    this.solver.removeConstraintVariable(variable);\n  }\n\n  /** @override */\n  setConstraintVariable(variable: ConstraintVariable, value: number): void {\n    this.solver.setConstraintVariable(variable, value);\n  }\n\n  @Lazy\n  static global<V extends View>(): LayoutService<V> {\n    return new LayoutService();\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ProviderClass, Provider} from \"@swim/component\";\nimport {LayoutService} from \"./LayoutService\";\nimport type {View} from \"../view/View\";\n\n/** @public */\nexport interface LayoutProvider<V extends View, S extends LayoutService<V> | null | undefined = LayoutService<V>> extends Provider<V, S> {\n  createService(): S;\n}\n\n/** @public */\nexport const LayoutProvider = (function (_super: typeof Provider) {\n  const LayoutProvider = _super.extend(\"LayoutProvider\") as ProviderClass<LayoutProvider<any, any>>;\n\n  LayoutProvider.prototype.createService = function <V extends View, S extends LayoutService<V> | null | undefined>(this: LayoutProvider<V, S>): S {\n    return LayoutService.global() as S;\n  };\n\n  return LayoutProvider;\n})(Provider);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, Lazy, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, Service} from \"@swim/component\";\nimport {Look, Mood, MoodVector, Theme, ThemeMatrix} from \"@swim/theme\";\nimport {Viewport} from \"../viewport/Viewport\";\nimport type {ThemeServiceObserver} from \"./ThemeServiceObserver\";\nimport {View} from \"../\"; // forward import\n\n/** @public */\nexport class ThemeService<V extends View = View> extends Service<V> {\n  constructor() {\n    super();\n    this.mood = this.initMood();\n    this.theme = this.initTheme();\n  }\n\n  override readonly observerType?: Class<ThemeServiceObserver<V>>;\n\n  readonly mood: MoodVector;\n\n  protected initMood(): MoodVector {\n    return Mood.default;\n  }\n\n  setMood(mood: MoodVector): void {\n    (this as Mutable<this>).mood = mood;\n    this.applyTheme(this.theme, mood);\n    const roots = this.roots;\n    for (let i = 0, n = roots.length; i < n; i += 1) {\n      const root = roots[i]!;\n      if (root.mood.hasAffinity(Affinity.Intrinsic)) {\n        root.mood.setValue(mood, Affinity.Intrinsic);\n        root.requireUpdate(View.NeedsChange);\n      }\n    }\n  }\n\n  readonly theme: ThemeMatrix;\n\n  protected initTheme(): ThemeMatrix {\n    const viewport = Viewport.detect();\n    const colorScheme = viewport.colorScheme;\n    if (colorScheme === \"dark\") {\n      return Theme.dark;\n    } else {\n      return Theme.light;\n    }\n  }\n\n  setTheme(theme: ThemeMatrix): void {\n    (this as Mutable<this>).theme = theme;\n    this.applyTheme(theme, this.mood);\n    const roots = this.roots;\n    for (let i = 0, n = roots.length; i < n; i += 1) {\n      const root = roots[i]!;\n      if (root.theme.hasAffinity(Affinity.Intrinsic)) {\n        root.theme.setValue(theme, Affinity.Intrinsic);\n        root.requireUpdate(View.NeedsChange);\n      }\n    }\n  }\n\n  protected applyTheme(theme: ThemeMatrix, mood: MoodVector, timing?: AnyTiming | boolean): void {\n    if (timing === void 0 || timing === true) {\n      timing = theme.getOr(Look.timing, Mood.ambient, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n    this.willApplyTheme(theme, mood, timing as Timing | boolean);\n    this.onApplyTheme(theme, mood, timing as Timing | boolean);\n    this.didApplyTheme(theme, mood, timing as Timing | boolean);\n  }\n\n  protected willApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceWillApplyTheme !== void 0) {\n        observer.serviceWillApplyTheme(theme, mood, timing, this);\n      }\n    }\n  }\n\n  protected onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    // hook\n  }\n\n  protected didApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceDidApplyTheme !== void 0) {\n        observer.serviceDidApplyTheme(theme, mood, timing, this);\n      }\n    }\n  }\n\n  @Lazy\n  static global<V extends View>(): ThemeService<V> {\n    return new ThemeService();\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ProviderClass, Provider} from \"@swim/component\";\nimport type {MoodVector, ThemeMatrix} from \"@swim/theme\";\nimport {ThemeService} from \"./ThemeService\";\nimport type {View} from \"../view/View\";\n\n/** @public */\nexport interface ThemeProvider<V extends View, S extends ThemeService<V> | null | undefined = ThemeService<V>> extends Provider<V, S> {\n  get mood(): MoodVector;\n\n  setMood(mood: MoodVector): void;\n\n  get theme(): ThemeMatrix;\n\n  setTheme(theme: ThemeMatrix): void;\n\n  createService(): S;\n}\n\n/** @public */\nexport const ThemeProvider = (function (_super: typeof Provider) {\n  const ThemeProvider = _super.extend(\"ThemeProvider\") as ProviderClass<ThemeProvider<any, any>>;\n\n  Object.defineProperty(ThemeProvider.prototype, \"mood\", {\n    get<V extends View, S extends ThemeService<V>>(this: ThemeProvider<V, S>): MoodVector {\n      let service: ThemeService<V> | null | undefined = this.service;\n      if (service === void 0 || service === null) {\n        service = ThemeService.global();\n      }\n      return service.mood;\n    },\n    configurable: true,\n  });\n\n  ThemeProvider.prototype.setMood = function <V extends View, S extends ThemeService<V>>(this: ThemeProvider<V, S>, mood: MoodVector): void {\n    let service: ThemeService<V> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = ThemeService.global();\n    }\n    service.setMood(mood);\n  };\n\n  Object.defineProperty(ThemeProvider.prototype, \"theme\", {\n    get<V extends View, S extends ThemeService<V>>(this: ThemeProvider<V, S>): ThemeMatrix {\n      let service: ThemeService<V> | null | undefined = this.service;\n      if (service === void 0 || service === null) {\n        service = ThemeService.global();\n      }\n      return service.theme;\n    },\n    configurable: true,\n  });\n\n  ThemeProvider.prototype.setTheme = function <V extends View, S extends ThemeService<V>>(this: ThemeProvider<V, S>, theme: ThemeMatrix): void {\n    let service: ThemeService<V> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = ThemeService.global();\n    }\n    service.setTheme(theme);\n  };\n\n  ThemeProvider.prototype.createService = function <V extends View, S extends ThemeService<V> | null | undefined>(this: ThemeProvider<V, S>): S {\n    return ThemeService.global() as S;\n  };\n\n  return ThemeProvider;\n})(Provider);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {AnyTiming} from \"@swim/util\";\nimport type {View} from \"../view/View\";\n\n/** @public */\nexport interface ModalOptions {\n  modal?: boolean | number;\n  multi?: boolean;\n}\n\n/** @public */\nexport type ModalState = \"hidden\" | \"showing\" | \"shown\" | \"hiding\";\n\n/** @public */\nexport interface Modal {\n  readonly modalView: View | null;\n\n  readonly modalState: ModalState;\n\n  readonly modality: boolean | number;\n\n  showModal(options: ModalOptions, timing?: AnyTiming | boolean): void;\n\n  hideModal(timing?: AnyTiming | boolean): void;\n}\n\n/** @public */\nexport const Modal = (function () {\n  const Modal = {} as {\n    is(object: unknown): object is Modal;\n  };\n\n  Modal.is = function (object: unknown): object is Modal {\n    if (typeof object === \"object\" && object !== null) {\n      const modal = object as Modal;\n      return \"modalView\" in modal\n          && \"modalState\" in modal\n          && \"modality\" in modal\n          && typeof modal.showModal === \"function\"\n          && typeof modal.hideModal === \"function\";\n    }\n    return false;\n  };\n\n  return Modal;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, Lazy, Arrays} from \"@swim/util\";\nimport {Service} from \"@swim/component\";\nimport type {ModalOptions, Modal} from \"./Modal\";\nimport type {ModalServiceObserver} from \"./ModalServiceObserver\";\nimport type {View} from \"../view/View\";\n\n/** @public */\nexport class ModalService<V extends View = View> extends Service<V> {\n  constructor() {\n    super();\n    this.modals = Arrays.empty;\n    this.modality = 0;\n    this.matteView = null;\n    this.onClick = this.onClick.bind(this);\n  }\n\n  /** @override */\n  override readonly observerType?: Class<ModalServiceObserver<V>>;\n\n  readonly modals: ReadonlyArray<Modal>;\n\n  isModal(): boolean {\n    return this.modality !== 0;\n  }\n\n  readonly modality: number;\n\n  readonly matteView: View | null;\n\n  setMatteView(matteView: View | null): void {\n    (this as Mutable<this>).matteView = matteView;\n  }\n\n  protected insertModalView(modalView: View): void {\n    const matteView = this.matteView;\n    if (matteView !== null) {\n      matteView.appendChild(modalView);\n    } else {\n      const serviceClass = this.constructor as typeof ModalService;\n      serviceClass.insertModalView(modalView);\n    }\n  }\n\n  presentModal(modal: Modal, options: ModalOptions = {}): void {\n    const oldModals = this.modals;\n    const newModals = Arrays.inserted(modal, oldModals);\n    if (oldModals !== newModals) {\n      if (!options.multi) {\n        this.dismissModals();\n      }\n      this.willPresentModal(modal, options);\n      (this as Mutable<this>).modals = newModals;\n      const modalView = modal.modalView;\n      if (modalView !== null && !modalView.mounted) {\n        this.insertModalView(modalView);\n      }\n      modal.showModal(options, true);\n      this.onPresentModal(modal, options);\n      this.updateModality();\n      this.didPresentModal(modal, options);\n    }\n  }\n\n  protected willPresentModal(modal: Modal, options: ModalOptions): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceWillPresentModal !== void 0) {\n        observer.serviceWillPresentModal(modal, options, this);\n      }\n    }\n  }\n\n  protected onPresentModal(modal: Modal, options: ModalOptions): void {\n    // hook\n  }\n\n  protected didPresentModal(modal: Modal, options: ModalOptions): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceDidPresentModal !== void 0) {\n        observer.serviceDidPresentModal(modal, options, this);\n      }\n    }\n  }\n\n  dismissModal(modal: Modal): void {\n    const oldModals = this.modals;\n    const newModals = Arrays.removed(modal, oldModals);\n    if (oldModals !== newModals) {\n      this.willDismissModal(modal);\n      (this as Mutable<this>).modals = newModals;\n      modal.hideModal(true);\n      this.onDismissModal(modal);\n      this.updateModality();\n      this.didDismissModal(modal);\n    }\n  }\n\n  protected willDismissModal(modal: Modal): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceWillDismissModal !== void 0) {\n        observer.serviceWillDismissModal(modal, this);\n      }\n    }\n  }\n\n  protected onDismissModal(modal: Modal): void {\n    // hook\n  }\n\n  protected didDismissModal(modal: Modal): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceDidDismissModal !== void 0) {\n        observer.serviceDidDismissModal(modal, this);\n      }\n    }\n  }\n\n  dismissModals(): void {\n    const modals = this.modals;\n    for (let i = 0, n = modals.length; i < n; i += 1) {\n      this.dismissModal(this.modals[i]!);\n    }\n  }\n\n  toggleModal(modal: Modal, options?: ModalOptions): void {\n    const modalState = modal.modalState;\n    if (modalState === \"hidden\" || modalState === \"hiding\") {\n      this.presentModal(modal, options);\n    } else if (modalState === \"shown\" || modalState === \"showing\") {\n      this.dismissModal(modal);\n    }\n  }\n\n  updateModality(): void {\n    const oldModality = this.modality;\n    let newModality = 0;\n    const modals = this.modals;\n    for (let i = 0, n = modals.length; i < n; i += 1) {\n      const modal = modals[i]!;\n      const modality = +modal.modality;\n      newModality = Math.min(Math.max(newModality, modality), 1);\n    }\n    if (oldModality !== newModality) {\n      this.willUpdateModality(newModality, oldModality);\n      (this as Mutable<this>).modality = newModality;\n      this.onUpdateModality(newModality, oldModality);\n      this.didUpdateModality(newModality, oldModality);\n    }\n  }\n\n  protected willUpdateModality(newModality: number, oldModality: number): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceWillUpdateModality !== void 0) {\n        observer.serviceWillUpdateModality(newModality, oldModality, this);\n      }\n    }\n  }\n\n  protected onUpdateModality(newModality: number, oldModality: number): void {\n    // hook\n  }\n\n  protected didUpdateModality(newModality: number, oldModality: number): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceDidUpdateModality !== void 0) {\n        observer.serviceDidUpdateModality(newModality, oldModality, this);\n      }\n    }\n  }\n\n  displaceModals(event: Event | null): void {\n    const handled = this.willDisplaceModals(event);\n    if (!handled) {\n      this.onDisplaceModals(event);\n      this.didDisplaceModals(event);\n    }\n  }\n\n  protected willDisplaceModals(event: Event | null): boolean {\n    let handled: boolean | undefined;\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceWillDisplaceModals !== void 0) {\n        handled = observer.serviceWillDisplaceModals(event, this) as boolean | undefined;\n      }\n    }\n    return handled !== void 0 ? handled : false;\n  }\n\n  protected onDisplaceModals(event: Event | null): void {\n    const modals = this.modals;\n    let i = 0;\n    while (i < modals.length) {\n      const modal = modals[i]!;\n      if (modal.modalState === \"shown\") {\n        this.dismissModal(modal);\n      } else {\n        i += 1;\n      }\n    }\n  }\n\n  protected didDisplaceModals(event: Event | null): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceDidDisplaceModals !== void 0) {\n        observer.serviceDidDisplaceModals(event, this);\n      }\n    }\n  }\n\n  protected override onAttachRoot(root: V): void {\n    super.onAttachRoot(root);\n    this.attachEvents(root);\n  }\n\n  protected override onDetachRoot(root: V): void {\n    super.onDetachRoot(root);\n    this.detachEvents(root);\n  }\n\n  protected attachEvents(view: V): void {\n    view.on('click', this.onClick);\n  }\n\n  protected detachEvents(view: V): void {\n    view.off('click', this.onClick);\n  }\n\n  protected onClick(event: Event): void {\n    this.displaceModals(event);\n  }\n\n  static insertModalView(modalView: View): void { // overwritten by NodeView\n    throw new TypeError(\"\" + modalView);\n  }\n\n  @Lazy\n  static global<V extends View>(): ModalService<V> {\n    return new ModalService();\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ProviderClass, Provider} from \"@swim/component\";\nimport type {ModalOptions, Modal} from \"./Modal\";\nimport {ModalService} from \"./ModalService\";\nimport type {View} from \"../view/View\";\n\n/** @public */\nexport interface ModalProvider<V extends View, S extends ModalService<V> | null | undefined = ModalService<V>> extends Provider<V, S> {\n  presentModal(modal: Modal, options?: ModalOptions): void;\n\n  dismissModal(modal: Modal): void;\n\n  dismissModals(): void;\n\n  toggleModal(modal: Modal, options?: ModalOptions): void;\n\n  updateModality(): void;\n\n  displaceModals(event: Event | null): void;\n\n  createService(): S;\n}\n\n/** @public */\nexport const ModalProvider = (function (_super: typeof Provider) {\n  const ModalProvider = _super.extend(\"ModalProvider\") as ProviderClass<ModalProvider<any, any>>;\n\n  ModalProvider.prototype.presentModal = function <V extends View, S extends ModalService<V>>(this: ModalProvider<V, S>, modal: Modal, options?: ModalOptions): void {\n    let service: ModalService<V> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = ModalService.global();\n    }\n    service.presentModal(modal, options);\n  };\n\n  ModalProvider.prototype.dismissModal = function <V extends View, S extends ModalService<V>>(this: ModalProvider<V, S>, modal: Modal): void {\n    let service: ModalService<V> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = ModalService.global();\n    }\n    service.dismissModal(modal);\n  };\n\n  ModalProvider.prototype.dismissModals = function <V extends View, S extends ModalService<V>>(this: ModalProvider<V, S>): void {\n    let service: ModalService<V> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = ModalService.global();\n    }\n    service.dismissModals();\n  };\n\n  ModalProvider.prototype.toggleModal = function <V extends View, S extends ModalService<V>>(this: ModalProvider<V, S>, modal: Modal, options?: ModalOptions): void {\n    let service: ModalService<V> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = ModalService.global();\n    }\n    service.toggleModal(modal, options);\n  };\n\n  ModalProvider.prototype.updateModality = function <V extends View, S extends ModalService<V>>(this: ModalProvider<V, S>, ): void {\n    let service: ModalService<V> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = ModalService.global();\n    }\n    service.updateModality();\n  };\n\n  ModalProvider.prototype.displaceModals = function <V extends View, S extends ModalService<V>>(this: ModalProvider<V, S>, event: Event | null): void {\n    let service: ModalService<V> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = ModalService.global();\n    }\n    service.displaceModals(event);\n  };\n\n  ModalProvider.prototype.createService = function <V extends View, S extends ModalService<V> | null | undefined>(this: ModalProvider<V, S>): S {\n    return ModalService.global() as S;\n  };\n\n  return ModalProvider;\n})(Provider);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/** @public */\nexport type GestureInputType = \"mouse\" | \"wheel\" | \"touch\" | \"pen\" | \"unknown\";\n\n/** @public */\nexport class GestureInput {\n  readonly inputId: string;\n  inputType: GestureInputType;\n  isPrimary: boolean;\n\n  target: EventTarget | null;\n  button: number;\n  buttons: number;\n  altKey: boolean;\n  ctrlKey: boolean;\n  metaKey: boolean;\n  shiftKey: boolean;\n\n  width: number;\n  height: number;\n  tiltX: number;\n  tiltY: number;\n  twist: number;\n  pressure: number;\n  tangentialPressure: number;\n\n  x0: number;\n  y0: number;\n  t0: number;\n  dx: number;\n  dy: number;\n  dt: number;\n  x: number;\n  y: number;\n  t: number;\n\n  detail: unknown;\n\n  defaultPrevented: boolean;\n\n  constructor(inputId: string, inputType: GestureInputType, isPrimary: boolean,\n              x: number, y: number, t: number) {\n    this.inputId = inputId;\n    this.inputType = inputType;\n    this.isPrimary = isPrimary;\n\n    this.target = null;\n    this.button = 0;\n    this.buttons = 0;\n    this.altKey = false;\n    this.ctrlKey = false;\n    this.metaKey = false;\n    this.shiftKey = false;\n\n    this.width = 0;\n    this.height = 0;\n    this.tiltX = 0;\n    this.tiltY = 0;\n    this.twist = 0;\n    this.pressure = 0;\n    this.tangentialPressure = 0;\n\n    this.x0 = x;\n    this.y0 = y;\n    this.t0 = t;\n    this.dx = 0;\n    this.dy = 0;\n    this.dt = 0;\n    this.x = x;\n    this.y = y;\n    this.t = t;\n\n    this.detail = void 0;\n\n    this.defaultPrevented = false;\n  }\n\n  preventDefault(): void {\n    this.defaultPrevented = true;\n  }\n\n  /** @internal */\n  static pointerInputType(inputType: string): GestureInputType {\n    if (inputType === \"mouse\" || inputType === \"touch\" || inputType === \"pen\") {\n      return inputType;\n    } else {\n      return \"unknown\";\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Proto, ObserverType} from \"@swim/util\";\nimport {FastenerOwner, FastenerInit, FastenerClass, Fastener} from \"@swim/component\";\nimport {GestureInputType, GestureInput} from \"./GestureInput\";\nimport {View} from \"../\"; // forward import\n\n/** @internal */\nexport type MemberGestureView<O, K extends keyof O> =\n  O[K] extends Gesture<any, infer V> ? V : never;\n\n/** @internal */\nexport type GestureView<G extends Gesture<any, any>> =\n  G extends Gesture<any, infer V> ? V : never;\n\n/** @public */\nexport type GestureMethod = \"auto\" | \"pointer\" | \"touch\" | \"mouse\";\n\n/** @public */\nexport interface GestureInit<V extends View = View> extends FastenerInit {\n  extends?: {prototype: Gesture<any, any>} | string | boolean | null;\n  method?: GestureMethod;\n  key?: string | boolean;\n  self?: boolean;\n  binds?: boolean;\n  observes?: boolean;\n\n  willAttachView?(view: V, target: View | null): void;\n  didAttachView?(view: V, target: View | null): void;\n\n  willDetachView?(view: V): void;\n  didDetachView?(view: V): void;\n\n  detectView?(view: View): V | null;\n}\n\n/** @public */\nexport type GestureDescriptor<O = unknown, V extends View = View, I = {}> = ThisType<Gesture<O, V> & I> & GestureInit<V> & Partial<I>;\n\n/** @public */\nexport interface GestureClass<G extends Gesture<any, any> = Gesture<any, any>> extends FastenerClass<G> {\n}\n\n/** @public */\nexport interface GestureFactory<G extends Gesture<any, any> = Gesture<any, any>> extends GestureClass<G> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): GestureFactory<G> & I;\n\n  specialize(method: GestureMethod): GestureFactory | null;\n\n  define<O, V extends View = View>(className: string, descriptor: GestureDescriptor<O, V>): GestureFactory<Gesture<any, V>>;\n  define<O, V extends View = View>(className: string, descriptor: {observes: boolean} & GestureDescriptor<O, V, ObserverType<V>>): GestureFactory<Gesture<any, V>>;\n  define<O, V extends View = View, I = {}>(className: string, descriptor: {implements: unknown} & GestureDescriptor<O, V, I>): GestureFactory<Gesture<any, V> & I>;\n  define<O, V extends View = View, I = {}>(className: string, descriptor: {implements: unknown; observes: boolean} & GestureDescriptor<O, V, I & ObserverType<V>>): GestureFactory<Gesture<any, V> & I>;\n\n  <O, V extends View = View>(descriptor: GestureDescriptor<O, V>): PropertyDecorator;\n  <O, V extends View = View>(descriptor: {observes: boolean} & GestureDescriptor<O, V, ObserverType<V>>): PropertyDecorator;\n  <O, V extends View = View, I = {}>(descriptor: {implements: unknown} & GestureDescriptor<O, V, I>): PropertyDecorator;\n  <O, V extends View = View, I = {}>(descriptor: {implements: unknown; observes: boolean} & GestureDescriptor<O, V, I & ObserverType<V>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface Gesture<O = unknown, V extends View = View> extends Fastener<O> {\n  (): V | null;\n  (view: V | null, targetView?: View | null): O;\n\n  /** @override */\n  get fastenerType(): Proto<Gesture<any, any>>;\n\n  readonly view: V | null;\n\n  getView(): V;\n\n  setView(newView: V | null, targetView?: View | null): V | null;\n\n  /** @protected */\n  willAttachView(view: V, target: View | null): void;\n\n  /** @protected */\n  onAttachView(view: V, target: View | null): void;\n\n  /** @protected */\n  didAttachView(view: V, target: View | null): void;\n\n  /** @protected */\n  willDetachView(view: V): void;\n\n  /** @protected */\n  onDetachView(view: V): void;\n\n  /** @protected */\n  didDetachView(view: V): void;\n\n  /** @internal @protected */\n  attachEvents(view: V): void;\n\n  /** @internal @protected */\n  detachEvents(view: V): void;\n\n  /** @internal */\n  readonly inputs: {readonly [inputId: string]: GestureInput | undefined};\n\n  readonly inputCount: number;\n\n  getInput(inputId: string | number): GestureInput | null;\n\n  /** @internal */\n  createInput(inputId: string, inputType: GestureInputType, isPrimary: boolean,\n              x: number, y: number, t: number): GestureInput;\n\n  /** @internal */\n  getOrCreateInput(inputId: string | number, inputType: GestureInputType, isPrimary: boolean,\n                   x: number, y: number, t: number): GestureInput;\n\n  /** @internal */\n  clearInput(input: GestureInput): void;\n\n  /** @internal */\n  clearInputs(): void;\n\n  /** @internal */\n  bindView(view: View, target?: View | null): void;\n\n  /** @internal */\n  unbindView(view: View): void;\n\n  detectView(view: View): V | null;\n\n  /** @internal */\n  viewWillUnmount(view: V): void;\n\n  /** @protected @override */\n  onMount(): void;\n\n  /** @internal */\n  get key(): string | undefined; // optional prototype field\n\n  /** @internal */\n  get self(): boolean | undefined; // optional prototype property\n\n  /** @internal */\n  get binds(): boolean | undefined; // optional prototype property\n\n  /** @internal */\n  get observes(): boolean | undefined; // optional prototype property\n\n  /** @internal @override */\n  get lazy(): boolean; // prototype property\n\n  /** @internal @override */\n  get static(): string | boolean; // prototype property\n}\n\n/** @public */\nexport const Gesture = (function (_super: typeof Fastener) {\n  const Gesture: GestureFactory = _super.extend(\"Gesture\");\n\n  Object.defineProperty(Gesture.prototype, \"fastenerType\", {\n    get: function (this: Gesture): Proto<Gesture<any, any>> {\n      return Gesture;\n    },\n    configurable: true,\n  });\n\n  Gesture.prototype.getView = function <V extends View>(this: Gesture<unknown, V>): V {\n    const view = this.view;\n    if (view === null) {\n      throw new TypeError(\"null \" + this.name + \" view\");\n    }\n    return view;\n  };\n\n  Gesture.prototype.setView = function <V extends View>(this: Gesture<unknown, V>, newView: V | null, target?: View | null): V | null {\n    const oldView = this.view;\n    if (oldView !== newView) {\n      if (oldView !== null) {\n        this.willDetachView(oldView);\n        (this as Mutable<typeof this>).view = null;\n        this.onDetachView(oldView);\n        this.didDetachView(oldView);\n      }\n      if (newView !== null) {\n        if (target === void 0) {\n          target = null;\n        }\n        this.willAttachView(newView, target);\n        (this as Mutable<typeof this>).view = newView;\n        this.onAttachView(newView, target);\n        this.didAttachView(newView, target);\n      }\n    }\n    return oldView;\n  };\n\n  Gesture.prototype.willAttachView = function <V extends View>(this: Gesture<unknown, V>, view: V, target: View | null): void {\n    // hook\n  };\n\n  Gesture.prototype.onAttachView = function <V extends View>(this: Gesture<unknown, V>, view: V, target: View | null): void {\n    this.attachEvents(view);\n    if (this.observes === true) {\n      view.observe(this as ObserverType<V>);\n    }\n  };\n\n  Gesture.prototype.didAttachView = function <V extends View>(this: Gesture<unknown, V>, view: V, target: View | null): void {\n    // hook\n  };\n\n  Gesture.prototype.willDetachView = function <V extends View>(this: Gesture<unknown, V>, view: V): void {\n    // hook\n  };\n\n  Gesture.prototype.onDetachView = function <V extends View>(this: Gesture<unknown, V>, view: V): void {\n    this.clearInputs();\n    if (this.observes === true) {\n      view.unobserve(this as ObserverType<V>);\n    }\n    this.detachEvents(view);\n  };\n\n  Gesture.prototype.didDetachView = function <V extends View>(this: Gesture<unknown, V>, view: V): void {\n    // hook\n  };\n\n  Gesture.prototype.attachEvents = function <V extends View>(this: Gesture<unknown, V>, view: V): void {\n    // hook\n  };\n\n  Gesture.prototype.detachEvents = function <V extends View>(this: Gesture<unknown, V>, view: V): void {\n    // hook\n  };\n\n  Gesture.prototype.getInput = function (this: Gesture, inputId: string | number): GestureInput | null {\n    if (typeof inputId === \"number\") {\n      inputId = \"\" + inputId;\n    }\n    const input = this.inputs[inputId];\n    return input !== void 0 ? input : null;\n  };\n\n  Gesture.prototype.createInput = function (this: Gesture, inputId: string, inputType: GestureInputType, isPrimary: boolean,\n                                            x: number, y: number, t: number): GestureInput {\n    return new GestureInput(inputId, inputType, isPrimary, x, y, t);\n  };\n\n  Gesture.prototype.getOrCreateInput = function (this: Gesture, inputId: string | number, inputType: GestureInputType, isPrimary: boolean,\n                                                 x: number, y: number, t: number): GestureInput {\n    if (typeof inputId === \"number\") {\n      inputId = \"\" + inputId;\n    }\n    const inputs = this.inputs as {[inputId: string]: GestureInput | undefined};\n    let input = inputs[inputId];\n    if (input === void 0) {\n      input = this.createInput(inputId, inputType, isPrimary, x, y, t);\n      inputs[inputId] = input;\n      (this as Mutable<typeof this>).inputCount += 1;\n    }\n    return input;\n  };\n\n  Gesture.prototype.clearInput = function (this: Gesture, input: GestureInput): void {\n    const inputs = this.inputs as {[inputId: string]: GestureInput | undefined};\n    delete inputs[input.inputId];\n    (this as Mutable<typeof this>).inputCount -= 1;\n  };\n\n  Gesture.prototype.clearInputs = function (this: Gesture): void {\n    (this as Mutable<typeof this>).inputs = {};\n    (this as Mutable<typeof this>).inputCount = 0;\n  };\n\n  Gesture.prototype.bindView = function <V extends View>(this: Gesture<unknown, V>, view: View, target?: View | null): void {\n    if (this.binds && this.view === null) {\n      const newView = this.detectView(view);\n      if (newView !== null) {\n        this.setView(newView, target);\n      }\n    }\n  };\n\n  Gesture.prototype.unbindView = function <V extends View>(this: Gesture<unknown, V>, view: View): void {\n    if (this.binds && this.view === view) {\n      this.setView(null);\n    }\n  };\n\n  Gesture.prototype.detectView = function <V extends View>(this: Gesture<unknown, V>, view: View): V | null {\n    if (this.key !== void 0 && this.key === view.key) {\n      return view as V;\n    }\n    return null;\n  };\n\n  Gesture.prototype.viewWillUnmount = function (this: Gesture, view: View): void {\n    this.clearInputs();\n  };\n\n  Gesture.prototype.onMount = function (this: Gesture): void {\n    _super.prototype.onMount.call(this);\n    if (this.self === true && this.owner instanceof View) {\n      this.setView(this.owner);\n    }\n  };\n\n  Object.defineProperty(Gesture.prototype, \"lazy\", {\n    get: function (this: Gesture): boolean {\n      return false;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(Gesture.prototype, \"static\", {\n    get: function (this: Gesture): string | boolean {\n      return true;\n    },\n    configurable: true,\n  });\n\n  Gesture.construct = function <G extends Gesture<any, any>>(gestureClass: {prototype: G}, gesture: G | null, owner: FastenerOwner<G>): G {\n    if (gesture === null) {\n      gesture = function (view?: GestureView<G> | null, targetView?: View | null): GestureView<G> | null | FastenerOwner<G> {\n        if (view === void 0) {\n          return gesture!.view;\n        } else {\n          gesture!.setView(view, targetView);\n          return gesture!.owner;\n        }\n      } as G;\n      delete (gesture as Partial<Mutable<G>>).name; // don't clobber prototype name\n      Object.setPrototypeOf(gesture, gestureClass.prototype);\n    }\n    gesture = _super.construct(gestureClass, gesture, owner) as G;\n    (gesture as Mutable<typeof gesture>).view = null;\n    (gesture as Mutable<typeof gesture>).inputs = {};\n    (gesture as Mutable<typeof gesture>).inputCount = 0;\n    return gesture;\n  };\n\n  Gesture.specialize = function (method: GestureMethod): GestureFactory | null {\n    return null;\n  };\n\n  Gesture.define = function <O, V extends View>(className: string, descriptor: GestureDescriptor<O, V>): GestureFactory<Gesture<any, V>> {\n    let superClass = descriptor.extends as GestureFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    let method = descriptor.method;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n    delete descriptor.method;\n\n    if (descriptor.key === true) {\n      Object.defineProperty(descriptor, \"key\", {\n        value: className,\n        configurable: true,\n      });\n    } else if (descriptor.key === false) {\n      Object.defineProperty(descriptor, \"key\", {\n        value: void 0,\n        configurable: true,\n      });\n    }\n\n    if (method === void 0) {\n      method = \"auto\";\n    }\n    if (superClass === void 0 || superClass === null) {\n      superClass = Gesture.specialize(method);\n    }\n    if (superClass === null) {\n      superClass = this;\n    }\n\n    const gestureClass = superClass.extend(className, descriptor);\n\n    gestureClass.construct = function (gestureClass: {prototype: Gesture<any, any>}, gesture: Gesture<O, V> | null, owner: O): Gesture<O, V> {\n      gesture = superClass!.construct(gestureClass, gesture, owner);\n      if (affinity !== void 0) {\n        gesture.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        gesture.initInherits(inherits);\n      }\n      return gesture;\n    };\n\n    return gestureClass;\n  };\n\n  return Gesture;\n})(Fastener);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {GestureInputType, GestureInput} from \"./GestureInput\";\n\n/** @public */\nexport class PositionGestureInput extends GestureInput {\n  hovering: boolean;\n  pressing: boolean;\n  holdTimer: number;\n  holdDelay: number;\n\n  constructor(inputId: string, inputType: GestureInputType, isPrimary: boolean,\n              x: number, y: number, t: number) {\n    super(inputId, inputType, isPrimary, x, y, t);\n    this.hovering = false;\n    this.pressing = false;\n    this.holdTimer = 0;\n    this.holdDelay = 400;\n  }\n\n  isRunaway(): boolean {\n    const dx = this.x - this.x0;\n    const dy = this.y - this.y0;\n    const dt = this.t - this.t0;\n    return this.inputType !== \"mouse\" && dt < 100\n        && dx * dx + dy * dy > 10 * 10;\n  }\n\n  setHoldTimer(f: () => void): void {\n    if (this.holdDelay !== 0) {\n      this.clearHoldTimer();\n      this.holdTimer = setTimeout(f, this.holdDelay) as any;\n    }\n  }\n\n  clearHoldTimer(): void {\n    if (this.holdTimer !== 0) {\n      clearTimeout(this.holdTimer);\n      this.holdTimer = 0;\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, ObserverType} from \"@swim/util\";\nimport type {FastenerOwner} from \"@swim/component\";\nimport type {GestureInputType} from \"./GestureInput\";\nimport {GestureMethod, GestureInit, GestureClass, Gesture} from \"./Gesture\";\nimport {PositionGestureInput} from \"./PositionGestureInput\";\nimport {MousePositionGesture} from \"./\"; // forward import\nimport {TouchPositionGesture} from \"./\"; // forward import\nimport {PointerPositionGesture} from \"./\"; // forward import\nimport type {View} from \"../view/View\";\n\n/** @public */\nexport interface PositionGestureInit<V extends View = View> extends GestureInit<V> {\n  extends?: {prototype: PositionGesture<any, any>} | string | boolean | null;\n\n  willStartHovering?(): void;\n  didStartHovering?(): void;\n  willStopHovering?(): void;\n  didStopHovering?(): void;\n\n  willBeginHover?(input: PositionGestureInput, event: Event | null): void;\n  didBeginHover?(input: PositionGestureInput, event: Event | null): void;\n  willEndHover?(input: PositionGestureInput, event: Event | null): void;\n  didEndHover?(input: PositionGestureInput, event: Event | null): void;\n\n  willStartPressing?(): void;\n  didStartPressing?(): void;\n  willStopPressing?(): void;\n  didStopPressing?(): void;\n\n  willBeginPress?(input: PositionGestureInput, event: Event | null): boolean | void;\n  didBeginPress?(input: PositionGestureInput, event: Event | null): void;\n\n  willMovePress?(input: PositionGestureInput, event: Event | null): void;\n  didMovePress?(input: PositionGestureInput, event: Event | null): void;\n\n  willEndPress?(input: PositionGestureInput, event: Event | null): void;\n  didEndPress?(input: PositionGestureInput, event: Event | null): void;\n\n  willCancelPress?(input: PositionGestureInput, event: Event | null): void;\n  didCancelPress?(input: PositionGestureInput, event: Event | null): void;\n\n  willPress?(input: PositionGestureInput, event: Event | null): void;\n  didPress?(input: PositionGestureInput, event: Event | null): void;\n\n  willLongPress?(input: PositionGestureInput): void;\n  didLongPress?(input: PositionGestureInput): void;\n}\n\n/** @public */\nexport type PositionGestureDescriptor<O = unknown, V extends View = View, I = {}> = ThisType<PositionGesture<O, V> & I> & PositionGestureInit<V> & Partial<I>;\n\n/** @public */\nexport interface PositionGestureClass<G extends PositionGesture<any, any> = PositionGesture<any, any>> extends GestureClass<G> {\n}\n\n/** @public */\nexport interface PositionGestureFactory<G extends PositionGesture<any, any> = PositionGesture<any, any>> extends PositionGestureClass<G> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): PositionGestureFactory<G> & I;\n\n  specialize(method: GestureMethod): PositionGestureFactory | null;\n\n  define<O, V extends View = View>(className: string, descriptor: PositionGestureDescriptor<O, V>): PositionGestureFactory<PositionGesture<any, V>>;\n  define<O, V extends View = View>(className: string, descriptor: {observes: boolean} & PositionGestureDescriptor<O, V, ObserverType<V>>): PositionGestureFactory<PositionGesture<any, V>>;\n  define<O, V extends View = View, I = {}>(className: string, descriptor: {implements: unknown} & PositionGestureDescriptor<O, V, I>): PositionGestureFactory<PositionGesture<any, V> & I>;\n  define<O, V extends View = View, I = {}>(className: string, descriptor: {implements: unknown; observes: boolean} & PositionGestureDescriptor<O, V, I & ObserverType<V>>): PositionGestureFactory<PositionGesture<any, V> & I>;\n\n  <O, V extends View = View>(descriptor: PositionGestureDescriptor<O, V>): PropertyDecorator;\n  <O, V extends View = View>(descriptor: {observes: boolean} & PositionGestureDescriptor<O, V, ObserverType<V>>): PropertyDecorator;\n  <O, V extends View = View, I = {}>(descriptor: {implements: unknown} & PositionGestureDescriptor<O, V, I>): PropertyDecorator;\n  <O, V extends View = View, I = {}>(descriptor: {implements: unknown; observes: boolean} & PositionGestureDescriptor<O, V, I & ObserverType<V>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface PositionGesture<O = unknown, V extends View = View> extends Gesture<O, V> {\n  /** @internal @protected @override */\n  attachEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachEvents(view: V): void;\n\n  /** @internal @protected */\n  attachHoverEvents(view: V): void;\n\n  /** @internal @protected */\n  detachHoverEvents(view: V): void;\n\n  /** @internal @protected */\n  attachPressEvents(view: V): void;\n\n  /** @internal @protected */\n  detachPressEvents(view: V): void;\n\n  /** @internal @override */\n  readonly inputs: {readonly [inputId: string]: PositionGestureInput | undefined};\n\n  /** @override */\n  getInput(inputId: string | number): PositionGestureInput | null;\n\n  /** @internal @override */\n  createInput(inputId: string, inputType: GestureInputType, isPrimary: boolean,\n              x: number, y: number, t: number): PositionGestureInput;\n\n  /** @internal */\n  getOrCreateInput(inputId: string | number, inputType: GestureInputType, isPrimary: boolean,\n                   x: number, y: number, t: number): PositionGestureInput;\n\n  /** @internal @override */\n  clearInput(input: PositionGestureInput): void;\n\n  /** @internal @override */\n  clearInputs(): void;\n\n  readonly hoverCount: number;\n\n  get hovering(): boolean;\n\n  /** @internal */\n  startHovering(): void;\n\n  /** @protected */\n  willStartHovering(): void;\n\n  /** @protected */\n  onStartHovering(): void;\n\n  /** @protected */\n  didStartHovering(): void;\n\n  /** @internal */\n  stopHovering(): void;\n\n  /** @protected */\n  willStopHovering(): void;\n\n  /** @protected */\n  onStopHovering(): void;\n\n  /** @protected */\n  didStopHovering(): void;\n\n  /** @internal */\n  beginHover(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  willBeginHover(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  onBeginHover(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  didBeginHover(input: PositionGestureInput, event: Event | null): void;\n\n  /** @internal */\n  endHover(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  willEndHover(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  onEndHover(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  didEndHover(input: PositionGestureInput, event: Event | null): void;\n\n  readonly pressCount: number;\n\n  get pressing(): boolean\n\n  /** @internal */\n  startPressing(): void;\n\n  /** @protected */\n  willStartPressing(): void;\n\n  /** @protected */\n  onStartPressing(): void;\n\n  /** @protected */\n  didStartPressing(): void;\n\n  /** @internal */\n  stopPressing(): void;\n\n  /** @protected */\n  willStopPressing(): void;\n\n  /** @protected */\n  onStopPressing(): void;\n\n  /** @protected */\n  didStopPressing(): void;\n\n  /** @internal */\n  beginPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  willBeginPress(input: PositionGestureInput, event: Event | null): boolean | void;\n\n  /** @protected */\n  onBeginPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  didBeginPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @internal */\n  movePress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  willMovePress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  onMovePress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  didMovePress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @internal */\n  endPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  willEndPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  onEndPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  didEndPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @internal */\n  cancelPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  willCancelPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  onCancelPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  didCancelPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @internal */\n  press(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  willPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  onPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @protected */\n  didPress(input: PositionGestureInput, event: Event | null): void;\n\n  /** @internal */\n  longPress(input: PositionGestureInput): void;\n\n  /** @protected */\n  willLongPress(input: PositionGestureInput): void;\n\n  /** @protected */\n  onLongPress(input: PositionGestureInput): void;\n\n  /** @protected */\n  didLongPress(input: PositionGestureInput): void;\n}\n\n/** @public */\nexport const PositionGesture = (function (_super: typeof Gesture) {\n  const PositionGesture: PositionGestureFactory = _super.extend(\"PositionGesture\");\n\n  PositionGesture.prototype.attachEvents = function (this: PositionGesture, view: View): void {\n    Gesture.prototype.attachEvents.call(this, view);\n    this.attachHoverEvents(view);\n  };\n\n  PositionGesture.prototype.detachEvents = function (this: PositionGesture, view: View): void {\n    this.detachPressEvents(view);\n    this.detachHoverEvents(view);\n    Gesture.prototype.detachEvents.call(this, view);\n  };\n\n  PositionGesture.prototype.attachHoverEvents = function (this: PositionGesture, view: View): void {\n    // hook\n  };\n\n  PositionGesture.prototype.detachHoverEvents = function (this: PositionGesture, view: View): void {\n    // hook\n  };\n\n  PositionGesture.prototype.attachPressEvents = function (this: PositionGesture, view: View): void {\n    // hook\n  };\n\n  PositionGesture.prototype.detachPressEvents = function (this: PositionGesture, view: View): void {\n    // hook\n  };\n\n  PositionGesture.prototype.createInput = function (this: PositionGesture, inputId: string, inputType: GestureInputType, isPrimary: boolean,\n                                                    x: number, y: number, t: number): PositionGestureInput {\n    return new PositionGestureInput(inputId, inputType, isPrimary, x, y, t);\n  };\n\n  PositionGesture.prototype.clearInput = function (this: PositionGesture, input: PositionGestureInput): void {\n    if (!input.hovering && !input.pressing) {\n      Gesture.prototype.clearInput.call(this, input);\n    }\n  };\n\n  PositionGesture.prototype.clearInputs = function (this: PositionGesture): void {\n    Gesture.prototype.clearInputs.call(this);\n    (this as Mutable<typeof this>).hoverCount = 0;\n    (this as Mutable<typeof this>).pressCount = 0;\n  };\n\n  Object.defineProperty(PositionGesture.prototype, \"hovering\", {\n    get(this: PositionGesture): boolean {\n      return this.hoverCount !== 0;\n    },\n    configurable: true,\n  })\n\n  PositionGesture.prototype.startHovering = function (this: PositionGesture): void {\n    this.willStartHovering();\n    this.onStartHovering();\n    this.didStartHovering();\n  };\n\n  PositionGesture.prototype.willStartHovering = function (this: PositionGesture): void {\n    // hook\n  };\n\n  PositionGesture.prototype.onStartHovering = function (this: PositionGesture): void {\n    // hook\n  };\n\n  PositionGesture.prototype.didStartHovering = function (this: PositionGesture): void {\n    // hook\n  };\n\n  PositionGesture.prototype.stopHovering = function (this: PositionGesture): void {\n    this.willStopHovering();\n    this.onStopHovering();\n    this.didStopHovering();\n  };\n\n  PositionGesture.prototype.willStopHovering = function (this: PositionGesture): void {\n    // hook\n  };\n\n  PositionGesture.prototype.onStopHovering = function (this: PositionGesture): void {\n    // hook\n  };\n\n  PositionGesture.prototype.didStopHovering = function (this: PositionGesture): void {\n    // hook\n  };\n\n  PositionGesture.prototype.beginHover = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    if (!input.hovering) {\n      this.willBeginHover(input, event);\n      input.hovering = true;\n      (this as Mutable<typeof this>).hoverCount += 1;\n      this.onBeginHover(input, event);\n      this.didBeginHover(input, event);\n      if (this.hoverCount === 1) {\n        this.startHovering();\n      }\n    }\n  };\n\n  PositionGesture.prototype.willBeginHover = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  PositionGesture.prototype.onBeginHover = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  PositionGesture.prototype.didBeginHover = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  PositionGesture.prototype.endHover = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    if (input.hovering) {\n      this.willEndHover(input, event);\n      input.hovering = false;\n      (this as Mutable<typeof this>).hoverCount -= 1;\n      this.onEndHover(input, event);\n      this.didEndHover(input, event);\n      if (this.hoverCount === 0) {\n        this.stopHovering();\n      }\n      this.clearInput(input);\n    }\n  };\n\n  PositionGesture.prototype.willEndHover = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  PositionGesture.prototype.onEndHover = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  PositionGesture.prototype.didEndHover = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  Object.defineProperty(PositionGesture.prototype, \"pressing\", {\n    get(this: PositionGesture): boolean {\n      return this.pressCount !== 0;\n    },\n    configurable: true,\n  })\n\n  PositionGesture.prototype.startPressing = function (this: PositionGesture): void {\n    this.willStartPressing();\n    this.onStartPressing();\n    this.didStartPressing();\n  };\n\n  PositionGesture.prototype.willStartPressing = function (this: PositionGesture): void {\n    // hook\n  };\n\n  PositionGesture.prototype.onStartPressing = function (this: PositionGesture): void {\n    this.attachPressEvents(this.view!);\n  };\n\n  PositionGesture.prototype.didStartPressing = function (this: PositionGesture): void {\n    // hook\n  };\n\n  PositionGesture.prototype.stopPressing = function (this: PositionGesture): void {\n    this.willStopPressing();\n    this.onStopPressing();\n    this.didStopPressing();\n  };\n\n  PositionGesture.prototype.willStopPressing = function (this: PositionGesture): void {\n    // hook\n  };\n\n  PositionGesture.prototype.onStopPressing = function (this: PositionGesture): void {\n    this.detachPressEvents(this.view!);\n  };\n\n  PositionGesture.prototype.didStopPressing = function (this: PositionGesture): void {\n    // hook\n  };\n\n  PositionGesture.prototype.beginPress = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    if (!input.pressing) {\n      let allowPress = this.willBeginPress(input, event);\n      if (allowPress === void 0) {\n        allowPress = true;\n      }\n      if (allowPress) {\n        input.pressing = true;\n        input.defaultPrevented = false;\n        (this as Mutable<typeof this>).pressCount += 1;\n        this.onBeginPress(input, event);\n        input.setHoldTimer(this.longPress.bind(this, input));\n        this.didBeginPress(input, event);\n        if (this.pressCount === 1) {\n          this.startPressing();\n        }\n      }\n    }\n  };\n\n  PositionGesture.prototype.willBeginPress = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): boolean | void {\n    // hook\n  };\n\n  PositionGesture.prototype.onBeginPress = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    input.x0 = input.x;\n    input.y0 = input.y;\n    input.t0 = input.t;\n    input.dx = 0;\n    input.dy = 0;\n    input.dt = 0;\n  };\n\n  PositionGesture.prototype.didBeginPress = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  PositionGesture.prototype.movePress = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    if (input.pressing) {\n      this.willMovePress(input, event);\n      this.onMovePress(input, event);\n      this.didMovePress(input, event);\n    }\n  };\n\n  PositionGesture.prototype.willMovePress = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  PositionGesture.prototype.onMovePress = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  PositionGesture.prototype.didMovePress = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  PositionGesture.prototype.endPress = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    input.clearHoldTimer();\n    if (input.pressing) {\n      this.willEndPress(input, event);\n      input.pressing = false;\n      (this as Mutable<typeof this>).pressCount -= 1;\n      this.onEndPress(input, event);\n      this.didEndPress(input, event);\n      if (this.pressCount === 0) {\n        this.stopPressing();\n      }\n      this.clearInput(input);\n    }\n  };\n\n  PositionGesture.prototype.willEndPress = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  PositionGesture.prototype.onEndPress = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  PositionGesture.prototype.didEndPress = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  PositionGesture.prototype.cancelPress = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    input.clearHoldTimer();\n    if (input.pressing) {\n      this.willCancelPress(input, event);\n      input.pressing = false;\n      (this as Mutable<typeof this>).pressCount -= 1;\n      this.onCancelPress(input, event);\n      this.didCancelPress(input, event);\n      if (this.pressCount === 0) {\n        this.stopPressing();\n      }\n      this.clearInput(input);\n    }\n  };\n\n  PositionGesture.prototype.willCancelPress = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  PositionGesture.prototype.onCancelPress = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  PositionGesture.prototype.didCancelPress = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  PositionGesture.prototype.press = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    this.willPress(input, event);\n    this.onPress(input, event);\n    this.didPress(input, event);\n  };\n\n  PositionGesture.prototype.willPress = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  PositionGesture.prototype.onPress = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  PositionGesture.prototype.didPress = function (this: PositionGesture, input: PositionGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  PositionGesture.prototype.longPress = function (this: PositionGesture, input: PositionGestureInput): void {\n    input.clearHoldTimer();\n    const dt = performance.now() - input.t0;\n    if (dt < 1.5 * input.holdDelay && input.pressing) {\n      this.willLongPress(input);\n      this.onLongPress(input);\n      this.didLongPress(input);\n    }\n  };\n\n  PositionGesture.prototype.willLongPress = function (this: PositionGesture, input: PositionGestureInput): void {\n    // hook\n  };\n\n  PositionGesture.prototype.onLongPress = function (this: PositionGesture, input: PositionGestureInput): void {\n    const t = performance.now();\n    input.dt = t - input.t;\n    input.t = t;\n  };\n\n  PositionGesture.prototype.didLongPress = function (this: PositionGesture, input: PositionGestureInput): void {\n    // hook\n  };\n\n  PositionGesture.construct = function <G extends PositionGesture<any, any>>(gestureClass: {prototype: G}, gesture: G | null, owner: FastenerOwner<G>): G {\n    gesture = _super.construct(gestureClass, gesture, owner) as G;\n    (gesture as Mutable<typeof gesture>).hoverCount = 0;\n    (gesture as Mutable<typeof gesture>).pressCount = 0;\n    return gesture;\n  };\n\n  PositionGesture.specialize = function (method: GestureMethod): PositionGestureFactory | null {\n    if (method === \"pointer\") {\n      return PointerPositionGesture;\n    } else if (method === \"touch\") {\n      return TouchPositionGesture;\n    } else if (method === \"mouse\") {\n      return MousePositionGesture;\n    } else if (typeof PointerEvent !== \"undefined\") {\n      return PointerPositionGesture;\n    } else if (typeof TouchEvent !== \"undefined\") {\n      return TouchPositionGesture;\n    } else {\n      return MousePositionGesture;\n    }\n  };\n\n  PositionGesture.define = function <O, V extends View>(className: string, descriptor: PositionGestureDescriptor<O, V>): PositionGestureFactory<PositionGesture<any, V>> {\n    let superClass = descriptor.extends as PositionGestureFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    let method = descriptor.method;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n    delete descriptor.method;\n\n    if (descriptor.key === true) {\n      Object.defineProperty(descriptor, \"key\", {\n        value: className,\n        configurable: true,\n      });\n    } else if (descriptor.key === false) {\n      Object.defineProperty(descriptor, \"key\", {\n        value: void 0,\n        configurable: true,\n      });\n    }\n\n    if (method === void 0) {\n      method = \"auto\";\n    }\n    if (superClass === void 0 || superClass === null) {\n      superClass = PositionGesture.specialize(method);\n    }\n    if (superClass === null) {\n      superClass = this;\n    }\n\n    const gestureClass = superClass.extend(className, descriptor);\n\n    gestureClass.construct = function (gestureClass: {prototype: PositionGesture<any, any>}, gesture: PositionGesture<O, V> | null, owner: O): PositionGesture<O, V> {\n      gesture = superClass!.construct(gestureClass, gesture, owner);\n      if (affinity !== void 0) {\n        gesture.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        gesture.initInherits(inherits);\n      }\n      return gesture;\n    };\n\n    return gestureClass;\n  };\n\n  return PositionGesture;\n})(Gesture);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {FastenerOwner} from \"@swim/component\";\nimport {GestureInput} from \"./GestureInput\";\nimport type {PositionGestureInput} from \"./PositionGestureInput\";\nimport {PositionGestureClass, PositionGestureFactory, PositionGesture} from \"./PositionGesture\";\nimport type {View} from \"../view/View\";\n\n/** @internal */\nexport interface PointerPositionGesture<O = unknown, V extends View = View> extends PositionGesture<O, V> {\n  /** @internal @protected @override */\n  attachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  attachPressEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachPressEvents(view: V): void;\n\n  /** @internal @protected */\n  updateInput(input: PositionGestureInput, event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerEnter(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerLeave(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerDown(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerMove(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerUp(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerCancel(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerLeaveDocument(event: PointerEvent): void;\n}\n\n/** @internal */\nexport const PointerPositionGesture = (function (_super: typeof PositionGesture) {\n  const PointerPositionGesture = _super.extend(\"PointerPositionGesture\") as PositionGestureFactory<PointerPositionGesture<any, any>>;\n\n  PointerPositionGesture.prototype.attachHoverEvents = function (this: PointerPositionGesture, view: View): void {\n    view.on(\"pointerenter\", this.onPointerEnter as EventListener);\n    view.on(\"pointerleave\", this.onPointerLeave as EventListener);\n    view.on(\"pointerdown\", this.onPointerDown as EventListener);\n  };\n\n  PointerPositionGesture.prototype.detachHoverEvents = function (this: PointerPositionGesture, view: View): void {\n    view.off(\"pointerenter\", this.onPointerEnter as EventListener);\n    view.off(\"pointerleave\", this.onPointerLeave as EventListener);\n    view.off(\"pointerdown\", this.onPointerDown as EventListener);\n  };\n\n  PointerPositionGesture.prototype.attachPressEvents = function (this: PointerPositionGesture, view: View): void {\n    document.body.addEventListener(\"pointermove\", this.onPointerMove);\n    document.body.addEventListener(\"pointerup\", this.onPointerUp);\n    document.body.addEventListener(\"pointercancel\", this.onPointerCancel);\n    document.body.addEventListener(\"pointerleave\", this.onPointerLeaveDocument);\n  };\n\n  PointerPositionGesture.prototype.detachPressEvents = function (this: PointerPositionGesture, view: View): void {\n    document.body.removeEventListener(\"pointermove\", this.onPointerMove);\n    document.body.removeEventListener(\"pointerup\", this.onPointerUp);\n    document.body.removeEventListener(\"pointercancel\", this.onPointerCancel);\n    document.body.removeEventListener(\"pointerleave\", this.onPointerLeaveDocument);\n  };\n\n  PointerPositionGesture.prototype.updateInput = function (this: PointerPositionGesture, input: PositionGestureInput, event: PointerEvent): void {\n    input.target = event.target;\n    input.button = event.button;\n    input.buttons = event.buttons;\n    input.altKey = event.altKey;\n    input.ctrlKey = event.ctrlKey;\n    input.metaKey = event.metaKey;\n    input.shiftKey = event.shiftKey;\n\n    input.dx = event.clientX - input.x;\n    input.dy = event.clientY - input.y;\n    input.dt = event.timeStamp - input.t;\n    input.x = event.clientX;\n    input.y = event.clientY;\n    input.t = event.timeStamp;\n\n    input.width = event.width;\n    input.height = event.height;\n    input.tiltX = event.tiltX;\n    input.tiltY = event.tiltY;\n    input.twist = event.twist;\n    input.pressure = event.pressure;\n    input.tangentialPressure = event.tangentialPressure;\n  };\n\n  PointerPositionGesture.prototype.onPointerEnter = function (this: PointerPositionGesture, event: PointerEvent): void {\n    if (event.pointerType === \"mouse\" && event.buttons === 0) {\n      const input = this.getOrCreateInput(event.pointerId, GestureInput.pointerInputType(event.pointerType),\n                                          event.isPrimary, event.clientX, event.clientY, event.timeStamp);\n      this.updateInput(input, event);\n      if (!input.hovering) {\n        this.beginHover(input, event);\n      }\n    }\n  };\n\n  PointerPositionGesture.prototype.onPointerLeave = function (this: PointerPositionGesture, event: PointerEvent): void {\n    if (event.pointerType === \"mouse\") {\n      const input = this.getInput(event.pointerId);\n      if (input !== null) {\n        this.updateInput(input, event);\n        this.endHover(input, event);\n      }\n    }\n  };\n\n  PointerPositionGesture.prototype.onPointerDown = function (this: PointerPositionGesture, event: PointerEvent): void {\n    const input = this.getOrCreateInput(event.pointerId, GestureInput.pointerInputType(event.pointerType),\n                                        event.isPrimary, event.clientX, event.clientY, event.timeStamp);\n    this.updateInput(input, event);\n    if (!input.pressing) {\n      this.beginPress(input, event);\n    }\n    if (event.pointerType === \"mouse\" && event.button !== 0) {\n      this.cancelPress(input, event);\n    }\n  };\n\n  PointerPositionGesture.prototype.onPointerMove = function (this: PointerPositionGesture, event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.movePress(input, event);\n    }\n  };\n\n  PointerPositionGesture.prototype.onPointerUp = function (this: PointerPositionGesture, event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.endPress(input, event);\n      if (!input.defaultPrevented && event.button === 0) {\n        this.press(input, event);\n      }\n    }\n  };\n\n  PointerPositionGesture.prototype.onPointerCancel = function (this: PointerPositionGesture, event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.cancelPress(input, event);\n    }\n  };\n\n  PointerPositionGesture.prototype.onPointerLeaveDocument = function (this: PointerPositionGesture, event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.cancelPress(input, event);\n      this.endHover(input, event);\n    }\n  };\n\n  PointerPositionGesture.construct = function <G extends PointerPositionGesture<any, any>>(gestureClass: PositionGestureClass<PointerPositionGesture<any, any>>, gesture: G | null, owner: FastenerOwner<G>): G {\n    gesture = _super.construct(gestureClass, gesture, owner) as G;\n    gesture.onPointerEnter = gesture.onPointerEnter.bind(gesture);\n    gesture.onPointerLeave = gesture.onPointerLeave.bind(gesture);\n    gesture.onPointerDown = gesture.onPointerDown.bind(gesture);\n    gesture.onPointerMove = gesture.onPointerMove.bind(gesture);\n    gesture.onPointerUp = gesture.onPointerUp.bind(gesture);\n    gesture.onPointerCancel = gesture.onPointerCancel.bind(gesture);\n    gesture.onPointerLeaveDocument = gesture.onPointerLeaveDocument.bind(gesture);\n    return gesture;\n  };\n\n  return PointerPositionGesture;\n})(PositionGesture);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {FastenerOwner} from \"@swim/component\";\nimport type {PositionGestureInput} from \"./PositionGestureInput\";\nimport {PositionGestureClass, PositionGestureFactory, PositionGesture} from \"./PositionGesture\";\nimport type {View} from \"../view/View\";\n\n/** @internal */\nexport interface TouchPositionGesture<O = unknown, V extends View = View> extends PositionGesture<O, V> {\n  /** @internal @protected @override */\n  attachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  attachPressEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachPressEvents(view: V): void;\n\n  /** @internal @protected */\n  updateInput(input: PositionGestureInput, event: TouchEvent, touch: Touch): void;\n\n  /** @internal @protected */\n  onTouchStart(event: TouchEvent): void;\n\n  /** @internal @protected */\n  onTouchMove(event: TouchEvent): void;\n\n  /** @internal @protected */\n  onTouchEnd(event: TouchEvent): void;\n\n  /** @internal @protected */\n  onTouchCancel(event: TouchEvent): void;\n}\n\n/** @internal */\nexport const TouchPositionGesture = (function (_super: typeof PositionGesture) {\n  const TouchPositionGesture = _super.extend(\"TouchPositionGesture\") as PositionGestureFactory<TouchPositionGesture<any, any>>;\n\n  TouchPositionGesture.prototype.attachHoverEvents = function (this: TouchPositionGesture, view: View): void {\n    view.on(\"touchstart\", this.onTouchStart as EventListener);\n  };\n\n  TouchPositionGesture.prototype.detachHoverEvents = function (this: TouchPositionGesture, view: View): void {\n    view.off(\"touchstart\", this.onTouchStart as EventListener);\n  };\n\n  TouchPositionGesture.prototype.attachPressEvents = function (this: TouchPositionGesture, view: View): void {\n    view.on(\"touchmove\", this.onTouchMove as EventListener);\n    view.on(\"touchend\", this.onTouchEnd as EventListener);\n    view.on(\"touchcancel\", this.onTouchCancel as EventListener);\n  };\n\n  TouchPositionGesture.prototype.detachPressEvents = function (this: TouchPositionGesture, view: View): void {\n    view.off(\"touchmove\", this.onTouchMove as EventListener);\n    view.off(\"touchend\", this.onTouchEnd as EventListener);\n    view.off(\"touchcancel\", this.onTouchCancel as EventListener);\n  };\n\n  TouchPositionGesture.prototype.updateInput = function (this: TouchPositionGesture, input: PositionGestureInput, event: TouchEvent, touch: Touch): void {\n    input.target = touch.target;\n    input.altKey = event.altKey;\n    input.ctrlKey = event.ctrlKey;\n    input.metaKey = event.metaKey;\n    input.shiftKey = event.shiftKey;\n\n    input.dx = touch.clientX - input.x;\n    input.dy = touch.clientY - input.y;\n    input.dt = event.timeStamp - input.t;\n    input.x = touch.clientX;\n    input.y = touch.clientY;\n    input.t = event.timeStamp;\n  };\n\n  TouchPositionGesture.prototype.onTouchStart = function (this: TouchPositionGesture, event: TouchEvent): void {\n    const touches = event.targetTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getOrCreateInput(touch.identifier, \"touch\", false, touch.clientX, touch.clientY, event.timeStamp);\n      this.updateInput(input, event, touch);\n      if (!input.pressing) {\n        this.beginPress(input, event);\n      }\n    }\n  };\n\n  TouchPositionGesture.prototype.onTouchMove = function (this: TouchPositionGesture, event: TouchEvent): void {\n    const touches = event.changedTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getInput(touch.identifier);\n      if (input !== null) {\n        this.updateInput(input, event, touch);\n        this.movePress(input, event);\n      }\n    }\n  };\n\n  TouchPositionGesture.prototype.onTouchEnd = function (this: TouchPositionGesture, event: TouchEvent): void {\n    const touches = event.changedTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getInput(touch.identifier);\n      if (input !== null) {\n        this.updateInput(input, event, touch);\n        this.endPress(input, event);\n        if (!input.defaultPrevented) {\n          this.press(input, event);\n        }\n        this.endHover(input, event);\n      }\n    }\n  };\n\n  TouchPositionGesture.prototype.onTouchCancel = function (this: TouchPositionGesture, event: TouchEvent): void {\n    const touches = event.changedTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getInput(touch.identifier);\n      if (input !== null) {\n        this.updateInput(input, event, touch);\n        this.cancelPress(input, event);\n        this.endHover(input, event);\n      }\n    }\n  };\n\n  TouchPositionGesture.construct = function <G extends TouchPositionGesture<any, any>>(gestureClass: PositionGestureClass<TouchPositionGesture<any, any>>, gesture: G | null, owner: FastenerOwner<G>): G {\n    gesture = _super.construct(gestureClass, gesture, owner) as G;\n    gesture.onTouchStart = gesture.onTouchStart.bind(gesture);\n    gesture.onTouchMove = gesture.onTouchMove.bind(gesture);\n    gesture.onTouchEnd = gesture.onTouchEnd.bind(gesture);\n    gesture.onTouchCancel = gesture.onTouchCancel.bind(gesture);\n    return gesture;\n  };\n\n  return TouchPositionGesture;\n})(PositionGesture);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {FastenerOwner} from \"@swim/component\";\nimport type {PositionGestureInput} from \"./PositionGestureInput\";\nimport {PositionGestureClass, PositionGestureFactory, PositionGesture} from \"./PositionGesture\";\nimport type {View} from \"../view/View\";\n\n/** @internal */\nexport interface MousePositionGesture<O = unknown, V extends View = View> extends PositionGesture<O, V> {\n  /** @internal @protected @override */\n  attachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  attachPressEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachPressEvents(view: V): void;\n\n  /** @internal @protected */\n  updateInput(input: PositionGestureInput, event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseEnter(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseLeave(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseDown(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseMove(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseUp(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseLeaveDocument(event: MouseEvent): void;\n}\n\n/** @internal */\nexport const MousePositionGesture = (function (_super: typeof PositionGesture) {\n  const MousePositionGesture = _super.extend(\"MousePositionGesture\") as PositionGestureFactory<MousePositionGesture<any, any>>;\n\n  MousePositionGesture.prototype.attachHoverEvents = function (this: MousePositionGesture, view: View): void {\n    view.on(\"mouseenter\", this.onMouseEnter as EventListener);\n    view.on(\"mouseleave\", this.onMouseLeave as EventListener);\n    view.on(\"mousedown\", this.onMouseDown as EventListener);\n  };\n\n  MousePositionGesture.prototype.detachHoverEvents = function (this: MousePositionGesture, view: View): void {\n    view.off(\"mouseenter\", this.onMouseEnter as EventListener);\n    view.off(\"mouseleave\", this.onMouseLeave as EventListener);\n    view.off(\"mousedown\", this.onMouseDown as EventListener);\n  };\n\n  MousePositionGesture.prototype.attachPressEvents = function (this: MousePositionGesture, view: View): void {\n    document.body.addEventListener(\"mousemove\", this.onMouseMove);\n    document.body.addEventListener(\"mouseup\", this.onMouseUp);\n    document.body.addEventListener(\"mouseleave\", this.onMouseLeaveDocument);\n  };\n\n  MousePositionGesture.prototype.detachPressEvents = function (this: MousePositionGesture, view: View): void {\n    document.body.removeEventListener(\"mousemove\", this.onMouseMove);\n    document.body.removeEventListener(\"mouseup\", this.onMouseUp);\n    document.body.removeEventListener(\"mouseleave\", this.onMouseLeaveDocument);\n  };\n\n  MousePositionGesture.prototype.updateInput = function (this: MousePositionGesture, input: PositionGestureInput, event: MouseEvent): void {\n    input.target = event.target;\n    input.button = event.button;\n    input.buttons = event.buttons;\n    input.altKey = event.altKey;\n    input.ctrlKey = event.ctrlKey;\n    input.metaKey = event.metaKey;\n    input.shiftKey = event.shiftKey;\n\n    input.dx = event.clientX - input.x;\n    input.dy = event.clientY - input.y;\n    input.dt = event.timeStamp - input.y;\n    input.x = event.clientX;\n    input.y = event.clientY;\n    input.t = event.timeStamp;\n  };\n\n  MousePositionGesture.prototype.onMouseEnter = function (this: MousePositionGesture, event: MouseEvent): void {\n    if (event.buttons === 0) {\n      const input = this.getOrCreateInput(\"mouse\", \"mouse\", true, event.clientX, event.clientY, event.timeStamp);\n      this.updateInput(input, event);\n      if (!input.hovering) {\n        this.beginHover(input, event);\n      }\n    }\n  };\n\n  MousePositionGesture.prototype.onMouseLeave = function (this: MousePositionGesture, event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.endHover(input, event);\n    }\n  };\n\n  MousePositionGesture.prototype.onMouseDown = function (this: MousePositionGesture, event: MouseEvent): void {\n    const input = this.getOrCreateInput(\"mouse\", \"mouse\", true, event.clientX, event.clientY, event.timeStamp);\n    this.updateInput(input, event);\n    if (!input.pressing) {\n      this.beginPress(input, event);\n    }\n    if (event.button !== 0) {\n      this.cancelPress(input, event);\n    }\n  };\n\n  MousePositionGesture.prototype.onMouseMove = function (this: MousePositionGesture, event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.movePress(input, event);\n    }\n  };\n\n  MousePositionGesture.prototype.onMouseUp = function (this: MousePositionGesture, event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.endPress(input, event);\n      if (!input.defaultPrevented && event.button === 0) {\n        this.press(input, event);\n      }\n    }\n  };\n\n  MousePositionGesture.prototype.onMouseLeaveDocument = function (this: MousePositionGesture, event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.cancelPress(input, event);\n      this.endHover(input, event);\n    }\n  };\n\n  MousePositionGesture.construct = function <G extends MousePositionGesture<any, any>>(gestureClass: PositionGestureClass<MousePositionGesture<any, any>>, gesture: G | null, owner: FastenerOwner<G>): G {\n    gesture = _super.construct(gestureClass, gesture, owner) as G;\n    gesture.onMouseEnter = gesture.onMouseEnter.bind(gesture);\n    gesture.onMouseLeave = gesture.onMouseLeave.bind(gesture);\n    gesture.onMouseDown = gesture.onMouseDown.bind(gesture);\n    gesture.onMouseMove = gesture.onMouseMove.bind(gesture);\n    gesture.onMouseUp = gesture.onMouseUp.bind(gesture);\n    gesture.onMouseLeaveDocument = gesture.onMouseLeaveDocument.bind(gesture);\n    return gesture;\n  };\n\n  return MousePositionGesture;\n})(PositionGesture);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {GestureInputType} from \"./GestureInput\";\nimport {PositionGestureInput} from \"./PositionGestureInput\";\n\n/** @public */\nexport class MomentumGestureInput extends PositionGestureInput {\n  vx: number;\n  vy: number;\n  ax: number;\n  ay: number;\n\n  /** @internal */\n  readonly path: {x: number; y: number; t: number;}[];\n  coasting: boolean;\n\n  constructor(inputId: string, inputType: GestureInputType, isPrimary: boolean,\n              x: number, y: number, t: number) {\n    super(inputId, inputType, isPrimary, x, y, t);\n    this.vx = 0;\n    this.vy = 0;\n    this.ax = 0;\n    this.ay = 0;\n    this.path = [];\n    this.coasting = false;\n  }\n\n  /** @internal */\n  updatePosition(hysteresis: number): void {\n    const path = this.path;\n    const x = this.x;\n    const y = this.y;\n    const t = this.t;\n    path.push({x, y, t});\n    while (path.length > 1 && t - path[0]!.t > hysteresis) {\n      path.shift();\n    }\n  }\n\n  /** @internal */\n  deriveVelocity(vMax: number): void {\n    const p0 = this.path[0]!;\n    const p1 = this.path[this.path.length - 1]!;\n    if (p1 !== void 0 && p1 !== p0) {\n      const dt = p1.t - p0.t;\n      let vx: number;\n      let vy: number;\n      if (dt !== 0) {\n        vx = (p1.x - p0.x) / dt;\n        vy = (p1.y - p0.y) / dt;\n        const v2 = vx * vx + vy * vy;\n        const vMax2 = vMax * vMax;\n        if (vMax2 < v2) {\n          const v = Math.sqrt(v2);\n          vx = vx * vMax / v;\n          vy = vy * vMax / v;\n        }\n      } else {\n        vx = 0;\n        vy = 0;\n      }\n      this.vx = vx;\n      this.vy = vy;\n    } else if (p0 !== void 0) {\n      this.vx = 0;\n      this.vy = 0;\n    }\n  }\n\n  /** @internal */\n  integrateVelocity(t: number): void {\n    const dt = t - this.t;\n    if (dt !== 0) {\n      let vx = this.vx + this.ax * dt;\n      let x: number;\n      if (vx < 0 === this.vx < 0) {\n        x = this.x + this.vx * dt + 0.5 * (this.ax * dt * dt);\n      } else {\n        x = this.x - (this.vx * this.vx) / (2 * this.ax);\n        vx = 0;\n        this.ax = 0;\n      }\n\n      let vy = this.vy + this.ay * dt;\n      let y: number;\n      if (vy < 0 === this.vy < 0) {\n        y = this.y + this.vy * dt + 0.5 * (this.ay * dt * dt);\n      } else {\n        y = this.y - (this.vy * this.vy) / (2 * this.ay);\n        vy = 0;\n        this.ay = 0;\n      }\n\n      this.dx = x - this.x;\n      this.dy = y - this.y;\n      this.dt = dt;\n      this.x = x;\n      this.y = y;\n      this.t = t;\n      this.vx = vx;\n      this.vy = vy;\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, ObserverType} from \"@swim/util\";\nimport type {FastenerOwner} from \"@swim/component\";\nimport type {GestureInputType} from \"./GestureInput\";\nimport type {GestureMethod} from \"./Gesture\";\nimport {PositionGestureInit, PositionGestureClass, PositionGesture} from \"./PositionGesture\";\nimport {MomentumGestureInput} from \"./MomentumGestureInput\";\nimport {MouseMomentumGesture} from \"./\"; // forward import\nimport {TouchMomentumGesture} from \"./\"; // forward import\nimport {PointerMomentumGesture} from \"./\"; // forward import\nimport type {ViewContext} from \"../view/ViewContext\";\nimport {View} from \"../\"; // forward import\n\n/** @public */\nexport interface MomentumGestureInit<V extends View = View> extends PositionGestureInit<V> {\n  extends?: {prototype: MomentumGesture<any, any>} | string | boolean | null;\n\n  /**\n   * The time delta for velocity derivation, in milliseconds.\n   */\n  hysteresis?: number;\n\n  /**\n   * The magnitude of the deceleration on coasting input points in,\n   * pixels/millisecond^2. An acceleration of zero disables coasting.\n   */\n  acceleration?: number;\n\n  /**\n   * The maximum magnitude of the velocity of coasting input points,\n   * in pixels/millisecond.\n   */\n  velocityMax?: number;\n\n  willBeginHover?(input: MomentumGestureInput, event: Event | null): void;\n  didBeginHover?(input: MomentumGestureInput, event: Event | null): void;\n  willEndHover?(input: MomentumGestureInput, event: Event | null): void;\n  didEndHover?(input: MomentumGestureInput, event: Event | null): void;\n\n  willStartInteracting?(): void;\n  didStartInteracting?(): void;\n  willStopInteracting?(): void;\n  didStopInteracting?(): void;\n\n  willBeginPress?(input: MomentumGestureInput, event: Event | null): boolean | void;\n  didBeginPress?(input: MomentumGestureInput, event: Event | null): void;\n\n  willMovePress?(input: MomentumGestureInput, event: Event | null): void;\n  didMovePress?(input: MomentumGestureInput, event: Event | null): void;\n\n  willEndPress?(input: MomentumGestureInput, event: Event | null): void;\n  didEndPress?(input: MomentumGestureInput, event: Event | null): void;\n\n  willCancelPress?(input: MomentumGestureInput, event: Event | null): void;\n  didCancelPress?(input: MomentumGestureInput, event: Event | null): void;\n\n  willPress?(input: MomentumGestureInput, event: Event | null): void;\n  didPress?(input: MomentumGestureInput, event: Event | null): void;\n\n  willLongPress?(input: MomentumGestureInput): void;\n  didLongPress?(input: MomentumGestureInput): void;\n\n  willStartCoasting?(): void;\n  didStartCoasting?(): void;\n  willStopCoasting?(): void;\n  didStopCoasting?(): void;\n\n  willBeginCoast?(input: MomentumGestureInput, event: Event | null): boolean | void;\n  didBeginCoast?(input: MomentumGestureInput, event: Event | null): void;\n  willEndCoast?(input: MomentumGestureInput, event: Event | null): void;\n  didEndCoast?(input: MomentumGestureInput, event: Event | null): void;\n\n  willCoast?(): void;\n  didCoast?(): void;\n}\n\n/** @public */\nexport type MomentumGestureDescriptor<O = unknown, V extends View = View, I = {}> = ThisType<MomentumGesture<O, V> & I> & MomentumGestureInit<V> & Partial<I>;\n\n/** @public */\nexport interface MomentumGestureClass<G extends MomentumGesture<any, any> = MomentumGesture<any, any>> extends PositionGestureClass<G> {\n  /** @internal */\n  readonly Hysteresis: number;\n  /** @internal */\n  readonly Acceleration: number;\n  /** @internal */\n  readonly VelocityMax: number;\n}\n\n/** @public */\nexport interface MomentumGestureFactory<G extends MomentumGesture<any, any> = MomentumGesture<any, any>> extends MomentumGestureClass<G> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): MomentumGestureFactory<G> & I;\n\n  specialize(method: GestureMethod): MomentumGestureFactory | null;\n\n  define<O, V extends View = View>(className: string, descriptor: MomentumGestureDescriptor<O, V>): MomentumGestureFactory<MomentumGesture<any, V>>;\n  define<O, V extends View = View>(className: string, descriptor: {observes: boolean} & MomentumGestureDescriptor<O, V, ObserverType<V>>): MomentumGestureFactory<MomentumGesture<any, V>>;\n  define<O, V extends View = View, I = {}>(className: string, descriptor: {implements: unknown} & MomentumGestureDescriptor<O, V, I>): MomentumGestureFactory<MomentumGesture<any, V> & I>;\n  define<O, V extends View = View, I = {}>(className: string, descriptor: {implements: unknown; observes: boolean} & MomentumGestureDescriptor<O, V, I & ObserverType<V>>): MomentumGestureFactory<MomentumGesture<any, V> & I>;\n\n  <O, V extends View = View>(descriptor: MomentumGestureDescriptor<O, V>): PropertyDecorator;\n  <O, V extends View = View>(descriptor: {observes: boolean} & MomentumGestureDescriptor<O, V, ObserverType<V>>): PropertyDecorator;\n  <O, V extends View = View, I = {}>(descriptor: {implements: unknown} & MomentumGestureDescriptor<O, V, I>): PropertyDecorator;\n  <O, V extends View = View, I = {}>(descriptor: {implements: unknown; observes: boolean} & MomentumGestureDescriptor<O, V, I & ObserverType<V>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface MomentumGesture<O = unknown, V extends View = View> extends PositionGesture<O, V> {\n  /** @internal @override */\n  readonly inputs: {readonly [inputId: string]: MomentumGestureInput | undefined};\n\n  /** @override */\n  getInput(inputId: string | number): MomentumGestureInput | null;\n\n  /** @internal @override */\n  createInput(inputId: string, inputType: GestureInputType, isPrimary: boolean,\n              x: number, y: number, t: number): MomentumGestureInput;\n\n  /** @internal @override */\n  getOrCreateInput(inputId: string | number, inputType: GestureInputType, isPrimary: boolean,\n                   x: number, y: number, t: number): MomentumGestureInput;\n\n  /** @internal @override */\n  clearInput(input: MomentumGestureInput): void;\n\n  /** @internal @override */\n  clearInputs(): void;\n\n  hysteresis: number;\n\n  acceleration: number;\n\n  velocityMax: number;\n\n  /** @internal */\n  viewWillAnimate(viewContext: ViewContext): void;\n\n  /** @internal */\n  interrupt(event: Event | null): void;\n\n  /** @internal */\n  cancel(event: Event | null): void;\n\n  /** @internal */\n  startInteracting(): void;\n\n  /** @protected */\n  willStartInteracting(): void;\n\n  /** @protected */\n  onStartInteracting(): void;\n\n  /** @protected */\n  didStartInteracting(): void;\n\n  /** @internal */\n  stopInteracting(): void;\n\n  /** @protected */\n  willStopInteracting(): void;\n\n  /** @protected */\n  onStopInteracting(): void;\n\n  /** @protected */\n  didStopInteracting(): void;\n\n  /** @internal @override */\n  onStartPressing(): void;\n\n  /** @internal @override */\n  onStopPressing(): void;\n\n  /** @internal @override */\n  beginPress(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @protected @override */\n  onBeginPress(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @protected @override */\n  onMovePress(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @protected @override */\n  willEndPress(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @protected @override */\n  onEndPress(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @protected @override */\n  onCancelPress(input: MomentumGestureInput, event: Event | null): void;\n\n  readonly coastCount: number;\n\n  get coasting(): boolean;\n\n  /** @internal */\n  startCoasting(): void;\n\n  /** @protected */\n  willStartCoasting(): void;\n\n  /** @protected */\n  onStartCoasting(): void;\n\n  /** @protected */\n  didStartCoasting(): void;\n\n  /** @internal */\n  stopCoasting(): void;\n\n  /** @protected */\n  willStopCoasting(): void;\n\n  /** @protected */\n  onStopCoasting(): void;\n\n  /** @protected */\n  didStopCoasting(): void;\n\n  /** @internal */\n  beginCoast(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @protected */\n  willBeginCoast(input: MomentumGestureInput, event: Event | null): boolean | void;\n\n  /** @protected */\n  onBeginCoast(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @protected */\n  didBeginCoast(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @internal */\n  endCoast(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @protected */\n  willEndCoast(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @protected */\n  onEndCoast(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @protected */\n  didEndCoast(input: MomentumGestureInput, event: Event | null): void;\n\n  /** @internal */\n  doCoast(t: number): void;\n\n  /** @protected */\n  willCoast(): void;\n\n  /** @protected */\n  onCoast(): void;\n\n  /** @protected */\n  didCoast(): void;\n\n  /** @internal */\n  integrate(t: number): void;\n}\n\n/** @public */\nexport const MomentumGesture = (function (_super: typeof PositionGesture) {\n  const MomentumGesture: MomentumGestureFactory = _super.extend(\"MomentumGesture\");\n\n  Object.defineProperty(MomentumGesture.prototype, \"observes\", {\n    value: true,\n    enumerable: true,\n    configurable: true,\n  });\n\n  MomentumGesture.prototype.createInput = function (this: MomentumGesture, inputId: string, inputType: GestureInputType, isPrimary: boolean,\n                                                    x: number, y: number, t: number): MomentumGestureInput {\n    return new MomentumGestureInput(inputId, inputType, isPrimary, x, y, t);\n  };\n\n  MomentumGesture.prototype.clearInput = function (this: MomentumGesture, input: MomentumGestureInput): void {\n    if (!input.coasting) {\n      PositionGesture.prototype.clearInput.call(this, input);\n    }\n  };\n\n  MomentumGesture.prototype.clearInputs = function (this: MomentumGesture): void {\n    PositionGesture.prototype.clearInputs.call(this);\n    (this as Mutable<typeof this>).coastCount = 0;\n  };\n\n  MomentumGesture.prototype.viewWillAnimate = function (this: MomentumGesture, viewContext: ViewContext): void {\n    this.doCoast(viewContext.updateTime);\n  };\n\n  MomentumGesture.prototype.interrupt = function (this: MomentumGesture, event: Event | null): void {\n    const inputs = this.inputs;\n    for (const inputId in inputs) {\n      const input = inputs[inputId]!;\n      this.endCoast(input, event);\n    }\n  };\n\n  MomentumGesture.prototype.cancel = function (this: MomentumGesture, event: Event | null): void {\n    const inputs = this.inputs;\n    for (const inputId in inputs) {\n      const input = inputs[inputId]!;\n      this.endPress(input, event);\n      this.endCoast(input, event);\n    }\n  };\n\n  MomentumGesture.prototype.startInteracting = function (this: MomentumGesture): void {\n    this.willStartInteracting();\n    this.onStartInteracting();\n    this.didStartInteracting();\n  };\n\n  MomentumGesture.prototype.willStartInteracting = function (this: MomentumGesture): void {\n    // hook\n  };\n\n  MomentumGesture.prototype.onStartInteracting = function (this: MomentumGesture): void {\n    // hook\n  };\n\n  MomentumGesture.prototype.didStartInteracting = function (this: MomentumGesture): void {\n    // hook\n  };\n\n  MomentumGesture.prototype.stopInteracting = function (this: MomentumGesture): void {\n    this.willStopInteracting();\n    this.onStopInteracting();\n    this.didStopInteracting();\n  };\n\n  MomentumGesture.prototype.willStopInteracting = function (this: MomentumGesture): void {\n    // hook\n  };\n\n  MomentumGesture.prototype.onStopInteracting = function (this: MomentumGesture): void {\n    // hook\n  };\n\n  MomentumGesture.prototype.didStopInteracting = function (this: MomentumGesture): void {\n    // hook\n  };\n\n  MomentumGesture.prototype.onStartPressing = function (this: MomentumGesture): void {\n    PositionGesture.prototype.onStartPressing.call(this);\n    if (this.coastCount === 0) {\n      this.startInteracting();\n    }\n  };\n\n  MomentumGesture.prototype.onStopPressing = function (this: MomentumGesture): void {\n    PositionGesture.prototype.onStopPressing.call(this);\n    if (this.coastCount === 0) {\n      this.stopInteracting();\n    }\n  };\n\n  MomentumGesture.prototype.beginPress = function (this: MomentumGesture, input: MomentumGestureInput, event: Event | null): void {\n    PositionGesture.prototype.beginPress.call(this, input, event);\n    this.interrupt(event);\n  };\n\n  MomentumGesture.prototype.onBeginPress = function (this: MomentumGesture, input: MomentumGestureInput, event: Event | null): void {\n    PositionGesture.prototype.onBeginPress.call(this, input, event);\n    input.updatePosition(this.hysteresis);\n    input.deriveVelocity(this.velocityMax);\n  };\n\n  MomentumGesture.prototype.onMovePress = function (this: MomentumGesture, input: MomentumGestureInput, event: Event | null): void {\n    PositionGesture.prototype.onMovePress.call(this, input, event);\n    input.updatePosition(this.hysteresis);\n    input.deriveVelocity(this.velocityMax);\n  };\n\n  MomentumGesture.prototype.willEndPress = function (this: MomentumGesture, input: MomentumGestureInput, event: Event | null): void {\n    PositionGesture.prototype.willEndPress.call(this, input, event);\n    this.beginCoast(input, event);\n  };\n\n  MomentumGesture.prototype.onEndPress = function (this: MomentumGesture, input: MomentumGestureInput, event: Event | null): void {\n    PositionGesture.prototype.onEndPress.call(this, input, event);\n    input.updatePosition(this.hysteresis);\n    input.deriveVelocity(this.velocityMax);\n  };\n\n  MomentumGesture.prototype.onCancelPress = function (this: MomentumGesture, input: MomentumGestureInput, event: Event | null): void {\n    PositionGesture.prototype.onCancelPress.call(this, input, event);\n    input.updatePosition(this.hysteresis);\n    input.deriveVelocity(this.velocityMax);\n  };\n\n  Object.defineProperty(MomentumGesture.prototype, \"coasting\", {\n    get(this: MomentumGesture): boolean {\n      return this.coastCount !== 0;\n    },\n    configurable: true,\n  })\n\n  MomentumGesture.prototype.startCoasting = function (this: MomentumGesture): void {\n    this.willStartCoasting();\n    this.onStartCoasting();\n    this.didStartCoasting();\n  };\n\n  MomentumGesture.prototype.willStartCoasting = function (this: MomentumGesture): void {\n    // hook\n  };\n\n  MomentumGesture.prototype.onStartCoasting = function (this: MomentumGesture): void {\n    if (this.pressCount === 0) {\n      this.startInteracting();\n    }\n    if (this.view !== null) {\n      this.view.requireUpdate(View.NeedsAnimate);\n    }\n  };\n\n  MomentumGesture.prototype.didStartCoasting = function (this: MomentumGesture): void {\n    // hook\n  };\n\n  MomentumGesture.prototype.stopCoasting = function (this: MomentumGesture): void {\n    this.willStopCoasting();\n    this.onStopCoasting();\n    this.didStopCoasting();\n  };\n\n  MomentumGesture.prototype.willStopCoasting = function (this: MomentumGesture): void {\n    // hook\n  };\n\n  MomentumGesture.prototype.onStopCoasting = function (this: MomentumGesture): void {\n    if (this.pressCount === 0) {\n      this.stopInteracting();\n    }\n  };\n\n  MomentumGesture.prototype.didStopCoasting = function (this: MomentumGesture): void {\n    // hook\n  };\n\n  MomentumGesture.prototype.beginCoast = function (this: MomentumGesture, input: MomentumGestureInput, event: Event | null): void {\n    if (!input.coasting && (input.vx !== 0 || input.vy !== 0)) {\n      const angle = Math.atan2(Math.abs(input.vy), Math.abs(input.vx));\n      const a = this.acceleration;\n      const ax = (input.vx < 0 ? a : input.vx > 0 ? -a : 0) * Math.cos(angle);\n      const ay = (input.vy < 0 ? a : input.vy > 0 ? -a : 0) * Math.sin(angle);\n      if (ax !== 0 || ay !== 0) {\n        input.ax = ax;\n        input.ay = ay;\n        let allowCoast = this.willBeginCoast(input, event);\n        if (allowCoast === void 0) {\n          allowCoast = true;\n        }\n        if (allowCoast) {\n          input.coasting = true;\n          (this as Mutable<typeof this>).coastCount += 1;\n          this.onBeginCoast(input, event);\n          this.didBeginCoast(input, event);\n          if (this.coastCount === 1) {\n            this.startCoasting();\n          }\n        }\n      }\n    }\n  };\n\n  MomentumGesture.prototype.willBeginCoast = function (this: MomentumGesture, input: MomentumGestureInput, event: Event | null): boolean | void {\n    // hook\n  };\n\n  MomentumGesture.prototype.onBeginCoast = function (this: MomentumGesture, input: MomentumGestureInput, event: Event | null): void {\n    input.x0 = input.x;\n    input.y0 = input.y;\n    input.t0 = input.t;\n    input.dx = 0;\n    input.dy = 0;\n    input.dt = 0;\n  };\n\n  MomentumGesture.prototype.didBeginCoast = function (this: MomentumGesture, input: MomentumGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  MomentumGesture.prototype.endCoast = function (this: MomentumGesture, input: MomentumGestureInput, event: Event | null): void {\n    if (input.coasting) {\n      this.willEndCoast(input, event);\n      input.coasting = false;\n      (this as Mutable<typeof this>).coastCount -= 1;\n      this.onEndCoast(input, event);\n      this.didEndCoast(input, event);\n      if (this.coastCount === 0) {\n        this.stopCoasting();\n      }\n      this.clearInput(input);\n    }\n  };\n\n  MomentumGesture.prototype.willEndCoast = function (this: MomentumGesture, input: MomentumGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  MomentumGesture.prototype.onEndCoast = function (this: MomentumGesture, input: MomentumGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  MomentumGesture.prototype.didEndCoast = function (this: MomentumGesture, input: MomentumGestureInput, event: Event | null): void {\n    // hook\n  };\n\n  MomentumGesture.prototype.doCoast = function (this: MomentumGesture, t: number): void {\n    if (this.coastCount !== 0) {\n      this.willCoast();\n      this.integrate(t);\n      this.onCoast();\n      const inputs = this.inputs;\n      for (const inputId in inputs) {\n        const input = inputs[inputId]!;\n        if (input.coasting && input.ax === 0 && input.ay === 0) {\n          this.endCoast(input, null);\n        }\n      }\n      this.didCoast();\n      if (this.coastCount !== 0 && this.view !== null) {\n        this.view.requireUpdate(View.NeedsAnimate);\n      }\n    }\n  };\n\n  MomentumGesture.prototype.willCoast = function (this: MomentumGesture): void {\n    // hook\n  };\n\n  MomentumGesture.prototype.onCoast = function (this: MomentumGesture): void {\n    // hook\n  };\n\n  MomentumGesture.prototype.didCoast = function (this: MomentumGesture): void {\n    // hook\n  };\n\n  MomentumGesture.prototype.integrate = function (this: MomentumGesture, t: number): void {\n    const inputs = this.inputs;\n    for (const inputId in inputs) {\n      const input = inputs[inputId]!;\n      if (input.coasting) {\n        input.integrateVelocity(t);\n      }\n    }\n  };\n\n  MomentumGesture.construct = function <G extends MomentumGesture<any, any>>(gestureClass: {prototype: G}, gesture: G | null, owner: FastenerOwner<G>): G {\n    gesture = _super.construct(gestureClass, gesture, owner) as G;\n    (gesture as Mutable<typeof gesture>).coastCount = 0;\n    gesture.hysteresis = MomentumGesture.Hysteresis;\n    gesture.acceleration = MomentumGesture.Acceleration;\n    gesture.velocityMax = MomentumGesture.VelocityMax;\n    return gesture;\n  };\n\n  MomentumGesture.specialize = function (method: GestureMethod): MomentumGestureFactory | null {\n    if (method === \"pointer\") {\n      return PointerMomentumGesture;\n    } else if (method === \"touch\") {\n      return TouchMomentumGesture;\n    } else if (method === \"mouse\") {\n      return MouseMomentumGesture;\n    } else if (typeof PointerEvent !== \"undefined\") {\n      return PointerMomentumGesture;\n    } else if (typeof TouchEvent !== \"undefined\") {\n      return TouchMomentumGesture;\n    } else {\n      return MouseMomentumGesture;\n    }\n  };\n\n  MomentumGesture.define = function <O, V extends View>(className: string, descriptor: MomentumGestureDescriptor<O, V>): MomentumGestureFactory<MomentumGesture<any, V>> {\n    let superClass = descriptor.extends as MomentumGestureFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    let method = descriptor.method;\n    const hysteresis = descriptor.hysteresis;\n    const acceleration = descriptor.hysteresis;\n    const velocityMax = descriptor.hysteresis;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n    delete descriptor.method;\n    delete descriptor.hysteresis;\n    delete descriptor.acceleration;\n    delete descriptor.velocityMax;\n\n    if (descriptor.key === true) {\n      Object.defineProperty(descriptor, \"key\", {\n        value: className,\n        configurable: true,\n      });\n    } else if (descriptor.key === false) {\n      Object.defineProperty(descriptor, \"key\", {\n        value: void 0,\n        configurable: true,\n      });\n    }\n\n    if (method === void 0) {\n      method = \"auto\";\n    }\n    if (superClass === void 0 || superClass === null) {\n      superClass = MomentumGesture.specialize(method);\n    }\n    if (superClass === null) {\n      superClass = this;\n    }\n\n    const gestureClass = superClass.extend(className, descriptor);\n\n    gestureClass.construct = function (gestureClass: {prototype: MomentumGesture<any, any>}, gesture: MomentumGesture<O, V> | null, owner: O): MomentumGesture<O, V> {\n      gesture = superClass!.construct(gestureClass, gesture, owner);\n      if (affinity !== void 0) {\n        gesture.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        gesture.initInherits(inherits);\n      }\n      if (hysteresis !== void 0) {\n        gesture.hysteresis = hysteresis;\n      }\n      if (acceleration !== void 0) {\n        gesture.acceleration = acceleration;\n      }\n      if (velocityMax !== void 0) {\n        gesture.velocityMax = velocityMax;\n      }\n      return gesture;\n    };\n\n    return gestureClass;\n  };\n\n  (MomentumGesture as Mutable<typeof MomentumGesture>).Hysteresis = 67;\n  (MomentumGesture as Mutable<typeof MomentumGesture>).Acceleration = 0.00175;\n  (MomentumGesture as Mutable<typeof MomentumGesture>).VelocityMax = 1.75;\n\n  return MomentumGesture;\n})(PositionGesture);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {FastenerOwner} from \"@swim/component\";\nimport {GestureInput} from \"./GestureInput\";\nimport type {MomentumGestureInput} from \"./MomentumGestureInput\";\nimport {MomentumGestureClass, MomentumGestureFactory, MomentumGesture} from \"./MomentumGesture\";\nimport type {View} from \"../view/View\";\n\n/** @internal */\nexport interface PointerMomentumGesture<O = unknown, V extends View = View> extends MomentumGesture<O, V> {\n  /** @internal @protected @override */\n  attachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  attachPressEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachPressEvents(view: V): void;\n\n  /** @internal @protected */\n  updateInput(input: MomentumGestureInput, event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerEnter(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerLeave(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerDown(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerMove(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerUp(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerCancel(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerLeaveDocument(event: PointerEvent): void;\n}\n\n/** @internal */\nexport const PointerMomentumGesture = (function (_super: typeof MomentumGesture) {\n  const PointerMomentumGesture = _super.extend(\"PointerMomentumGesture\") as MomentumGestureFactory<PointerMomentumGesture<any, any>>;\n\n  PointerMomentumGesture.prototype.attachHoverEvents = function (this: PointerMomentumGesture, view: View): void {\n    view.on(\"pointerenter\", this.onPointerEnter as EventListener);\n    view.on(\"pointerleave\", this.onPointerLeave as EventListener);\n    view.on(\"pointerdown\", this.onPointerDown as EventListener);\n  };\n\n  PointerMomentumGesture.prototype.detachHoverEvents = function (this: PointerMomentumGesture, view: View): void {\n    view.off(\"pointerenter\", this.onPointerEnter as EventListener);\n    view.off(\"pointerleave\", this.onPointerLeave as EventListener);\n    view.off(\"pointerdown\", this.onPointerDown as EventListener);\n  };\n\n  PointerMomentumGesture.prototype.attachPressEvents = function (this: PointerMomentumGesture, view: View): void {\n    document.body.addEventListener(\"pointermove\", this.onPointerMove);\n    document.body.addEventListener(\"pointerup\", this.onPointerUp);\n    document.body.addEventListener(\"pointercancel\", this.onPointerCancel);\n    document.body.addEventListener(\"pointerleave\", this.onPointerLeaveDocument);\n  };\n\n  PointerMomentumGesture.prototype.detachPressEvents = function (this: PointerMomentumGesture, view: View): void {\n    document.body.removeEventListener(\"pointermove\", this.onPointerMove);\n    document.body.removeEventListener(\"pointerup\", this.onPointerUp);\n    document.body.removeEventListener(\"pointercancel\", this.onPointerCancel);\n    document.body.removeEventListener(\"pointerleave\", this.onPointerLeaveDocument);\n  };\n\n  PointerMomentumGesture.prototype.updateInput = function (this: PointerMomentumGesture, input: MomentumGestureInput, event: PointerEvent): void {\n    input.target = event.target;\n    input.button = event.button;\n    input.buttons = event.buttons;\n    input.altKey = event.altKey;\n    input.ctrlKey = event.ctrlKey;\n    input.metaKey = event.metaKey;\n    input.shiftKey = event.shiftKey;\n\n    input.dx = event.clientX - input.x;\n    input.dy = event.clientY - input.y;\n    input.dt = event.timeStamp - input.t;\n    input.x = event.clientX;\n    input.y = event.clientY;\n    input.t = event.timeStamp;\n\n    input.width = event.width;\n    input.height = event.height;\n    input.tiltX = event.tiltX;\n    input.tiltY = event.tiltY;\n    input.twist = event.twist;\n    input.pressure = event.pressure;\n    input.tangentialPressure = event.tangentialPressure;\n  };\n\n  PointerMomentumGesture.prototype.onPointerEnter = function (this: PointerMomentumGesture, event: PointerEvent): void {\n    if (event.pointerType === \"mouse\" && event.buttons === 0) {\n      const input = this.getOrCreateInput(event.pointerId, GestureInput.pointerInputType(event.pointerType),\n                                          event.isPrimary, event.clientX, event.clientY, event.timeStamp);\n      this.updateInput(input, event);\n      if (!input.hovering) {\n        this.beginHover(input, event);\n      }\n    }\n  };\n\n  PointerMomentumGesture.prototype.onPointerLeave = function (this: PointerMomentumGesture, event: PointerEvent): void {\n    if (event.pointerType === \"mouse\") {\n      const input = this.getInput(event.pointerId);\n      if (input !== null) {\n        this.updateInput(input, event);\n        this.endHover(input, event);\n      }\n    }\n  };\n\n  PointerMomentumGesture.prototype.onPointerDown = function (this: PointerMomentumGesture, event: PointerEvent): void {\n    const input = this.getOrCreateInput(event.pointerId, GestureInput.pointerInputType(event.pointerType),\n                                        event.isPrimary, event.clientX, event.clientY, event.timeStamp);\n    this.updateInput(input, event);\n    if (!input.pressing) {\n      this.beginPress(input, event);\n    }\n    if (event.pointerType === \"mouse\" && event.button !== 0) {\n      this.cancelPress(input, event);\n    }\n  };\n\n  PointerMomentumGesture.prototype.onPointerMove = function (this: PointerMomentumGesture, event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.movePress(input, event);\n    }\n  };\n\n  PointerMomentumGesture.prototype.onPointerUp = function (this: PointerMomentumGesture, event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.endPress(input, event);\n      if (!input.defaultPrevented && event.button === 0) {\n        this.press(input, event);\n      }\n    }\n  };\n\n  PointerMomentumGesture.prototype.onPointerCancel = function (this: PointerMomentumGesture, event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.cancelPress(input, event);\n    }\n  };\n\n  PointerMomentumGesture.prototype.onPointerLeaveDocument = function (this: PointerMomentumGesture, event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.cancelPress(input, event);\n      this.endHover(input, event);\n    }\n  };\n\n  PointerMomentumGesture.construct = function <G extends PointerMomentumGesture<any, any>>(gestureClass: MomentumGestureClass<PointerMomentumGesture<any, any>>, gesture: G | null, owner: FastenerOwner<G>): G {\n    gesture = _super.construct(gestureClass, gesture, owner) as G;\n    gesture.onPointerEnter = gesture.onPointerEnter.bind(gesture);\n    gesture.onPointerLeave = gesture.onPointerLeave.bind(gesture);\n    gesture.onPointerDown = gesture.onPointerDown.bind(gesture);\n    gesture.onPointerMove = gesture.onPointerMove.bind(gesture);\n    gesture.onPointerUp = gesture.onPointerUp.bind(gesture);\n    gesture.onPointerCancel = gesture.onPointerCancel.bind(gesture);\n    gesture.onPointerLeaveDocument = gesture.onPointerLeaveDocument.bind(gesture);\n    return gesture;\n  };\n\n  return PointerMomentumGesture;\n})(MomentumGesture);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {FastenerOwner} from \"@swim/component\";\nimport type {MomentumGestureInput} from \"./MomentumGestureInput\";\nimport {MomentumGestureClass, MomentumGestureFactory, MomentumGesture} from \"./MomentumGesture\";\nimport type {View} from \"../view/View\";\n\n/** @internal */\nexport interface TouchMomentumGesture<O = unknown, V extends View = View> extends MomentumGesture<O, V> {\n  /** @internal @protected @override */\n  attachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  attachPressEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachPressEvents(view: V): void;\n\n  /** @internal @protected */\n  updateInput(input: MomentumGestureInput, event: TouchEvent, touch: Touch): void;\n\n  /** @internal @protected */\n  onTouchStart(event: TouchEvent): void;\n\n  /** @internal @protected */\n  onTouchMove(event: TouchEvent): void;\n\n  /** @internal @protected */\n  onTouchEnd(event: TouchEvent): void;\n\n  /** @internal @protected */\n  onTouchCancel(event: TouchEvent): void;\n}\n\n/** @internal */\nexport const TouchMomentumGesture = (function (_super: typeof MomentumGesture) {\n  const TouchMomentumGesture = _super.extend(\"TouchMomentumGesture\") as MomentumGestureFactory<TouchMomentumGesture<any, any>>;\n\n  TouchMomentumGesture.prototype.attachHoverEvents = function (this: TouchMomentumGesture, view: View): void {\n    view.on(\"touchstart\", this.onTouchStart as EventListener);\n  };\n\n  TouchMomentumGesture.prototype.detachHoverEvents = function (this: TouchMomentumGesture, view: View): void {\n    view.off(\"touchstart\", this.onTouchStart as EventListener);\n  };\n\n  TouchMomentumGesture.prototype.attachPressEvents = function (this: TouchMomentumGesture, view: View): void {\n    view.on(\"touchmove\", this.onTouchMove as EventListener);\n    view.on(\"touchend\", this.onTouchEnd as EventListener);\n    view.on(\"touchcancel\", this.onTouchCancel as EventListener);\n  };\n\n  TouchMomentumGesture.prototype.detachPressEvents = function (this: TouchMomentumGesture, view: View): void {\n    view.off(\"touchmove\", this.onTouchMove as EventListener);\n    view.off(\"touchend\", this.onTouchEnd as EventListener);\n    view.off(\"touchcancel\", this.onTouchCancel as EventListener);\n  };\n\n  TouchMomentumGesture.prototype.updateInput = function (this: TouchMomentumGesture, input: MomentumGestureInput, event: TouchEvent, touch: Touch): void {\n    input.target = touch.target;\n    input.altKey = event.altKey;\n    input.ctrlKey = event.ctrlKey;\n    input.metaKey = event.metaKey;\n    input.shiftKey = event.shiftKey;\n\n    input.dx = touch.clientX - input.x;\n    input.dy = touch.clientY - input.y;\n    input.dt = event.timeStamp - input.t;\n    input.x = touch.clientX;\n    input.y = touch.clientY;\n    input.t = event.timeStamp;\n  };\n\n  TouchMomentumGesture.prototype.onTouchStart = function (this: TouchMomentumGesture, event: TouchEvent): void {\n    const touches = event.targetTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getOrCreateInput(touch.identifier, \"touch\", false, touch.clientX, touch.clientY, event.timeStamp);\n      this.updateInput(input, event, touch);\n      if (!input.pressing) {\n        this.beginPress(input, event);\n      }\n    }\n  };\n\n  TouchMomentumGesture.prototype.onTouchMove = function (this: TouchMomentumGesture, event: TouchEvent): void {\n    const touches = event.changedTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getInput(touch.identifier);\n      if (input !== null) {\n        this.updateInput(input, event, touch);\n        this.movePress(input, event);\n      }\n    }\n  };\n\n  TouchMomentumGesture.prototype.onTouchEnd = function (this: TouchMomentumGesture, event: TouchEvent): void {\n    const touches = event.changedTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getInput(touch.identifier);\n      if (input !== null) {\n        this.updateInput(input, event, touch);\n        this.endPress(input, event);\n        if (!input.defaultPrevented) {\n          this.press(input, event);\n        }\n        this.endHover(input, event);\n      }\n    }\n  };\n\n  TouchMomentumGesture.prototype.onTouchCancel = function (this: TouchMomentumGesture, event: TouchEvent): void {\n    const touches = event.changedTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getInput(touch.identifier);\n      if (input !== null) {\n        this.updateInput(input, event, touch);\n        this.cancelPress(input, event);\n        this.endHover(input, event);\n      }\n    }\n  };\n\n  TouchMomentumGesture.construct = function <G extends TouchMomentumGesture<any, any>>(gestureClass: MomentumGestureClass<TouchMomentumGesture<any, any>>, gesture: G | null, owner: FastenerOwner<G>): G {\n    gesture = _super.construct(gestureClass, gesture, owner) as G;\n    gesture.onTouchStart = gesture.onTouchStart.bind(gesture);\n    gesture.onTouchMove = gesture.onTouchMove.bind(gesture);\n    gesture.onTouchEnd = gesture.onTouchEnd.bind(gesture);\n    gesture.onTouchCancel = gesture.onTouchCancel.bind(gesture);\n    return gesture;\n  };\n\n  return TouchMomentumGesture;\n})(MomentumGesture);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {FastenerOwner} from \"@swim/component\";\nimport type {MomentumGestureInput} from \"./MomentumGestureInput\";\nimport {MomentumGestureClass, MomentumGestureFactory, MomentumGesture} from \"./MomentumGesture\";\nimport type {View} from \"../view/View\";\n\n/** @internal */\nexport interface MouseMomentumGesture<O = unknown, V extends View = View> extends MomentumGesture<O, V> {\n  /** @internal @protected @override */\n  attachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  attachPressEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachPressEvents(view: V): void;\n\n  /** @internal @protected */\n  updateInput(input: MomentumGestureInput, event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseEnter(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseLeave(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseDown(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseMove(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseUp(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseLeaveDocument(event: MouseEvent): void;\n}\n\n/** @internal */\nexport const MouseMomentumGesture = (function (_super: typeof MomentumGesture) {\n  const MouseMomentumGesture = _super.extend(\"MouseMomentumGesture\") as MomentumGestureFactory<MouseMomentumGesture<any, any>>;\n\n  MouseMomentumGesture.prototype.attachHoverEvents = function (this: MouseMomentumGesture, view: View): void {\n    view.on(\"mouseenter\", this.onMouseEnter as EventListener);\n    view.on(\"mouseleave\", this.onMouseLeave as EventListener);\n    view.on(\"mousedown\", this.onMouseDown as EventListener);\n  };\n\n  MouseMomentumGesture.prototype.detachHoverEvents = function (this: MouseMomentumGesture, view: View): void {\n    view.off(\"mouseenter\", this.onMouseEnter as EventListener);\n    view.off(\"mouseleave\", this.onMouseLeave as EventListener);\n    view.off(\"mousedown\", this.onMouseDown as EventListener);\n  };\n\n  MouseMomentumGesture.prototype.attachPressEvents = function (this: MouseMomentumGesture, view: View): void {\n    document.body.addEventListener(\"mousemove\", this.onMouseMove);\n    document.body.addEventListener(\"mouseup\", this.onMouseUp);\n    document.body.addEventListener(\"mouseleave\", this.onMouseLeaveDocument);\n  };\n\n  MouseMomentumGesture.prototype.detachPressEvents = function (this: MouseMomentumGesture, view: View): void {\n    document.body.removeEventListener(\"mousemove\", this.onMouseMove);\n    document.body.removeEventListener(\"mouseup\", this.onMouseUp);\n    document.body.removeEventListener(\"mouseleave\", this.onMouseLeaveDocument);\n  };\n\n  MouseMomentumGesture.prototype.updateInput = function (this: MouseMomentumGesture, input: MomentumGestureInput, event: MouseEvent): void {\n    input.target = event.target;\n    input.button = event.button;\n    input.buttons = event.buttons;\n    input.altKey = event.altKey;\n    input.ctrlKey = event.ctrlKey;\n    input.metaKey = event.metaKey;\n    input.shiftKey = event.shiftKey;\n\n    input.dx = event.clientX - input.x;\n    input.dy = event.clientY - input.y;\n    input.dt = event.timeStamp - input.t;\n    input.x = event.clientX;\n    input.y = event.clientY;\n    input.t = event.timeStamp;\n  };\n\n  MouseMomentumGesture.prototype.onMouseEnter = function (this: MouseMomentumGesture, event: MouseEvent): void {\n    if (event.buttons === 0) {\n      const input = this.getOrCreateInput(\"mouse\", \"mouse\", true, event.clientX, event.clientY, event.timeStamp);\n      this.updateInput(input, event);\n      if (!input.hovering) {\n        this.beginHover(input, event);\n      }\n    }\n  };\n\n  MouseMomentumGesture.prototype.onMouseLeave = function (this: MouseMomentumGesture, event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.endHover(input, event);\n    }\n  };\n\n  MouseMomentumGesture.prototype.onMouseDown = function (this: MouseMomentumGesture, event: MouseEvent): void {\n    const input = this.getOrCreateInput(\"mouse\", \"mouse\", true, event.clientX, event.clientY, event.timeStamp);\n    this.updateInput(input, event);\n    if (!input.pressing) {\n      this.beginPress(input, event);\n    }\n    if (event.button !== 0) {\n      this.cancelPress(input, event);\n    }\n  };\n\n  MouseMomentumGesture.prototype.onMouseMove = function (this: MouseMomentumGesture, event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.movePress(input, event);\n    }\n  };\n\n  MouseMomentumGesture.prototype.onMouseUp = function (this: MouseMomentumGesture, event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.endPress(input, event);\n      if (!input.defaultPrevented && event.button === 0) {\n        this.press(input, event);\n      }\n    }\n  };\n\n  MouseMomentumGesture.prototype.onMouseLeaveDocument = function (this: MouseMomentumGesture, event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.cancelPress(input, event);\n      this.endHover(input, event);\n    }\n  };\n\n  MouseMomentumGesture.construct = function <G extends MouseMomentumGesture<any, any>>(gestureClass: MomentumGestureClass<MouseMomentumGesture<any, any>>, gesture: G | null, owner: FastenerOwner<G>): G {\n    gesture = _super.construct(gestureClass, gesture, owner) as G;\n    gesture.onMouseEnter = gesture.onMouseEnter.bind(gesture);\n    gesture.onMouseLeave = gesture.onMouseLeave.bind(gesture);\n    gesture.onMouseDown = gesture.onMouseDown.bind(gesture);\n    gesture.onMouseMove = gesture.onMouseMove.bind(gesture);\n    gesture.onMouseUp = gesture.onMouseUp.bind(gesture);\n    gesture.onMouseLeaveDocument = gesture.onMouseLeaveDocument.bind(gesture);\n    return gesture;\n  };\n\n  return MouseMomentumGesture;\n})(MomentumGesture);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {GestureInputType} from \"./GestureInput\";\nimport {MomentumGestureInput} from \"./MomentumGestureInput\";\n\n/** @public */\nexport class ScaleGestureInput<X = unknown, Y = unknown> extends MomentumGestureInput {\n  xCoord: X | undefined;\n  yCoord: Y | undefined;\n  disableX: boolean;\n  disableY: boolean;\n\n  constructor(inputId: string, inputType: GestureInputType, isPrimary: boolean,\n              x: number, y: number, t: number) {\n    super(inputId, inputType, isPrimary, x, y, t);\n    this.xCoord = void 0;\n    this.yCoord = void 0;\n    this.disableX = false;\n    this.disableY = false;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, ObserverType, AnyTiming, ContinuousScale} from \"@swim/util\";\nimport type {FastenerOwner, FastenerFlags} from \"@swim/component\";\nimport type {R2Box} from \"@swim/math\";\nimport type {GestureInputType} from \"./GestureInput\";\nimport type {GestureMethod} from \"./Gesture\";\nimport {MomentumGestureInit, MomentumGestureClass, MomentumGesture} from \"./MomentumGesture\";\nimport {ScaleGestureInput} from \"./ScaleGestureInput\";\nimport {MouseScaleGesture} from \"./\"; // forward import\nimport {TouchScaleGesture} from \"./\"; // forward import\nimport {PointerScaleGesture} from \"./\"; // forward import\nimport type {ViewContext} from \"../view/ViewContext\";\nimport {View} from \"../\"; // forward import\n\n/** @public */\nexport interface ScaleGestureInit<V extends View = View, X = unknown, Y = unknown> extends MomentumGestureInit<V> {\n  extends?: {prototype: ScaleGesture<any, any, any, any>} | string | boolean | null;\n\n  /**\n   * The minimum radial distance between input positions, in pixels.\n   * Used to avoid scale gesture singularities.\n   */\n  distanceMin?: number;\n\n  preserveAspectRatio?: boolean;\n\n  wheel?: boolean;\n\n  getXScale?(): ContinuousScale<X, number> | null;\n\n  setXScale?(xScale: ContinuousScale<X, number> | null, timing?: AnyTiming | boolean): void;\n\n  getYScale?(): ContinuousScale<Y, number> | null;\n\n  setYScale?(yScale: ContinuousScale<Y, number> | null, timing?: AnyTiming | boolean): void;\n\n  willBeginHover?(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  didBeginHover?(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  willEndHover?(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  didEndHover?(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  willBeginPress?(input: ScaleGestureInput<X, Y>, event: Event | null): boolean | void;\n\n  didBeginPress?(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  willMovePress?(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  didMovePress?(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  willEndPress?(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  didEndPress?(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  willCancelPress?(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  didCancelPress?(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  willPress?(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  didPress?(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  willLongPress?(input: ScaleGestureInput<X, Y>): void;\n\n  didLongPress?(input: ScaleGestureInput<X, Y>): void;\n\n  willBeginCoast?(input: ScaleGestureInput<X, Y>, event: Event | null): boolean | void;\n\n  didBeginCoast?(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  willEndCoast?(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  didEndCoast?(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n}\n\n/** @public */\nexport type ScaleGestureDescriptor<O = unknown, V extends View = View, X = unknown, Y = unknown, I = {}> = ThisType<ScaleGesture<O, V, X, Y> & I> & ScaleGestureInit<V, X, Y> & Partial<I>;\n\n/** @public */\nexport interface ScaleGestureClass<G extends ScaleGesture<any, any, any, any> = ScaleGesture<any, any, any, any>> extends MomentumGestureClass<G> {\n  /** @internal */\n  readonly DistanceMin: number;\n\n  /** @internal */\n  readonly PreserveAspectRatioFlag: FastenerFlags;\n  /** @internal */\n  readonly WheelFlag: FastenerFlags;\n  /** @internal */\n  readonly NeedsRescale: FastenerFlags;\n\n  /** @internal @override */\n  readonly FlagShift: number;\n  /** @internal @override */\n  readonly FlagMask: FastenerFlags;\n}\n\n/** @public */\nexport interface ScaleGestureFactory<G extends ScaleGesture<any, any, any, any> = ScaleGesture<any, any, any, any>> extends ScaleGestureClass<G> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): ScaleGestureFactory<G> & I;\n\n  specialize(method: GestureMethod): ScaleGestureFactory | null;\n\n  define<O, V extends View = View, X = unknown, Y = unknown>(className: string, descriptor: ScaleGestureDescriptor<O, V, X, Y>): ScaleGestureFactory<ScaleGesture<any, V, X, Y>>;\n  define<O, V extends View = View, X = unknown, Y = unknown>(className: string, descriptor: {observes: boolean} & ScaleGestureDescriptor<O, V, X, Y, ObserverType<V>>): ScaleGestureFactory<ScaleGesture<any, V, X, Y>>;\n  define<O, V extends View = View, X = unknown, Y = unknown, I = {}>(className: string, descriptor: {implements: unknown} & ScaleGestureDescriptor<O, V, X, Y, I>): ScaleGestureFactory<ScaleGesture<any, V, X, Y> & I>;\n  define<O, V extends View = View, X = unknown, Y = unknown, I = {}>(className: string, descriptor: {implements: boolean; observes: boolean} & ScaleGestureDescriptor<O, V, X, Y, I & ObserverType<V>>): ScaleGestureFactory<ScaleGesture<any, V, X, Y> & I>;\n\n  <O, V extends View = View, X = unknown, Y = unknown>(descriptor: ScaleGestureDescriptor<O, V, X, Y>): PropertyDecorator;\n  <O, V extends View = View, X = unknown, Y = unknown>(descriptor: {observes: boolean} & ScaleGestureDescriptor<O, V, X, Y, ObserverType<V>>): PropertyDecorator;\n  <O, V extends View = View, X = unknown, Y = unknown, I = {}>(descriptor: {implements: unknown} & ScaleGestureDescriptor<O, V, X, Y, I>): PropertyDecorator;\n  <O, V extends View = View, X = unknown, Y = unknown, I = {}>(descriptor: {implements: boolean; observes: boolean} & ScaleGestureDescriptor<O, V, X, Y, I & ObserverType<V>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface ScaleGesture<O = unknown, V extends View = View, X = unknown, Y = unknown> extends MomentumGesture<O, V> {\n  /** @internal @override */\n  readonly inputs: {readonly [inputId: string]: ScaleGestureInput<X, Y> | undefined};\n\n  /** @override */\n  getInput(inputId: string | number): ScaleGestureInput<X, Y> | null;\n\n  /** @internal @override */\n  createInput(inputId: string, inputType: GestureInputType, isPrimary: boolean,\n              x: number, y: number, t: number): ScaleGestureInput<X, Y>;\n\n  /** @internal @override */\n  getOrCreateInput(inputId: string | number, inputType: GestureInputType, isPrimary: boolean,\n                   x: number, y: number, t: number): ScaleGestureInput<X, Y>;\n\n  /** @internal @override */\n  clearInput(input: ScaleGestureInput<X, Y>): void;\n\n  /** @internal @override */\n  clearInputs(): void;\n\n  distanceMin: number;\n\n  get preserveAspectRatio(): boolean;\n  set preserveAspectRatio(preserveAspectRatio: boolean);\n\n  get wheel(): boolean;\n  set wheel(wheel: boolean);\n\n  getXScale(): ContinuousScale<X, number> | null;\n\n  setXScale(xScale: ContinuousScale<X, number> | null, timing?: AnyTiming | boolean): void;\n\n  getYScale(): ContinuousScale<Y, number> | null;\n\n  setYScale(yScale: ContinuousScale<Y, number> | null, timing?: AnyTiming | boolean): void;\n\n  /** @internal */\n  clientToRangeX(clientX: number, xScale: ContinuousScale<X, number>, bounds: R2Box): number;\n\n  /** @internal */\n  clientToRangeY(clientY: number, yScale: ContinuousScale<Y, number>, bounds: R2Box): number;\n\n  /** @internal */\n  unscaleX(clientX: number, xScale: ContinuousScale<X, number>, bounds: R2Box): X;\n\n  /** @internal */\n  unscaleY(clientY: number, yScale: ContinuousScale<Y, number>, bounds: R2Box): Y;\n\n  /** @internal @override */\n  viewWillAnimate(viewContext: ViewContext): void;\n\n  /** @protected @override */\n  onBeginPress(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  /** @protected @override */\n  onMovePress(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  /** @protected @override */\n  onEndPress(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  /** @protected @override */\n  onCancelPress(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  /** @internal @override */\n  beginCoast(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  /** @protected @override */\n  onBeginCoast(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  /** @protected @override */\n  onEndCoast(input: ScaleGestureInput<X, Y>, event: Event | null): void;\n\n  /** @protected @override */\n  onCoast(): void;\n\n  /** @internal */\n  updateInputDomain(input: ScaleGestureInput<X, Y>,\n                    xScale?: ContinuousScale<X, number> | null,\n                    yScale?: ContinuousScale<Y, number> | null,\n                    bounds?: R2Box): void;\n\n  /** @internal */\n  neutralizeX(): void;\n\n  /** @internal */\n  neutralizeY(): void;\n\n  /** @internal */\n  rescale(): void;\n\n  /** @internal */\n  rescaleRadial(oldXScale: ContinuousScale<X, number>,\n                oldYScale: ContinuousScale<Y, number>,\n                input0: ScaleGestureInput<X, Y>,\n                input1: ScaleGestureInput<X, Y>,\n                bounds: R2Box): void;\n\n  /** @internal */\n  rescaleXY(oldXScale: ContinuousScale<X, number>,\n            oldYScale: ContinuousScale<Y, number>,\n            input0: ScaleGestureInput<X, Y>,\n            input1: ScaleGestureInput<X, Y> | undefined,\n            bounds: R2Box): void;\n\n  /** @internal */\n  rescaleX(oldXScale: ContinuousScale<X, number>,\n           input0: ScaleGestureInput<X, Y>,\n           input1: ScaleGestureInput<X, Y> | undefined,\n           bounds: R2Box): void;\n\n  /** @internal */\n  rescaleY(oldYScale: ContinuousScale<Y, number>,\n           input0: ScaleGestureInput<X, Y>,\n           input1: ScaleGestureInput<X, Y> | undefined,\n           bounds: R2Box): void;\n\n  /** @internal */\n  conserveMomentum(input0: ScaleGestureInput<X, Y>): void;\n\n  /** @internal */\n  distributeXYMomentum(input0: ScaleGestureInput<X, Y>,\n                       input1: ScaleGestureInput<X, Y>): void;\n\n  /** @internal */\n  distributeXMomentum(input0: ScaleGestureInput<X, Y>,\n                      input1: ScaleGestureInput<X, Y>): void;\n\n  /** @internal */\n  distributeYMomentum(input0: ScaleGestureInput<X, Y>,\n                      input1: ScaleGestureInput<X, Y>): void;\n\n  /** @internal @override */\n  integrate(t: number): void;\n\n  /** @internal */\n  zoom(x: number, y: number, dz: number, event: Event | null): void;\n\n  /** @internal @override */\n  get observes(): boolean;\n}\n\n/** @public */\nexport const ScaleGesture = (function (_super: typeof MomentumGesture) {\n  const ScaleGesture: ScaleGestureFactory = _super.extend(\"ScaleGesture\");\n\n  ScaleGesture.prototype.createInput = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>, inputId: string, inputType: GestureInputType, isPrimary: boolean,\n                                                       x: number, y: number, t: number): ScaleGestureInput<X, Y> {\n    return new ScaleGestureInput(inputId, inputType, isPrimary, x, y, t);\n  };\n\n  ScaleGesture.prototype.clearInputs = function (this: ScaleGesture): void {\n    MomentumGesture.prototype.clearInputs.call(this);\n    this.setFlags(this.flags & ~ScaleGesture.NeedsRescale);\n  };\n\n  Object.defineProperty(ScaleGesture.prototype, \"preserveAspectRatio\", {\n    get(this: ScaleGesture): boolean {\n      return (this.flags & ScaleGesture.PreserveAspectRatioFlag) !== 0;\n    },\n    set(this: ScaleGesture, preserveAspectRatio: boolean): void {\n      if (preserveAspectRatio) {\n        this.setFlags(this.flags | ScaleGesture.PreserveAspectRatioFlag);\n      } else {\n        this.setFlags(this.flags & ~ScaleGesture.PreserveAspectRatioFlag);\n      }\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(ScaleGesture.prototype, \"wheel\", {\n    get(this: ScaleGesture): boolean {\n      return (this.flags & ScaleGesture.WheelFlag) !== 0;\n    },\n    set(this: ScaleGesture, wheel: boolean): void {\n      if (wheel) {\n        this.setFlags(this.flags | ScaleGesture.WheelFlag);\n      } else {\n        this.setFlags(this.flags & ~ScaleGesture.WheelFlag);\n      }\n    },\n    configurable: true,\n  });\n\n  ScaleGesture.prototype.getXScale = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>): ContinuousScale<X, number> | null {\n    return null; // hook\n  };\n\n  ScaleGesture.prototype.setXScale = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>, xScale: ContinuousScale<X, number> | null, timing?: AnyTiming | boolean): void {\n    // hook\n  };\n\n  ScaleGesture.prototype.getYScale = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>): ContinuousScale<Y, number> | null {\n    return null; // hook\n  };\n\n  ScaleGesture.prototype.setYScale = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>, yScale: ContinuousScale<Y, number> | null, timing?: AnyTiming | boolean): void {\n    // hook\n  };\n\n  ScaleGesture.prototype.clientToRangeX = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>, clientX: number, xScale: ContinuousScale<X, number>, bounds: R2Box): number {\n    const viewX = clientX - bounds.xMin;\n    const xRange = xScale.range;\n    if (xRange[0] <= xRange[1]) {\n      return xRange[0] + viewX;\n    } else {\n      return bounds.xMax + viewX - xRange[0];\n    }\n  };\n\n  ScaleGesture.prototype.clientToRangeY = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>, clientY: number, yScale: ContinuousScale<Y, number>, bounds: R2Box): number {\n    const viewY = clientY - bounds.yMin;\n    const yRange = yScale.range;\n    if (yRange[0] <= yRange[1]) {\n      return yRange[0] + viewY;\n    } else {\n      return bounds.yMax + viewY - yRange[0];\n    }\n  };\n\n  ScaleGesture.prototype.unscaleX = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>, clientX: number, xScale: ContinuousScale<X, number>, bounds: R2Box): X {\n    return xScale.inverse(this.clientToRangeX(clientX, xScale, bounds));\n  };\n\n  ScaleGesture.prototype.unscaleY = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>, clientY: number, yScale: ContinuousScale<Y, number>, bounds: R2Box): Y {\n    return yScale.inverse(this.clientToRangeY(clientY, yScale, bounds));\n  };\n\n  ScaleGesture.prototype.viewWillAnimate = function (this: ScaleGesture, viewContext: ViewContext): void {\n    MomentumGesture.prototype.viewWillAnimate.call(this, viewContext);\n    if ((this.flags & ScaleGesture.NeedsRescale) !== 0) {\n      this.rescale();\n    }\n  };\n\n  ScaleGesture.prototype.onBeginPress = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>, input: ScaleGestureInput<X, Y>, event: Event | null): void {\n    MomentumGesture.prototype.onBeginPress.call(this, input, event);\n    this.updateInputDomain(input);\n    this.view!.requireUpdate(View.NeedsAnimate);\n    this.setFlags(this.flags | ScaleGesture.NeedsRescale);\n  };\n\n  ScaleGesture.prototype.onMovePress = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>, input: ScaleGestureInput<X, Y>, event: Event | null): void {\n    MomentumGesture.prototype.onMovePress.call(this, input, event);\n    this.view!.requireUpdate(View.NeedsAnimate);\n    this.setFlags(this.flags | ScaleGesture.NeedsRescale);\n  };\n\n  ScaleGesture.prototype.onEndPress = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>, input: ScaleGestureInput<X, Y>, event: Event | null): void {\n    MomentumGesture.prototype.onEndPress.call(this, input, event);\n    this.updateInputDomain(input);\n    this.view!.requireUpdate(View.NeedsAnimate);\n    this.setFlags(this.flags | ScaleGesture.NeedsRescale);\n  };\n\n  ScaleGesture.prototype.onCancelPress = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>, input: ScaleGestureInput<X, Y>, event: Event | null): void {\n    MomentumGesture.prototype.onCancelPress.call(this, input, event);\n    this.updateInputDomain(input);\n    this.view!.requireUpdate(View.NeedsAnimate);\n    this.setFlags(this.flags | ScaleGesture.NeedsRescale);\n  };\n\n  ScaleGesture.prototype.beginCoast = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>, input: ScaleGestureInput<X, Y>, event: Event | null): void {\n    if (this.coastCount < 2) {\n      MomentumGesture.prototype.beginCoast.call(this, input, event);\n    }\n  };\n\n  ScaleGesture.prototype.onBeginCoast = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>, input: ScaleGestureInput<X, Y>, event: Event | null): void {\n    MomentumGesture.prototype.onBeginCoast.call(this, input, event);\n    this.updateInputDomain(input);\n    this.conserveMomentum(input);\n    this.view!.requireUpdate(View.NeedsAnimate);\n    this.setFlags(this.flags | ScaleGesture.NeedsRescale);\n  };\n\n  ScaleGesture.prototype.onEndCoast = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>, input: ScaleGestureInput<X, Y>, event: Event | null): void {\n    MomentumGesture.prototype.onEndCoast.call(this, input, event);\n    input.disableX = false;\n    input.disableY = false;\n    this.view!.requireUpdate(View.NeedsAnimate);\n    this.setFlags(this.flags | ScaleGesture.NeedsRescale);\n  };\n\n  ScaleGesture.prototype.onCoast = function (this: ScaleGesture): void {\n    MomentumGesture.prototype.onCoast.call(this);\n    this.view!.requireUpdate(View.NeedsAnimate);\n    this.setFlags(this.flags | ScaleGesture.NeedsRescale);\n  };\n\n  ScaleGesture.prototype.updateInputDomain = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>,\n                                                             input: ScaleGestureInput<X, Y>,\n                                                             xScale?: ContinuousScale<X, number> | null,\n                                                             yScale?: ContinuousScale<Y, number> | null,\n                                                             bounds?: R2Box): void {\n    if (xScale === void 0) {\n      xScale = this.getXScale();\n    }\n    if (xScale !== null) {\n      if (bounds === void 0) {\n        bounds = this.view!.clientBounds;\n      }\n      input.xCoord = this.unscaleX(input.x0, xScale, bounds);\n    }\n    if (yScale === void 0) {\n      yScale = this.getYScale();\n    }\n    if (yScale !== null) {\n      if (bounds === void 0) {\n        bounds = this.view!.clientBounds;\n      }\n      input.yCoord = this.unscaleY(input.y0, yScale, bounds);\n    }\n  };\n\n  ScaleGesture.prototype.neutralizeX = function (this: ScaleGesture): void {\n    const inputs = this.inputs;\n    for (const inputId in inputs) {\n      const input = inputs[inputId]!;\n      if (input.coasting) {\n        input.disableX = true;\n        input.vx = 0;\n        input.ax = 0;\n      }\n    }\n  };\n\n  ScaleGesture.prototype.neutralizeY = function (this: ScaleGesture): void {\n    const inputs = this.inputs;\n    for (const inputId in inputs) {\n      const input = inputs[inputId]!;\n      if (input.coasting) {\n        input.disableY = true;\n        input.vy = 0;\n        input.ay = 0;\n      }\n    }\n  };\n\n  ScaleGesture.prototype.rescale = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>): void {\n    let input0: ScaleGestureInput<X, Y> | undefined;\n    let input1: ScaleGestureInput<X, Y> | undefined;\n    const inputs = this.inputs;\n    for (const inputId in inputs) {\n      const input = inputs[inputId]!;\n      if (input.pressing || input.coasting) {\n        if (input0 === void 0) {\n          input0 = input;\n        } else if (input1 === void 0) {\n          input1 = input;\n        } else if (input.t0 < input0.t0) {\n          input0 = input;\n        } else if (input.t0 < input1.t0) {\n          input1 = input;\n        }\n      }\n    }\n    if (input0 !== void 0) {\n      const bounds = this.view!.clientBounds;\n      const xScale = this.getXScale();\n      const yScale = this.getYScale();\n      if (xScale !== null && yScale !== null) {\n        if (input1 !== void 0 && this.preserveAspectRatio) {\n          this.rescaleRadial(xScale, yScale, input0, input1, bounds);\n        } else {\n          this.rescaleXY(xScale, yScale, input0, input1, bounds);\n        }\n      } else if (xScale !== null) {\n        this.rescaleX(xScale, input0, input1, bounds);\n      } else if (yScale !== null) {\n        this.rescaleY(yScale, input0, input1, bounds);\n      }\n    }\n    this.setFlags(this.flags & ~ScaleGesture.NeedsRescale);\n  };\n\n  ScaleGesture.prototype.rescaleRadial = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>,\n                                                         oldXScale: ContinuousScale<X, number>,\n                                                         oldYScale: ContinuousScale<Y, number>,\n                                                         input0: ScaleGestureInput<X, Y>,\n                                                         input1: ScaleGestureInput<X, Y>,\n                                                         bounds: R2Box): void {\n    const x0 = input0.xCoord!;\n    const y0 = input0.yCoord!;\n    const px0 = this.clientToRangeX(input0.x0, oldXScale, bounds);\n    const py0 = this.clientToRangeY(input0.y0, oldYScale, bounds);\n    const qx0 = this.clientToRangeX(input0.x, oldXScale, bounds);\n    const qy0 = this.clientToRangeY(input0.y, oldYScale, bounds);\n    const vx0 = input0.vx;\n    const vy0 = input0.vy;\n    const ax0 = input0.ax;\n    const ay0 = input0.ay;\n\n    const x1 = input1.xCoord!;\n    const y1 = input1.yCoord!;\n    const px1 = this.clientToRangeX(input1.x0, oldXScale, bounds);\n    const py1 = this.clientToRangeY(input1.y0, oldYScale, bounds);\n    const qx1 = this.clientToRangeX(input1.x, oldXScale, bounds);\n    const qy1 = this.clientToRangeY(input1.y, oldYScale, bounds);\n    const vx1 = input1.vx;\n    const vy1 = input1.vy;\n    const ax1 = input1.ax;\n    const ay1 = input1.ay;\n\n    // Compute the difference vector between previous input positions.\n    const dpx = px1 - px0;\n    const dpy = py1 - py0;\n    // Normalize the previous input distance vector.\n    const dp = Math.max(this.distanceMin, Math.sqrt(dpx * dpx + dpy * dpy));\n    const upx = dpx / dp;\n    const upy = dpy / dp;\n\n    // Compute the translation vectors from the previous input positions\n    // to the current input positions.\n    const dpqx0 = qx0 - px0;\n    const dpqy0 = qy0 - py0;\n    const dpqx1 = qx1 - px1;\n    const dpqy1 = qy1 - py1;\n\n    // Project the current input positions onto the unit vector separating\n    // the previous input positions.\n    const ip0 = dpqx0 * upx + dpqy0 * upy;\n    const ip1 = dpqx1 * upx + dpqy1 * upy;\n    const ix0 = ip0 * upx;\n    const iy0 = ip0 * upy;\n    const ix1 = ip1 * upx;\n    const iy1 = ip1 * upy;\n\n    // Project the current input positions onto the unit vector orthogonal\n    // to the previous input positions.\n    const jp0 = dpqx0 * upy + dpqy0 * -upx;\n    const jp1 = dpqx1 * upy + dpqy1 * -upx;\n    const jx0 = jp0 * upy;\n    const jy0 = jp0 * -upx;\n    const jx1 = jp1 * upy;\n    const jy1 = jp1 * -upx;\n    // Average the mean orthogonal projection of the input translations.\n    const jpx = (jx0 + jx1) / 2;\n    const jpy = (jy0 + jy1) / 2;\n\n    // Offset the previous input positions by the radial and mean orthogonal\n    // projections of the input translations.\n    const rx0 = px0 + ix0 + jpx;\n    const ry0 = py0 + iy0 + jpy;\n    const rx1 = px1 + ix1 + jpx;\n    const ry1 = py1 + iy1 + jpy;\n\n    // Project the velocity vectors onto the unit vector separating\n    // the previous input positions.\n    const iv0 = vx0 * upx + vy0 * upy;\n    const iv1 = vx1 * upx + vy1 * upy;\n    const ivx0 = iv0 * upx;\n    const ivy0 = iv0 * upy;\n    const ivx1 = iv1 * upx;\n    const ivy1 = iv1 * upy;\n\n    // Project the velocity vectors onto the unit vector orthogonal\n    // to the previous input positions.\n    const jv0 = vx0 * upy + vy0 * -upx;\n    const jv1 = vx1 * upy + vy1 * -upx;\n    const jvx0 = jv0 * upy;\n    const jvy0 = jv0 * -upx;\n    const jvx1 = jv1 * upy;\n    const jvy1 = jv1 * -upx;\n    // Average the mean orthogonal projection of the input velocity.\n    const jvx = (jvx0 + jvx1) / 2;\n    const jvy = (jvy0 + jvy1) / 2;\n\n    // Recombine the radial and mean orthogonal velocity components.\n    let rvx0 = ivx0 + jvx;\n    let rvy0 = ivy0 + jvy;\n    let rvx1 = ivx1 + jvx;\n    let rvy1 = ivy1 + jvy;\n\n    // Normalize the recombined velocity vectors.\n    const v0 = Math.sqrt(rvx0 * rvx0 + rvy0 * rvy0);\n    const v1 = Math.sqrt(rvx1 * rvx1 + rvy1 * rvy1);\n    const uvx0 = v0 !== 0 ? rvx0 / v0 : 0;\n    const uvy0 = v0 !== 0 ? rvy0 / v0 : 0;\n    const uvx1 = v1 !== 0 ? rvx1 / v1 : 0;\n    const uvy1 = v1 !== 0 ? rvy1 / v1 : 0;\n\n    // Scale the recombined velocity vectors back to their original magnitudes.\n    rvx0 = uvx0 * v0;\n    rvy0 = uvy0 * v0;\n    rvx1 = uvx1 * v1;\n    rvy1 = uvy1 * v1;\n\n    // Compute the magnitudes of the acceleration vectors.\n    const a0 = Math.sqrt(ax0 * ax0 + ay0 * ay0);\n    const a1 = Math.sqrt(ax1 * ax1 + ay1 * ay1);\n\n    // Rotate the acceleration vectors to opposite the updated velocity vectors.\n    const rax0 = a0 * -uvx0;\n    const ray0 = a0 * -uvy0;\n    const rax1 = a1 * -uvx1;\n    const ray1 = a1 * -uvy1;\n\n    let newXScale: ContinuousScale<X, number> | null = null;\n    const solvedXScale = oldXScale.solveDomain(x0, rx0, x1, rx1);\n    if (!solvedXScale.equals(oldXScale)) {\n      newXScale = solvedXScale;\n      this.setXScale(newXScale);\n    }\n\n    let newYScale: ContinuousScale<Y, number> | null = null;\n    const solvedYScale = oldYScale.solveDomain(y0, ry0, y1, ry1);\n    if (!solvedYScale.equals(oldYScale)) {\n      newYScale = solvedYScale;\n      this.setYScale(newYScale);\n    }\n\n    if (newXScale !== null || newYScale !== null) {\n      if (newXScale !== null) {\n        input0.x0 = input0.x;\n        input0.dx = 0;\n        input0.vx = rvx0;\n        input0.ax = rax0;\n        input0.xCoord = this.unscaleX(input0.x0, newXScale, bounds);\n\n        input1.x0 = input1.x;\n        input1.dx = 0;\n        input1.vx = rvx1;\n        input1.ax = rax1;\n        input1.xCoord = this.unscaleX(input1.x0, newXScale, bounds);\n      }\n      if (newYScale !== null) {\n        input0.y0 = input0.y;\n        input0.dy = 0;\n        input0.vy = rvy0;\n        input0.ay = ray0;\n        input0.yCoord = this.unscaleY(input0.y0, newYScale, bounds);\n\n        input1.y0 = input1.y;\n        input1.dy = 0;\n        input1.vy = rvy1;\n        input1.ay = ray1;\n        input1.yCoord = this.unscaleY(input1.y0, newYScale, bounds);\n      }\n\n      if (this.inputCount > 2) {\n        const inputs = this.inputs;\n        for (const inputId in inputs) {\n          const input = inputs[inputId]!;\n          if (input !== input0 && input !== input1) {\n            if (newXScale !== null) {\n              input.x0 = input.x;\n              input.dx = 0;\n              input.xCoord = this.unscaleX(input.x0, newXScale, bounds);\n            }\n            if (newYScale !== null) {\n              input.y0 = input.y;\n              input.dy = 0;\n              input.yCoord = this.unscaleY(input.y0, newYScale, bounds);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  ScaleGesture.prototype.rescaleXY = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>,\n                                                     oldXScale: ContinuousScale<X, number>,\n                                                     oldYScale: ContinuousScale<Y, number>,\n                                                     input0: ScaleGestureInput<X, Y>,\n                                                     input1: ScaleGestureInput<X, Y> | undefined,\n                                                     bounds: R2Box): void {\n    const x0 = input0.xCoord!;\n    const y0 = input0.yCoord!;\n    let sx0 = this.clientToRangeX(input0.x, oldXScale, bounds);\n    let sy0 = this.clientToRangeY(input0.y, oldYScale, bounds);\n    let disableX = input0.disableX;\n    let disableY = input0.disableY;\n\n    let x1: X | undefined;\n    let y1: Y | undefined;\n    let sx1: number | undefined;\n    let sy1: number | undefined;\n\n    if (input1 !== void 0) {\n      x1 = input1.xCoord!;\n      y1 = input1.yCoord!;\n      sx1 = this.clientToRangeX(input1.x, oldXScale, bounds);\n      sy1 = this.clientToRangeY(input1.y, oldYScale, bounds);\n      disableX = disableX || input1.disableX;\n      disableY = disableY || input1.disableY;\n      const dsx = Math.abs(sx1 - sx0);\n      const dsy = Math.abs(sy1 - sy0);\n\n      const distanceMin = this.distanceMin;\n      if (dsx < distanceMin) {\n        const esx = (distanceMin - dsx) / 2;\n        if (sx0 <= sx1) {\n          sx0 -= esx;\n          sx1 += esx;\n        } else {\n          sx0 += esx;\n          sx1 -= esx;\n        }\n      }\n      if (dsy < distanceMin) {\n        const esy = (distanceMin - dsy) / 2;\n        if (sy0 <= sy1) {\n          sy0 -= esy;\n          sy1 += esy;\n        } else {\n          sy0 += esy;\n          sy1 -= esy;\n        }\n      }\n    }\n\n    let newXScale: ContinuousScale<X, number> | null = null;\n    if (!disableX) {\n      newXScale = oldXScale.solveDomain(x0, sx0, x1, sx1);\n      if (!newXScale.equals(oldXScale)) {\n        this.setXScale(newXScale);\n      }\n    }\n\n    let newYScale: ContinuousScale<Y, number> | null = null;\n    if (!disableY) {\n      newYScale = oldYScale.solveDomain(y0, sy0, y1, sy1);\n      if (!newYScale.equals(oldYScale)) {\n        this.setYScale(newYScale);\n      }\n    }\n\n    if ((newXScale !== null || newYScale !== null) && this.preserveAspectRatio) {\n      const inputs = this.inputs;\n      for (const inputId in inputs) {\n        const input = inputs[inputId]!;\n        if (newXScale !== null) {\n          input.x0 = input.x;\n          input.dx = 0;\n          input.xCoord = this.unscaleX(input.x0, newXScale, bounds);\n        }\n        if (newYScale !== null) {\n          input.y0 = input.y;\n          input.dy = 0;\n          input.yCoord = this.unscaleY(input.y0, newYScale, bounds);\n        }\n      }\n    }\n  };\n\n  ScaleGesture.prototype.rescaleX = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>,\n                                                    oldXScale: ContinuousScale<X, number>,\n                                                    input0: ScaleGestureInput<X, Y>,\n                                                    input1: ScaleGestureInput<X, Y> | undefined,\n                                                    bounds: R2Box): void {\n    const x0 = input0.xCoord!;\n    let sx0 = this.clientToRangeX(input0.x, oldXScale, bounds);\n    let sx1: number | undefined;\n    let x1: X | undefined;\n    let disableX = input0.disableX;\n    if (input1 !== void 0) {\n      x1 = input1.xCoord!;\n      sx1 = this.clientToRangeX(input1.x, oldXScale, bounds);\n      disableX = disableX || input1.disableX;\n      const dsx = Math.abs(sx1 - sx0);\n      const distanceMin = this.distanceMin;\n      if (dsx < distanceMin) {\n        const esx = (distanceMin - dsx) / 2;\n        if (sx0 <= sx1) {\n          sx0 -= esx;\n          sx1 += esx;\n        } else {\n          sx0 += esx;\n          sx1 -= esx;\n        }\n      }\n    }\n    if (!disableX) {\n      const newXScale = oldXScale.solveDomain(x0, sx0, x1, sx1);\n      if (!newXScale.equals(oldXScale)) {\n        this.setXScale(newXScale);\n      }\n    }\n  };\n\n  ScaleGesture.prototype.rescaleY = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>,\n                                                    oldYScale: ContinuousScale<Y, number>,\n                                                    input0: ScaleGestureInput<X, Y>,\n                                                    input1: ScaleGestureInput<X, Y> | undefined,\n                                                    bounds: R2Box): void {\n    const y0 = input0.yCoord!;\n    let sy0 = this.clientToRangeY(input0.y, oldYScale, bounds);\n    let sy1: number | undefined;\n    let y1: Y | undefined;\n    let disableY = input0.disableY;\n    if (input1 !== void 0) {\n      y1 = input1.yCoord!;\n      sy1 = this.clientToRangeY(input1.y, oldYScale, bounds);\n      disableY = disableY || input1.disableY;\n      const dsy = Math.abs(sy1 - sy0);\n      const distanceMin = this.distanceMin;\n      if (dsy < distanceMin) {\n        const esy = (distanceMin - dsy) / 2;\n        if (sy0 <= sy1) {\n          sy0 -= esy;\n          sy1 += esy;\n        } else {\n          sy0 += esy;\n          sy1 -= esy;\n        }\n      }\n    }\n    if (!disableY) {\n      const newYScale = oldYScale.solveDomain(y0, sy0, y1, sy1);\n      if (!newYScale.equals(oldYScale)) {\n        this.setYScale(newYScale);\n      }\n    }\n  };\n\n  ScaleGesture.prototype.conserveMomentum = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>, input0: ScaleGestureInput<X, Y>): void {\n    let input1: ScaleGestureInput<X, Y> | undefined;\n    const inputs = this.inputs;\n    for (const inputId in inputs) {\n      const input = inputs[inputId]!;\n      if (input.coasting) {\n        if (input1 === void 0) {\n          input1 = input;\n        } else if (input.t0 < input1.t0) {\n          input1 = input;\n        }\n      }\n    }\n    if (input1 !== void 0) {\n      const xScale = this.getXScale();\n      const yScale = this.getYScale();\n      if (xScale !== null && yScale !== null) {\n        this.distributeXYMomentum(input0, input1);\n      } else if (xScale !== null) {\n        this.distributeXMomentum(input0, input1);\n      } else if (yScale !== null) {\n        this.distributeYMomentum(input0, input1);\n      }\n    }\n  };\n\n  ScaleGesture.prototype.distributeXYMomentum = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>,\n                                                                input0: ScaleGestureInput<X, Y>,\n                                                                input1: ScaleGestureInput<X, Y>): void {\n    const vx0 = input0.vx;\n    const vy0 = input0.vy;\n    const vx1 = input1.vx;\n    const vy1 = input1.vy;\n    const v0 = Math.sqrt(vx0 * vx0 + vy0 * vy0);\n    const v1 = Math.sqrt(vx1 * vx1 + vy1 * vy1);\n    const uvx0 = v0 !== 0 ? vx0 / v0 : 0;\n    const uvy0 = v0 !== 0 ? vy0 / v0 : 0;\n    const uvx1 = v1 !== 0 ? vx1 / v1 : 0;\n    const uvy1 = v1 !== 0 ? vy1 / v1 : 0;\n    const v = (v0 + v1) / 2;\n    input0.vx = uvx0 * v;\n    input0.vy = uvy0 * v;\n    input1.vx = uvx1 * v;\n    input1.vy = uvy1 * v;\n\n    const ax0 = input0.ax;\n    const ay0 = input0.ay;\n    const ax1 = input1.ax;\n    const ay1 = input1.ay;\n    const a0 = Math.sqrt(ax0 * ax0 + ay0 * ay0);\n    const a1 = Math.sqrt(ax1 * ax1 + ay1 * ay1);\n    const uax0 = a0 !== 0 ? ax0 / a0 : 0;\n    const uay0 = a0 !== 0 ? ay0 / a0 : 0;\n    const uax1 = a1 !== 0 ? ax1 / a1 : 0;\n    const uay1 = a1 !== 0 ? ay1 / a1 : 0;\n    const a = (a0 + a1) / 2;\n    input0.ax = uax0 * a;\n    input0.ay = uay0 * a;\n    input1.ax = uax1 * a;\n    input1.ay = uay1 * a;\n  };\n\n  ScaleGesture.prototype.distributeXMomentum = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>,\n                                                               input0: ScaleGestureInput<X, Y>,\n                                                               input1: ScaleGestureInput<X, Y>): void {\n    const vx0 = input0.vx;\n    const vx1 = input1.vx;\n    const v0 = Math.abs(vx0);\n    const v1 = Math.abs(vx1);\n    const uvx0 = v0 !== 0 ? vx0 / v0 : 0;\n    const uvx1 = v1 !== 0 ? vx1 / v1 : 0;\n    const v = (v0 + v1) / 2;\n    input0.vx = uvx0 * v;\n    input1.vx = uvx1 * v;\n\n    const ax0 = input0.ax;\n    const ax1 = input1.ax;\n    const a0 = Math.abs(ax0);\n    const a1 = Math.abs(ax1);\n    const uax0 = a0 !== 0 ? ax0 / a0 : 0;\n    const uax1 = a1 !== 0 ? ax1 / a1 : 0;\n    const a = (a0 + a1) / 2;\n    input0.ax = uax0 * a;\n    input1.ax = uax1 * a;\n  };\n\n  ScaleGesture.prototype.distributeYMomentum = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>,\n                                                               input0: ScaleGestureInput<X, Y>,\n                                                               input1: ScaleGestureInput<X, Y>): void {\n    const vy0 = input0.vy;\n    const vy1 = input1.vy;\n    const v0 = Math.sqrt(vy0);\n    const v1 = Math.sqrt(vy1);\n    const uvy0 = v0 !== 0 ? vy0 / v0 : 0;\n    const uvy1 = v1 !== 0 ? vy1 / v1 : 0;\n    const v = (v0 + v1) / 2;\n    input0.vy = uvy0 * v;\n    input1.vy = uvy1 * v;\n\n    const ay0 = input0.ay;\n    const ay1 = input1.ay;\n    const a0 = Math.sqrt(ay0);\n    const a1 = Math.sqrt(ay1);\n    const uay0 = a0 !== 0 ? ay0 / a0 : 0;\n    const uay1 = a1 !== 0 ? ay1 / a1 : 0;\n    const a = (a0 + a1) / 2;\n    input0.ay = uay0 * a;\n    input1.ay = uay1 * a;\n  };\n\n  ScaleGesture.prototype.integrate = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>, t: number): void {\n    let coast0: ScaleGestureInput<X, Y> | undefined;\n    let coast1: ScaleGestureInput<X, Y> | undefined;\n    const inputs = this.inputs;\n    for (const inputId in inputs) {\n      const input = inputs[inputId]!;\n      if (input.coasting) {\n        if (coast0 === void 0) {\n          coast0 = input;\n        } else if (coast1 === void 0) {\n          coast1 = input;\n          const dx0 = coast1.x - coast0.x;\n          const dy0 = coast1.y - coast0.y;\n          const d0 = Math.sqrt(dx0 * dx0 + dy0 * dy0);\n          coast0.integrateVelocity(t);\n          coast1.integrateVelocity(t);\n          const dx1 = coast1.x - coast0.x;\n          const dy1 = coast1.y - coast0.y;\n          const d1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n          const s = d1 / d0;\n          coast0.vx *= s;\n          coast0.vy *= s;\n          coast0.ax *= s;\n          coast0.ay *= s;\n          coast1.vx *= s;\n          coast1.vy *= s;\n          coast1.ax *= s;\n          coast1.ay *= s;\n        } else {\n          input.integrateVelocity(t);\n        }\n      }\n    }\n    if (coast0 !== void 0 && coast1 === void 0) {\n      coast0.integrateVelocity(t);\n    }\n  };\n\n  ScaleGesture.prototype.zoom = function <X, Y>(this: ScaleGesture<unknown, View, X, Y>, x: number, y: number, dz: number, event: Event | null): void {\n    if (dz === 0) {\n      return;\n    }\n    const t = event !== null ? event.timeStamp : performance.now();\n    const a = this.acceleration;\n    let ax = a * Math.cos(Math.PI / 4);\n    let ay = a * Math.sin(Math.PI / 4);\n    const vMax = this.velocityMax;\n    const vx = 0.5 * vMax * Math.cos(Math.PI / 4);\n    const vy = 0.5 * vMax * Math.sin(Math.PI / 4);\n    const dx = (4 * vx * vx) / ax;\n    const dy = (4 * vy * vy) / ay;\n\n    const inputs = this.inputs as {[inputId: string]: ScaleGestureInput<X, Y> | undefined};\n    let zoom0 = inputs.zoom0;\n    let zoom1 = inputs.zoom1;\n    if (zoom0 !== void 0 && zoom1 !== void 0) {\n      const dt = t - zoom0.t;\n      if (dt > 0) {\n        const dzx = Math.abs(zoom1.x - zoom0.x) / 2;\n        const dzy = Math.abs(zoom1.y - zoom0.y) / 2;\n        dz = Math.min(Math.max(-vMax * dt, dz), vMax * dt);\n        const zx = (dz * dzx * Math.cos(Math.PI / 4)) / dx;\n        const zy = (dz * dzy * Math.sin(Math.PI / 4)) / dy;\n        ax = (ax * dzx) / dx;\n        ay = (ay * dzy) / dy;\n\n        zoom0.x += zx;\n        zoom0.y += zy;\n        zoom0.t = t;\n        zoom0.dx = zx;\n        zoom0.dy = zy;\n        zoom0.dt = dt;\n        zoom0.vx = zx / dt;\n        zoom0.vy = zy / dt;\n        zoom0.ax = zoom0.vx < 0 ? ax : zoom0.vx > 0 ? -ax : 0;\n        zoom0.ay = zoom0.vy < 0 ? ay : zoom0.vy > 0 ? -ay : 0;\n\n        zoom1.x -= zx;\n        zoom1.y -= zy;\n        zoom1.t = t;\n        zoom0.dx = -zx;\n        zoom0.dy = -zy;\n        zoom0.dt = dt;\n        zoom1.vx = -zx / dt;\n        zoom1.vy = -zy / dt;\n        zoom1.ax = zoom1.vx < 0 ? ax : zoom1.vx > 0 ? -ax : 0;\n        zoom1.ay = zoom1.vy < 0 ? ay : zoom1.vy > 0 ? -ay : 0;\n      }\n    } else {\n      this.interrupt(event);\n\n      if (dz < 0) {\n        zoom0 = this.createInput(\"zoom0\", \"unknown\", false, x - dx, y - dy, t);\n        zoom0.vx = -vx;\n        zoom0.vy = -vy;\n        zoom0.ax = ax;\n        zoom0.ay = ay;\n        zoom1 = this.createInput(\"zoom1\", \"unknown\", false, x + dx, y + dy, t);\n        zoom1.vx = vx;\n        zoom1.vy = vy;\n        zoom1.ax = -ax;\n        zoom1.ay = -ay;\n      } else {\n        zoom0 = this.createInput(\"zoom0\", \"unknown\", false, x - dx, y - dy, t);\n        zoom0.vx = vx;\n        zoom0.vy = vy;\n        zoom0.ax = -ax;\n        zoom0.ay = -ay;\n        zoom1 = this.createInput(\"zoom1\", \"unknown\", false, x + dx, y + dy, t);\n        zoom1.vx = -vx;\n        zoom1.vy = -vy;\n        zoom1.ax = ax;\n        zoom1.ay = ay;\n      }\n\n      inputs.zoom0 = zoom0;\n      inputs.zoom1 = zoom1;\n      (this as Mutable<typeof this>).inputCount += 2;\n      this.beginCoast(zoom0, event);\n      this.beginCoast(zoom1, event);\n    }\n  };\n\n  Object.defineProperty(ScaleGesture.prototype, \"observes\", {\n    value: true,\n    enumerable: true,\n    configurable: true,\n  });\n\n  ScaleGesture.construct = function <G extends ScaleGesture<any, any, any, any>>(gestureClass: {prototype: G}, gesture: G | null, owner: FastenerOwner<G>): G {\n    gesture = _super.construct(gestureClass, gesture, owner) as G;\n    gesture.distanceMin = ScaleGesture.DistanceMin;\n    gesture.setFlags(gesture.flags | ScaleGesture.WheelFlag);\n    return gesture;\n  };\n\n  ScaleGesture.specialize = function (method: GestureMethod): ScaleGestureFactory | null {\n    if (method === \"pointer\") {\n      return PointerScaleGesture;\n    } else if (method === \"touch\") {\n      return TouchScaleGesture;\n    } else if (method === \"mouse\") {\n      return MouseScaleGesture;\n    } else if (typeof PointerEvent !== \"undefined\") {\n      return PointerScaleGesture;\n    } else if (typeof TouchEvent !== \"undefined\") {\n      return TouchScaleGesture;\n    } else {\n      return MouseScaleGesture;\n    }\n  };\n\n  ScaleGesture.define = function <O, V extends View, X, Y>(className: string, descriptor: ScaleGestureDescriptor<O, V, X, Y>): ScaleGestureFactory<ScaleGesture<any, V, X, Y>> {\n    let superClass = descriptor.extends as ScaleGestureFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    let method = descriptor.method;\n    const hysteresis = descriptor.hysteresis;\n    const acceleration = descriptor.hysteresis;\n    const velocityMax = descriptor.hysteresis;\n    const distanceMin = descriptor.distanceMin;\n    const preserveAspectRatio = descriptor.preserveAspectRatio;\n    const wheel = descriptor.wheel;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n    delete descriptor.method;\n    delete descriptor.hysteresis;\n    delete descriptor.acceleration;\n    delete descriptor.velocityMax;\n    delete descriptor.distanceMin;\n    delete descriptor.preserveAspectRatio;\n    delete descriptor.wheel;\n\n    if (descriptor.key === true) {\n      Object.defineProperty(descriptor, \"key\", {\n        value: className,\n        configurable: true,\n      });\n    } else if (descriptor.key === false) {\n      Object.defineProperty(descriptor, \"key\", {\n        value: void 0,\n        configurable: true,\n      });\n    }\n\n    if (method === void 0) {\n      method = \"auto\";\n    }\n    if (superClass === void 0 || superClass === null) {\n      superClass = ScaleGesture.specialize(method);\n    }\n    if (superClass === null) {\n      superClass = this;\n    }\n\n    const gestureClass = superClass.extend(className, descriptor);\n\n    gestureClass.construct = function (gestureClass: {prototype: ScaleGesture<any, any, any, any>}, gesture: ScaleGesture<O, V, X, Y> | null, owner: O): ScaleGesture<O, V, X, Y> {\n      gesture = superClass!.construct(gestureClass, gesture, owner);\n      if (affinity !== void 0) {\n        gesture.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        gesture.initInherits(inherits);\n      }\n      if (hysteresis !== void 0) {\n        gesture.hysteresis = hysteresis;\n      }\n      if (acceleration !== void 0) {\n        gesture.acceleration = acceleration;\n      }\n      if (velocityMax !== void 0) {\n        gesture.velocityMax = velocityMax;\n      }\n      if (distanceMin !== void 0) {\n        gesture.distanceMin = distanceMin;\n      }\n      if (preserveAspectRatio !== void 0) {\n        gesture.preserveAspectRatio = preserveAspectRatio;\n      }\n      if (wheel !== void 0) {\n        gesture.wheel = wheel;\n      }\n      return gesture;\n    };\n\n    return gestureClass;\n  };\n\n  (ScaleGesture as Mutable<typeof ScaleGesture>).DistanceMin = 10;\n\n  (ScaleGesture as Mutable<typeof ScaleGesture>).PreserveAspectRatioFlag = 1 << (_super.FlagShift + 0);\n  (ScaleGesture as Mutable<typeof ScaleGesture>).WheelFlag = 1 << (_super.FlagShift + 1);\n  (ScaleGesture as Mutable<typeof ScaleGesture>).NeedsRescale = 1 << (_super.FlagShift + 2);\n\n  (ScaleGesture as Mutable<typeof ScaleGesture>).FlagShift = _super.FlagShift + 3;\n  (ScaleGesture as Mutable<typeof ScaleGesture>).FlagMask = (1 << ScaleGesture.FlagShift) - 1;\n\n  return ScaleGesture;\n})(MomentumGesture);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {FastenerOwner} from \"@swim/component\";\nimport {GestureInput} from \"./GestureInput\";\nimport type {ScaleGestureInput} from \"./ScaleGestureInput\";\nimport {ScaleGestureClass, ScaleGestureFactory, ScaleGesture} from \"./ScaleGesture\";\nimport type {View} from \"../view/View\";\n\n/** @internal */\nexport interface PointerScaleGesture<O = unknown, V extends View = View, X = unknown, Y = unknown> extends ScaleGesture<O, V, X, Y> {\n  /** @internal @protected @override */\n  attachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  attachPressEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachPressEvents(view: V): void;\n\n  /** @internal @protected */\n  updateInput(input: ScaleGestureInput<X, Y>, event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerEnter(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerLeave(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerDown(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerMove(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerUp(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerCancel(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onPointerLeaveDocument(event: PointerEvent): void;\n\n  /** @internal @protected */\n  onWheel(event: WheelEvent): void;\n}\n\n/** @internal */\nexport const PointerScaleGesture = (function (_super: typeof ScaleGesture) {\n  const PointerScaleGesture = _super.extend(\"PointerScaleGesture\") as ScaleGestureFactory<PointerScaleGesture<any, any, any, any>>;\n\n  PointerScaleGesture.prototype.attachHoverEvents = function (this: PointerScaleGesture, view: View): void {\n    view.on(\"pointerenter\", this.onPointerEnter as EventListener);\n    view.on(\"pointerleave\", this.onPointerLeave as EventListener);\n    view.on(\"pointerdown\", this.onPointerDown as EventListener);\n    view.on(\"wheel\", this.onWheel as EventListener);\n  };\n\n  PointerScaleGesture.prototype.detachHoverEvents = function (this: PointerScaleGesture, view: View): void {\n    view.off(\"pointerenter\", this.onPointerEnter as EventListener);\n    view.off(\"pointerleave\", this.onPointerLeave as EventListener);\n    view.off(\"pointerdown\", this.onPointerDown as EventListener);\n    view.off(\"wheel\", this.onWheel as EventListener);\n  };\n\n  PointerScaleGesture.prototype.attachPressEvents = function (this: PointerScaleGesture, view: View): void {\n    document.body.addEventListener(\"pointermove\", this.onPointerMove);\n    document.body.addEventListener(\"pointerup\", this.onPointerUp);\n    document.body.addEventListener(\"pointercancel\", this.onPointerCancel);\n    document.body.addEventListener(\"pointerleave\", this.onPointerLeaveDocument);\n  };\n\n  PointerScaleGesture.prototype.detachPressEvents = function (this: PointerScaleGesture, view: View): void {\n    document.body.removeEventListener(\"pointermove\", this.onPointerMove);\n    document.body.removeEventListener(\"pointerup\", this.onPointerUp);\n    document.body.removeEventListener(\"pointercancel\", this.onPointerCancel);\n    document.body.removeEventListener(\"pointerleave\", this.onPointerLeaveDocument);\n  };\n\n  PointerScaleGesture.prototype.updateInput = function <X, Y>(this: PointerScaleGesture<unknown, View, X, Y>, input: ScaleGestureInput<X, Y>, event: PointerEvent): void {\n    input.target = event.target;\n    input.button = event.button;\n    input.buttons = event.buttons;\n    input.altKey = event.altKey;\n    input.ctrlKey = event.ctrlKey;\n    input.metaKey = event.metaKey;\n    input.shiftKey = event.shiftKey;\n\n    input.dx = event.clientX - input.x;\n    input.dy = event.clientY - input.y;\n    input.dt = event.timeStamp - input.t;\n    input.x = event.clientX;\n    input.y = event.clientY;\n    input.t = event.timeStamp;\n\n    input.width = event.width;\n    input.height = event.height;\n    input.tiltX = event.tiltX;\n    input.tiltY = event.tiltY;\n    input.twist = event.twist;\n    input.pressure = event.pressure;\n    input.tangentialPressure = event.tangentialPressure;\n  };\n\n  PointerScaleGesture.prototype.onPointerEnter = function (this: PointerScaleGesture, event: PointerEvent): void {\n    if (event.pointerType === \"mouse\" && event.buttons === 0) {\n      const input = this.getOrCreateInput(event.pointerId, GestureInput.pointerInputType(event.pointerType),\n                                          event.isPrimary, event.clientX, event.clientY, event.timeStamp);\n      if (!input.coasting) {\n        this.updateInput(input, event);\n      }\n      if (!input.hovering) {\n        this.beginHover(input, event);\n      }\n    }\n  };\n\n  PointerScaleGesture.prototype.onPointerLeave = function (this: PointerScaleGesture, event: PointerEvent): void {\n    if (event.pointerType === \"mouse\") {\n      const input = this.getInput(event.pointerId);\n      if (input !== null) {\n        if (!input.coasting) {\n          this.updateInput(input, event);\n        }\n        this.endHover(input, event);\n      }\n    }\n  };\n\n  PointerScaleGesture.prototype.onPointerDown = function (this: PointerScaleGesture, event: PointerEvent): void {\n    const input = this.getOrCreateInput(event.pointerId, GestureInput.pointerInputType(event.pointerType),\n                                        event.isPrimary, event.clientX, event.clientY, event.timeStamp);\n    this.updateInput(input, event);\n    if (!input.pressing) {\n      this.beginPress(input, event);\n    }\n    if (event.pointerType === \"mouse\" && event.button !== 0) {\n      this.cancelPress(input, event);\n    }\n  };\n\n  PointerScaleGesture.prototype.onPointerMove = function (this: PointerScaleGesture, event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.movePress(input, event);\n    }\n  };\n\n  PointerScaleGesture.prototype.onPointerUp = function (this: PointerScaleGesture, event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.endPress(input, event);\n      if (!input.defaultPrevented && event.button === 0) {\n        this.press(input, event);\n      }\n    }\n  };\n\n  PointerScaleGesture.prototype.onPointerCancel = function (this: PointerScaleGesture, event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.cancelPress(input, event);\n    }\n  };\n\n  PointerScaleGesture.prototype.onPointerLeaveDocument = function (this: PointerScaleGesture, event: PointerEvent): void {\n    const input = this.getInput(event.pointerId);\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.cancelPress(input, event);\n      this.endHover(input, event);\n    }\n  };\n\n  PointerScaleGesture.prototype.onWheel = function (this: PointerScaleGesture, event: WheelEvent): void {\n    if (this.wheel) {\n      event.preventDefault();\n      this.zoom(event.clientX, event.clientY, event.deltaY, event);\n    }\n  };\n\n  PointerScaleGesture.construct = function <G extends PointerScaleGesture<any, any, any, any>>(gestureClass: ScaleGestureClass<PointerScaleGesture<any, any, any, any>>, gesture: G | null, owner: FastenerOwner<G>): G {\n    gesture = _super.construct(gestureClass, gesture, owner) as G;\n    gesture.onPointerEnter = gesture.onPointerEnter.bind(gesture);\n    gesture.onPointerLeave = gesture.onPointerLeave.bind(gesture);\n    gesture.onPointerDown = gesture.onPointerDown.bind(gesture);\n    gesture.onPointerMove = gesture.onPointerMove.bind(gesture);\n    gesture.onPointerUp = gesture.onPointerUp.bind(gesture);\n    gesture.onPointerCancel = gesture.onPointerCancel.bind(gesture);\n    gesture.onPointerLeaveDocument = gesture.onPointerLeaveDocument.bind(gesture);\n    gesture.onWheel = gesture.onWheel.bind(gesture);\n    return gesture;\n  };\n\n  return PointerScaleGesture;\n})(ScaleGesture);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {FastenerOwner} from \"@swim/component\";\nimport type {ScaleGestureInput} from \"./ScaleGestureInput\";\nimport {ScaleGestureClass, ScaleGestureFactory, ScaleGesture} from \"./ScaleGesture\";\nimport type {View} from \"../view/View\";\n\n/** @internal */\nexport interface TouchScaleGesture<O = unknown, V extends View = View, X = unknown, Y = unknown> extends ScaleGesture<O, V, X, Y> {\n  /** @internal @protected @override */\n  attachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  attachPressEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachPressEvents(view: V): void;\n\n  /** @internal @protected */\n  updateInput(input: ScaleGestureInput<X, Y>, event: TouchEvent, touch: Touch): void;\n\n  /** @internal @protected */\n  onTouchStart(event: TouchEvent): void;\n\n  /** @internal @protected */\n  onTouchMove(event: TouchEvent): void;\n\n  /** @internal @protected */\n  onTouchEnd(event: TouchEvent): void;\n\n  /** @internal @protected */\n  onTouchCancel(event: TouchEvent): void;\n}\n\n/** @internal */\nexport const TouchScaleGesture = (function (_super: typeof ScaleGesture) {\n  const TouchScaleGesture = _super.extend(\"TouchScaleGesture\") as ScaleGestureFactory<TouchScaleGesture<any, any, any, any>>;\n\n  TouchScaleGesture.prototype.attachHoverEvents = function (this: TouchScaleGesture, view: View): void {\n    view.on(\"touchstart\", this.onTouchStart as EventListener);\n  };\n\n  TouchScaleGesture.prototype.detachHoverEvents = function (this: TouchScaleGesture, view: View): void {\n    view.off(\"touchstart\", this.onTouchStart as EventListener);\n  };\n\n  TouchScaleGesture.prototype.attachPressEvents = function (this: TouchScaleGesture, view: View): void {\n    view.on(\"touchmove\", this.onTouchMove as EventListener);\n    view.on(\"touchend\", this.onTouchEnd as EventListener);\n    view.on(\"touchcancel\", this.onTouchCancel as EventListener);\n  };\n\n  TouchScaleGesture.prototype.detachPressEvents = function (this: TouchScaleGesture, view: View): void {\n    view.off(\"touchmove\", this.onTouchMove as EventListener);\n    view.off(\"touchend\", this.onTouchEnd as EventListener);\n    view.off(\"touchcancel\", this.onTouchCancel as EventListener);\n  };\n\n  TouchScaleGesture.prototype.updateInput = function <X, Y>(this: TouchScaleGesture<unknown, View, X, Y>, input: ScaleGestureInput<X, Y>, event: TouchEvent, touch: Touch): void {\n    input.target = touch.target;\n    input.altKey = event.altKey;\n    input.ctrlKey = event.ctrlKey;\n    input.metaKey = event.metaKey;\n    input.shiftKey = event.shiftKey;\n\n    input.dx = touch.clientX - input.x;\n    input.dy = touch.clientY - input.y;\n    input.dt = event.timeStamp - input.t;\n    input.x = touch.clientX;\n    input.y = touch.clientY;\n    input.t = event.timeStamp;\n  };\n\n  TouchScaleGesture.prototype.onTouchStart = function (this: TouchScaleGesture, event: TouchEvent): void {\n    const touches = event.targetTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getOrCreateInput(touch.identifier, \"touch\", false,\n                                          touch.clientX, touch.clientY, event.timeStamp);\n      this.updateInput(input, event, touch);\n      if (!input.pressing) {\n        this.beginPress(input, event);\n      }\n    }\n  };\n\n  TouchScaleGesture.prototype.onTouchMove = function (this: TouchScaleGesture, event: TouchEvent): void {\n    const touches = event.changedTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getInput(touch.identifier);\n      if (input !== null) {\n        this.updateInput(input, event, touch);\n        this.movePress(input, event);\n      }\n    }\n  };\n\n  TouchScaleGesture.prototype.onTouchEnd = function (this: TouchScaleGesture, event: TouchEvent): void {\n    const touches = event.changedTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getInput(touch.identifier);\n      if (input !== null) {\n        this.updateInput(input, event, touch);\n        this.endPress(input, event);\n        if (!input.defaultPrevented) {\n          this.press(input, event);\n        }\n        this.endHover(input, event);\n      }\n    }\n  };\n\n  TouchScaleGesture.prototype.onTouchCancel = function (this: TouchScaleGesture, event: TouchEvent): void {\n    const touches = event.changedTouches;\n    for (let i = 0; i < touches.length; i += 1) {\n      const touch = touches[i]!;\n      const input = this.getInput(touch.identifier);\n      if (input !== null) {\n        this.updateInput(input, event, touch);\n        this.cancelPress(input, event);\n        this.endHover(input, event);\n      }\n    }\n  };\n\n  TouchScaleGesture.construct = function <G extends TouchScaleGesture<any, any, any, any>>(gestureClass: ScaleGestureClass<TouchScaleGesture<any, any, any, any>>, gesture: G | null, owner: FastenerOwner<G>): G {\n    gesture = _super.construct(gestureClass, gesture, owner) as G;\n    gesture.onTouchStart = gesture.onTouchStart.bind(gesture);\n    gesture.onTouchMove = gesture.onTouchMove.bind(gesture);\n    gesture.onTouchEnd = gesture.onTouchEnd.bind(gesture);\n    gesture.onTouchCancel = gesture.onTouchCancel.bind(gesture);\n    return gesture;\n  };\n\n  return TouchScaleGesture;\n})(ScaleGesture);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {FastenerOwner} from \"@swim/component\";\nimport type {ScaleGestureInput} from \"./ScaleGestureInput\";\nimport {ScaleGestureClass, ScaleGestureFactory, ScaleGesture} from \"./ScaleGesture\";\nimport type {View} from \"../view/View\";\n\n/** @internal */\nexport interface MouseScaleGesture<O = unknown, V extends View = View, X = unknown, Y = unknown> extends ScaleGesture<O, V, X, Y> {\n  /** @internal @protected @override */\n  attachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachHoverEvents(view: V): void;\n\n  /** @internal @protected @override */\n  attachPressEvents(view: V): void;\n\n  /** @internal @protected @override */\n  detachPressEvents(view: V): void;\n\n  /** @internal @protected */\n  updateInput(input: ScaleGestureInput<X, Y>, event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseEnter(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseLeave(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseDown(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseMove(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseUp(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onMouseLeaveDocument(event: MouseEvent): void;\n\n  /** @internal @protected */\n  onWheel(event: WheelEvent): void;\n}\n\n/** @internal */\nexport const MouseScaleGesture = (function (_super: typeof ScaleGesture) {\n  const MouseScaleGesture = _super.extend(\"MouseScaleGesture\") as ScaleGestureFactory<MouseScaleGesture<any, any, any, any>>;\n\n  MouseScaleGesture.prototype.attachHoverEvents = function (this: MouseScaleGesture, view: View): void {\n    view.on(\"mouseenter\", this.onMouseEnter as EventListener);\n    view.on(\"mouseleave\", this.onMouseLeave as EventListener);\n    view.on(\"mousedown\", this.onMouseDown as EventListener);\n    view.on(\"wheel\", this.onWheel as EventListener);\n  };\n\n  MouseScaleGesture.prototype.detachHoverEvents = function (this: MouseScaleGesture, view: View): void {\n    view.off(\"mouseenter\", this.onMouseEnter as EventListener);\n    view.off(\"mouseleave\", this.onMouseLeave as EventListener);\n    view.off(\"mousedown\", this.onMouseDown as EventListener);\n    view.off(\"wheel\", this.onWheel as EventListener);\n  };\n\n  MouseScaleGesture.prototype.attachPressEvents = function (this: MouseScaleGesture, view: View): void {\n    document.body.addEventListener(\"mousemove\", this.onMouseMove);\n    document.body.addEventListener(\"mouseup\", this.onMouseUp);\n    document.body.addEventListener(\"mouseleave\", this.onMouseLeaveDocument);\n  };\n\n  MouseScaleGesture.prototype.detachPressEvents = function (this: MouseScaleGesture, view: View): void {\n    document.body.removeEventListener(\"mousemove\", this.onMouseMove);\n    document.body.removeEventListener(\"mouseup\", this.onMouseUp);\n    document.body.removeEventListener(\"mouseleave\", this.onMouseLeaveDocument);\n  };\n\n  MouseScaleGesture.prototype.updateInput = function <X, Y>(this: MouseScaleGesture<unknown, View, X, Y>, input: ScaleGestureInput<X, Y>, event: MouseEvent): void {\n    input.target = event.target;\n    input.button = event.button;\n    input.buttons = event.buttons;\n    input.altKey = event.altKey;\n    input.ctrlKey = event.ctrlKey;\n    input.metaKey = event.metaKey;\n    input.shiftKey = event.shiftKey;\n\n    input.dx = event.clientX - input.x;\n    input.dy = event.clientY - input.y;\n    input.dt = event.timeStamp - input.t;\n    input.x = event.clientX;\n    input.y = event.clientY;\n    input.t = event.timeStamp;\n  };\n\n  MouseScaleGesture.prototype.onMouseEnter = function (this: MouseScaleGesture, event: MouseEvent): void {\n    if (event.buttons === 0) {\n      const input = this.getOrCreateInput(\"mouse\", \"mouse\", true,\n                                          event.clientX, event.clientY, event.timeStamp);\n      if (!input.coasting) {\n        this.updateInput(input, event);\n      }\n      if (!input.hovering) {\n        this.beginHover(input, event);\n      }\n    }\n  };\n\n  MouseScaleGesture.prototype.onMouseLeave = function (this: MouseScaleGesture, event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input !== null) {\n      if (!input.coasting) {\n        this.updateInput(input, event);\n      }\n      this.endHover(input, event);\n    }\n  };\n\n  MouseScaleGesture.prototype.onMouseDown = function (this: MouseScaleGesture, event: MouseEvent): void {\n    const input = this.getOrCreateInput(\"mouse\", \"mouse\", true,\n                                        event.clientX, event.clientY, event.timeStamp);\n    this.updateInput(input, event);\n    if (!input.pressing) {\n      this.beginPress(input, event);\n    }\n    if (event.button !== 0) {\n      this.cancelPress(input, event);\n    }\n  };\n\n  MouseScaleGesture.prototype.onMouseMove = function (this: MouseScaleGesture, event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.movePress(input, event);\n    }\n  };\n\n  MouseScaleGesture.prototype.onMouseUp = function (this: MouseScaleGesture, event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.endPress(input, event);\n      if (!input.defaultPrevented && event.button === 0) {\n        this.press(input, event);\n      }\n    }\n  };\n\n  MouseScaleGesture.prototype.onMouseLeaveDocument = function (this: MouseScaleGesture, event: MouseEvent): void {\n    const input = this.getInput(\"mouse\");\n    if (input !== null) {\n      this.updateInput(input, event);\n      this.cancelPress(input, event);\n      this.endHover(input, event);\n    }\n  };\n\n  MouseScaleGesture.prototype.onWheel = function (this: MouseScaleGesture, event: WheelEvent): void {\n    if (this.wheel) {\n      event.preventDefault();\n      this.zoom(event.clientX, event.clientY, event.deltaY, event);\n    }\n  };\n\n  MouseScaleGesture.construct = function <G extends MouseScaleGesture<any, any, any, any>>(gestureClass: ScaleGestureClass<MouseScaleGesture<any, any, any, any>>, gesture: G | null, owner: FastenerOwner<G>): G {\n    gesture = _super.construct(gestureClass, gesture, owner) as G;\n    gesture.onMouseEnter = gesture.onMouseEnter.bind(gesture);\n    gesture.onMouseLeave = gesture.onMouseLeave.bind(gesture);\n    gesture.onMouseDown = gesture.onMouseDown.bind(gesture);\n    gesture.onMouseMove = gesture.onMouseMove.bind(gesture);\n    gesture.onMouseUp = gesture.onMouseUp.bind(gesture);\n    gesture.onMouseLeaveDocument = gesture.onMouseLeaveDocument.bind(gesture);\n    gesture.onWheel = gesture.onWheel.bind(gesture);\n    return gesture;\n  };\n\n  return MouseScaleGesture;\n})(ScaleGesture);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  Mutable,\n  Class,\n  Arrays,\n  FromAny,\n  AnyTiming,\n  Timing,\n  Creatable,\n  InitType,\n  Initable,\n  ObserverType,\n} from \"@swim/util\";\nimport {\n  Affinity,\n  Fastener,\n  MemberPropertyInitMap,\n  Property,\n  Animator,\n  Provider,\n  ComponentFlags,\n  ComponentInit,\n  Component,\n} from \"@swim/component\";\nimport {\n  AnyConstraintExpression,\n  ConstraintExpression,\n  ConstraintVariable,\n  ConstraintProperty,\n  ConstraintRelation,\n  AnyConstraintStrength,\n  ConstraintStrength,\n  Constraint,\n  ConstraintScope,\n  ConstraintContext,\n} from \"@swim/constraint\";\nimport {R2Box, Transform} from \"@swim/math\";\nimport {\n  Look,\n  Feel,\n  Mood,\n  MoodVectorUpdates,\n  MoodVector,\n  MoodMatrix,\n  ThemeMatrix,\n  ThemeContext,\n  ThemeAnimator,\n} from \"@swim/theme\";\nimport type {ViewportIdiom} from \"../viewport/ViewportIdiom\";\nimport type {Viewport} from \"../viewport/Viewport\";\nimport {ViewportService} from \"../viewport/ViewportService\";\nimport {ViewportProvider} from \"../viewport/ViewportProvider\";\nimport {DisplayService} from \"../display/DisplayService\";\nimport {DisplayProvider} from \"../display/DisplayProvider\";\nimport {LayoutService} from \"../layout/LayoutService\";\nimport {LayoutProvider} from \"../layout/LayoutProvider\";\nimport {ThemeService} from \"../theme/ThemeService\";\nimport {ThemeProvider} from \"../theme/ThemeProvider\";\nimport {ModalService} from \"../modal/ModalService\";\nimport {ModalProvider} from \"../modal/ModalProvider\";\nimport {Gesture} from \"../gesture/Gesture\";\nimport {ViewContext} from \"./ViewContext\";\nimport type {\n  ViewObserver,\n  ViewWillInsertChild,\n  ViewDidInsertChild,\n  ViewWillRemoveChild,\n  ViewDidRemoveChild,\n  ViewWillResize,\n  ViewDidResize,\n  ViewWillScroll,\n  ViewDidScroll,\n  ViewWillChange,\n  ViewDidChange,\n  ViewWillAnimate,\n  ViewDidAnimate,\n  ViewWillProject,\n  ViewDidProject,\n  ViewWillLayout,\n  ViewDidLayout,\n  ViewWillRender,\n  ViewDidRender,\n  ViewWillRasterize,\n  ViewDidRasterize,\n  ViewWillComposite,\n  ViewDidComposite,\n  ViewObserverCache,\n} from \"./ViewObserver\";\nimport {ViewRelation} from \"./\"; // forward import\n\n/** @public */\nexport type ViewContextType<V extends View> =\n  V extends {readonly contextType?: Class<infer T>} ? T : never;\n\n/** @public */\nexport type ViewFlags = ComponentFlags;\n\n/** @public */\nexport type AnyView<V extends View = View> = V | ViewFactory<V> | InitType<V>;\n\n/** @public */\nexport interface ViewInit extends ComponentInit {\n  type?: Creatable<View>;\n  key?: string;\n  children?: AnyView[];\n\n  mood?: MoodVector;\n  moodModifier?: MoodMatrix;\n  theme?: ThemeMatrix;\n  themeModifier?: MoodMatrix;\n}\n\n/** @public */\nexport interface ViewFactory<V extends View = View, U = AnyView<V>> extends Creatable<V>, FromAny<V, U> {\n  fromInit(init: InitType<V>): V;\n}\n\n/** @public */\nexport interface ViewClass<V extends View = View, U = AnyView<V>> extends Function, ViewFactory<V, U> {\n  readonly prototype: V;\n}\n\n/** @public */\nexport interface ViewConstructor<V extends View = View, U = AnyView<V>> extends ViewClass<V, U> {\n  new(): V;\n}\n\n/** @public */\nexport type ViewCreator<F extends (abstract new (...args: any) => V) & Creatable<InstanceType<F>>, V extends View = View> =\n  (abstract new (...args: any) => InstanceType<F>) & Creatable<InstanceType<F>>;\n\n/** @public */\nexport class View extends Component<View> implements Initable<ViewInit>, ConstraintScope, ConstraintContext, ThemeContext {\n  constructor() {\n    super();\n    this.observerCache = {};\n    this.constraints = Arrays.empty;\n    this.constraintVariables = Arrays.empty;\n  }\n\n  override get componentType(): Class<View> {\n    return View;\n  }\n\n  override readonly observerType?: Class<ViewObserver>;\n\n  readonly contextType?: Class<ViewContext>;\n\n  /** @internal */\n  override attachParent(parent: View, nextSibling: View | null): void {\n    // assert(this.parent === null);\n    this.willAttachParent(parent);\n    (this as Mutable<this>).parent = parent;\n    let previousSibling: View | null;\n    if (nextSibling !== null) {\n      previousSibling = nextSibling.previousSibling;\n      this.setNextSibling(nextSibling);\n      nextSibling.setPreviousSibling(this);\n    } else {\n      previousSibling = parent.lastChild;\n      parent.setLastChild(this);\n    }\n    if (previousSibling !== null) {\n      previousSibling.setNextSibling(this);\n      this.setPreviousSibling(previousSibling);\n    } else {\n      parent.setFirstChild(this);\n    }\n    if (parent.mounted) {\n      if (parent.culled) {\n        this.cascadeCull();\n      }\n      this.cascadeMount();\n    }\n    this.onAttachParent(parent);\n    this.didAttachParent(parent);\n  }\n\n  protected override willAttachParent(parent: View): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewWillAttachParent !== void 0) {\n        observer.viewWillAttachParent(parent, this);\n      }\n    }\n  }\n\n  protected override onAttachParent(parent: View): void {\n    // hook\n  }\n\n  protected override didAttachParent(parent: View): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewDidAttachParent !== void 0) {\n        observer.viewDidAttachParent(parent, this);\n      }\n    }\n  }\n\n  protected override willDetachParent(parent: View): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewWillDetachParent !== void 0) {\n        observer.viewWillDetachParent(parent, this);\n      }\n    }\n  }\n\n  protected override onDetachParent(parent: View): void {\n    // hook\n  }\n\n  protected override didDetachParent(parent: View): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewDidDetachParent !== void 0) {\n        observer.viewDidDetachParent(parent, this);\n      }\n    }\n  }\n\n  override setChild<V extends View>(key: string, newChild: V): View | null;\n  override setChild<F extends ViewCreator<F>>(key: string, factory: F): View | null;\n  override setChild(key: string, newChild: AnyView | null): View | null;\n  override setChild(key: string, newChild: AnyView | null): View | null {\n    if (newChild !== null) {\n      newChild = View.fromAny(newChild);\n    }\n    return super.setChild(key, newChild) as View | null;\n  }\n\n  override appendChild<V extends View>(child: V, key?: string): V;\n  override appendChild<F extends ViewCreator<F>>(factory: F, key?: string): InstanceType<F>;\n  override appendChild(child: AnyView, key?: string): View;\n  override appendChild(child: AnyView, key?: string): View {\n    child = View.fromAny(child);\n    return super.appendChild(child, key);\n  }\n\n  override prependChild<V extends View>(child: V, key?: string): V;\n  override prependChild<F extends ViewCreator<F>>(factory: F, key?: string): InstanceType<F>;\n  override prependChild(child: AnyView, key?: string): View;\n  override prependChild(child: AnyView, key?: string): View {\n    child = View.fromAny(child);\n    return super.prependChild(child, key);\n  }\n\n  override insertChild<V extends View>(child: V, target: View | null, key?: string): V;\n  override insertChild<F extends ViewCreator<F>>(factory: F, target: View | null, key?: string): InstanceType<F>;\n  override insertChild(child: AnyView, target: View | null, key?: string): View;\n  override insertChild(child: AnyView, target: View | null, key?: string): View {\n    child = View.fromAny(child);\n    return super.insertChild(child, target, key);\n  }\n\n  override replaceChild<V extends View>(newChild: View, oldChild: V): V;\n  override replaceChild<V extends View>(newChild: AnyView, oldChild: V): V;\n  override replaceChild(newChild: AnyView, oldChild: View): View {\n    newChild = View.fromAny(newChild);\n    return super.replaceChild(newChild, oldChild);\n  }\n\n  protected override willInsertChild(child: View, target: View | null): void {\n    super.willInsertChild(child, target);\n    const observers = this.observerCache.viewWillInsertChildObservers;\n    if (observers !== void 0) {\n      for (let i = 0, n = observers.length; i < n; i += 1) {\n        const observer = observers[i]!;\n        observer.viewWillInsertChild(child, target, this);\n      }\n    }\n  }\n\n  protected override onInsertChild(child: View, target: View | null): void {\n    super.onInsertChild(child, target);\n  }\n\n  protected override didInsertChild(child: View, target: View | null): void {\n    const observers = this.observerCache.viewDidInsertChildObservers;\n    if (observers !== void 0) {\n      for (let i = 0, n = observers.length; i < n; i += 1) {\n        const observer = observers[i]!;\n        observer.viewDidInsertChild(child, target, this);\n      }\n    }\n    super.didInsertChild(child, target);\n  }\n\n  /** @internal */\n  override cascadeInsert(updateFlags?: ViewFlags, viewContext?: ViewContext): void {\n    if ((this.flags & View.MountedFlag) !== 0) {\n      if (updateFlags === void 0) {\n        updateFlags = 0;\n      }\n      updateFlags |= this.flags & View.UpdateMask;\n      if ((updateFlags & View.ProcessMask) !== 0) {\n        if (viewContext === void 0) {\n          viewContext = this.superViewContext;\n        }\n        this.cascadeProcess(updateFlags, viewContext);\n      }\n    }\n  }\n\n  protected override willRemoveChild(child: View): void {\n    super.willRemoveChild(child);\n    const observers = this.observerCache.viewWillRemoveChildObservers;\n    if (observers !== void 0) {\n      for (let i = 0, n = observers.length; i < n; i += 1) {\n        const observer = observers[i]!;\n        observer.viewWillRemoveChild(child, this);\n      }\n    }\n  }\n\n  protected override onRemoveChild(child: View): void {\n    super.onRemoveChild(child);\n  }\n\n  protected override didRemoveChild(child: View): void {\n    const observers = this.observerCache.viewDidRemoveChildObservers;\n    if (observers !== void 0) {\n      for (let i = 0, n = observers.length; i < n; i += 1) {\n        const observer = observers[i]!;\n        observer.viewDidRemoveChild(child, this);\n      }\n    }\n    super.didRemoveChild(child);\n  }\n\n  /** @internal */\n  override mount(): void {\n    throw new Error();\n  }\n\n  protected override willMount(): void {\n    super.willMount();\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewWillMount !== void 0) {\n        observer.viewWillMount(this);\n      }\n    }\n  }\n\n  protected override onMount(): void {\n    // subsume super\n    this.requestUpdate(this, this.flags & View.UpdateMask, false);\n    this.requireUpdate(this.mountFlags);\n\n    if (!this.culled && this.decoherent !== null && this.decoherent.length !== 0) {\n      this.requireUpdate(View.NeedsChange | View.NeedsAnimate);\n    }\n\n    this.mountFasteners();\n    this.mountTheme();\n    this.updateTheme(false);\n  }\n\n  protected override didMount(): void {\n    this.activateLayout();\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewDidMount !== void 0) {\n        observer.viewDidMount(this);\n      }\n    }\n    super.didMount();\n  }\n\n  /** @internal */\n  override unmount(): void {\n    throw new Error();\n  }\n\n  protected override willUnmount(): void {\n    super.willUnmount();\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewWillUnmount !== void 0) {\n        observer.viewWillUnmount(this);\n      }\n    }\n    this.deactivateLayout();\n  }\n\n  protected override didUnmount(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewDidUnmount !== void 0) {\n        observer.viewDidUnmount(this);\n      }\n    }\n    super.didUnmount();\n  }\n\n  get culled(): boolean {\n    return (this.flags & View.CulledMask) !== 0;\n  }\n\n  setCulled(culled: boolean): void {\n    const flags = this.flags;\n    if (culled && (flags & View.CulledFlag) === 0) {\n      if ((flags & View.CullFlag) === 0) {\n        this.willCull();\n        this.setFlags(flags | View.CulledFlag);\n        this.onCull();\n        this.cullChildren();\n        this.didCull();\n      } else {\n        this.setFlags(flags | View.CulledFlag);\n      }\n    } else if (!culled && (flags & View.CulledFlag) !== 0) {\n      if ((flags & View.CullFlag) === 0) {\n        this.willUncull();\n        this.setFlags(flags & ~View.CulledFlag);\n        this.uncullChildren();\n        this.onUncull();\n        this.didUncull();\n      } else {\n        this.setFlags(flags & ~View.CulledFlag);\n      }\n    }\n  }\n\n  /** @internal */\n  cascadeCull(): void {\n    if ((this.flags & View.CullFlag) === 0) {\n      if ((this.flags & View.CulledFlag) === 0) {\n        this.willCull();\n        this.setFlags(this.flags | View.CullFlag);\n        this.onCull();\n        this.cullChildren();\n        this.didCull();\n      } else {\n        this.setFlags(this.flags | View.CullFlag);\n      }\n    }\n  }\n\n  protected willCull(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewWillCull !== void 0) {\n        observer.viewWillCull(this);\n      }\n    }\n  }\n\n  protected onCull(): void {\n    // hook\n  }\n\n  protected didCull(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewDidCull !== void 0) {\n        observer.viewDidCull(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected cullChildren(): void {\n    let child = this.firstChild;\n    while (child !== null) {\n      const next = child.nextSibling;\n      child.cascadeCull();\n      if (next !== null && next.parent !== this) {\n        throw new Error(\"inconsistent cull\");\n      }\n      child = next;\n    }\n  }\n\n  /** @internal */\n  cascadeUncull(): void {\n    if ((this.flags & View.CullFlag) !== 0) {\n      if ((this.flags & View.CulledFlag) === 0) {\n        this.willUncull();\n        this.setFlags(this.flags & ~View.CullFlag);\n        this.uncullChildren();\n        this.onUncull();\n        this.didUncull();\n      } else {\n        this.setFlags(this.flags & ~View.CullFlag);\n      }\n    }\n  }\n\n  get uncullFlags(): ViewFlags {\n    return (this.constructor as typeof View).UncullFlags;\n  }\n\n  protected willUncull(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewWillUncull !== void 0) {\n        observer.viewWillUncull(this);\n      }\n    }\n  }\n\n  protected onUncull(): void {\n    this.requestUpdate(this, this.flags & View.UpdateMask, false);\n    this.requireUpdate(this.uncullFlags);\n\n    if (this.decoherent !== null && this.decoherent.length !== 0) {\n      this.requireUpdate(View.NeedsChange | View.NeedsAnimate);\n    }\n\n    if (this.mood.inherited) {\n      this.mood.decohere();\n    }\n    if (this.theme.inherited) {\n      this.theme.decohere();\n    }\n  }\n\n  protected didUncull(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewDidUncull !== void 0) {\n        observer.viewDidUncull(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected uncullChildren(): void {\n    let child = this.firstChild;\n    while (child !== null) {\n      const next = child.nextSibling;\n      child.cascadeUncull();\n      if (next !== null && next.parent !== this) {\n        throw new Error(\"inconsistent uncull\");\n      }\n      child = next;\n    }\n  }\n\n  /**\n   * Returns `true` if this view is ineligible for rendering and hit testing,\n   * and should be excluded from its parent's layout and hit bounds.\n   */\n  get hidden(): boolean {\n    return (this.flags & View.HiddenMask) !== 0;\n  }\n\n  /**\n   * Makes this view ineligible for rendering and hit testing, and excludes\n   * this view from its parent's layout and hit bounds, when `hidden` is `true`.\n   * Makes this view eligible for rendering and hit testing, and includes this\n   * view in its parent's layout and hit bounds, when `hidden` is `false`.\n   */\n  setHidden(hidden: boolean): void {\n    const flags = this.flags;\n    if (hidden && (flags & View.HiddenFlag) === 0) {\n      this.setFlags(flags | View.HiddenFlag);\n      if ((flags & View.HideFlag) === 0) {\n        this.willHide();\n        this.onHide();\n        this.hideChildren();\n        this.didHide();\n      }\n    } else if (!hidden && (flags & View.HiddenFlag) !== 0) {\n      this.setFlags(flags & ~View.HiddenFlag);\n      if ((flags & View.HideFlag) === 0) {\n        this.willUnhide();\n        this.unhideChildren();\n        this.onUnhide();\n        this.didUnhide();\n      }\n    }\n  }\n\n  /** @internal */\n  cascadeHide(): void {\n    if ((this.flags & View.HideFlag) === 0) {\n      if ((this.flags & View.HiddenFlag) === 0) {\n        this.willHide();\n        this.setFlags(this.flags | View.HideFlag);\n        this.onHide();\n        this.hideChildren();\n        this.didHide();\n      } else {\n        this.setFlags(this.flags | View.HideFlag);\n      }\n    }\n  }\n\n  protected willHide(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewWillHide !== void 0) {\n        observer.viewWillHide(this);\n      }\n    }\n  }\n\n  protected onHide(): void {\n    // hook\n  }\n\n  protected didHide(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewDidHide !== void 0) {\n        observer.viewDidHide(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected hideChildren(): void {\n    let child = this.firstChild;\n    while (child !== null) {\n      const next = child.nextSibling;\n      child.cascadeHide();\n      if (next !== null && next.parent !== this) {\n        throw new Error(\"inconsistent hide\");\n      }\n      child = next;\n    }\n  }\n\n  cascadeUnhide(): void {\n    if ((this.flags & View.HideFlag) !== 0) {\n      if ((this.flags & View.HiddenFlag) === 0) {\n        this.willUnhide();\n        this.setFlags(this.flags & ~View.HideFlag);\n        this.unhideChildren();\n        this.onUnhide();\n        this.didUnhide();\n      } else {\n        this.setFlags(this.flags & ~View.HideFlag);\n      }\n    }\n  }\n\n  get unhideFlags(): ViewFlags {\n    return (this.constructor as typeof View).UnhideFlags;\n  }\n\n  protected willUnhide(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewWillUnhide !== void 0) {\n        observer.viewWillUnhide(this);\n      }\n    }\n  }\n\n  protected onUnhide(): void {\n    this.requestUpdate(this, this.flags & View.UpdateMask, false);\n    this.requireUpdate(this.uncullFlags);\n  }\n\n  protected didUnhide(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewDidUnhide !== void 0) {\n        observer.viewDidUnhide(this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected unhideChildren(): void {\n    let child = this.firstChild;\n    while (child !== null) {\n      const next = child.nextSibling;\n      child.cascadeUnhide();\n      if (next !== null && next.parent !== this) {\n        throw new Error(\"inconsistent unhide\");\n      }\n      child = next;\n    }\n  }\n\n  get unbounded(): boolean {\n    return (this.flags & View.UnboundedFlag) !== 0;\n  }\n\n  setUnbounded(unboundedFlag: boolean): void {\n    if (unboundedFlag !== ((this.flags & View.UnboundedFlag) !== 0)) {\n      this.willSetUnbounded(unboundedFlag);\n      if (unboundedFlag) {\n        this.setFlags(this.flags | View.UnboundedFlag);\n      } else {\n        this.setFlags(this.flags & ~View.UnboundedFlag);\n      }\n      this.onSetUnbounded(unboundedFlag);\n      this.didSetUnbounded(unboundedFlag);\n    }\n  }\n\n  protected willSetUnbounded(unboundedFlag: boolean): void {\n    // hook\n  }\n\n  protected onSetUnbounded(unboundedFlag: boolean): void {\n    // hook\n  }\n\n  protected didSetUnbounded(unboundedFlag: boolean): void {\n    // hook\n  }\n\n  get intangible(): boolean {\n    return (this.flags & View.IntangibleFlag) !== 0;\n  }\n\n  setIntangible(intangible: boolean): void {\n    if (intangible !== ((this.flags & View.IntangibleFlag) !== 0)) {\n      this.willSetIntangible(intangible);\n      if (intangible) {\n        this.setFlags(this.flags | View.IntangibleFlag);\n      } else {\n        this.setFlags(this.flags & ~View.IntangibleFlag);\n      }\n      this.onSetIntangible(intangible);\n      this.didSetIntangible(intangible);\n    }\n  }\n\n  protected willSetIntangible(intangible: boolean): void {\n    // hook\n  }\n\n  protected onSetIntangible(intangible: boolean): void {\n    // hook\n  }\n\n  protected didSetIntangible(intangible: boolean): void {\n    // hook\n  }\n\n  override requireUpdate(updateFlags: ViewFlags, immediate: boolean = false): void {\n    const flags = this.flags;\n    const deltaUpdateFlags = updateFlags & ~flags & View.UpdateMask;\n    if (deltaUpdateFlags !== 0) {\n      this.setFlags(flags | deltaUpdateFlags);\n      this.requestUpdate(this, deltaUpdateFlags, immediate);\n    }\n  }\n\n  protected needsUpdate(updateFlags: ViewFlags, immediate: boolean): ViewFlags {\n    return updateFlags;\n  }\n\n  requestUpdate(target: View, updateFlags: ViewFlags, immediate: boolean): void {\n    if ((this.flags & View.CulledMask) !== View.CulledFlag) { // if not culled root\n      updateFlags = this.needsUpdate(updateFlags, immediate);\n      let deltaUpdateFlags = this.flags & ~updateFlags & View.UpdateMask;\n      if ((updateFlags & View.ProcessMask) !== 0) {\n        deltaUpdateFlags |= View.NeedsProcess;\n      }\n      if ((updateFlags & View.DisplayMask) !== 0) {\n        deltaUpdateFlags |= View.NeedsDisplay;\n      }\n      if (deltaUpdateFlags !== 0 || immediate) {\n        this.setFlags(this.flags | deltaUpdateFlags);\n        const parent = this.parent;\n        if (parent !== null) {\n          parent.requestUpdate(target, updateFlags, immediate);\n        } else if (this.mounted) {\n          const displayService = this.displayProvider.service;\n          if (displayService !== void 0 && displayService !== null) {\n            displayService.requestUpdate(target, updateFlags, immediate);\n          }\n        }\n      }\n    }\n  }\n\n  get updating(): boolean {\n    return (this.flags & View.UpdatingMask) !== 0;\n  }\n\n  get processing(): boolean {\n    return (this.flags & View.ProcessingFlag) !== 0;\n  }\n\n  protected needsProcess(processFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    return processFlags;\n  }\n\n  cascadeProcess(processFlags: ViewFlags, baseViewContext: ViewContext): void {\n    const viewContext = this.extendViewContext(baseViewContext);\n    const outerViewContext = ViewContext.current;\n    try {\n      ViewContext.current = viewContext;\n      processFlags &= ~View.NeedsProcess;\n      processFlags |= this.flags & View.UpdateMask;\n      processFlags = this.needsProcess(processFlags, viewContext);\n      if ((processFlags & View.ProcessMask) !== 0) {\n        let cascadeFlags = processFlags;\n        this.setFlags(this.flags & ~View.NeedsProcess | (View.ProcessingFlag | View.ContextualFlag));\n        this.willProcess(cascadeFlags, viewContext);\n        if (((this.flags | processFlags) & View.NeedsResize) !== 0) {\n          cascadeFlags |= View.NeedsResize;\n          this.setFlags(this.flags & ~View.NeedsResize);\n          this.willResize(viewContext);\n        }\n        if (((this.flags | processFlags) & View.NeedsScroll) !== 0) {\n          cascadeFlags |= View.NeedsScroll;\n          this.setFlags(this.flags & ~View.NeedsScroll);\n          this.willScroll(viewContext);\n        }\n        if (((this.flags | processFlags) & View.NeedsChange) !== 0) {\n          cascadeFlags |= View.NeedsChange;\n          this.setFlags(this.flags & ~View.NeedsChange);\n          this.willChange(viewContext);\n        }\n        if (((this.flags | processFlags) & View.NeedsAnimate) !== 0) {\n          cascadeFlags |= View.NeedsAnimate;\n          this.setFlags(this.flags & ~View.NeedsAnimate);\n          this.willAnimate(viewContext);\n        }\n        if (((this.flags | processFlags) & View.NeedsProject) !== 0) {\n          cascadeFlags |= View.NeedsProject;\n          this.setFlags(this.flags & ~View.NeedsProject);\n          this.willProject(viewContext);\n        }\n\n        this.onProcess(cascadeFlags, viewContext);\n        if ((cascadeFlags & View.NeedsResize) !== 0) {\n          this.onResize(viewContext);\n        }\n        if ((cascadeFlags & View.NeedsScroll) !== 0) {\n          this.onScroll(viewContext);\n        }\n        if ((cascadeFlags & View.NeedsChange) !== 0) {\n          this.onChange(viewContext);\n        }\n        if ((cascadeFlags & View.NeedsAnimate) !== 0) {\n          this.onAnimate(viewContext);\n        }\n        if ((cascadeFlags & View.NeedsProject) !== 0) {\n          this.onProject(viewContext);\n        }\n\n        if ((cascadeFlags & View.ProcessMask) !== 0) {\n          this.setFlags(this.flags & ~View.ContextualFlag);\n          this.processChildren(cascadeFlags, viewContext, this.processChild);\n          this.setFlags(this.flags | View.ContextualFlag);\n        }\n\n        if ((cascadeFlags & View.NeedsProject) !== 0) {\n          this.didProject(viewContext);\n        }\n        if ((cascadeFlags & View.NeedsAnimate) !== 0) {\n          this.didAnimate(viewContext);\n        }\n        if ((cascadeFlags & View.NeedsChange) !== 0) {\n          this.didChange(viewContext);\n        }\n        if ((cascadeFlags & View.NeedsScroll) !== 0) {\n          this.didScroll(viewContext);\n        }\n        if ((cascadeFlags & View.NeedsResize) !== 0) {\n          this.didResize(viewContext);\n        }\n        this.didProcess(cascadeFlags, viewContext);\n      }\n    } finally {\n      this.setFlags(this.flags & ~(View.ProcessingFlag | View.ContextualFlag));\n      ViewContext.current = outerViewContext;\n    }\n  }\n\n  protected willProcess(processFlags: ViewFlags, viewContext: ViewContextType<this>): void {\n    // hook\n  }\n\n  protected onProcess(processFlags: ViewFlags, viewContext: ViewContextType<this>): void {\n    // hook\n  }\n\n  protected didProcess(processFlags: ViewFlags, viewContext: ViewContextType<this>): void {\n    // hook\n  }\n\n  protected willResize(viewContext: ViewContextType<this>): void {\n    const observers = this.observerCache.viewWillResizeObservers;\n    if (observers !== void 0) {\n      for (let i = 0, n = observers.length; i < n; i += 1) {\n        const observer = observers[i]!;\n        observer.viewWillResize(viewContext, this);\n      }\n    }\n    this.evaluateConstraintVariables();\n  }\n\n  protected onResize(viewContext: ViewContextType<this>): void {\n    // hook\n  }\n\n  protected didResize(viewContext: ViewContextType<this>): void {\n    const observers = this.observerCache.viewDidResizeObservers;\n    if (observers !== void 0) {\n      for (let i = 0, n = observers.length; i < n; i += 1) {\n        const observer = observers[i]!;\n        observer.viewDidResize(viewContext, this);\n      }\n    }\n  }\n\n  protected willScroll(viewContext: ViewContextType<this>): void {\n    const observers = this.observerCache.viewWillScrollObservers;\n    if (observers !== void 0) {\n      for (let i = 0, n = observers.length; i < n; i += 1) {\n        const observer = observers[i]!;\n        observer.viewWillScroll(viewContext, this);\n      }\n    }\n  }\n\n  protected onScroll(viewContext: ViewContextType<this>): void {\n    // hook\n  }\n\n  protected didScroll(viewContext: ViewContextType<this>): void {\n    const observers = this.observerCache.viewDidScrollObservers;\n    if (observers !== void 0) {\n      for (let i = 0, n = observers.length; i < n; i += 1) {\n        const observer = observers[i]!;\n        observer.viewDidScroll(viewContext, this);\n      }\n    }\n  }\n\n  protected willChange(viewContext: ViewContextType<this>): void {\n    const observers = this.observerCache.viewWillChangeObservers;\n    if (observers !== void 0) {\n      for (let i = 0, n = observers.length; i < n; i += 1) {\n        const observer = observers[i]!;\n        observer.viewWillChange(viewContext, this);\n      }\n    }\n  }\n\n  protected onChange(viewContext: ViewContextType<this>): void {\n    this.updateTheme();\n    this.recohereFasteners(viewContext.updateTime);\n  }\n\n  protected didChange(viewContext: ViewContextType<this>): void {\n    const observers = this.observerCache.viewDidChangeObservers;\n    if (observers !== void 0) {\n      for (let i = 0, n = observers.length; i < n; i += 1) {\n        const observer = observers[i]!;\n        observer.viewDidChange(viewContext, this);\n      }\n    }\n  }\n\n  protected willAnimate(viewContext: ViewContextType<this>): void {\n    const observers = this.observerCache.viewWillAnimateObservers;\n    if (observers !== void 0) {\n      for (let i = 0, n = observers.length; i < n; i += 1) {\n        const observer = observers[i]!;\n        observer.viewWillAnimate(viewContext, this);\n      }\n    }\n  }\n\n  protected onAnimate(viewContext: ViewContextType<this>): void {\n    this.recohereAnimators(viewContext.updateTime);\n  }\n\n  protected didAnimate(viewContext: ViewContextType<this>): void {\n    const observers = this.observerCache.viewDidAnimateObservers;\n    if (observers !== void 0) {\n      for (let i = 0, n = observers.length; i < n; i += 1) {\n        const observer = observers[i]!;\n        observer.viewDidAnimate(viewContext, this);\n      }\n    }\n  }\n\n  protected willProject(viewContext: ViewContextType<this>): void {\n    const observers = this.observerCache.viewWillProjectObservers;\n    if (observers !== void 0) {\n      for (let i = 0; i < observers.length; i += 1) {\n        const observer = observers[i]!;\n        observer.viewWillProject(viewContext, this);\n      }\n    }\n  }\n\n  protected onProject(viewContext: ViewContextType<this>): void {\n    // hook\n  }\n\n  protected didProject(viewContext: ViewContextType<this>): void {\n    const observers = this.observerCache.viewDidProjectObservers;\n    if (observers !== void 0) {\n      for (let i = 0; i < observers.length; i += 1) {\n        const observer = observers[i]!;\n        observer.viewDidProject(viewContext, this);\n      }\n    }\n  }\n\n  protected processChildren(processFlags: ViewFlags, viewContext: ViewContextType<this>,\n                            processChild: (this: this, child: View, processFlags: ViewFlags,\n                                           viewContext: ViewContextType<this>) => void): void {\n    let child = this.firstChild;\n    while (child !== null) {\n      const next = child.nextSibling;\n      processChild.call(this, child, processFlags, viewContext);\n      if (next !== null && next.parent !== this) {\n        throw new Error(\"inconsistent process pass\");\n      }\n      child = next;\n    }\n  }\n\n  protected processChild(child: View, processFlags: ViewFlags, viewContext: ViewContextType<this>): void {\n    child.cascadeProcess(processFlags, viewContext);\n  }\n\n  get displaying(): boolean {\n    return (this.flags & View.DisplayingFlag) !== 0;\n  }\n\n  protected needsDisplay(displayFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    return displayFlags;\n  }\n\n  cascadeDisplay(displayFlags: ViewFlags, baseViewContext: ViewContext): void {\n    const viewContext = this.extendViewContext(baseViewContext);\n    const outerViewContext = ViewContext.current;\n    try {\n      ViewContext.current = viewContext;\n      displayFlags &= ~View.NeedsDisplay;\n      displayFlags |= this.flags & View.UpdateMask;\n      displayFlags = this.needsDisplay(displayFlags, viewContext);\n      if ((displayFlags & View.DisplayMask) !== 0) {\n        let cascadeFlags = displayFlags;\n        this.setFlags(this.flags & ~View.NeedsDisplay | (View.DisplayingFlag | View.ContextualFlag));\n        this.willDisplay(cascadeFlags, viewContext);\n        if (((this.flags | displayFlags) & View.NeedsLayout) !== 0) {\n          cascadeFlags |= View.NeedsLayout;\n          this.setFlags(this.flags & ~View.NeedsLayout);\n          this.willLayout(viewContext);\n        }\n        if (((this.flags | displayFlags) & View.NeedsRender) !== 0) {\n          cascadeFlags |= View.NeedsRender;\n          this.setFlags(this.flags & ~View.NeedsRender);\n          this.willRender(viewContext);\n        }\n        if (((this.flags | displayFlags) & View.NeedsRasterize) !== 0) {\n          cascadeFlags |= View.NeedsRasterize;\n          this.setFlags(this.flags & ~View.NeedsRasterize);\n          this.willRasterize(viewContext);\n        }\n        if (((this.flags | displayFlags) & View.NeedsComposite) !== 0) {\n          cascadeFlags |= View.NeedsComposite;\n          this.setFlags(this.flags & ~View.NeedsComposite);\n          this.willComposite(viewContext);\n        }\n\n        this.onDisplay(cascadeFlags, viewContext);\n        if ((cascadeFlags & View.NeedsLayout) !== 0) {\n          this.onLayout(viewContext);\n        }\n        if ((cascadeFlags & View.NeedsRender) !== 0) {\n          this.onRender(viewContext);\n        }\n        if ((cascadeFlags & View.NeedsRasterize) !== 0) {\n          this.onRasterize(viewContext);\n        }\n        if ((cascadeFlags & View.NeedsComposite) !== 0) {\n          this.onComposite(viewContext);\n        }\n\n        if ((cascadeFlags & View.DisplayMask) !== 0 && !this.hidden && !this.culled) {\n          this.setFlags(this.flags & ~View.ContextualFlag);\n          this.displayChildren(cascadeFlags, viewContext, this.displayChild);\n          this.setFlags(this.flags | View.ContextualFlag);\n        }\n\n        if ((cascadeFlags & View.NeedsComposite) !== 0) {\n          this.didComposite(viewContext);\n        }\n        if ((cascadeFlags & View.NeedsRasterize) !== 0) {\n          this.didRasterize(viewContext);\n        }\n        if ((cascadeFlags & View.NeedsRender) !== 0) {\n          this.didRender(viewContext);\n        }\n        if ((cascadeFlags & View.NeedsLayout) !== 0) {\n          this.didLayout(viewContext);\n        }\n        this.didDisplay(cascadeFlags, viewContext);\n      }\n    } finally {\n      this.setFlags(this.flags & ~(View.DisplayingFlag | View.ContextualFlag));\n      ViewContext.current = outerViewContext;\n    }\n  }\n\n  protected willDisplay(displayFlags: ViewFlags, viewContext: ViewContextType<this>): void {\n    // hook\n  }\n\n  protected onDisplay(displayFlags: ViewFlags, viewContext: ViewContextType<this>): void {\n    // hook\n  }\n\n  protected didDisplay(displayFlags: ViewFlags, viewContext: ViewContextType<this>): void {\n    // hook\n  }\n\n  protected willLayout(viewContext: ViewContextType<this>): void {\n    const observers = this.observerCache.viewWillLayoutObservers;\n    if (observers !== void 0) {\n      for (let i = 0, n = observers.length; i < n; i += 1) {\n        const observer = observers[i]!;\n        observer.viewWillLayout(viewContext, this);\n      }\n    }\n  }\n\n  protected onLayout(viewContext: ViewContextType<this>): void {\n    // hook\n  }\n\n  protected didLayout(viewContext: ViewContextType<this>): void {\n    const observers = this.observerCache.viewDidLayoutObservers;\n    if (observers !== void 0) {\n      for (let i = 0, n = observers.length; i < n; i += 1) {\n        const observer = observers[i]!;\n        observer.viewDidLayout(viewContext, this);\n      }\n    }\n  }\n\n  protected willRender(viewContext: ViewContextType<this>): void {\n    const observers = this.observerCache.viewWillRenderObservers;\n    if (observers !== void 0) {\n      for (let i = 0; i < observers.length; i += 1) {\n        const observer = observers[i]!;\n        observer.viewWillRender(viewContext, this);\n      }\n    }\n  }\n\n  protected onRender(viewContext: ViewContextType<this>): void {\n    // hook\n  }\n\n  protected didRender(viewContext: ViewContextType<this>): void {\n    const observers = this.observerCache.viewDidRenderObservers;\n    if (observers !== void 0) {\n      for (let i = 0; i < observers.length; i += 1) {\n        const observer = observers[i]!;\n        observer.viewDidRender(viewContext, this);\n      }\n    }\n  }\n\n  protected willRasterize(viewContext: ViewContextType<this>): void {\n    const observers = this.observerCache.viewWillRasterizeObservers;\n    if (observers !== void 0) {\n      for (let i = 0; i < observers.length; i += 1) {\n        const observer = observers[i]!;\n        observer.viewWillRasterize(viewContext, this);\n      }\n    }\n  }\n\n  protected onRasterize(viewContext: ViewContextType<this>): void {\n    // hook\n  }\n\n  protected didRasterize(viewContext: ViewContextType<this>): void {\n    const observers = this.observerCache.viewDidRasterizeObservers;\n    if (observers !== void 0) {\n      for (let i = 0; i < observers.length; i += 1) {\n        const observer = observers[i]!;\n        observer.viewDidRasterize(viewContext, this);\n      }\n    }\n  }\n\n  protected willComposite(viewContext: ViewContextType<this>): void {\n    const observers = this.observerCache.viewWillCompositeObservers;\n    if (observers !== void 0) {\n      for (let i = 0; i < observers.length; i += 1) {\n        const observer = observers[i]!;\n        observer.viewWillComposite(viewContext, this);\n      }\n    }\n  }\n\n  protected onComposite(viewContext: ViewContextType<this>): void {\n    // hook\n  }\n\n  protected didComposite(viewContext: ViewContextType<this>): void {\n    const observers = this.observerCache.viewDidCompositeObservers;\n    if (observers !== void 0) {\n      for (let i = 0; i < observers.length; i += 1) {\n        const observer = observers[i]!;\n        observer.viewDidComposite(viewContext, this);\n      }\n    }\n  }\n\n  protected displayChildren(displayFlags: ViewFlags, viewContext: ViewContextType<this>,\n                            displayChild: (this: this, child: View, displayFlags: ViewFlags,\n                                           viewContext: ViewContextType<this>) => void): void {\n    let child = this.firstChild;\n    while (child !== null) {\n      const next = child.nextSibling;\n      displayChild.call(this, child, displayFlags, viewContext);\n      if (next !== null && next.parent !== this) {\n        throw new Error(\"inconsistent display pass\");\n      }\n      child = next;\n    }\n  }\n\n  protected displayChild(child: View, displayFlags: ViewFlags, viewContext: ViewContextType<this>): void {\n    child.cascadeDisplay(displayFlags, viewContext);\n  }\n\n  @Provider({\n    extends: ViewportProvider,\n    type: ViewportService,\n    observes: false,\n    service: ViewportService.global(),\n  })\n  readonly viewportProvider!: ViewportProvider<this>;\n\n  @Provider({\n    extends: DisplayProvider,\n    type: DisplayService,\n    observes: false,\n    service: DisplayService.global(),\n  })\n  readonly displayProvider!: DisplayProvider<this>;\n\n  @Provider({\n    extends: LayoutProvider,\n    type: LayoutService,\n    observes: false,\n    service: LayoutService.global(),\n  })\n  readonly layoutProvider!: LayoutProvider<this>;\n\n  @Provider({\n    extends: ThemeProvider,\n    type: ThemeService,\n    observes: false,\n    service: ThemeService.global(),\n  })\n  readonly themeProvider!: ThemeProvider<this>;\n\n  @Provider({\n    extends: ModalProvider,\n    type: ModalService,\n    observes: false,\n    service: ModalService.global(),\n  })\n  readonly modalProvider!: ModalProvider<this>;\n\n  @Property({type: MoodVector, value: null, inherits: true})\n  readonly mood!: Property<this, MoodVector | null>;\n\n  @Property({type: ThemeMatrix, value: null, inherits: true})\n  readonly theme!: Property<this, ThemeMatrix | null>;\n\n  /** @override */\n  getLook<T>(look: Look<T, unknown>, mood?: MoodVector<Feel> | null): T | undefined {\n    const theme = this.theme.value;\n    let value: T | undefined;\n    if (theme !== null) {\n      if (mood === void 0 || mood === null) {\n        mood = this.mood.value;\n      }\n      if (mood !== null) {\n        value = theme.get(look, mood);\n      }\n    }\n    return value;\n  }\n\n  /** @override */\n  getLookOr<T, E>(look: Look<T, unknown>, elseValue: E): T | E;\n  /** @override */\n  getLookOr<T, E>(look: Look<T, unknown>, mood: MoodVector<Feel> | null, elseValue: E): T | E;\n  getLookOr<T, E>(look: Look<T, unknown>, mood: MoodVector<Feel> | null | E, elseValue?: E): T | E {\n    if (arguments.length === 2) {\n      elseValue = mood as E;\n      mood = null;\n    }\n    const theme = this.theme.value;\n    let value: T | E;\n    if (theme !== null) {\n      if (mood === void 0 || mood === null) {\n        mood = this.mood.value;\n      }\n      if (mood !== null) {\n        value = theme.getOr(look, mood as MoodVector<Feel>, elseValue as E);\n      } else {\n        value = elseValue as E;\n      }\n    } else {\n      value = elseValue as E;\n    }\n    return value;\n  }\n\n  /** @internal */\n  applyTheme(theme: ThemeMatrix, mood: MoodVector, timing?: AnyTiming | boolean): void {\n    if (timing === void 0 || timing === true) {\n      timing = theme.getOr(Look.timing, Mood.ambient, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n    this.willApplyTheme(theme, mood, timing as Timing | boolean);\n    this.onApplyTheme(theme, mood, timing as Timing | boolean);\n    this.didApplyTheme(theme, mood, timing as Timing | boolean);\n  }\n\n  protected willApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewWillApplyTheme !== void 0) {\n        observer.viewWillApplyTheme(theme, mood, timing, this);\n      }\n    }\n  }\n\n  protected onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    this.themeAnimators(theme, mood, timing);\n  }\n\n  protected didApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewDidApplyTheme !== void 0) {\n        observer.viewDidApplyTheme(theme, mood, timing, this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected themeAnimators(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    const fasteners = this.fasteners;\n    for (const fastenerName in fasteners) {\n      const fastener = fasteners[fastenerName]!;\n      if (fastener instanceof ThemeAnimator) {\n        fastener.applyTheme(theme, mood, timing);\n      }\n    }\n  }\n\n  @Property({type: MoodMatrix, value: null})\n  readonly moodModifier!: Property<this, MoodMatrix | null>;\n\n  @Property({type: MoodMatrix, value: null})\n  readonly themeModifier!: Property<this, MoodMatrix | null>;\n\n  /** @internal */\n  modifyMood(feel: Feel, updates: MoodVectorUpdates<Feel>, timing?: AnyTiming | boolean): void {\n    if (this.moodModifier.hasAffinity(Affinity.Intrinsic)) {\n      const oldMoodModifier = this.moodModifier.getValueOr(MoodMatrix.empty());\n      const newMoodModifier = oldMoodModifier.updatedCol(feel, updates, true);\n      if (!newMoodModifier.equals(oldMoodModifier)) {\n        this.moodModifier.setValue(newMoodModifier, Affinity.Intrinsic);\n        this.changeMood();\n        if (timing !== void 0) {\n          const theme = this.theme.value;\n          const mood = this.mood.value;\n          if (theme !== null && mood !== null) {\n            if (timing === true) {\n              timing = theme.getOr(Look.timing, mood, false);\n            } else {\n              timing = Timing.fromAny(timing);\n            }\n            this.applyTheme(theme, mood, timing);\n          }\n        } else {\n          this.requireUpdate(View.NeedsChange);\n        }\n      }\n    }\n  }\n\n  /** @internal */\n  modifyTheme(feel: Feel, updates: MoodVectorUpdates<Feel>, timing?: AnyTiming | boolean): void {\n    if (this.themeModifier.hasAffinity(Affinity.Intrinsic)) {\n      const oldThemeModifier = this.themeModifier.getValueOr(MoodMatrix.empty());\n      const newThemeModifier = oldThemeModifier.updatedCol(feel, updates, true);\n      if (!newThemeModifier.equals(oldThemeModifier)) {\n        this.themeModifier.setValue(newThemeModifier, Affinity.Intrinsic);\n        this.changeTheme();\n        if (timing !== void 0) {\n          const theme = this.theme.value;\n          const mood = this.mood.value;\n          if (theme !== null && mood !== null) {\n            if (timing === true) {\n              timing = theme.getOr(Look.timing, mood, false);\n            } else {\n              timing = Timing.fromAny(timing);\n            }\n            this.applyTheme(theme, mood, timing);\n          }\n        } else {\n          this.requireUpdate(View.NeedsChange);\n        }\n      }\n    }\n  }\n\n  /** @internal */\n  protected changeMood(): void {\n    const moodModifierProperty = this.getFastener(\"moodModifier\", Property) as Property<this, MoodMatrix | null> | null;\n    if (moodModifierProperty !== null && this.mood.hasAffinity(Affinity.Intrinsic)) {\n      const moodModifier = moodModifierProperty.value;\n      if (moodModifier !== null) {\n        let superMood = this.mood.superValue;\n        if (superMood === void 0 || superMood === null) {\n          const themeService = this.themeProvider.service;\n          if (themeService !== void 0 && themeService !== null) {\n            superMood = themeService.mood;\n          }\n        }\n        if (superMood !== void 0 && superMood !== null) {\n          const mood = moodModifier.timesCol(superMood, true);\n          this.mood.setValue(mood, Affinity.Intrinsic);\n        }\n      } else {\n        this.mood.setAffinity(Affinity.Inherited);\n      }\n    }\n  }\n\n  /** @internal */\n  protected changeTheme(): void {\n    const themeModifierProperty = this.getFastener(\"themeModifier\", Property) as Property<this, MoodMatrix | null> | null;\n    if (themeModifierProperty !== null && this.theme.hasAffinity(Affinity.Intrinsic)) {\n      const themeModifier = themeModifierProperty.value;\n      if (themeModifier !== null) {\n        let superTheme = this.theme.superValue;\n        if (superTheme === void 0 || superTheme === null) {\n          const themeService = this.themeProvider.service;\n          if (themeService !== void 0 && themeService !== null) {\n            superTheme = themeService.theme;\n          }\n        }\n        if (superTheme !== void 0 && superTheme !== null) {\n          const theme = superTheme.transform(themeModifier, true);\n          this.theme.setValue(theme, Affinity.Intrinsic);\n        }\n      } else {\n        this.theme.setAffinity(Affinity.Inherited);\n      }\n    }\n  }\n\n  /** @internal */\n  protected updateTheme(timing?: AnyTiming | boolean): void {\n    this.changeMood();\n    this.changeTheme();\n    const theme = this.theme.value;\n    const mood = this.mood.value;\n    if (theme !== null && mood !== null) {\n      this.applyTheme(theme, mood, timing);\n    }\n  }\n\n  /** @internal */\n  protected mountTheme(): void {\n    // hook\n  }\n\n  /** @internal */\n  protected override bindChildFastener(fastener: Fastener, child: View, target: View | null): void {\n    super.bindChildFastener(fastener, child, target);\n    if (fastener instanceof ViewRelation || fastener instanceof Gesture) {\n      fastener.bindView(child, target);\n    }\n  }\n\n  /** @internal */\n  protected override unbindChildFastener(fastener: Fastener, child: View): void {\n    if (fastener instanceof ViewRelation || fastener instanceof Gesture) {\n      fastener.unbindView(child);\n    }\n    super.unbindChildFastener(fastener, child);\n  }\n\n  /** @internal @override */\n  override decohereFastener(fastener: Fastener): void {\n    super.decohereFastener(fastener);\n    if (fastener instanceof Animator) {\n      this.requireUpdate(View.NeedsAnimate);\n    } else {\n      this.requireUpdate(View.NeedsChange);\n    }\n  }\n\n  /** @internal */\n  override recohereFasteners(t?: number): void {\n    const decoherent = this.decoherent;\n    if (decoherent !== null) {\n      const decoherentCount = decoherent.length;\n      if (decoherentCount !== 0) {\n        if (t === void 0) {\n          t = performance.now();\n        }\n        (this as Mutable<this>).decoherent = null;\n        for (let i = 0; i < decoherentCount; i += 1) {\n          const fastener = decoherent[i]!;\n          if (!(fastener instanceof Animator)) {\n            fastener.recohere(t);\n          } else {\n            this.decohereFastener(fastener);\n          }\n        }\n      }\n    }\n  }\n\n  /** @internal */\n  recohereAnimators(t: number): void {\n    const decoherent = this.decoherent;\n    if (decoherent !== null) {\n      const decoherentCount = decoherent.length;\n      if (decoherentCount !== 0) {\n        (this as Mutable<this>).decoherent = null;\n        for (let i = 0; i < decoherentCount; i += 1) {\n          const fastener = decoherent[i]!;\n          if (fastener instanceof Animator) {\n            fastener.recohere(t);\n          } else {\n            this.decohereFastener(fastener);\n          }\n        }\n      }\n    }\n  }\n\n  /** @override */\n  constraint(lhs: AnyConstraintExpression, relation: ConstraintRelation,\n             rhs?: AnyConstraintExpression, strength?: AnyConstraintStrength): Constraint {\n    lhs = ConstraintExpression.fromAny(lhs);\n    if (rhs !== void 0) {\n      rhs = ConstraintExpression.fromAny(rhs);\n    }\n    const expression = rhs !== void 0 ? lhs.minus(rhs) : lhs;\n    if (strength === void 0) {\n      strength = ConstraintStrength.Required;\n    } else {\n      strength = ConstraintStrength.fromAny(strength);\n    }\n    const constraint = new Constraint(this, expression, relation, strength);\n    this.addConstraint(constraint);\n    return constraint;\n  }\n\n  /** @internal */\n  readonly constraints: ReadonlyArray<Constraint>;\n\n  /** @override */\n  hasConstraint(constraint: Constraint): boolean {\n    return this.constraints.indexOf(constraint) >= 0;\n  }\n\n  /** @override */\n  addConstraint(constraint: Constraint): void {\n    const oldConstraints = this.constraints;\n    const newConstraints = Arrays.inserted(constraint, oldConstraints);\n    if (oldConstraints !== newConstraints) {\n      (this as Mutable<this>).constraints = newConstraints;\n      this.activateConstraint(constraint);\n    }\n  }\n\n  /** @override */\n  removeConstraint(constraint: Constraint): void {\n    const oldConstraints = this.constraints;\n    const newConstraints = Arrays.removed(constraint, oldConstraints);\n    if (oldConstraints !== newConstraints) {\n      this.deactivateConstraint(constraint);\n      (this as Mutable<this>).constraints = newConstraints;\n    }\n  }\n\n  /** @internal @override */\n  activateConstraint(constraint: Constraint): void {\n    const layoutService = this.layoutProvider.service;\n    if (layoutService !== void 0 && layoutService !== null) {\n      layoutService.activateConstraint(constraint);\n      this.requireUpdate(View.NeedsLayout);\n    }\n  }\n\n  /** @internal @override */\n  deactivateConstraint(constraint: Constraint): void {\n    const layoutService = this.layoutProvider.service;\n    if (layoutService !== void 0 && layoutService !== null) {\n      layoutService.deactivateConstraint(constraint);\n      this.requireUpdate(View.NeedsLayout);\n    }\n  }\n\n  /** @override */\n  constraintVariable(name: string, value?: number, strength?: AnyConstraintStrength): ConstraintProperty<unknown, number> {\n    if (value === void 0) {\n      value = 0;\n    }\n    if (strength !== void 0) {\n      strength = ConstraintStrength.fromAny(strength);\n    } else {\n      strength = ConstraintStrength.Strong;\n    }\n    const property = ConstraintProperty.create(this) as ConstraintProperty<unknown, number>;\n    Object.defineProperty(property, \"name\", {\n      value: name,\n      configurable: true,\n    });\n    if (value !== void 0) {\n      property.setValue(value);\n    }\n    property.setStrength(strength);\n    property.mount();\n    return property;\n  }\n\n  /** @internal */\n  readonly constraintVariables: ReadonlyArray<ConstraintVariable>;\n\n  /** @override */\n  hasConstraintVariable(constraintVariable: ConstraintVariable): boolean {\n    return this.constraintVariables.indexOf(constraintVariable) >= 0;\n  }\n\n  /** @override */\n  addConstraintVariable(constraintVariable: ConstraintVariable): void {\n    const oldConstraintVariables = this.constraintVariables;\n    const newConstraintVariables = Arrays.inserted(constraintVariable, oldConstraintVariables);\n    if (oldConstraintVariables !== newConstraintVariables) {\n      (this as Mutable<this>).constraintVariables = newConstraintVariables;\n      this.activateConstraintVariable(constraintVariable);\n    }\n  }\n\n  /** @override */\n  removeConstraintVariable(constraintVariable: ConstraintVariable): void {\n    const oldConstraintVariables = this.constraintVariables;\n    const newConstraintVariables = Arrays.removed(constraintVariable, oldConstraintVariables);\n    if (oldConstraintVariables !== newConstraintVariables) {\n      this.deactivateConstraintVariable(constraintVariable);\n      (this as Mutable<this>).constraintVariables = newConstraintVariables;\n    }\n  }\n\n  /** @internal @override */\n  activateConstraintVariable(constraintVariable: ConstraintVariable): void {\n    const layoutService = this.layoutProvider.service;\n    if (layoutService !== void 0 && layoutService !== null) {\n      layoutService.activateConstraintVariable(constraintVariable);\n      this.requireUpdate(View.NeedsLayout);\n    }\n  }\n\n  /** @internal @override */\n  deactivateConstraintVariable(constraintVariable: ConstraintVariable): void {\n    const layoutService = this.layoutProvider.service;\n    if (layoutService !== void 0 && layoutService !== null) {\n      layoutService.deactivateConstraintVariable(constraintVariable);\n      this.requireUpdate(View.NeedsLayout);\n    }\n  }\n\n  /** @internal @override */\n  setConstraintVariable(constraintVariable: ConstraintVariable, value: number): void {\n    const layoutService = this.layoutProvider.service;\n    if (layoutService !== void 0 && layoutService !== null) {\n      layoutService.setConstraintVariable(constraintVariable, value);\n    }\n  }\n\n  /** @internal */\n  evaluateConstraintVariables(): void {\n    const constraintVariables = this.constraintVariables;\n    for (let i = 0, n = constraintVariables.length; i < n; i += 1) {\n      const constraintVariable = constraintVariables[i]!;\n      constraintVariable.evaluateConstraintVariable();\n    }\n  }\n\n  /** @internal */\n  protected activateLayout(): void {\n    const layoutService = this.layoutProvider.service;\n    if (layoutService !== void 0 && layoutService !== null) {\n      const constraints = this.constraints;\n      for (let i = 0, n = constraints.length; i < n; i += 1) {\n        layoutService.activateConstraint(constraints[i]!);\n      }\n    }\n  }\n\n  /** @internal */\n  protected deactivateLayout(): void {\n    const layoutService = this.layoutProvider.service;\n    if (layoutService !== void 0 && layoutService !== null) {\n      const constraints = this.constraints;\n      for (let i = 0, n = constraints.length; i < n; i += 1) {\n        layoutService.deactivateConstraint(constraints[i]!);\n      }\n    }\n  }\n\n  /** @internal */\n  setProperty(key: string, value: unknown, timing?: AnyTiming | boolean | null, affinity?: Affinity): void {\n    const property = this.getLazyFastener(key, Property);\n    if (property !== null) {\n      if (property instanceof Animator) {\n        property.setState(value, timing, affinity);\n      } else {\n        property.setValue(value, affinity);\n      }\n    }\n  }\n\n  setProperties(properties: MemberPropertyInitMap<this>, timingOrAffinity: Affinity | AnyTiming | boolean | null | undefined): void;\n  setProperties(properties: MemberPropertyInitMap<this>, timing?: AnyTiming | boolean | null, affinity?: Affinity): void;\n  setProperties(properties: MemberPropertyInitMap<this>, timing?: Affinity | AnyTiming | boolean | null, affinity?: Affinity): void {\n    if (typeof timing === \"number\") {\n      affinity = timing;\n      timing = void 0;\n    }\n    for (const key in properties) {\n      const value = properties[key];\n      this.setProperty(key, value, timing, affinity);\n    }\n  }\n\n  /** @internal */\n  get superViewContext(): ViewContext {\n    const parent = this.parent;\n    if (parent !== null) {\n      return parent.viewContext;\n    } else {\n      const viewContext = this.viewportProvider.viewContext;\n      return this.displayProvider.updatedViewContext(viewContext);\n    }\n  }\n\n  /** @internal */\n  extendViewContext(viewContext: ViewContext): ViewContextType<this> {\n    return viewContext as ViewContextType<this>;\n  }\n\n  get viewContext(): ViewContextType<this> {\n    if ((this.flags & View.ContextualFlag) !== 0) {\n      return ViewContext.current as ViewContextType<this>;\n    } else {\n      return this.extendViewContext(this.superViewContext);\n    }\n  }\n\n  get viewportIdiom(): ViewportIdiom {\n    return this.viewContext.viewportIdiom;\n  }\n\n  get viewport(): Viewport {\n    return this.viewContext.viewport;\n  }\n\n  /**\n   * Returns the transformation from the parent view coordinates to view\n   * coordinates.\n   */\n  get parentTransform(): Transform {\n    return Transform.identity();\n  }\n\n  /**\n   * Returns the transformation from page coordinates to view coordinates.\n   */\n  get pageTransform(): Transform {\n    const parent = this.parent;\n    if (parent !== null) {\n      return parent.pageTransform.transform(this.parentTransform);\n    } else {\n      return Transform.identity();\n    }\n  }\n\n  get pageBounds(): R2Box {\n    const clientBounds = this.clientBounds;\n    const clientTransform = this.clientTransform;\n    return clientBounds.transform(clientTransform);\n  }\n\n  /**\n   * Returns the bounding box, in page coordinates, the edges to which attached\n   * popovers should point.\n   */\n  get popoverFrame(): R2Box {\n    return this.pageBounds;\n  }\n\n  /**\n   * Returns the transformation from viewport coordinates to view coordinates.\n   */\n  get clientTransform(): Transform {\n    let clientTransform: Transform;\n    const scrollX = window.pageXOffset;\n    const scrollY = window.pageYOffset;\n    if (scrollX !== 0 || scrollY !== 0) {\n      clientTransform = Transform.translate(scrollX, scrollY);\n    } else {\n      clientTransform = Transform.identity();\n    }\n    const pageTransform = this.pageTransform;\n    return clientTransform.transform(pageTransform);\n  }\n\n  get clientBounds(): R2Box {\n    const viewport = this.viewport;\n    return new R2Box(0, 0, viewport.width, viewport.height);\n  }\n\n  intersectsViewport(): boolean {\n    const bounds = this.clientBounds;\n    const viewportWidth = document.documentElement.clientWidth;\n    const viewportHeight = document.documentElement.clientHeight;\n    return (bounds.top <= 0 && 0 < bounds.bottom || 0 <= bounds.top && bounds.top < viewportHeight)\n        && (bounds.left <= 0 && 0 < bounds.right || 0 <= bounds.left && bounds.left < viewportWidth);\n  }\n\n  dispatchEvent(event: Event): boolean {\n    return true; // nop\n  }\n\n  on(type: string, listener: EventListenerOrEventListenerObject,\n     options?: AddEventListenerOptions | boolean): this {\n    return this; // nop\n  }\n\n  off(type: string, listener: EventListenerOrEventListenerObject,\n      options?: EventListenerOptions | boolean): this {\n    return this; // nop\n  }\n\n  /** @internal */\n  readonly observerCache: ViewObserverCache<this>;\n\n  protected override onObserve(observer: ObserverType<this>): void {\n    super.onObserve(observer);\n    if (observer.viewWillInsertChild !== void 0) {\n      this.observerCache.viewWillInsertChildObservers = Arrays.inserted(observer as ViewWillInsertChild, this.observerCache.viewWillInsertChildObservers);\n    }\n    if (observer.viewDidInsertChild !== void 0) {\n      this.observerCache.viewDidInsertChildObservers = Arrays.inserted(observer as ViewDidInsertChild, this.observerCache.viewDidInsertChildObservers);\n    }\n    if (observer.viewWillRemoveChild !== void 0) {\n      this.observerCache.viewWillRemoveChildObservers = Arrays.inserted(observer as ViewWillRemoveChild, this.observerCache.viewWillRemoveChildObservers);\n    }\n    if (observer.viewDidRemoveChild !== void 0) {\n      this.observerCache.viewDidRemoveChildObservers = Arrays.inserted(observer as ViewDidRemoveChild, this.observerCache.viewDidRemoveChildObservers);\n    }\n    if (observer.viewWillResize !== void 0) {\n      this.observerCache.viewWillResizeObservers = Arrays.inserted(observer as ViewWillResize, this.observerCache.viewWillResizeObservers);\n    }\n    if (observer.viewDidResize !== void 0) {\n      this.observerCache.viewDidResizeObservers = Arrays.inserted(observer as ViewDidResize, this.observerCache.viewDidResizeObservers);\n    }\n    if (observer.viewWillScroll !== void 0) {\n      this.observerCache.viewWillScrollObservers = Arrays.inserted(observer as ViewWillScroll, this.observerCache.viewWillScrollObservers);\n    }\n    if (observer.viewDidScroll !== void 0) {\n      this.observerCache.viewDidScrollObservers = Arrays.inserted(observer as ViewDidScroll, this.observerCache.viewDidScrollObservers);\n    }\n    if (observer.viewWillChange !== void 0) {\n      this.observerCache.viewWillChangeObservers = Arrays.inserted(observer as ViewWillChange, this.observerCache.viewWillChangeObservers);\n    }\n    if (observer.viewDidChange !== void 0) {\n      this.observerCache.viewDidChangeObservers = Arrays.inserted(observer as ViewDidChange, this.observerCache.viewDidChangeObservers);\n    }\n    if (observer.viewWillAnimate !== void 0) {\n      this.observerCache.viewWillAnimateObservers = Arrays.inserted(observer as ViewWillAnimate, this.observerCache.viewWillAnimateObservers);\n    }\n    if (observer.viewDidAnimate !== void 0) {\n      this.observerCache.viewDidAnimateObservers = Arrays.inserted(observer as ViewDidAnimate, this.observerCache.viewDidAnimateObservers);\n    }\n    if (observer.viewWillProject !== void 0) {\n      this.observerCache.viewWillProjectObservers = Arrays.inserted(observer as ViewWillProject, this.observerCache.viewWillProjectObservers);\n    }\n    if (observer.viewDidProject !== void 0) {\n      this.observerCache.viewDidProjectObservers = Arrays.inserted(observer as ViewDidProject, this.observerCache.viewDidProjectObservers);\n    }\n    if (observer.viewWillLayout !== void 0) {\n      this.observerCache.viewWillLayoutObservers = Arrays.inserted(observer as ViewWillLayout, this.observerCache.viewWillLayoutObservers);\n    }\n    if (observer.viewDidLayout !== void 0) {\n      this.observerCache.viewDidLayoutObservers = Arrays.inserted(observer as ViewDidLayout, this.observerCache.viewDidLayoutObservers);\n    }\n    if (observer.viewWillRender !== void 0) {\n      this.observerCache.viewWillRenderObservers = Arrays.inserted(observer as ViewWillRender, this.observerCache.viewWillRenderObservers);\n    }\n    if (observer.viewDidRender !== void 0) {\n      this.observerCache.viewDidRenderObservers = Arrays.inserted(observer as ViewDidRender, this.observerCache.viewDidRenderObservers);\n    }\n    if (observer.viewWillRasterize !== void 0) {\n      this.observerCache.viewWillRasterizeObservers = Arrays.inserted(observer as ViewWillRasterize, this.observerCache.viewWillRasterizeObservers);\n    }\n    if (observer.viewDidRasterize !== void 0) {\n      this.observerCache.viewDidRasterizeObservers = Arrays.inserted(observer as ViewDidRasterize, this.observerCache.viewDidRasterizeObservers);\n    }\n    if (observer.viewWillComposite !== void 0) {\n      this.observerCache.viewWillCompositeObservers = Arrays.inserted(observer as ViewWillComposite, this.observerCache.viewWillCompositeObservers);\n    }\n    if (observer.viewDidComposite !== void 0) {\n      this.observerCache.viewDidCompositeObservers = Arrays.inserted(observer as ViewDidComposite, this.observerCache.viewDidCompositeObservers);\n    }\n  }\n\n  protected override onUnobserve(observer: ObserverType<this>): void {\n    super.onUnobserve(observer);\n    if (observer.viewWillInsertChild !== void 0) {\n      this.observerCache.viewWillInsertChildObservers = Arrays.removed(observer as ViewWillInsertChild, this.observerCache.viewWillInsertChildObservers);\n    }\n    if (observer.viewDidInsertChild !== void 0) {\n      this.observerCache.viewDidInsertChildObservers = Arrays.removed(observer as ViewDidInsertChild, this.observerCache.viewDidInsertChildObservers);\n    }\n    if (observer.viewWillRemoveChild !== void 0) {\n      this.observerCache.viewWillRemoveChildObservers = Arrays.removed(observer as ViewWillRemoveChild, this.observerCache.viewWillRemoveChildObservers);\n    }\n    if (observer.viewDidRemoveChild !== void 0) {\n      this.observerCache.viewDidRemoveChildObservers = Arrays.removed(observer as ViewDidRemoveChild, this.observerCache.viewDidRemoveChildObservers);\n    }\n    if (observer.viewWillResize !== void 0) {\n      this.observerCache.viewWillResizeObservers = Arrays.removed(observer as ViewWillResize, this.observerCache.viewWillResizeObservers);\n    }\n    if (observer.viewDidResize !== void 0) {\n      this.observerCache.viewDidResizeObservers = Arrays.removed(observer as ViewDidResize, this.observerCache.viewDidResizeObservers);\n    }\n    if (observer.viewWillScroll !== void 0) {\n      this.observerCache.viewWillScrollObservers = Arrays.removed(observer as ViewWillScroll, this.observerCache.viewWillScrollObservers);\n    }\n    if (observer.viewDidScroll !== void 0) {\n      this.observerCache.viewDidScrollObservers = Arrays.removed(observer as ViewDidScroll, this.observerCache.viewDidScrollObservers);\n    }\n    if (observer.viewWillChange !== void 0) {\n      this.observerCache.viewWillChangeObservers = Arrays.removed(observer as ViewWillChange, this.observerCache.viewWillChangeObservers);\n    }\n    if (observer.viewDidChange !== void 0) {\n      this.observerCache.viewDidChangeObservers = Arrays.removed(observer as ViewDidChange, this.observerCache.viewDidChangeObservers);\n    }\n    if (observer.viewWillAnimate !== void 0) {\n      this.observerCache.viewWillAnimateObservers = Arrays.removed(observer as ViewWillAnimate, this.observerCache.viewWillAnimateObservers);\n    }\n    if (observer.viewDidAnimate !== void 0) {\n      this.observerCache.viewDidAnimateObservers = Arrays.removed(observer as ViewDidAnimate, this.observerCache.viewDidAnimateObservers);\n    }\n    if (observer.viewWillProject !== void 0) {\n      this.observerCache.viewWillProjectObservers = Arrays.removed(observer as ViewWillProject, this.observerCache.viewWillProjectObservers);\n    }\n    if (observer.viewDidProject !== void 0) {\n      this.observerCache.viewDidProjectObservers = Arrays.removed(observer as ViewDidProject, this.observerCache.viewDidProjectObservers);\n    }\n    if (observer.viewWillLayout !== void 0) {\n      this.observerCache.viewWillLayoutObservers = Arrays.removed(observer as ViewWillLayout, this.observerCache.viewWillLayoutObservers);\n    }\n    if (observer.viewDidLayout !== void 0) {\n      this.observerCache.viewDidLayoutObservers = Arrays.removed(observer as ViewDidLayout, this.observerCache.viewDidLayoutObservers);\n    }\n    if (observer.viewWillRender !== void 0) {\n      this.observerCache.viewWillRenderObservers = Arrays.removed(observer as ViewWillRender, this.observerCache.viewWillRenderObservers);\n    }\n    if (observer.viewDidRender !== void 0) {\n      this.observerCache.viewDidRenderObservers = Arrays.removed(observer as ViewDidRender, this.observerCache.viewDidRenderObservers);\n    }\n    if (observer.viewWillRasterize !== void 0) {\n      this.observerCache.viewWillRasterizeObservers = Arrays.removed(observer as ViewWillRasterize, this.observerCache.viewWillRasterizeObservers);\n    }\n    if (observer.viewDidRasterize !== void 0) {\n      this.observerCache.viewDidRasterizeObservers = Arrays.removed(observer as ViewDidRasterize, this.observerCache.viewDidRasterizeObservers);\n    }\n    if (observer.viewWillComposite !== void 0) {\n      this.observerCache.viewWillCompositeObservers = Arrays.removed(observer as ViewWillComposite, this.observerCache.viewWillCompositeObservers);\n    }\n    if (observer.viewDidComposite !== void 0) {\n      this.observerCache.viewDidCompositeObservers = Arrays.removed(observer as ViewDidComposite, this.observerCache.viewDidCompositeObservers);\n    }\n  }\n\n  /** @override */\n  override init(init: ViewInit): void {\n    if (init.mood !== void 0) {\n      this.mood(init.mood);\n    }\n    if (init.moodModifier !== void 0) {\n      this.moodModifier(init.moodModifier);\n    }\n    if (init.theme !== void 0) {\n      this.theme(init.theme);\n    }\n    if (init.themeModifier !== void 0) {\n      this.themeModifier(init.themeModifier);\n    }\n  }\n\n  static override create<S extends new () => InstanceType<S>>(this: S): InstanceType<S> {\n    return new this();\n  }\n\n  static override fromInit<S extends abstract new (...args: any) => InstanceType<S>>(this: S, init: InitType<InstanceType<S>>): InstanceType<S> {\n    let type: Creatable<View>;\n    if ((typeof init === \"object\" && init !== null || typeof init === \"function\") && Creatable.is((init as ViewInit).type)) {\n      type = (init as ViewInit).type!;\n    } else {\n      type = this as unknown as Creatable<View>;\n    }\n    const view = type.create();\n    view.init(init as ViewInit);\n    return view as InstanceType<S>;\n  }\n\n  static override fromAny<S extends abstract new (...args: any) => InstanceType<S>>(this: S, value: AnyView<InstanceType<S>>): InstanceType<S> {\n    if (value === void 0 || value === null) {\n      return value as InstanceType<S>;\n    } else if (value instanceof View) {\n      if (value instanceof this) {\n        return value;\n      } else {\n        throw new TypeError(value + \" not an instance of \" + this);\n      }\n    } else if (Creatable.is(value)) {\n      return (value as Creatable<InstanceType<S>>).create();\n    } else {\n      return (this as unknown as ViewFactory<InstanceType<S>>).fromInit(value);\n    }\n  }\n\n  /** @internal */\n  static override uid: () => number = (function () {\n    let nextId = 1;\n    return function uid(): number {\n      const id = ~~nextId;\n      nextId += 1;\n      return id;\n    }\n  })();\n\n  /** @internal */\n  static override readonly MountedFlag: ViewFlags = Component.MountedFlag;\n  /** @internal */\n  static override readonly RemovingFlag: ViewFlags = Component.RemovingFlag;\n  /** @internal */\n  static readonly ProcessingFlag: ViewFlags = 1 << (Component.FlagShift + 0);\n  /** @internal */\n  static readonly DisplayingFlag: ViewFlags = 1 << (Component.FlagShift + 1);\n  /** @internal */\n  static readonly ContextualFlag: ViewFlags = 1 << (Component.FlagShift + 2);\n  /** @internal */\n  static readonly CullFlag: ViewFlags = 1 << (Component.FlagShift + 3);\n  /** @internal */\n  static readonly CulledFlag: ViewFlags = 1 << (Component.FlagShift + 4);\n  /** @internal */\n  static readonly HideFlag: ViewFlags = 1 << (Component.FlagShift + 5);\n  /** @internal */\n  static readonly HiddenFlag: ViewFlags = 1 << (Component.FlagShift + 6);\n  /** @internal */\n  static readonly UnboundedFlag: ViewFlags = 1 << (Component.FlagShift + 7);\n  /** @internal */\n  static readonly IntangibleFlag: ViewFlags = 1 << (Component.FlagShift + 8);\n  /** @internal */\n  static readonly CulledMask: ViewFlags = View.CullFlag\n                                        | View.CulledFlag;\n  /** @internal */\n  static readonly HiddenMask: ViewFlags = View.HideFlag\n                                        | View.HiddenFlag;\n  /** @internal */\n  static readonly UpdatingMask: ViewFlags = View.ProcessingFlag\n                                          | View.DisplayingFlag;\n  /** @internal */\n  static readonly StatusMask: ViewFlags = View.MountedFlag\n                                        | View.RemovingFlag\n                                        | View.ProcessingFlag\n                                        | View.DisplayingFlag\n                                        | View.ContextualFlag\n                                        | View.CullFlag\n                                        | View.CulledFlag\n                                        | View.HiddenFlag\n                                        | View.UnboundedFlag\n                                        | View.IntangibleFlag;\n\n  static readonly NeedsProcess: ViewFlags = 1 << (Component.FlagShift + 9);\n  static readonly NeedsResize: ViewFlags = 1 << (Component.FlagShift + 10);\n  static readonly NeedsScroll: ViewFlags = 1 << (Component.FlagShift + 11);\n  static readonly NeedsChange: ViewFlags = 1 << (Component.FlagShift + 12);\n  static readonly NeedsAnimate: ViewFlags = 1 << (Component.FlagShift + 13);\n  static readonly NeedsProject: ViewFlags = 1 << (Component.FlagShift + 14);\n  /** @internal */\n  static readonly ProcessMask: ViewFlags = View.NeedsProcess\n                                         | View.NeedsResize\n                                         | View.NeedsScroll\n                                         | View.NeedsChange\n                                         | View.NeedsAnimate\n                                         | View.NeedsProject;\n\n  static readonly NeedsDisplay: ViewFlags = 1 << (Component.FlagShift + 15);\n  static readonly NeedsLayout: ViewFlags = 1 << (Component.FlagShift + 16);\n  static readonly NeedsRender: ViewFlags = 1 << (Component.FlagShift + 17);\n  static readonly NeedsRasterize: ViewFlags = 1 << (Component.FlagShift + 18);\n  static readonly NeedsComposite: ViewFlags = 1 << (Component.FlagShift + 19);\n  /** @internal */\n  static readonly DisplayMask: ViewFlags = View.NeedsDisplay\n                                         | View.NeedsLayout\n                                         | View.NeedsRender\n                                         | View.NeedsRasterize\n                                         | View.NeedsComposite;\n\n  /** @internal */\n  static readonly UpdateMask: ViewFlags = View.ProcessMask\n                                        | View.DisplayMask;\n\n  /** @internal */\n  static override readonly FlagShift: number = Component.FlagShift + 20;\n  /** @internal */\n  static override readonly FlagMask: ViewFlags = (1 << View.FlagShift) - 1;\n\n  static override readonly MountFlags: ViewFlags = Component.MountFlags | View.NeedsResize | View.NeedsChange | View.NeedsLayout;\n  static readonly UncullFlags: ViewFlags = View.NeedsResize | View.NeedsChange | View.NeedsLayout;\n  static readonly UnhideFlags: ViewFlags = View.NeedsLayout;\n  static override readonly InsertChildFlags: ViewFlags = Component.InsertChildFlags | View.NeedsLayout;\n  static override readonly RemoveChildFlags: ViewFlags = Component.RemoveChildFlags | View.NeedsLayout;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Proto, ObserverType} from \"@swim/util\";\nimport {FastenerOwner, FastenerInit, FastenerClass, Fastener} from \"@swim/component\";\nimport {AnyView, ViewFactory, View} from \"./View\";\n\n/** @internal */\nexport type ViewRelationType<F extends ViewRelation<any, any>> =\n  F extends ViewRelation<any, infer V> ? V : never;\n\n/** @public */\nexport interface ViewRelationInit<V extends View = View> extends FastenerInit {\n  extends?: {prototype: ViewRelation<any, any>} | string | boolean | null;\n  type?: ViewFactory<V>;\n  binds?: boolean;\n  observes?: boolean;\n\n  initView?(view: V): void;\n  willAttachView?(view: V, target: View | null): void;\n  didAttachView?(view: V, target: View | null): void;\n\n  deinitView?(view: V): void;\n  willDetachView?(view: V): void;\n  didDetachView?(view: V): void;\n\n  parentView?: View | null;\n  insertChild?(parent: View, child: V, target: View | null, key: string | undefined): void;\n\n  detectView?(view: View): V | null;\n  createView?(): V;\n  fromAny?(value: AnyView<V>): V;\n}\n\n/** @public */\nexport type ViewRelationDescriptor<O = unknown, V extends View = View, I = {}> = ThisType<ViewRelation<O, V> & I> & ViewRelationInit<V> & Partial<I>;\n\n/** @public */\nexport interface ViewRelationClass<F extends ViewRelation<any, any> = ViewRelation<any, any>> extends FastenerClass<F> {\n}\n\n/** @public */\nexport interface ViewRelationFactory<F extends ViewRelation<any, any> = ViewRelation<any, any>> extends ViewRelationClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): ViewRelationFactory<F> & I;\n\n  define<O, V extends View = View>(className: string, descriptor: ViewRelationDescriptor<O, V>): ViewRelationFactory<ViewRelation<any, V>>;\n  define<O, V extends View = View>(className: string, descriptor: {observes: boolean} & ViewRelationDescriptor<O, V, ObserverType<V>>): ViewRelationFactory<ViewRelation<any, V>>;\n  define<O, V extends View = View, I = {}>(className: string, descriptor: {implements: unknown} & ViewRelationDescriptor<O, V, I>): ViewRelationFactory<ViewRelation<any, V> & I>;\n  define<O, V extends View = View, I = {}>(className: string, descriptor: {implements: unknown; observes: boolean} & ViewRelationDescriptor<O, V, I & ObserverType<V>>): ViewRelationFactory<ViewRelation<any, V> & I>;\n\n  <O, V extends View = View>(descriptor: ViewRelationDescriptor<O, V>): PropertyDecorator;\n  <O, V extends View = View>(descriptor: {observes: boolean} & ViewRelationDescriptor<O, V, ObserverType<V>>): PropertyDecorator;\n  <O, V extends View = View, I = {}>(descriptor: {implements: unknown} & ViewRelationDescriptor<O, V, I>): PropertyDecorator;\n  <O, V extends View = View, I = {}>(descriptor: {implements: unknown; observes: boolean} & ViewRelationDescriptor<O, V, I & ObserverType<V>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface ViewRelation<O = unknown, V extends View = View> extends Fastener<O> {\n  /** @override */\n  get fastenerType(): Proto<ViewRelation<any, any>>;\n\n  /** @protected */\n  initView(view: V): void;\n\n  /** @protected */\n  willAttachView(view: V, target: View | null): void;\n\n  /** @protected */\n  onAttachView(view: V, target: View | null): void;\n\n  /** @protected */\n  didAttachView(view: V, target: View | null): void;\n\n  /** @protected */\n  deinitView(view: V): void;\n\n  /** @protected */\n  willDetachView(view: V): void;\n\n  /** @protected */\n  onDetachView(view: V): void;\n\n  /** @protected */\n  didDetachView(view: V): void;\n\n  /** @internal @protected */\n  get parentView(): View | null;\n\n  /** @internal @protected */\n  insertChild(parent: View, child: V, target: View | null, key: string | undefined): void;\n\n  /** @internal */\n  bindView(view: View, target: View | null): void;\n\n  /** @internal */\n  unbindView(view: View): void;\n\n  detectView(view: View): V | null;\n\n  createView(): V;\n\n  /** @internal @protected */\n  fromAny(value: AnyView<V>): V;\n\n  /** @internal @protected */\n  get type(): ViewFactory<V> | undefined; // optional prototype property\n\n  /** @internal @protected */\n  get binds(): boolean | undefined; // optional prototype property\n\n  /** @internal @protected */\n  get observes(): boolean | undefined; // optional prototype property\n\n  /** @internal @override */\n  get lazy(): boolean; // prototype property\n\n  /** @internal @override */\n  get static(): string | boolean; // prototype property\n}\n\n/** @public */\nexport const ViewRelation = (function (_super: typeof Fastener) {\n  const ViewRelation: ViewRelationFactory = _super.extend(\"ViewRelation\");\n\n  Object.defineProperty(ViewRelation.prototype, \"fastenerType\", {\n    get: function (this: ViewRelation): Proto<ViewRelation<any, any>> {\n      return ViewRelation;\n    },\n    configurable: true,\n  });\n\n  ViewRelation.prototype.initView = function <V extends View>(this: ViewRelation<unknown, V>, view: V): void {\n    // hook\n  };\n\n  ViewRelation.prototype.willAttachView = function <V extends View>(this: ViewRelation<unknown, V>, view: V, target: View | null): void {\n    // hook\n  };\n\n  ViewRelation.prototype.onAttachView = function <V extends View>(this: ViewRelation<unknown, V>, view: V, target: View | null): void {\n    if (this.observes === true) {\n      view.observe(this as ObserverType<V>);\n    }\n  };\n\n  ViewRelation.prototype.didAttachView = function <V extends View>(this: ViewRelation<unknown, V>, view: V, target: View | null): void {\n    // hook\n  };\n\n  ViewRelation.prototype.deinitView = function <V extends View>(this: ViewRelation<unknown, V>, view: V): void {\n    // hook\n  };\n\n  ViewRelation.prototype.willDetachView = function <V extends View>(this: ViewRelation<unknown, V>, view: V): void {\n    // hook\n  };\n\n  ViewRelation.prototype.onDetachView = function <V extends View>(this: ViewRelation<unknown, V>, view: V): void {\n    if (this.observes === true) {\n      view.unobserve(this as ObserverType<V>);\n    }\n  };\n\n  ViewRelation.prototype.didDetachView = function <V extends View>(this: ViewRelation<unknown, V>, view: V): void {\n    // hook\n  };\n\n  Object.defineProperty(ViewRelation.prototype, \"parentView\", {\n    get(this: ViewRelation): View | null {\n      const owner = this.owner;\n      return owner instanceof View ? owner : null;\n    },\n    configurable: true,\n  });\n\n  ViewRelation.prototype.insertChild = function <V extends View>(this: ViewRelation<unknown, V>, parent: View, child: V, target: View | null, key: string | undefined): void {\n    parent.insertChild(child, target, key);\n  };\n\n  ViewRelation.prototype.bindView = function <V extends View>(this: ViewRelation<unknown, V>, view: View, target: View | null): void {\n    // hook\n  };\n\n  ViewRelation.prototype.unbindView = function <V extends View>(this: ViewRelation<unknown, V>, view: View): void {\n    // hook\n  };\n\n  ViewRelation.prototype.detectView = function <V extends View>(this: ViewRelation<unknown, V>, view: View): V | null {\n    return null;\n  };\n\n  ViewRelation.prototype.createView = function <V extends View>(this: ViewRelation<unknown, V>): V {\n    let view: V | undefined;\n    const type = this.type;\n    if (type !== void 0) {\n      view = type.create();\n    }\n    if (view === void 0 || view === null) {\n      let message = \"Unable to create \";\n      if (this.name.length !== 0) {\n        message += this.name + \" \";\n      }\n      message += \"view\";\n      throw new Error(message);\n    }\n    return view;\n  };\n\n  ViewRelation.prototype.fromAny = function <V extends View>(this: ViewRelation<unknown, V>, value: AnyView<V>): V {\n    const type = this.type;\n    if (type !== void 0) {\n      return type.fromAny(value);\n    } else {\n      return View.fromAny(value) as V;\n    }\n  };\n\n  Object.defineProperty(ViewRelation.prototype, \"lazy\", {\n    get: function (this: ViewRelation): boolean {\n      return false;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(ViewRelation.prototype, \"static\", {\n    get: function (this: ViewRelation): string | boolean {\n      return true;\n    },\n    configurable: true,\n  });\n\n  ViewRelation.construct = function <F extends ViewRelation<any, any>>(fastenerClass: {prototype: F}, fastener: F | null, owner: FastenerOwner<F>): F {\n    fastener = _super.construct(fastenerClass, fastener, owner) as F;\n    return fastener;\n  };\n\n  ViewRelation.define = function <O, V extends View>(className: string, descriptor: ViewRelationDescriptor<O, V>): ViewRelationFactory<ViewRelation<any, V>> {\n    let superClass = descriptor.extends as ViewRelationFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const fastenerClass = superClass.extend(className, descriptor);\n\n    fastenerClass.construct = function (fastenerClass: {prototype: ViewRelation<any, any>}, fastener: ViewRelation<O, V> | null, owner: O): ViewRelation<O, V> {\n      fastener = superClass!.construct(fastenerClass, fastener, owner);\n      if (affinity !== void 0) {\n        fastener.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        fastener.initInherits(inherits);\n      }\n      return fastener;\n    };\n\n    return fastenerClass;\n  };\n\n  return ViewRelation;\n})(Fastener);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Proto, Arrays, ObserverType} from \"@swim/util\";\nimport type {FastenerOwner, Fastener} from \"@swim/component\";\nimport {\n  AnyConstraintExpression,\n  ConstraintExpression,\n  ConstraintVariable,\n  ConstraintProperty,\n  ConstraintRelation,\n  AnyConstraintStrength,\n  ConstraintStrength,\n  Constraint,\n  ConstraintScope,\n  ConstraintContext,\n} from \"@swim/constraint\";\nimport type {AnyView, View} from \"./View\";\nimport {ViewRelationInit, ViewRelationClass, ViewRelation} from \"./ViewRelation\";\n\n/** @internal */\nexport type ViewRefType<F extends ViewRef<any, any>> =\n  F extends ViewRef<any, infer V> ? V : never;\n\n/** @public */\nexport interface ViewRefInit<V extends View = View> extends ViewRelationInit<V> {\n  extends?: {prototype: ViewRef<any, any>} | string | boolean | null;\n  key?: string | boolean;\n}\n\n/** @public */\nexport type ViewRefDescriptor<O = unknown, V extends View = View, I = {}> = ThisType<ViewRef<O, V> & I> & ViewRefInit<V> & Partial<I>;\n\n/** @public */\nexport interface ViewRefClass<F extends ViewRef<any, any> = ViewRef<any, any>> extends ViewRelationClass<F> {\n}\n\n/** @public */\nexport interface ViewRefFactory<F extends ViewRef<any, any> = ViewRef<any, any>> extends ViewRefClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): ViewRefFactory<F> & I;\n\n  define<O, V extends View = View>(className: string, descriptor: ViewRefDescriptor<O, V>): ViewRefFactory<ViewRef<any, V>>;\n  define<O, V extends View = View>(className: string, descriptor: {observes: boolean} & ViewRefDescriptor<O, V, ObserverType<V>>): ViewRefFactory<ViewRef<any, V>>;\n  define<O, V extends View = View, I = {}>(className: string, descriptor: {implements: unknown} & ViewRefDescriptor<O, V, I>): ViewRefFactory<ViewRef<any, V> & I>;\n  define<O, V extends View = View, I = {}>(className: string, descriptor: {implements: unknown; observes: boolean} & ViewRefDescriptor<O, V, I & ObserverType<V>>): ViewRefFactory<ViewRef<any, V> & I>;\n\n  <O, V extends View = View>(descriptor: ViewRefDescriptor<O, V>): PropertyDecorator;\n  <O, V extends View = View>(descriptor: {observes: boolean} & ViewRefDescriptor<O, V, ObserverType<V>>): PropertyDecorator;\n  <O, V extends View = View, I = {}>(descriptor: {implements: unknown} & ViewRefDescriptor<O, V, I>): PropertyDecorator;\n  <O, V extends View = View, I = {}>(descriptor: {implements: unknown; observes: boolean} & ViewRefDescriptor<O, V, I & ObserverType<V>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface ViewRef<O = unknown, V extends View = View> extends ViewRelation<O, V>, ConstraintScope, ConstraintContext {\n  (): V | null;\n  (view: AnyView<V> | null, target?: View | null, key?: string): O;\n\n  /** @override */\n  get fastenerType(): Proto<ViewRef<any, any>>;\n\n  /** @protected @override */\n  onInherit(superFastener: Fastener): void;\n\n  readonly view: V | null;\n\n  getView(): V;\n\n  setView(view: AnyView<V> | null, target?: View | null, key?: string): V | null;\n\n  attachView(view?: AnyView<V>, target?: View | null): V;\n\n  detachView(): V | null;\n\n  insertView(parent?: View | null, view?: AnyView<V>, target?: View | null, key?: string): V;\n\n  removeView(): V | null;\n\n  deleteView(): V | null;\n\n  /** @internal @override */\n  bindView(view: View, target: View | null): void;\n\n  /** @internal @override */\n  unbindView(view: View): void;\n\n  /** @override */\n  detectView(view: View): V | null;\n\n  constraint(lhs: AnyConstraintExpression, relation: ConstraintRelation, rhs?: AnyConstraintExpression, strength?: AnyConstraintStrength): Constraint;\n\n  /** @internal */\n  readonly constraints: ReadonlyArray<Constraint>;\n\n  /** @override */\n  hasConstraint(constraint: Constraint): boolean;\n\n  /** @override */\n  addConstraint(constraint: Constraint): void;\n\n  /** @override */\n  removeConstraint(constraint: Constraint): void;\n\n  /** @override */\n  activateConstraint(constraint: Constraint): void;\n\n  /** @override */\n  deactivateConstraint(constraint: Constraint): void;\n\n  /** @override */\n  constraintVariable(name: string, value?: number, strength?: AnyConstraintStrength): ConstraintProperty<unknown, number>;\n\n  /** @internal */\n  readonly constraintVariables: ReadonlyArray<ConstraintVariable>;\n\n  /** @override */\n  hasConstraintVariable(variable: ConstraintVariable): boolean;\n\n  /** @override */\n  addConstraintVariable(variable: ConstraintVariable): void;\n\n  /** @override */\n  removeConstraintVariable(variable: ConstraintVariable): void;\n\n  /** @override */\n  activateConstraintVariable(constraintVariable: ConstraintVariable): void;\n\n  /** @override */\n  deactivateConstraintVariable(constraintVariable: ConstraintVariable): void;\n\n  /** @override */\n  setConstraintVariable(constraintVariable: ConstraintVariable, state: number): void;\n\n  /** @internal @protected */\n  activateLayout(): void;\n\n  /** @internal @protected */\n  deactivateLayout(): void;\n\n  /** @protected @override */\n  onMount(): void;\n\n  /** @protected @override */\n  onUnmount(): void;\n\n  /** @internal */\n  get key(): string | undefined; // optional prototype field\n}\n\n/** @public */\nexport const ViewRef = (function (_super: typeof ViewRelation) {\n  const ViewRef: ViewRefFactory = _super.extend(\"ViewRef\");\n\n  Object.defineProperty(ViewRef.prototype, \"fastenerType\", {\n    get: function (this: ViewRef): Proto<ViewRef<any, any>> {\n      return ViewRef;\n    },\n    configurable: true,\n  });\n\n  ViewRef.prototype.onInherit = function (this: ViewRef, superFastener: ViewRef): void {\n    this.setView(superFastener.view);\n  };\n\n  ViewRef.prototype.getView = function <V extends View>(this: ViewRef<unknown, V>): V {\n    const view = this.view;\n    if (view === null) {\n      let message = view + \" \";\n      if (this.name.length !== 0) {\n        message += this.name + \" \";\n      }\n      message += \"view\";\n      throw new TypeError(message);\n    }\n    return view;\n  };\n\n  ViewRef.prototype.setView = function <V extends View>(this: ViewRef<unknown, V>, newView: AnyView<V> | null, target?: View | null, key?: string): V | null {\n    if (newView !== null) {\n      newView = this.fromAny(newView);\n    }\n    let oldView = this.view;\n    if (oldView !== newView) {\n      if (target === void 0) {\n        target = null;\n      }\n      let parent: View | null;\n      if (this.binds && (parent = this.parentView, parent !== null)) {\n        if (oldView !== null && oldView.parent === parent) {\n          if (target === null) {\n            target = oldView.nextSibling;\n          }\n          oldView.remove();\n        }\n        if (newView !== null) {\n          if (key === void 0) {\n            key = this.key;\n          }\n          this.insertChild(parent, newView, target, key);\n        }\n        oldView = this.view;\n      }\n      if (oldView !== newView) {\n        if (oldView !== null) {\n          this.deactivateLayout();\n          this.willDetachView(oldView);\n          (this as Mutable<typeof this>).view = null;\n          this.onDetachView(oldView);\n          this.deinitView(oldView);\n          this.didDetachView(oldView);\n        }\n        if (newView !== null) {\n          this.willAttachView(newView, target);\n          (this as Mutable<typeof this>).view = newView;\n          this.onAttachView(newView, target);\n          this.initView(newView);\n          this.didAttachView(newView, target);\n        }\n      }\n    }\n    return oldView;\n  };\n\n  ViewRef.prototype.attachView = function <V extends View>(this: ViewRef<unknown, V>, newView?: AnyView<V>, target?: View | null): V {\n    const oldView = this.view;\n    if (newView !== void 0 && newView !== null) {\n      newView = this.fromAny(newView);\n    } else if (oldView === null) {\n      newView = this.createView();\n    } else {\n      newView = oldView;\n    }\n    if (newView !== oldView) {\n      if (target === void 0) {\n        target = null;\n      }\n      if (oldView !== null) {\n        this.deactivateLayout();\n        this.willDetachView(oldView);\n        (this as Mutable<typeof this>).view = null;\n        this.onDetachView(oldView);\n        this.deinitView(oldView);\n        this.didDetachView(oldView);\n      }\n      this.willAttachView(newView, target);\n      (this as Mutable<typeof this>).view = newView;\n      this.onAttachView(newView, target);\n      this.initView(newView);\n      this.didAttachView(newView, target);\n    }\n    return newView;\n  };\n\n  ViewRef.prototype.detachView = function <V extends View>(this: ViewRef<unknown, V>): V | null {\n    const oldView = this.view;\n    if (oldView !== null) {\n      this.deactivateLayout();\n      this.willDetachView(oldView);\n      (this as Mutable<typeof this>).view = null;\n      this.onDetachView(oldView);\n      this.deinitView(oldView);\n      this.didDetachView(oldView);\n    }\n    return oldView;\n  };\n\n  ViewRef.prototype.insertView = function <V extends View>(this: ViewRef<unknown, V>, parent?: View | null, newView?: AnyView<V>, target?: View | null, key?: string): V {\n    if (newView !== void 0 && newView !== null) {\n      newView = this.fromAny(newView);\n    } else {\n      const oldView = this.view;\n      if (oldView === null) {\n        newView = this.createView();\n      } else {\n        newView = oldView;\n      }\n    }\n    if (parent === void 0 || parent === null) {\n      parent = this.parentView;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (key === void 0) {\n      key = this.key;\n    }\n    if (parent !== null && (newView.parent !== parent || newView.key !== key)) {\n      this.insertChild(parent, newView, target, key);\n    }\n    const oldView = this.view;\n    if (newView !== oldView) {\n      if (oldView !== null) {\n        this.deactivateLayout();\n        this.willDetachView(oldView);\n        (this as Mutable<typeof this>).view = null;\n        this.onDetachView(oldView);\n        this.deinitView(oldView);\n        this.didDetachView(oldView);\n        oldView.remove();\n      }\n      this.willAttachView(newView, target);\n      (this as Mutable<typeof this>).view = newView;\n      this.onAttachView(newView, target);\n      this.initView(newView);\n      this.didAttachView(newView, target);\n    }\n    return newView;\n  };\n\n  ViewRef.prototype.removeView = function <V extends View>(this: ViewRef<unknown, V>): V | null {\n    const view = this.view;\n    if (view !== null) {\n      view.remove();\n    }\n    return view;\n  };\n\n  ViewRef.prototype.deleteView = function <V extends View>(this: ViewRef<unknown, V>): V | null {\n    const view = this.detachView();\n    if (view !== null) {\n      view.remove();\n    }\n    return view;\n  };\n\n  ViewRef.prototype.bindView = function <V extends View>(this: ViewRef<unknown, V>, view: View, target: View | null): void {\n    if (this.binds && this.view === null) {\n      const newView = this.detectView(view);\n      if (newView !== null) {\n        this.willAttachView(newView, target);\n        (this as Mutable<typeof this>).view = newView;\n        this.onAttachView(newView, target);\n        this.initView(newView);\n        this.didAttachView(newView, target);\n      }\n    }\n  };\n\n  ViewRef.prototype.unbindView = function <V extends View>(this: ViewRef<unknown, V>, view: View): void {\n    if (this.binds) {\n      const oldView = this.detectView(view);\n      if (oldView !== null && this.view === oldView) {\n        this.deactivateLayout();\n        this.willDetachView(oldView);\n        (this as Mutable<typeof this>).view = null;\n        this.onDetachView(oldView);\n        this.deinitView(oldView);\n        this.didDetachView(oldView);\n      }\n    }\n  };\n\n  ViewRef.prototype.detectView = function <V extends View>(this: ViewRef<unknown, V>, view: View): V | null {\n    const key = this.key;\n    if (key !== void 0 && key === view.key) {\n      return view as V;\n    }\n    return null;\n  };\n\n  ViewRef.prototype.constraint = function (this: ViewRef<ConstraintScope & ConstraintContext, View>, lhs: AnyConstraintExpression, relation: ConstraintRelation, rhs?: AnyConstraintExpression, strength?: AnyConstraintStrength): Constraint {\n    lhs = ConstraintExpression.fromAny(lhs);\n    if (rhs !== void 0) {\n      rhs = ConstraintExpression.fromAny(rhs);\n    }\n    const expression = rhs !== void 0 ? lhs.minus(rhs) : lhs;\n    if (strength === void 0) {\n      strength = ConstraintStrength.Required;\n    } else {\n      strength = ConstraintStrength.fromAny(strength);\n    }\n    const constraint = new Constraint(this.owner, expression, relation, strength);\n    this.addConstraint(constraint);\n    return constraint;\n  };\n\n  ViewRef.prototype.hasConstraint = function (this: ViewRef, constraint: Constraint): boolean {\n    return this.constraints.indexOf(constraint) >= 0;\n  };\n\n  ViewRef.prototype.addConstraint = function (this: ViewRef, constraint: Constraint): void {\n    const oldConstraints = this.constraints;\n    const newConstraints = Arrays.inserted(constraint, oldConstraints);\n    if (oldConstraints !== newConstraints) {\n      (this as Mutable<typeof this>).constraints = newConstraints;\n      this.activateConstraint(constraint);\n    }\n  };\n\n  ViewRef.prototype.removeConstraint = function (this: ViewRef, constraint: Constraint): void {\n    const oldConstraints = this.constraints;\n    const newConstraints = Arrays.removed(constraint, oldConstraints);\n    if (oldConstraints !== newConstraints) {\n      this.deactivateConstraint(constraint);\n      (this as Mutable<typeof this>).constraints = newConstraints;\n    }\n  };\n\n  ViewRef.prototype.activateConstraint = function (this: ViewRef<ConstraintContext, View>, constraint: Constraint): void {\n    this.owner.activateConstraint(constraint);\n  };\n\n  ViewRef.prototype.deactivateConstraint = function (this: ViewRef<ConstraintContext, View>, constraint: Constraint): void {\n    this.owner.deactivateConstraint(constraint);\n  };\n\n  ViewRef.prototype.constraintVariable = function (this: ViewRef, name: string, value?: number, strength?: AnyConstraintStrength): ConstraintProperty<unknown, number> {\n    if (value === void 0) {\n      value = 0;\n    }\n    if (strength !== void 0) {\n      strength = ConstraintStrength.fromAny(strength);\n    } else {\n      strength = ConstraintStrength.Strong;\n    }\n    const property = ConstraintProperty.create(this) as ConstraintProperty<unknown, number>;\n    Object.defineProperty(property, \"name\", {\n      value: name,\n      configurable: true,\n    });\n    if (value !== void 0) {\n      property.setValue(value);\n    }\n    property.setStrength(strength);\n    property.mount();\n    return property;\n  };\n\n  ViewRef.prototype.hasConstraintVariable = function (this: ViewRef, constraintVariable: ConstraintVariable): boolean {\n    return this.constraintVariables.indexOf(constraintVariable) >= 0;\n  };\n\n  ViewRef.prototype.addConstraintVariable = function (this: ViewRef, constraintVariable: ConstraintVariable): void {\n    const oldConstraintVariables = this.constraintVariables;\n    const newConstraintVariables = Arrays.inserted(constraintVariable, oldConstraintVariables);\n    if (oldConstraintVariables !== newConstraintVariables) {\n      (this as Mutable<typeof this>).constraintVariables = newConstraintVariables;\n      this.activateConstraintVariable(constraintVariable);\n    }\n  };\n\n  ViewRef.prototype.removeConstraintVariable = function (this: ViewRef, constraintVariable: ConstraintVariable): void {\n    const oldConstraintVariables = this.constraintVariables;\n    const newConstraintVariables = Arrays.removed(constraintVariable, oldConstraintVariables);\n    if (oldConstraintVariables !== newConstraintVariables) {\n      this.deactivateConstraintVariable(constraintVariable);\n      (this as Mutable<typeof this>).constraintVariables = newConstraintVariables;\n    }\n  };\n\n  ViewRef.prototype.activateConstraintVariable = function (this: ViewRef<ConstraintContext, View>, constraintVariable: ConstraintVariable): void {\n    this.owner.activateConstraintVariable(constraintVariable);\n  };\n\n  ViewRef.prototype.deactivateConstraintVariable = function (this: ViewRef<ConstraintContext, View>, constraintVariable: ConstraintVariable): void {\n    this.owner.deactivateConstraintVariable(constraintVariable);\n  };\n\n  ViewRef.prototype.setConstraintVariable = function (this: ViewRef<ConstraintContext, View>, constraintVariable: ConstraintVariable, state: number): void {\n    this.owner.setConstraintVariable(constraintVariable, state);\n  };\n\n  ViewRef.prototype.activateLayout = function (this: ViewRef<ConstraintContext, View>): void {\n    const constraintVariables = this.constraintVariables;\n    for (let i = 0, n = constraintVariables.length; i < n; i += 1) {\n      this.owner.activateConstraintVariable(constraintVariables[i]!);\n    }\n    const constraints = this.constraints;\n    for (let i = 0, n = constraints.length; i < n; i += 1) {\n      this.owner.activateConstraint(constraints[i]!);\n    }\n  };\n\n  ViewRef.prototype.deactivateLayout = function (this: ViewRef<ConstraintContext, View>): void {\n    const constraints = this.constraints;\n    for (let i = 0, n = constraints.length; i < n; i += 1) {\n      this.owner.deactivateConstraint(constraints[i]!);\n    }\n    const constraintVariables = this.constraintVariables;\n    for (let i = 0, n = constraintVariables.length; i < n; i += 1) {\n      this.owner.deactivateConstraintVariable(constraintVariables[i]!);\n    }\n  };\n\n  ViewRef.prototype.onMount = function (this: ViewRef): void {\n    _super.prototype.onMount.call(this);\n    this.activateLayout();\n  };\n\n  ViewRef.prototype.onUnmount = function (this: ViewRef): void {\n    this.deactivateLayout();\n    _super.prototype.onUnmount.call(this);\n  };\n\n  ViewRef.construct = function <F extends ViewRef<any, any>>(fastenerClass: {prototype: F}, fastener: F | null, owner: FastenerOwner<F>): F {\n    if (fastener === null) {\n      fastener = function (view?: AnyView<ViewRefType<F>> | null, target?: View | null, key?: string): ViewRefType<F> | null | FastenerOwner<F> {\n        if (view === void 0) {\n          return fastener!.view;\n        } else {\n          fastener!.setView(view, target, key);\n          return fastener!.owner;\n        }\n      } as F;\n      delete (fastener as Partial<Mutable<F>>).name; // don't clobber prototype name\n      Object.setPrototypeOf(fastener, fastenerClass.prototype);\n    }\n    fastener = _super.construct(fastenerClass, fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).view = null;\n    (fastener as Mutable<typeof fastener>).constraints = Arrays.empty;\n    (fastener as Mutable<typeof fastener>).constraintVariables = Arrays.empty;\n    return fastener;\n  };\n\n  ViewRef.define = function <O, V extends View>(className: string, descriptor: ViewRefDescriptor<O, V>): ViewRefFactory<ViewRef<any, V>> {\n    let superClass = descriptor.extends as ViewRefFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n\n    if (descriptor.key === true) {\n      Object.defineProperty(descriptor, \"key\", {\n        value: className,\n        configurable: true,\n      });\n    } else if (descriptor.key === false) {\n      Object.defineProperty(descriptor, \"key\", {\n        value: void 0,\n        configurable: true,\n      });\n    }\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const fastenerClass = superClass.extend(className, descriptor);\n\n    fastenerClass.construct = function (fastenerClass: {prototype: ViewRef<any, any>}, fastener: ViewRef<O, V> | null, owner: O): ViewRef<O, V> {\n      fastener = superClass!.construct(fastenerClass, fastener, owner);\n      if (affinity !== void 0) {\n        fastener.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        fastener.initInherits(inherits);\n      }\n      return fastener;\n    };\n\n    return fastenerClass;\n  };\n\n  return ViewRef;\n})(ViewRelation);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Proto, ObserverType} from \"@swim/util\";\nimport type {FastenerOwner, FastenerFlags} from \"@swim/component\";\nimport type {AnyView, View} from \"./View\";\nimport {ViewRelationInit, ViewRelationClass, ViewRelation} from \"./ViewRelation\";\n\n/** @internal */\nexport type ViewSetType<F extends ViewSet<any, any>> =\n  F extends ViewSet<any, infer V> ? V : never;\n\n/** @public */\nexport interface ViewSetInit<V extends View = View> extends ViewRelationInit<V> {\n  extends?: {prototype: ViewSet<any, any>} | string | boolean | null;\n  key?(view: V): string | undefined;\n  compare?(a: V, b: V): number;\n\n  sorted?: boolean;\n  willSort?(parent: View | null): void;\n  didSort?(parent: View | null): void;\n  sortChildren?(parent: View): void;\n  compareChildren?(a: View, b: View): number;\n}\n\n/** @public */\nexport type ViewSetDescriptor<O = unknown, V extends View = View, I = {}> = ThisType<ViewSet<O, V> & I> & ViewSetInit<V> & Partial<I>;\n\n/** @public */\nexport interface ViewSetClass<F extends ViewSet<any, any> = ViewSet<any, any>> extends ViewRelationClass<F> {\n  /** @internal */\n  readonly SortedFlag: FastenerFlags;\n\n  /** @internal @override */\n  readonly FlagShift: number;\n  /** @internal @override */\n  readonly FlagMask: FastenerFlags;\n}\n\n/** @public */\nexport interface ViewSetFactory<F extends ViewSet<any, any> = ViewSet<any, any>> extends ViewSetClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): ViewSetFactory<F> & I;\n\n  define<O, V extends View = View>(className: string, descriptor: ViewSetDescriptor<O, V>): ViewSetFactory<ViewSet<any, V>>;\n  define<O, V extends View = View>(className: string, descriptor: {observes: boolean} & ViewSetDescriptor<O, V, ObserverType<V>>): ViewSetFactory<ViewSet<any, V>>;\n  define<O, V extends View = View, I = {}>(className: string, descriptor: {implements: unknown} & ViewSetDescriptor<O, V, I>): ViewSetFactory<ViewSet<any, V> & I>;\n  define<O, V extends View = View, I = {}>(className: string, descriptor: {implements: unknown; observes: boolean} & ViewSetDescriptor<O, V, I & ObserverType<V>>): ViewSetFactory<ViewSet<any, V> & I>;\n\n  <O, V extends View = View>(descriptor: ViewSetDescriptor<O, V>): PropertyDecorator;\n  <O, V extends View = View>(descriptor: {observes: boolean} & ViewSetDescriptor<O, V, ObserverType<V>>): PropertyDecorator;\n  <O, V extends View = View, I = {}>(descriptor: {implements: unknown} & ViewSetDescriptor<O, V, I>): PropertyDecorator;\n  <O, V extends View = View, I = {}>(descriptor: {implements: unknown; observes: boolean} & ViewSetDescriptor<O, V, I & ObserverType<V>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface ViewSet<O = unknown, V extends View = View> extends ViewRelation<O, V> {\n  (view: AnyView<V>): O;\n\n  /** @override */\n  get fastenerType(): Proto<ViewSet<any, any>>;\n\n  /** @internal */\n  readonly views: {readonly [viewId: number]: V | undefined};\n\n  readonly viewCount: number;\n\n  hasView(view: View): boolean;\n\n  addView(view?: AnyView<V>, target?: View | null, key?: string): V;\n\n  attachView(view?: AnyView<V>, target?: View | null): V;\n\n  detachView(view: V): V | null;\n\n  insertView(parent?: View | null, view?: AnyView<V>, target?: View | null, key?: string): V;\n\n  removeView(view: V): V | null;\n\n  deleteView(view: V): V | null;\n\n  /** @internal @override */\n  bindView(view: View, target: View | null): void;\n\n  /** @internal @override */\n  unbindView(view: View): void;\n\n  /** @override */\n  detectView(view: View): V | null;\n\n  /** @internal @protected */\n  key(view: V): string | undefined;\n\n  get sorted(): boolean;\n\n  /** @internal */\n  initSorted(sorted: boolean): void;\n\n  sort(sorted?: boolean): this;\n\n  /** @protected */\n  willSort(parent: View | null): void;\n\n  /** @protected */\n  onSort(parent: View | null): void;\n\n  /** @protected */\n  didSort(parent: View | null): void;\n\n  /** @internal @protected */\n  sortChildren(parent: View): void;\n\n  /** @internal */\n  compareChildren(a: View, b: View): number;\n\n  /** @internal @protected */\n  compare(a: V, b: V): number;\n}\n\n/** @public */\nexport const ViewSet = (function (_super: typeof ViewRelation) {\n  const ViewSet: ViewSetFactory = _super.extend(\"ViewSet\");\n\n  Object.defineProperty(ViewSet.prototype, \"fastenerType\", {\n    get: function (this: ViewSet): Proto<ViewSet<any, any>> {\n      return ViewSet;\n    },\n    configurable: true,\n  });\n\n  ViewSet.prototype.hasView = function (this: ViewSet, view: View): boolean {\n    return this.views[view.uid] !== void 0;\n  };\n\n  ViewSet.prototype.addView = function <V extends View>(this: ViewSet<unknown, V>, newView?: AnyView<V>, target?: View | null, key?: string): V {\n    if (newView !== void 0 && newView !== null) {\n      newView = this.fromAny(newView);\n    } else {\n      newView = this.createView();\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    let parent: View | null;\n    if (this.binds && (parent = this.parentView, parent !== null)) {\n      if (key === void 0) {\n        key = this.key(newView);\n      }\n      this.insertChild(parent, newView, target, key);\n    }\n    const views = this.views as {[viewId: number]: V | undefined};\n    if (views[newView.uid] === void 0) {\n      this.willAttachView(newView, target);\n      views[newView.uid] = newView;\n      (this as Mutable<typeof this>).viewCount += 1;\n      this.onAttachView(newView, target);\n      this.initView(newView);\n      this.didAttachView(newView, target);\n    }\n    return newView;\n  };\n\n  ViewSet.prototype.attachView = function <V extends View>(this: ViewSet<unknown, V>, newView?: AnyView<V>, target?: View | null): V {\n    if (newView !== void 0 && newView !== null) {\n      newView = this.fromAny(newView);\n    } else {\n      newView = this.createView();\n    }\n    const views = this.views as {[viewId: number]: V | undefined};\n    if (views[newView.uid] === void 0) {\n      if (target === void 0) {\n        target = null;\n      }\n      this.willAttachView(newView, target);\n      views[newView.uid] = newView;\n      (this as Mutable<typeof this>).viewCount += 1;\n      this.onAttachView(newView, target);\n      this.initView(newView);\n      this.didAttachView(newView, target);\n    }\n    return newView;\n  };\n\n  ViewSet.prototype.detachView = function <V extends View>(this: ViewSet<unknown, V>, oldView: V): V | null {\n    const views = this.views as {[viewId: number]: V | undefined};\n    if (views[oldView.uid] !== void 0) {\n      this.willDetachView(oldView);\n      (this as Mutable<typeof this>).viewCount -= 1;\n      delete views[oldView.uid];\n      this.onDetachView(oldView);\n      this.deinitView(oldView);\n      this.didDetachView(oldView);\n      return oldView;\n    }\n    return null;\n  };\n\n  ViewSet.prototype.insertView = function <V extends View>(this: ViewSet<unknown, V>, parent?: View | null, newView?: AnyView<V>, target?: View | null, key?: string): V {\n    if (newView !== void 0 && newView !== null) {\n      newView = this.fromAny(newView);\n    } else {\n      newView = this.createView();\n    }\n    if (parent === void 0 || parent === null) {\n      parent = this.parentView;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (key === void 0) {\n      key = this.key(newView);\n    }\n    if (parent !== null && (newView.parent !== parent || newView.key !== key)) {\n      this.insertChild(parent, newView, target, key);\n    }\n    const views = this.views as {[viewId: number]: V | undefined};\n    if (views[newView.uid] === void 0) {\n      this.willAttachView(newView, target);\n      views[newView.uid] = newView;\n      (this as Mutable<typeof this>).viewCount += 1;\n      this.onAttachView(newView, target);\n      this.initView(newView);\n      this.didAttachView(newView, target);\n    }\n    return newView;\n  };\n\n  ViewSet.prototype.removeView = function <V extends View>(this: ViewSet<unknown, V>, view: V): V | null {\n    if (this.hasView(view)) {\n      view.remove();\n      return view;\n    }\n    return null;\n  };\n\n  ViewSet.prototype.deleteView = function <V extends View>(this: ViewSet<unknown, V>, view: V): V | null {\n    const oldView = this.detachView(view);\n    if (oldView !== null) {\n      oldView.remove();\n    }\n    return oldView;\n  };\n\n  ViewSet.prototype.bindView = function <V extends View>(this: ViewSet<unknown, V>, view: View, target: View | null): void {\n    if (this.binds) {\n      const newView = this.detectView(view);\n      const views = this.views as {[viewId: number]: V | undefined};\n      if (newView !== null && views[newView.uid] === void 0) {\n        this.willAttachView(newView, target);\n        views[newView.uid] = newView;\n        (this as Mutable<typeof this>).viewCount += 1;\n        this.onAttachView(newView, target);\n        this.initView(newView);\n        this.didAttachView(newView, target);\n      }\n    }\n  };\n\n  ViewSet.prototype.unbindView = function <V extends View>(this: ViewSet<unknown, V>, view: View): void {\n    if (this.binds) {\n      const oldView = this.detectView(view);\n      const views = this.views as {[viewId: number]: V | undefined};\n      if (oldView !== null && views[oldView.uid] !== void 0) {\n        this.willDetachView(oldView);\n        (this as Mutable<typeof this>).viewCount -= 1;\n        delete views[oldView.uid];\n        this.onDetachView(oldView);\n        this.deinitView(oldView);\n        this.didDetachView(oldView);\n      }\n    }\n  };\n\n  ViewSet.prototype.detectView = function <V extends View>(this: ViewSet<unknown, V>, view: View): V | null {\n    if (typeof this.type === \"function\" && view instanceof this.type) {\n      return view as V;\n    }\n    return null;\n  };\n\n  ViewSet.prototype.key = function <V extends View>(this: ViewSet<unknown, V>, view: V): string | undefined {\n    return void 0;\n  };\n\n  Object.defineProperty(ViewSet.prototype, \"sorted\", {\n    get(this: ViewSet): boolean {\n      return (this.flags & ViewSet.SortedFlag) !== 0;\n    },\n    configurable: true,\n  });\n\n  ViewSet.prototype.initInherits = function (this: ViewSet, sorted: boolean): void {\n    if (sorted) {\n      (this as Mutable<typeof this>).flags = this.flags | ViewSet.SortedFlag;\n    } else {\n      (this as Mutable<typeof this>).flags = this.flags & ~ViewSet.SortedFlag;\n    }\n  };\n\n  ViewSet.prototype.sort = function (this: ViewSet, sorted?: boolean): typeof this {\n    if (sorted === void 0) {\n      sorted = true;\n    }\n    const flags = this.flags;\n    if (sorted && (flags & ViewSet.SortedFlag) === 0) {\n      const parent = this.parentView;\n      this.willSort(parent);\n      this.setFlags(flags | ViewSet.SortedFlag);\n      this.onSort(parent);\n      this.didSort(parent);\n    } else if (!sorted && (flags & ViewSet.SortedFlag) !== 0) {\n      this.setFlags(flags & ~ViewSet.SortedFlag);\n    }\n    return this;\n  };\n\n  ViewSet.prototype.willSort = function (this: ViewSet, parent: View | null): void {\n    // hook\n  };\n\n  ViewSet.prototype.onSort = function (this: ViewSet, parent: View | null): void {\n    if (parent !== null) {\n      this.sortChildren(parent);\n    }\n  };\n\n  ViewSet.prototype.didSort = function (this: ViewSet, parent: View | null): void {\n    // hook\n  };\n\n  ViewSet.prototype.sortChildren = function <V extends View>(this: ViewSet<unknown, V>, parent: View): void {\n    parent.sortChildren(this.compareChildren.bind(this));\n  };\n\n  ViewSet.prototype.compareChildren = function <V extends View>(this: ViewSet<unknown, V>, a: View, b: View): number {\n    const views = this.views;\n    const x = views[a.uid];\n    const y = views[b.uid];\n    if (x !== void 0 && y !== void 0) {\n      return this.compare(x, y);\n    } else {\n      return x !== void 0 ? 1 : y !== void 0 ? -1 : 0;\n    }\n  };\n\n  ViewSet.prototype.compare = function <V extends View>(this: ViewSet<unknown, V>, a: V, b: V): number {\n    return a.uid < b.uid ? -1 : a.uid > b.uid ? 1 : 0;\n  };\n\n  ViewSet.construct = function <F extends ViewSet<any, any>>(fastenerClass: {prototype: F}, fastener: F | null, owner: FastenerOwner<F>): F {\n    if (fastener === null) {\n      fastener = function (newView: AnyView<ViewSetType<F>>): FastenerOwner<F> {\n        fastener!.addView(newView);\n        return fastener!.owner;\n      } as F;\n      delete (fastener as Partial<Mutable<F>>).name; // don't clobber prototype name\n      Object.setPrototypeOf(fastener, fastenerClass.prototype);\n    }\n    fastener = _super.construct(fastenerClass, fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).views = {};\n    (fastener as Mutable<typeof fastener>).viewCount = 0;\n    return fastener;\n  };\n\n  ViewSet.define = function <O, V extends View>(className: string, descriptor: ViewSetDescriptor<O, V>): ViewSetFactory<ViewSet<any, V>> {\n    let superClass = descriptor.extends as ViewSetFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    const sorted = descriptor.sorted;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n    delete descriptor.sorted;\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const fastenerClass = superClass.extend(className, descriptor);\n\n    fastenerClass.construct = function (fastenerClass: {prototype: ViewSet<any, any>}, fastener: ViewSet<O, V> | null, owner: O): ViewSet<O, V> {\n      fastener = superClass!.construct(fastenerClass, fastener, owner);\n      if (affinity !== void 0) {\n        fastener.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        fastener.initInherits(inherits);\n      }\n      if (sorted !== void 0) {\n        fastener.initSorted(sorted);\n      }\n      return fastener;\n    };\n\n    return fastenerClass;\n  };\n\n  (ViewSet as Mutable<typeof ViewSet>).SortedFlag = 1 << (_super.FlagShift + 0);\n\n  (ViewSet as Mutable<typeof ViewSet>).FlagShift = _super.FlagShift + 1;\n  (ViewSet as Mutable<typeof ViewSet>).FlagMask = (1 << ViewSet.FlagShift) - 1;\n\n  return ViewSet;\n})(ViewRelation);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, Lazy} from \"@swim/util\";\nimport {Service} from \"@swim/component\";\nimport type {ViewNode, NodeView} from \"../node/NodeView\";\nimport type {TextView} from \"../text/TextView\";\nimport {ViewElement, ElementView} from \"../\"; // forward import\nimport {HtmlView} from \"../\"; // forward import\nimport {SvgView} from \"../\"; // forward import\nimport type {DomServiceObserver} from \"./DomServiceObserver\";\n\n/** @public */\nexport class DomService<V extends NodeView = NodeView> extends Service<V> {\n  /** @override */\n  override readonly observerType?: Class<DomServiceObserver<V>>;\n\n  protected override onAttachRoot(root: V): void {\n    super.onAttachRoot(root);\n    if (root instanceof ElementView && root.node.hasAttribute(\"swim-app\")) {\n      this.materializeView(root as NodeView);\n    }\n  }\n\n  materializeView(parentView: NodeView): void {\n    const childNodes = parentView.node.childNodes;\n    for (let i = 0; i < childNodes.length; i += 1) {\n      const childNode = childNodes[i]!;\n      const childView = this.materializeNode(parentView, childNode);\n      if (childView !== null) {\n        this.materializeView(childView);\n      }\n    }\n  }\n\n  materializeNode(parentView: NodeView, childNode: ViewNode): NodeView | null {\n    if (childNode.view !== void 0) {\n      return childNode.view as NodeView;\n    } else if (childNode instanceof Element) {\n      return this.materializeElement(parentView, childNode);\n    } else if (childNode instanceof Text) {\n      return this.materializeText(parentView, childNode);\n    } else {\n      return null;\n    }\n  }\n\n  materializeElement(parentView: NodeView, childNode: Element): ElementView | null {\n    let viewClass: typeof ElementView | undefined;\n    const viewClassName = childNode.getAttribute(\"swim-view\");\n    if (viewClassName !== null) {\n      viewClass = DomService.eval(viewClassName) as typeof ElementView | undefined;\n      if (typeof viewClass !== \"function\") {\n        throw new TypeError(viewClassName);\n      }\n    }\n    if (viewClass === void 0) {\n      if (childNode instanceof HTMLElement) {\n        viewClass = HtmlView;\n      } else if (childNode instanceof SVGElement) {\n        viewClass = SvgView;\n      } else {\n        viewClass = ElementView;\n      }\n    }\n    const childView = new viewClass(childNode);\n    const key = childNode.getAttribute(\"key\");\n    parentView.injectChild(childView, null, key !== null ? key : void 0);\n    return childView;\n  }\n\n  materializeText(parentView: NodeView, childNode: Text): TextView | null {\n    return null;\n  }\n\n  @Lazy\n  static global<V extends NodeView>(): DomService<V> {\n    return new DomService();\n  }\n\n  static boot(): ElementView[] {\n    const views: ElementView[] = [];\n    const nodes = document.querySelectorAll(\"[swim-app]\");\n    for (let i = 0; i < nodes.length; i += 1) {\n      const node = nodes[i];\n      if (node instanceof HTMLElement) {\n        const view = DomService.bootElement(node);\n        views.push(view);\n      }\n    }\n    return views;\n  }\n\n  static bootElement(node: ViewElement): ElementView {\n    let view = node.view;\n    if (view === void 0) {\n      let viewClass: typeof ElementView | undefined;\n      const viewClassName = node.getAttribute(\"swim-app\");\n      if (viewClassName !== null && viewClassName !== \"\") {\n        viewClass = DomService.eval(viewClassName) as typeof ElementView | undefined;\n        if (typeof viewClass !== \"function\") {\n          throw new TypeError(viewClassName);\n        }\n      }\n      if (viewClass === void 0) {\n        if (node instanceof HTMLElement) {\n          viewClass = HtmlView;\n        } else if (node instanceof SVGElement) {\n          viewClass = SvgView;\n        } else {\n          viewClass = ElementView;\n        }\n      }\n      view = new viewClass(node);\n      viewClass.mount(view);\n      if ((view as NodeView).domProvider === void 0) {\n        throw new Error(\"dom service not available\");\n      }\n    }\n    return view;\n  }\n\n  /** @internal */\n  static eval(qname: string): unknown {\n    let value: any = typeof globalThis !== \"undefined\" ? globalThis\n                   : typeof self !== \"undefined\" ? self\n                   : typeof window !== \"undefined\" ? window\n                   : typeof global !== \"undefined\" ? global\n                   : void 0;\n    const idents = qname.split(\".\");\n    for (let i = 0, n = idents.length; typeof value === \"object\" && value !== null && i < n; i += 1) {\n      const ident = idents[i]!;\n      value = value[ident];\n    }\n    return value;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ProviderClass, Provider} from \"@swim/component\";\nimport {DomService} from \"./DomService\";\nimport type {NodeView} from \"../node/NodeView\";\n\n/** @public */\nexport interface DomProvider<V extends NodeView, S extends DomService<V> | null | undefined = DomService<V>> extends Provider<V, S> {\n  createService(): S;\n}\n\n/** @public */\nexport const DomProvider = (function (_super: typeof Provider) {\n  const DomProvider = _super.extend(\"DomProvider\") as ProviderClass<DomProvider<any, any>>;\n\n  DomProvider.prototype.createService = function <V extends NodeView, S extends DomService<V> | null | undefined>(this: DomProvider<V, S>): S {\n    return DomService.global() as S;\n  };\n\n  return DomProvider;\n})(Provider);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, FromAny} from \"@swim/util\";\nimport {Affinity, FastenerOwner} from \"@swim/component\";\nimport {AnyLength, Length, AnyTransform, Transform} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {ThemeAnimatorInit, ThemeAnimatorClass, ThemeAnimator} from \"@swim/theme\";\nimport {StringAttributeAnimator} from \"./\"; // forward import\nimport {NumberAttributeAnimator} from \"./\"; // forward import\nimport {BooleanAttributeAnimator} from \"./\"; // forward import\nimport {LengthAttributeAnimator} from \"./\"; // forward import\nimport {ColorAttributeAnimator} from \"./\"; // forward import\nimport {TransformAttributeAnimator} from \"./\"; // forward import\nimport {ElementView} from \"../\"; // forward import\n\n/** @public */\nexport interface AttributeAnimatorInit<T = unknown, U = never> extends ThemeAnimatorInit<T, U> {\n  extends?: {prototype: AttributeAnimator<any, any>} | string | boolean | null;\n  attributeName: string;\n\n  parse?(value: string): T;\n}\n\n/** @public */\nexport type AttributeAnimatorDescriptor<O = unknown, T = unknown, U = never, I = {}> = ThisType<AttributeAnimator<O, T, U> & I> & AttributeAnimatorInit<T, U> & Partial<I>;\n\n/** @public */\nexport interface AttributeAnimatorClass<A extends AttributeAnimator<any, any> = AttributeAnimator<any, any, any>> extends ThemeAnimatorClass<A> {\n}\n\n/** @public */\nexport interface AttributeAnimatorFactory<A extends AttributeAnimator<any, any> = AttributeAnimator<any, any, any>> extends AttributeAnimatorClass<A> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): AttributeAnimatorFactory<A> & I;\n\n  specialize(type: unknown): AttributeAnimatorFactory | null;\n\n  define<O, T, U = never>(className: string, descriptor: AttributeAnimatorDescriptor<O, T, U>): AttributeAnimatorFactory<AttributeAnimator<any, T, U>>;\n  define<O, T, U = never, I = {}>(className: string, descriptor: {implements: unknown} & AttributeAnimatorDescriptor<O, T, U, I>): AttributeAnimatorFactory<AttributeAnimator<any, T, U> & I>;\n\n  <O, T extends Length | undefined = Length | undefined, U extends AnyLength | undefined = AnyLength | undefined>(descriptor: {type: typeof Length} & AttributeAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T extends Color | undefined = Color | undefined, U extends AnyColor | undefined = AnyColor | undefined>(descriptor: {type: typeof Color} & AttributeAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T extends Transform | undefined = Transform | undefined, U extends AnyTransform | undefined = AnyTransform | undefined>(descriptor: {type: typeof Transform} & AttributeAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T extends string | undefined = string | undefined, U extends string | undefined = string | undefined>(descriptor: {type: typeof String} & AttributeAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T extends number | undefined = number | undefined, U extends number | string | undefined = number | string | undefined>(descriptor: {type: typeof Number} & AttributeAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T extends boolean | undefined = boolean | undefined, U extends boolean | string | undefined = boolean | string | undefined>(descriptor: {type: typeof Boolean} & AttributeAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T, U = never>(descriptor: ({type: FromAny<T, U>} | {fromAny(value: T | U): T}) & AttributeAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T, U = never>(descriptor: AttributeAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T, U = never, I = {}>(descriptor: {implements: unknown} & AttributeAnimatorDescriptor<O, T, U, I>): PropertyDecorator;\n}\n\n/** @public */\nexport interface AttributeAnimator<O = unknown, T = unknown, U = never> extends ThemeAnimator<O, T, U> {\n  get attributeName(): string;\n\n  get attributeValue(): T | undefined;\n\n  /** @internal */\n  readonly ownValue: T;\n\n  get value(): T;\n  set value(value: T);\n\n  /** @override @protected */\n  onSetValue(newValue: T, oldValue: T): void;\n\n  parse(value: string): T;\n}\n\n/** @public */\nexport const AttributeAnimator = (function (_super: typeof ThemeAnimator) {\n  const AttributeAnimator: AttributeAnimatorFactory = _super.extend(\"AttributeAnimator\");\n\n  Object.defineProperty(AttributeAnimator.prototype, \"attributeName\", {\n    get(this: AttributeAnimator): string {\n      throw new Error(\"no attribute name\");\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(AttributeAnimator.prototype, \"attributeValue\", {\n    get: function <T>(this: AttributeAnimator<unknown, T>): T | undefined {\n      const view = this.owner;\n      if (view instanceof ElementView) {\n        const value = view.getAttribute(this.attributeName);\n        if (value !== null) {\n          try {\n            return this.parse(value);\n          } catch (e) {\n            // swallow parse errors\n          }\n        }\n      }\n      return void 0;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(AttributeAnimator.prototype, \"value\", {\n    get<T>(this: AttributeAnimator<unknown, T>): T {\n      let value = this.ownValue;\n      if (!this.definedValue(value)) {\n        const attributeValue = this.attributeValue;\n        if (attributeValue !== void 0) {\n          value = attributeValue;\n          this.setAffinity(Affinity.Extrinsic);\n        }\n      }\n      return value;\n    },\n    set<T>(this: AttributeAnimator<unknown, T>, value: T): void {\n      (this as Mutable<typeof this>).ownValue = value;\n    },\n    configurable: true,\n  });\n\n  AttributeAnimator.prototype.onSetValue = function <T>(this: AttributeAnimator<unknown, T>, newValue: T, oldValue: T): void {\n    const view = this.owner;\n    if (view instanceof ElementView) {\n      view.setAttribute(this.attributeName, newValue);\n    }\n    _super.prototype.onSetValue.call(this, newValue, oldValue);\n  };\n\n  AttributeAnimator.prototype.parse = function <T>(this: AttributeAnimator<unknown, T>): T {\n    throw new Error();\n  };\n\n  AttributeAnimator.construct = function <A extends AttributeAnimator<any, any, any>>(animatorClass: {prototype: A}, animator: A | null, owner: FastenerOwner<A>): A {\n    animator = _super.construct(animatorClass, animator, owner) as A;\n    return animator;\n  };\n\n  AttributeAnimator.specialize = function (type: unknown): AttributeAnimatorFactory | null {\n    if (type === String) {\n      return StringAttributeAnimator;\n    } else if (type === Number) {\n      return NumberAttributeAnimator;\n    } else if (type === Boolean) {\n      return BooleanAttributeAnimator;\n    } else if (type === Length) {\n      return LengthAttributeAnimator;\n    } else if (type === Color) {\n      return ColorAttributeAnimator;\n    } else if (type === Transform) {\n      return TransformAttributeAnimator;\n    }\n    return null;\n  };\n\n  AttributeAnimator.define = function <O, T, U>(className: string, descriptor: AttributeAnimatorDescriptor<O, T, U>): AttributeAnimatorFactory<AttributeAnimator<any, T, U>> {\n    let superClass = descriptor.extends as AttributeAnimatorFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    const look = descriptor.look;\n    const value = descriptor.value;\n    const initValue = descriptor.initValue;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n    delete descriptor.look;\n    delete descriptor.value;\n    delete descriptor.initValue;\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this.specialize(descriptor.type);\n    }\n    if (superClass === null) {\n      superClass = this;\n      if (descriptor.fromAny === void 0 && FromAny.is<T, U>(descriptor.type)) {\n        descriptor.fromAny = descriptor.type.fromAny;\n      }\n    }\n\n    const animatorClass = superClass.extend(className, descriptor);\n\n    animatorClass.construct = function (animatorClass: {prototype: AttributeAnimator<any, any, any>}, animator: AttributeAnimator<O, T, U> | null, owner: O): AttributeAnimator<O, T, U> {\n      animator = superClass!.construct(animatorClass, animator, owner);\n      if (affinity !== void 0) {\n        animator.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        animator.initInherits(inherits);\n      }\n      if (look !== void 0) {\n        (animator as Mutable<typeof animator>).look = look;\n      }\n      if (initValue !== void 0) {\n        (animator as Mutable<typeof animator>).value = animator.fromAny(initValue());\n        (animator as Mutable<typeof animator>).state = animator.value;\n      } else if (value !== void 0) {\n        (animator as Mutable<typeof animator>).value = animator.fromAny(value);\n        (animator as Mutable<typeof animator>).state = animator.value;\n      }\n      return animator;\n    };\n\n    return animatorClass;\n  };\n\n  return AttributeAnimator;\n})(ThemeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AttributeAnimatorFactory, AttributeAnimator} from \"./AttributeAnimator\";\n\n/** @internal */\nexport const StringAttributeAnimator = (function (_super: typeof AttributeAnimator) {\n  const StringAttributeAnimator = _super.extend(\"StringAttributeAnimator\") as AttributeAnimatorFactory<AttributeAnimator<any, string | undefined, string | undefined>>;\n\n  StringAttributeAnimator.prototype.parse = function (value: string): string | undefined {\n    return value;\n  };\n\n  StringAttributeAnimator.prototype.fromAny = function (value: string): string | undefined {\n    return value;\n  };\n\n  StringAttributeAnimator.prototype.equalValues = function (newValue: string | undefined, oldValue: string | undefined): boolean {\n    return newValue === oldValue;\n  };\n\n  return StringAttributeAnimator;\n})(AttributeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AttributeAnimatorFactory, AttributeAnimator} from \"./AttributeAnimator\";\n\n/** @internal */\nexport const NumberAttributeAnimator = (function (_super: typeof AttributeAnimator) {\n  const NumberAttributeAnimator = _super.extend(\"NumberAttributeAnimator\") as AttributeAnimatorFactory<AttributeAnimator<any, number | undefined, string>>;\n\n  NumberAttributeAnimator.prototype.parse = function (value: string): number | undefined {\n    const number = +value;\n    return isFinite(number) ? number : void 0;\n  };\n\n  NumberAttributeAnimator.prototype.fromAny = function (value: number | string): number | undefined {\n    if (typeof value === \"number\") {\n      return value;\n    } else {\n      const number = +value;\n      return isFinite(number) ? number : void 0;\n    }\n  };\n\n  NumberAttributeAnimator.prototype.equalValues = function (newValue: number | undefined, oldValue: number | undefined): boolean {\n    return newValue === oldValue;\n  };\n\n  return NumberAttributeAnimator;\n})(AttributeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AttributeAnimatorFactory, AttributeAnimator} from \"./AttributeAnimator\";\n\n/** @internal */\nexport const BooleanAttributeAnimator = (function (_super: typeof AttributeAnimator) {\n  const BooleanAttributeAnimator = _super.extend(\"BooleanAttributeAnimator\") as AttributeAnimatorFactory<AttributeAnimator<any, boolean | undefined, string>>;\n\n  BooleanAttributeAnimator.prototype.parse = function (value: string): boolean | undefined {\n    return !!value;\n  };\n\n  BooleanAttributeAnimator.prototype.fromAny = function (value: boolean | string): boolean | undefined {\n    return !!value;\n  };\n\n  BooleanAttributeAnimator.prototype.equalValues = function (newValue: boolean | undefined, oldValue: boolean | undefined): boolean {\n    return newValue === oldValue;\n  };\n\n  return BooleanAttributeAnimator;\n})(AttributeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyLength, Length} from \"@swim/math\";\nimport {AttributeAnimatorFactory, AttributeAnimator} from \"./AttributeAnimator\";\n\n/** @internal */\nexport const LengthAttributeAnimator = (function (_super: typeof AttributeAnimator) {\n  const LengthAttributeAnimator = _super.extend(\"LengthAttributeAnimator\") as AttributeAnimatorFactory<AttributeAnimator<any, Length | null, AnyLength | null>>;\n\n  LengthAttributeAnimator.prototype.parse = function (value: string): Length | null {\n    return Length.parse(value);\n  };\n\n  LengthAttributeAnimator.prototype.fromAny = function (value: AnyLength): Length | null {\n    try {\n      return Length.fromAny(value);\n    } catch (swallow) {\n      return null;\n    }\n  };\n\n  LengthAttributeAnimator.prototype.equalValues = function (newValue: Length | null, oldValue: Length | null): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    } else {\n      return newValue === oldValue;\n    }\n  };\n\n  return LengthAttributeAnimator;\n})(AttributeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyColor, Color} from \"@swim/style\";\nimport {AttributeAnimatorFactory, AttributeAnimator} from \"./AttributeAnimator\";\n\n/** @internal */\nexport const ColorAttributeAnimator = (function (_super: typeof AttributeAnimator) {\n  const ColorAttributeAnimator = _super.extend(\"ColorAttributeAnimator\") as AttributeAnimatorFactory<AttributeAnimator<any, Color | null, AnyColor | null>>;\n\n  ColorAttributeAnimator.prototype.parse = function (value: string): Color | null {\n    return Color.parse(value);\n  };\n\n  ColorAttributeAnimator.prototype.fromAny = function (value: AnyColor): Color | null {\n    try {\n      return Color.fromAny(value);\n    } catch (swallow) {\n      return null;\n    }\n  };\n\n  ColorAttributeAnimator.prototype.equalValues = function (newValue: Color | null, oldValue: Color | null): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    } else {\n      return newValue === oldValue;\n    }\n  };\n\n  return ColorAttributeAnimator;\n})(AttributeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyTransform, Transform} from \"@swim/math\";\nimport {AttributeAnimatorFactory, AttributeAnimator} from \"./AttributeAnimator\";\n\n/** @internal */\nexport const TransformAttributeAnimator = (function (_super: typeof AttributeAnimator) {\n  const TransformAttributeAnimator = _super.extend(\"TransformAttributeAnimator\") as AttributeAnimatorFactory<AttributeAnimator<any, Transform | null, AnyTransform | null>>;\n\n  TransformAttributeAnimator.prototype.parse = function (value: string): Transform | null {\n    return Transform.parse(value);\n  };\n\n  TransformAttributeAnimator.prototype.fromAny = function (value: AnyTransform): Transform | null {\n    try {\n      return Transform.fromAny(value);\n    } catch (swallow) {\n      return null;\n    }\n  };\n\n  TransformAttributeAnimator.prototype.equalValues = function (newValue: Transform | null, oldValue: Transform | null): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    } else {\n      return newValue === oldValue;\n    }\n  };\n\n  return TransformAttributeAnimator;\n})(AttributeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, FromAny} from \"@swim/util\";\nimport {Affinity, FastenerOwner} from \"@swim/component\";\nimport {AnyLength, Length, AnyTransform, Transform} from \"@swim/math\";\nimport {FontFamily, AnyColor, Color, AnyBoxShadow, BoxShadow} from \"@swim/style\";\nimport {ThemeAnimatorInit, ThemeAnimatorClass, ThemeAnimator} from \"@swim/theme\";\nimport {StringStyleAnimator} from \"./\"; // forward import\nimport {NumberStyleAnimator} from \"./\"; // forward import\nimport {LengthStyleAnimator} from \"./\"; // forward import\nimport {ColorStyleAnimator} from \"./\"; // forward import\nimport {FontFamilyStyleAnimator} from \"./\"; // forward import\nimport {TransformStyleAnimator} from \"./\"; // forward import\nimport {BoxShadowStyleAnimator} from \"./\"; // forward import\nimport {StyleContext} from \"../\"; // forward import\n\n/** @public */\nexport interface StyleAnimatorInit<T = unknown, U = never> extends ThemeAnimatorInit<T, U> {\n  extends?: {prototype: StyleAnimator<any, any>} | string | boolean | null;\n  propertyNames: string | ReadonlyArray<string>;\n\n  parse?(value: string): T;\n  fromCssValue?(value: CSSStyleValue): T;\n}\n\n/** @public */\nexport type StyleAnimatorDescriptor<O = unknown, T = unknown, U = never, I = {}> = ThisType<StyleAnimator<O, T, U> & I> & StyleAnimatorInit<T, U> & Partial<I>;\n\n/** @public */\nexport interface StyleAnimatorClass<A extends StyleAnimator<any, any> = StyleAnimator<any, any, any>> extends ThemeAnimatorClass<A> {\n}\n\n/** @public */\nexport interface StyleAnimatorFactory<A extends StyleAnimator<any, any> = StyleAnimator<any, any, any>> extends StyleAnimatorClass<A> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): StyleAnimatorFactory<A> & I;\n\n  specialize(type: unknown): StyleAnimatorFactory | null;\n\n  define<O, T, U = never>(className: string, descriptor: StyleAnimatorDescriptor<O, T, U>): StyleAnimatorFactory<StyleAnimator<any, T, U>>;\n  define<O, T, U = never, I = {}>(className: string, descriptor: {implements: unknown} & StyleAnimatorDescriptor<O, T, U, I>): StyleAnimatorFactory<StyleAnimator<any, T, U> & I>;\n\n  <O, T extends Length | null | undefined = Length | null | undefined, U extends AnyLength | null | undefined = AnyLength | null | undefined>(descriptor: {type: typeof Length} & StyleAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T extends Color | null | undefined = Color | null | undefined, U extends AnyColor | null | undefined = AnyColor | null | undefined>(descriptor: {type: typeof Color} & StyleAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T extends BoxShadow | null | undefined = BoxShadow | null | undefined, U extends AnyBoxShadow | null | undefined = AnyBoxShadow | null | undefined>(descriptor: {type: typeof BoxShadow} & StyleAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T extends Transform | null | undefined = Transform | null | undefined, U extends AnyTransform | null | undefined = AnyTransform | null | undefined>(descriptor: {type: typeof Transform} & StyleAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T extends FontFamily | ReadonlyArray<FontFamily> | null | undefined = FontFamily | ReadonlyArray<FontFamily> | null | undefined, U extends FontFamily | ReadonlyArray<FontFamily> | null | undefined = FontFamily | ReadonlyArray<FontFamily> | null | undefined>(descriptor: {type: typeof FontFamily} & StyleAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T extends string | null | undefined = string | null | undefined, U extends string | null | undefined = string | null | undefined>(descriptor: {type: typeof String} & StyleAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T extends number | null | undefined = number | null | undefined, U extends number | string | null | undefined = number | string | null | undefined>(descriptor: {type: typeof Number} & StyleAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T, U = never>(descriptor: ({type: FromAny<T, U>} | {fromAny(value: T | U): T}) & StyleAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T, U = never>(descriptor: StyleAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T, U = never, I = {}>(descriptor: {implements: unknown} & StyleAnimatorDescriptor<O, T, U, I>): PropertyDecorator;\n}\n\n/** @public */\nexport interface StyleAnimator<O = unknown, T = unknown, U = never> extends ThemeAnimator<O, T, U> {\n  get propertyNames(): string | ReadonlyArray<string>; // prototype property\n\n  get propertyValue(): T | undefined;\n\n  get computedValue(): T | undefined;\n\n  /** @internal */\n  readonly ownValue: T;\n\n  get value(): T;\n  set value(value: T);\n\n  /** @override @protected */\n  onSetValue(newValue: T, oldValue: T): void;\n\n  readonly priority: string | undefined;\n\n  setPriority(priority: string | undefined): void;\n\n  parse(value: string): T;\n\n  fromCssValue(value: CSSStyleValue): T;\n}\n\n/** @public */\nexport const StyleAnimator = (function (_super: typeof ThemeAnimator) {\n  const StyleAnimator: StyleAnimatorFactory = _super.extend(\"StyleAnimator\");\n\n  Object.defineProperty(StyleAnimator.prototype, \"propertyNames\", {\n    get(this: StyleAnimator): string | ReadonlyArray<string> {\n      throw new Error(\"no property names\");\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(StyleAnimator.prototype, \"propertyValue\", {\n    get: function <T>(this: StyleAnimator<unknown, T>): T | undefined {\n      let propertyValue: T | undefined;\n      const styleContext = this.owner;\n      if (StyleContext.is(styleContext)) {\n        let value = styleContext.getStyle(this.propertyNames);\n        if (typeof CSSStyleValue !== \"undefined\" && value instanceof CSSStyleValue) { // CSS Typed OM support\n          try {\n            propertyValue = this.fromCssValue(value);\n          } catch (e) {\n            // swallow decode errors\n          }\n          if (propertyValue === void 0) {\n            value = value.toString();\n          }\n        }\n        if (typeof value === \"string\" && value.length !== 0) {\n          try {\n            propertyValue = this.parse(value);\n          } catch (e) {\n            // swallow parse errors\n          }\n        }\n      }\n      return propertyValue;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(StyleAnimator.prototype, \"computedValue\", {\n    get: function <T>(this: StyleAnimator<unknown, T>): T | undefined {\n      let computedValue: T | undefined;\n      const styleContext = this.owner;\n      let node: Node | undefined;\n      if (StyleContext.is(styleContext) && (node = styleContext.node, node instanceof Element)) {\n        const styles = getComputedStyle(node);\n        const propertyNames = this.propertyNames;\n        let propertyValue = \"\";\n        if (typeof propertyNames === \"string\") {\n          propertyValue = styles.getPropertyValue(propertyNames);\n        } else {\n          for (let i = 0, n = propertyNames.length; i < n && propertyValue.length === 0; i += 1) {\n            propertyValue = styles.getPropertyValue(propertyNames[i]!);\n          }\n        }\n        if (propertyValue.length !== 0) {\n          try {\n            computedValue = this.parse(propertyValue);\n          } catch (e) {\n            // swallow parse errors\n          }\n        }\n      }\n      return computedValue;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(StyleAnimator.prototype, \"value\", {\n    get<T>(this: StyleAnimator<unknown, T>): T {\n      let value = this.ownValue;\n      if (!this.definedValue(value)) {\n        const propertyValue = this.propertyValue;\n        if (propertyValue !== void 0) {\n          value = propertyValue;\n          this.setAffinity(Affinity.Extrinsic);\n        }\n      }\n      return value;\n    },\n    set<T>(this: StyleAnimator<unknown, T>, value: T): void {\n      (this as Mutable<typeof this>).ownValue = value;\n    },\n    configurable: true,\n  });\n\n  StyleAnimator.prototype.onSetValue = function <T>(this: StyleAnimator<unknown, T>, newValue: T, oldValue: T): void {\n    const styleContext = this.owner;\n    if (StyleContext.is(styleContext)) {\n      const propertyNames = this.propertyNames;\n      if (typeof propertyNames === \"string\") {\n        styleContext.setStyle(propertyNames, newValue, this.priority);\n      } else {\n        for (let i = 0, n = propertyNames.length; i < n; i += 1) {\n          styleContext.setStyle(propertyNames[i]!, newValue, this.priority);\n        }\n      }\n    }\n    _super.prototype.onSetValue.call(this, newValue, oldValue);\n  };\n\n  StyleAnimator.prototype.setPriority = function (this: StyleAnimator<unknown, unknown>, priority: string | undefined): void {\n    (this as Mutable<typeof this>).priority = priority;\n    const styleContext = this.owner;\n    const value = this.value;\n    if (StyleContext.is(styleContext) && this.definedValue(value)) {\n      const propertyNames = this.propertyNames;\n      if (typeof propertyNames === \"string\") {\n        styleContext.setStyle(propertyNames, value, priority);\n      } else {\n        for (let i = 0, n = propertyNames.length; i < n; i += 1) {\n          styleContext.setStyle(propertyNames[i]!, value, priority);\n        }\n      }\n    }\n  };\n\n  StyleAnimator.prototype.parse = function <T>(this: StyleAnimator<unknown, T>): T {\n    throw new Error();\n  };\n\n  StyleAnimator.prototype.fromCssValue = function <T>(this: StyleAnimator<unknown, T>, value: CSSStyleValue): T {\n    throw new Error();\n  };\n\n  StyleAnimator.construct = function <A extends StyleAnimator<any, any, any>>(animatorClass: {prototype: A}, animator: A | null, owner: FastenerOwner<A>): A {\n    animator = _super.construct(animatorClass, animator, owner) as A;\n    (animator as Mutable<typeof animator>).priority = void 0;\n    return animator;\n  };\n\n  StyleAnimator.specialize = function (type: unknown): StyleAnimatorFactory | null {\n    if (type === String) {\n      return StringStyleAnimator;\n    } else if (type === Number) {\n      return NumberStyleAnimator;\n    } else if (type === Length) {\n      return LengthStyleAnimator;\n    } else if (type === Color) {\n      return ColorStyleAnimator;\n    } else if (type === FontFamily) {\n      return FontFamilyStyleAnimator;\n    } else if (type === BoxShadow) {\n      return BoxShadowStyleAnimator;\n    } else if (type === Transform) {\n      return TransformStyleAnimator;\n    }\n    return null;\n  };\n\n  StyleAnimator.define = function <O, T, U>(className: string, descriptor: StyleAnimatorDescriptor<O, T, U>): StyleAnimatorFactory<StyleAnimator<any, T, U>> {\n    let superClass = descriptor.extends as StyleAnimatorFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    const look = descriptor.look;\n    const value = descriptor.value;\n    const initValue = descriptor.initValue;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n    delete descriptor.look;\n    delete descriptor.value;\n    delete descriptor.initValue;\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this.specialize(descriptor.type);\n    }\n    if (superClass === null) {\n      superClass = this;\n      if (descriptor.fromAny === void 0 && FromAny.is<T, U>(descriptor.type)) {\n        descriptor.fromAny = descriptor.type.fromAny;\n      }\n    }\n\n    const animatorClass = superClass.extend(className, descriptor);\n\n    animatorClass.construct = function (animatorClass: {prototype: StyleAnimator<any, any, any>}, animator: StyleAnimator<O, T, U> | null, owner: O): StyleAnimator<O, T, U> {\n      animator = superClass!.construct(animatorClass, animator, owner);\n      if (affinity !== void 0) {\n        animator.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        animator.initInherits(inherits);\n      }\n      if (look !== void 0) {\n        (animator as Mutable<typeof animator>).look = look;\n      }\n      if (initValue !== void 0) {\n        (animator as Mutable<typeof animator>).value = animator.fromAny(initValue());\n        (animator as Mutable<typeof animator>).state = animator.value;\n      } else if (value !== void 0) {\n        (animator as Mutable<typeof animator>).value = animator.fromAny(value);\n        (animator as Mutable<typeof animator>).state = animator.value;\n      }\n      return animator;\n    };\n\n    return animatorClass;\n  };\n\n  return StyleAnimator;\n})(ThemeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {StyleAnimatorFactory, StyleAnimator} from \"./StyleAnimator\";\n\n/** @internal */\nexport const StringStyleAnimator = (function (_super: typeof StyleAnimator) {\n  const StringStyleAnimator = _super.extend(\"StringStyleAnimator\") as StyleAnimatorFactory<StyleAnimator<any, string | undefined, string | undefined>>;\n\n  StringStyleAnimator.prototype.parse = function (value: string): string | undefined {\n    return value;\n  };\n\n  StringStyleAnimator.prototype.fromCssValue = function (value: CSSStyleValue): string | undefined {\n    return value.toString();\n  };\n\n  StringStyleAnimator.prototype.fromAny = function (value: string): string | undefined {\n    return value;\n  };\n\n  StringStyleAnimator.prototype.equalValues = function (newValue: string | undefined, oldValue: string | undefined): boolean {\n    return newValue === oldValue;\n  };\n\n  return StringStyleAnimator;\n})(StyleAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {StyleAnimatorFactory, StyleAnimator} from \"./StyleAnimator\";\n\n/** @internal */\nexport const NumberStyleAnimator = (function (_super: typeof StyleAnimator) {\n  const NumberStyleAnimator = _super.extend(\"NumberStyleAnimator\") as StyleAnimatorFactory<StyleAnimator<any, number | undefined, string>>;\n\n  NumberStyleAnimator.prototype.parse = function (value: string): number | undefined {\n    const number = +value;\n    return isFinite(number) ? number : void 0;\n  };\n\n  NumberStyleAnimator.prototype.fromCssValue = function (value: CSSStyleValue): number | undefined {\n    if (value instanceof CSSNumericValue) {\n      return value.to(\"number\").value;\n    } else {\n      return void 0;\n    }\n  };\n\n  NumberStyleAnimator.prototype.fromAny = function (value: number | string): number | undefined {\n    if (typeof value === \"number\") {\n      return value;\n    } else {\n      const number = +value;\n      return isFinite(number) ? number : void 0;\n    }\n  };\n\n  NumberStyleAnimator.prototype.equalValues = function (newValue: number | undefined, oldValue: number | undefined): boolean {\n    return newValue === oldValue;\n  };\n\n  return NumberStyleAnimator;\n})(StyleAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyLength, Length} from \"@swim/math\";\nimport {StyleAnimatorFactory, StyleAnimator} from \"./StyleAnimator\";\n\n/** @internal */\nexport const LengthStyleAnimator = (function (_super: typeof StyleAnimator) {\n  const LengthStyleAnimator = _super.extend(\"LengthStyleAnimator\") as StyleAnimatorFactory<StyleAnimator<any, Length | null, AnyLength | null>>;\n\n  LengthStyleAnimator.prototype.parse = function (value: string): Length | null {\n    return Length.parse(value);\n  };\n\n  LengthStyleAnimator.prototype.fromCssValue = function (value: CSSStyleValue): Length | null {\n    return Length.fromCssValue(value);\n  };\n\n  LengthStyleAnimator.prototype.fromAny = function (value: AnyLength | string): Length | null {\n    try {\n      return Length.fromAny(value);\n    } catch (swallow) {\n      return null;\n    }\n  };\n\n  LengthStyleAnimator.prototype.equalValues = function (newValue: Length | null, oldValue: Length | null): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    } else {\n      return newValue === oldValue;\n    }\n  };\n\n  return LengthStyleAnimator;\n})(StyleAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyColor, Color} from \"@swim/style\";\nimport {StyleAnimatorFactory, StyleAnimator} from \"./StyleAnimator\";\n\n/** @internal */\nexport const ColorStyleAnimator = (function (_super: typeof StyleAnimator) {\n  const ColorStyleAnimator = _super.extend(\"ColorStyleAnimator\") as StyleAnimatorFactory<StyleAnimator<any, Color | null, AnyColor | null>>;\n\n  ColorStyleAnimator.prototype.parse = function (value: string): Color | null {\n    return Color.parse(value);\n  };\n\n  ColorStyleAnimator.prototype.fromAny = function (value: AnyColor): Color | null {\n    try {\n      return Color.fromAny(value);\n    } catch (swallow) {\n      return null;\n    }\n  };\n\n  ColorStyleAnimator.prototype.equalValues = function (newValue: Color | null, oldValue: Color | null): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    } else {\n      return newValue === oldValue;\n    }\n  };\n\n  return ColorStyleAnimator;\n})(StyleAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {FontFamily, Font} from \"@swim/style\";\nimport {StyleAnimatorFactory, StyleAnimator} from \"./StyleAnimator\";\n\n/** @internal */\nexport const FontFamilyStyleAnimator = (function (_super: typeof StyleAnimator) {\n  const FontFamilyStyleAnimator = _super.extend(\"FontFamilyStyleAnimator\") as StyleAnimatorFactory<StyleAnimator<any, FontFamily | ReadonlyArray<FontFamily> | undefined, FontFamily | ReadonlyArray<FontFamily> | undefined>>;\n\n  FontFamilyStyleAnimator.prototype.parse = function (value: string): FontFamily | ReadonlyArray<FontFamily> | undefined {\n    return Font.parse(value).family;\n  };\n\n  FontFamilyStyleAnimator.prototype.fromAny = function (value: FontFamily | ReadonlyArray<FontFamily>): FontFamily | ReadonlyArray<FontFamily> | undefined {\n    return Font.family(value).family;\n  };\n\n  return FontFamilyStyleAnimator;\n})(StyleAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyBoxShadow, BoxShadow} from \"@swim/style\";\nimport {StyleAnimatorFactory, StyleAnimator} from \"./StyleAnimator\";\n\n/** @internal */\nexport const BoxShadowStyleAnimator = (function (_super: typeof StyleAnimator) {\n  const BoxShadowStyleAnimator = _super.extend(\"BoxShadowStyleAnimator\") as StyleAnimatorFactory<StyleAnimator<any, BoxShadow | null, AnyBoxShadow | null>>;\n\n  BoxShadowStyleAnimator.prototype.parse = function (value: string): BoxShadow | null {\n    return BoxShadow.parse(value);\n  };\n\n  BoxShadowStyleAnimator.prototype.fromAny = function (value: AnyBoxShadow): BoxShadow | null {\n    return BoxShadow.fromAny(value);\n  };\n\n  BoxShadowStyleAnimator.prototype.equalValues = function (newValue: BoxShadow | null, oldValue: BoxShadow | null): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    } else {\n      return newValue === oldValue;\n    }\n  };\n\n  return BoxShadowStyleAnimator;\n})(StyleAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyTransform, Transform} from \"@swim/math\";\nimport {StyleAnimatorFactory, StyleAnimator} from \"./StyleAnimator\";\n\n/** @internal */\nexport const TransformStyleAnimator = (function (_super: typeof StyleAnimator) {\n  const TransformStyleAnimator = _super.extend(\"TransformStyleAnimator\") as StyleAnimatorFactory<StyleAnimator<any, Transform | null, AnyTransform | null>>;\n\n  TransformStyleAnimator.prototype.parse = function (value: string): Transform | null {\n    return Transform.parse(value);\n  };\n\n  TransformStyleAnimator.prototype.fromCssValue = function (value: CSSStyleValue): Transform | null {\n    return Transform.fromCssValue(value);\n  };\n\n  TransformStyleAnimator.prototype.fromAny = function (value: AnyTransform): Transform | null {\n    try {\n      return Transform.fromAny(value);\n    } catch (swallow) {\n      return null;\n    }\n  };\n\n  TransformStyleAnimator.prototype.equalValues = function (newValue: Transform | null, oldValue: Transform | null): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    } else {\n      return newValue === oldValue;\n    }\n  };\n\n  return TransformStyleAnimator;\n})(StyleAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, FromAny} from \"@swim/util\";\nimport {Affinity, FastenerOwner, FastenerFlags} from \"@swim/component\";\nimport {\n  ConstraintId,\n  ConstraintMap,\n  AnyConstraintExpression,\n  ConstraintExpression,\n  ConstraintTerm,\n  ConstraintVariable,\n  AnyConstraintStrength,\n  ConstraintStrength,\n  Constraint,\n  ConstraintScope,\n  ConstraintSolver,\n} from \"@swim/constraint\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport {StyleAnimatorInit, StyleAnimatorClass, StyleAnimator} from \"./StyleAnimator\";\nimport {NumberStyleConstraintAnimator} from \"./\"; // forward import\nimport {LengthStyleConstraintAnimator} from \"./\"; // forward import\n\n/** @public */\nexport interface StyleConstraintAnimatorInit<T = unknown, U = never> extends StyleAnimatorInit<T, U> {\n  extends?: {prototype: StyleConstraintAnimator<any, any>} | string | boolean | null;\n  constrain?: boolean;\n  strength?: AnyConstraintStrength;\n\n  willStartConstraining?(): void;\n  didStartConstraining?(): void;\n  willStopConstraining?(): void;\n  didStopConstraining?(): void;\n\n  constraintValue?: T;\n  toNumber?(value: T): number;\n}\n\n/** @public */\nexport type StyleConstraintAnimatorDescriptor<O = unknown, T = unknown, U = never, I = {}> = ThisType<StyleConstraintAnimator<O, T, U> & I> & StyleConstraintAnimatorInit<T, U> & Partial<I>;\n\n/** @public */\nexport interface StyleConstraintAnimatorClass<A extends StyleConstraintAnimator<any, any> = StyleConstraintAnimator<any, any, any>> extends StyleAnimatorClass<A> {\n  /** @internal */\n  readonly ConstrainedFlag: FastenerFlags;\n  /** @internal */\n  readonly ConstrainingFlag: FastenerFlags;\n\n  /** @internal @override */\n  readonly FlagShift: number;\n  /** @internal @override */\n  readonly FlagMask: FastenerFlags;\n}\n\n/** @public */\nexport interface StyleConstraintAnimatorFactory<A extends StyleConstraintAnimator<any, any> = StyleConstraintAnimator<any, any, any>> extends StyleConstraintAnimatorClass<A> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): StyleConstraintAnimatorFactory<A> & I;\n\n  specialize(type: unknown): StyleConstraintAnimatorFactory | null;\n\n  define<O, T, U = never>(className: string, descriptor: StyleConstraintAnimatorDescriptor<O, T, U>): StyleConstraintAnimatorFactory<StyleConstraintAnimator<any, T, U>>;\n  define<O, T, U = never, I = {}>(className: string, descriptor: {implements: unknown} & StyleConstraintAnimatorDescriptor<O, T, U, I>): StyleConstraintAnimatorFactory<StyleConstraintAnimator<any, T, U> & I>;\n\n  <O, T extends Length | null | undefined = Length | null | undefined, U extends AnyLength | null | undefined = AnyLength | null | undefined>(descriptor: {type: typeof Length} & StyleConstraintAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T extends number | undefined = number | undefined, U extends number | string | undefined = number | string | undefined>(descriptor: {type: typeof Number} & StyleConstraintAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T, U = never>(descriptor: ({type: FromAny<T, U>} | {fromAny(value: T | U): T}) & StyleConstraintAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T, U = never>(descriptor: StyleConstraintAnimatorDescriptor<O, T, U>): PropertyDecorator;\n  <O, T, U = never, I = {}>(descriptor: {implements: unknown} & StyleConstraintAnimatorDescriptor<O, T, U, I>): PropertyDecorator;\n}\n\n/** @public */\nexport interface StyleConstraintAnimator<O = unknown, T = unknown, U = never> extends StyleAnimator<O, T, U>, ConstraintVariable {\n  /** @internal @override */\n  readonly id: number;\n\n  /** @internal @override */\n  isExternal(): boolean;\n\n  /** @internal @override */\n  isDummy(): boolean;\n\n  /** @internal @override */\n  isInvalid(): boolean;\n\n  /** @override */\n  isConstant(): boolean;\n\n  /** @internal @override */\n  evaluateConstraintVariable(): void;\n\n  /** @internal @override */\n  updateConstraintSolution(value: number): void;\n\n  /** @override */\n  readonly strength: ConstraintStrength;\n\n  setStrength(strength: AnyConstraintStrength): void;\n\n  /** @override */\n  get coefficient(): number;\n\n  /** @override */\n  get variable(): ConstraintVariable | null;\n\n  /** @override */\n  get terms(): ConstraintMap<ConstraintVariable, number>;\n\n  /** @override */\n  get constant(): number;\n\n  /** @override */\n  plus(that: AnyConstraintExpression): ConstraintExpression;\n\n  /** @override */\n  negative(): ConstraintTerm;\n\n  /** @override */\n  minus(that: AnyConstraintExpression): ConstraintExpression;\n\n  /** @override */\n  times(scalar: number): ConstraintExpression;\n\n  /** @override */\n  divide(scalar: number): ConstraintExpression;\n\n  get constrained(): boolean;\n\n  constrain(constrained?: boolean): this;\n\n  /** @internal */\n  readonly conditionCount: number;\n\n  /** @internal @override */\n  addConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void;\n\n  /** @internal @override */\n  removeConstraintCondition(constraint: Constraint, solver: ConstraintSolver): void;\n\n  /** @internal */\n  get constraining(): boolean;\n\n  /** @internal */\n  startConstraining(): void;\n\n  /** @protected */\n  willStartConstraining(): void;\n\n  /** @protected */\n  onStartConstraining(): void;\n\n  /** @protected */\n  didStartConstraining(): void;\n\n  /** @internal */\n  stopConstraining(): void;\n\n  /** @protected */\n  willStopConstraining(): void;\n\n  /** @protected */\n  onStopConstraining(): void;\n\n  /** @protected */\n  didStopConstraining(): void;\n\n  /** @internal */\n  updateConstraintVariable(): void;\n\n  /** @protected @override */\n  onSetValue(newValue: T, oldValue: T): void;\n\n  /** @protected @override */\n  onMount(): void;\n\n  /** @protected @override */\n  onUnmount(): void;\n\n  /** @override */\n  fromAny(value: T | U): T;\n\n  /** @internal @protected */\n  toNumber(value: T): number;\n\n  /** @internal @protected */\n  readonly constraintValue?: T;\n}\n\n/** @public */\nexport const StyleConstraintAnimator = (function (_super: typeof StyleAnimator) {\n  const StyleConstraintAnimator: StyleConstraintAnimatorFactory = _super.extend(\"StyleConstraintAnimator\");\n\n  StyleConstraintAnimator.prototype.isExternal = function (this: StyleConstraintAnimator): boolean {\n    return true;\n  };\n\n  StyleConstraintAnimator.prototype.isDummy = function (this: StyleConstraintAnimator): boolean {\n    return false;\n  };\n\n  StyleConstraintAnimator.prototype.isInvalid = function (this: StyleConstraintAnimator): boolean {\n    return false;\n  };\n\n  StyleConstraintAnimator.prototype.isConstant = function (this: StyleConstraintAnimator): boolean {\n    return false;\n  };\n\n  StyleConstraintAnimator.prototype.evaluateConstraintVariable = function <T>(this: StyleConstraintAnimator<unknown, T>): void {\n    const constraintScope = this.owner;\n    if (ConstraintScope.is(constraintScope) && !this.constrained && this.constraining) {\n      const value = this.constraintValue;\n      if (value !== void 0 && this.definedValue(value)) {\n        constraintScope.setConstraintVariable(this, this.toNumber(value));\n      }\n    }\n  };\n\n  StyleConstraintAnimator.prototype.updateConstraintSolution = function <T>(this: StyleConstraintAnimator<unknown, T>, state: number): void {\n    if (this.constrained && this.toNumber(this.state) !== state) {\n      this.setState(state as unknown as T, Affinity.Reflexive);\n    }\n  };\n\n  StyleConstraintAnimator.prototype.setStrength = function (this: StyleConstraintAnimator, strength: AnyConstraintStrength): void {\n    (this as Mutable<typeof this>).strength = ConstraintStrength.fromAny(strength);\n  };\n\n  Object.defineProperty(StyleConstraintAnimator.prototype, \"coefficient\", {\n    get(this: StyleConstraintAnimator): number {\n      return 1;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(StyleConstraintAnimator.prototype, \"variable\", {\n    get(this: StyleConstraintAnimator): ConstraintVariable {\n      return this;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(StyleConstraintAnimator.prototype, \"terms\", {\n    get(this: StyleConstraintAnimator): ConstraintMap<ConstraintVariable, number> {\n      const terms = new ConstraintMap<ConstraintVariable, number>();\n      terms.set(this, 1);\n      return terms;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(StyleConstraintAnimator.prototype, \"constant\", {\n    get(this: StyleConstraintAnimator): number {\n      return 0;\n    },\n    configurable: true,\n  });\n\n  StyleConstraintAnimator.prototype.plus = function (this: StyleConstraintAnimator, that: AnyConstraintExpression): ConstraintExpression {\n    that = ConstraintExpression.fromAny(that);\n    if (this === that) {\n      return ConstraintExpression.product(2, this);\n    } else {\n      return ConstraintExpression.sum(this, that);\n    }\n  };\n\n  StyleConstraintAnimator.prototype.negative = function (this: StyleConstraintAnimator): ConstraintTerm {\n    return ConstraintExpression.product(-1, this);\n  };\n\n  StyleConstraintAnimator.prototype.minus = function (this: StyleConstraintAnimator, that: AnyConstraintExpression): ConstraintExpression {\n    that = ConstraintExpression.fromAny(that);\n    if (this === that) {\n      return ConstraintExpression.zero;\n    } else {\n      return ConstraintExpression.sum(this, that.negative());\n    }\n  };\n\n  StyleConstraintAnimator.prototype.times = function (this: StyleConstraintAnimator, scalar: number): ConstraintExpression {\n    return ConstraintExpression.product(scalar, this);\n  };\n\n  StyleConstraintAnimator.prototype.divide = function (this: StyleConstraintAnimator, scalar: number): ConstraintExpression {\n    return ConstraintExpression.product(1 / scalar, this);\n  };\n\n  Object.defineProperty(StyleConstraintAnimator.prototype, \"constrained\", {\n    get(this: StyleConstraintAnimator): boolean {\n      return (this.flags & StyleConstraintAnimator.ConstrainedFlag) !== 0;\n    },\n    configurable: true,\n  });\n\n  StyleConstraintAnimator.prototype.constrain = function (this: StyleConstraintAnimator<unknown, unknown, unknown>, constrained?: boolean): typeof this {\n    if (constrained === void 0) {\n      constrained = true;\n    }\n    const flags = this.flags;\n    if (constrained && (flags & StyleConstraintAnimator.ConstrainedFlag) === 0) {\n      this.setFlags(flags | StyleConstraintAnimator.ConstrainedFlag);\n      if (this.conditionCount !== 0 && this.mounted) {\n        this.stopConstraining();\n      }\n    } else if (!constrained && (flags & StyleConstraintAnimator.ConstrainedFlag) !== 0) {\n      this.setFlags(flags & ~StyleConstraintAnimator.ConstrainedFlag);\n      if (this.conditionCount !== 0 && this.mounted) {\n        this.startConstraining();\n        this.updateConstraintVariable();\n      }\n    }\n    return this;\n  };\n\n  StyleConstraintAnimator.prototype.addConstraintCondition = function (this: StyleConstraintAnimator, constraint: Constraint, solver: ConstraintSolver): void {\n    (this as Mutable<typeof this>).conditionCount += 1;\n    if (!this.constrained && this.conditionCount === 1 && this.mounted) {\n      this.startConstraining();\n      this.updateConstraintVariable();\n    }\n  };\n\n  StyleConstraintAnimator.prototype.removeConstraintCondition = function (this: StyleConstraintAnimator, constraint: Constraint, solver: ConstraintSolver): void {\n    (this as Mutable<typeof this>).conditionCount -= 1;\n    if (!this.constrained && this.conditionCount === 0 && this.mounted) {\n      this.stopConstraining();\n    }\n  };\n\n  Object.defineProperty(StyleConstraintAnimator.prototype, \"constraining\", {\n    get(this: StyleConstraintAnimator): boolean {\n      return (this.flags & StyleConstraintAnimator.ConstrainingFlag) !== 0;\n    },\n    configurable: true,\n  });\n\n  StyleConstraintAnimator.prototype.startConstraining = function (this: StyleConstraintAnimator): void {\n    if ((this.flags & StyleConstraintAnimator.ConstrainingFlag) === 0) {\n      this.willStartConstraining();\n      this.setFlags(this.flags | StyleConstraintAnimator.ConstrainingFlag);\n      this.onStartConstraining();\n      this.didStartConstraining();\n    }\n  };\n\n  StyleConstraintAnimator.prototype.willStartConstraining = function (this: StyleConstraintAnimator): void {\n    // hook\n  };\n\n  StyleConstraintAnimator.prototype.onStartConstraining = function (this: StyleConstraintAnimator): void {\n    const constraintScope = this.owner;\n    if (ConstraintScope.is(constraintScope)) {\n      constraintScope.addConstraintVariable(this);\n    }\n  };\n\n  StyleConstraintAnimator.prototype.didStartConstraining = function (this: StyleConstraintAnimator): void {\n    // hook\n  };\n\n  StyleConstraintAnimator.prototype.stopConstraining = function (this: StyleConstraintAnimator): void {\n    if ((this.flags & StyleConstraintAnimator.ConstrainingFlag) !== 0) {\n      this.willStopConstraining();\n      this.setFlags(this.flags & ~StyleConstraintAnimator.ConstrainingFlag);\n      this.onStopConstraining();\n      this.didStopConstraining();\n    }\n  };\n\n  StyleConstraintAnimator.prototype.willStopConstraining = function (this: StyleConstraintAnimator): void {\n    // hook\n  };\n\n  StyleConstraintAnimator.prototype.onStopConstraining = function (this: StyleConstraintAnimator): void {\n    const constraintScope = this.owner;\n    if (ConstraintScope.is(constraintScope)) {\n      constraintScope.removeConstraintVariable(this);\n    }\n  };\n\n  StyleConstraintAnimator.prototype.didStopConstraining = function (this: StyleConstraintAnimator): void {\n    // hook\n  };\n\n  StyleConstraintAnimator.prototype.updateConstraintVariable = function (this: StyleConstraintAnimator): void {\n    const constraintScope = this.owner;\n    if (ConstraintScope.is(constraintScope)) {\n      let value = this.value;\n      if (!this.definedValue(value)) {\n        value = this.constraintValue;\n      }\n      constraintScope.setConstraintVariable(this, this.toNumber(value));\n    }\n  };\n\n  StyleConstraintAnimator.prototype.onSetValue = function <T>(this: StyleConstraintAnimator<unknown, T>, newValue: T, oldValue: T): void {\n    _super.prototype.onSetValue.call(this, newValue, oldValue);\n    const constraintScope = this.owner;\n    if (this.constraining && ConstraintScope.is(constraintScope)) {\n      constraintScope.setConstraintVariable(this, newValue !== void 0 && newValue !== null ? this.toNumber(newValue) : 0);\n    }\n  };\n\n  StyleConstraintAnimator.prototype.onMount = function <T>(this: StyleConstraintAnimator<unknown, T>): void {\n    _super.prototype.onMount.call(this);\n    if (!this.constrained && this.conditionCount !== 0) {\n      this.startConstraining();\n    }\n  };\n\n  StyleConstraintAnimator.prototype.onUnmount = function <T>(this: StyleConstraintAnimator<unknown, T>): void {\n    if (!this.constrained && this.conditionCount !== 0) {\n      this.stopConstraining();\n    }\n    _super.prototype.onUnmount.call(this);\n  };\n\n  StyleConstraintAnimator.prototype.fromAny = function <T, U>(this: StyleConstraintAnimator<unknown, T, U>, value: T | U): T {\n    if (typeof value === \"string\") {\n      const number = +value;\n      if (isFinite(number)) {\n        return number as unknown as T;\n      }\n    }\n    return value as T;\n  };\n\n  StyleConstraintAnimator.prototype.toNumber = function <T>(this: StyleConstraintAnimator<unknown, T>, value: T): number {\n    return value !== void 0 && value !== null ? +value : 0;\n  };\n\n  StyleConstraintAnimator.construct = function <A extends StyleConstraintAnimator<any, any, any>>(animatorClass: {prototype: A}, animator: A | null, owner: FastenerOwner<A>): A {\n    animator = _super.construct(animatorClass, animator, owner) as A;\n    (animator as Mutable<typeof animator>).id = ConstraintId.next();\n    (animator as Mutable<typeof animator>).strength = ConstraintStrength.Strong;\n    (animator as Mutable<typeof animator>).conditionCount = 0;\n    return animator;\n  };\n\n  StyleConstraintAnimator.specialize = function (type: unknown): StyleConstraintAnimatorFactory | null {\n    if (type === Number) {\n      return NumberStyleConstraintAnimator;\n    } else if (type === Length) {\n      return LengthStyleConstraintAnimator;\n    }\n    return null;\n  };\n\n  StyleConstraintAnimator.define = function <O, T, U>(className: string, descriptor: StyleConstraintAnimatorDescriptor<O, T, U>): StyleConstraintAnimatorFactory<StyleConstraintAnimator<any, T, U>> {\n    let superClass = descriptor.extends as StyleConstraintAnimatorFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    const strength = descriptor.strength !== void 0 ? ConstraintStrength.fromAny(descriptor.strength) : void 0;\n    const constrain = descriptor.constrain;\n    const look = descriptor.look;\n    const value = descriptor.value;\n    const initValue = descriptor.initValue;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n    delete descriptor.strength;\n    delete descriptor.constrain;\n    delete descriptor.look;\n    delete descriptor.value;\n    delete descriptor.initValue;\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this.specialize(descriptor.type);\n    }\n    if (superClass === null) {\n      superClass = this;\n      if (descriptor.fromAny === void 0 && FromAny.is<T, U>(descriptor.type)) {\n        descriptor.fromAny = descriptor.type.fromAny;\n      }\n    }\n\n    const animatorClass = superClass.extend(className, descriptor);\n\n    animatorClass.construct = function (animatorClass: {prototype: StyleConstraintAnimator<any, any, any>}, animator: StyleConstraintAnimator<O, T, U> | null, owner: O): StyleConstraintAnimator<O, T, U> {\n      animator = superClass!.construct(animatorClass, animator, owner);\n      if (affinity !== void 0) {\n        animator.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        animator.initInherits(inherits);\n      }\n      if (strength !== void 0) {\n        (animator as Mutable<typeof animator>).strength = strength;\n      }\n      if (look !== void 0) {\n        (animator as Mutable<typeof animator>).look = look;\n      }\n      if (initValue !== void 0) {\n        (animator as Mutable<typeof animator>).value = animator.fromAny(initValue());\n        (animator as Mutable<typeof animator>).state = animator.value;\n      } else if (value !== void 0) {\n        (animator as Mutable<typeof animator>).value = animator.fromAny(value);\n        (animator as Mutable<typeof animator>).state = animator.value;\n      }\n      if (constrain === true) {\n        animator.constrain();\n      }\n      return animator;\n    };\n\n    return animatorClass;\n  };\n\n  (StyleConstraintAnimator as Mutable<typeof StyleConstraintAnimator>).ConstrainedFlag = 1 << (_super.FlagShift + 0);\n  (StyleConstraintAnimator as Mutable<typeof StyleConstraintAnimator>).ConstrainingFlag = 1 << (_super.FlagShift + 1);\n\n  (StyleConstraintAnimator as Mutable<typeof StyleConstraintAnimator>).FlagShift = _super.FlagShift + 2;\n  (StyleConstraintAnimator as Mutable<typeof StyleConstraintAnimator>).FlagMask = (1 << StyleConstraintAnimator.FlagShift) - 1;\n\n  return StyleConstraintAnimator;\n})(StyleAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {StyleConstraintAnimatorFactory, StyleConstraintAnimator} from \"./StyleConstraintAnimator\";\n\n/** @internal */\nexport const NumberStyleConstraintAnimator = (function (_super: typeof StyleConstraintAnimator) {\n  const NumberStyleConstraintAnimator = _super.extend(\"NumberStyleConstraintAnimator\") as StyleConstraintAnimatorFactory<StyleConstraintAnimator<any, number | undefined, string>>;\n\n  NumberStyleConstraintAnimator.prototype.toNumber = function (value: number): number {\n    return typeof value === \"number\" ? value : 0;\n  };\n\n  NumberStyleConstraintAnimator.prototype.parse = function (value: string): number | undefined {\n    const number = +value;\n    return isFinite(number) ? number : void 0;\n  };\n\n  NumberStyleConstraintAnimator.prototype.fromCssValue = function (value: CSSStyleValue): number | undefined {\n    if (value instanceof CSSNumericValue) {\n      return value.to(\"number\").value;\n    } else {\n      return void 0;\n    }\n  };\n\n  NumberStyleConstraintAnimator.prototype.fromAny = function (value: number | string): number | undefined {\n    if (typeof value === \"number\") {\n      return value;\n    } else {\n      const number = +value;\n      return isFinite(number) ? number : void 0;\n    }\n  };\n\n  NumberStyleConstraintAnimator.prototype.equalValues = function (newValue: number | undefined, oldValue: number | undefined): boolean {\n    return newValue === oldValue;\n  };\n\n  return NumberStyleConstraintAnimator;\n})(StyleConstraintAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyLength, Length, PxLength} from \"@swim/math\";\nimport {StyleConstraintAnimatorFactory, StyleConstraintAnimator} from \"./StyleConstraintAnimator\";\n\n/** @internal */\nexport const LengthStyleConstraintAnimator = (function (_super: typeof StyleConstraintAnimator) {\n  const LengthStyleConstraintAnimator = _super.extend(\"LengthStyleConstraintAnimator\") as StyleConstraintAnimatorFactory<StyleConstraintAnimator<any, Length | null, AnyLength | null>>;\n\n  LengthStyleConstraintAnimator.prototype.toNumber = function (value: Length): number {\n    if (!(value instanceof PxLength)) {\n      const computedValue = this.computedValue;\n      if (computedValue !== void 0 && computedValue !== null) {\n        value = computedValue;\n      }\n    }\n    if (value instanceof PxLength) {\n      return value.value;\n    } else {\n      return 0;\n    }\n  };\n\n  LengthStyleConstraintAnimator.prototype.parse = function (value: string): Length | null {\n    return Length.parse(value);\n  };\n\n  LengthStyleConstraintAnimator.prototype.fromCssValue = function (value: CSSStyleValue): Length | null {\n    return Length.fromCssValue(value);\n  };\n\n  LengthStyleConstraintAnimator.prototype.fromAny = function (value: AnyLength | string): Length | null {\n    try {\n      return Length.fromAny(value);\n    } catch (swallow) {\n      return null;\n    }\n  };\n\n  LengthStyleConstraintAnimator.prototype.equalValues = function (newValue: Length | null, oldValue: Length | null): boolean {\n    if (newValue !== void 0 && newValue !== null) {\n      return newValue.equals(oldValue);\n    } else {\n      return newValue === oldValue;\n    }\n  };\n\n  return LengthStyleConstraintAnimator;\n})(StyleConstraintAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/** @public */\nexport interface StyleContext {\n  readonly node?: Node;\n\n  getStyle(propertyNames: string | ReadonlyArray<string>): CSSStyleValue | string | undefined;\n\n  setStyle(propertyName: string, value: unknown, priority?: string): this;\n}\n\n/** @public */\nexport const StyleContext = (function () {\n  const StyleContext = {} as {\n    is(object: unknown): object is StyleContext;\n  };\n\n  StyleContext.is = function (object: unknown): object is StyleContext {\n    if (typeof object === \"object\" && object !== null || typeof object === \"function\") {\n      const styleContext = object as StyleContext;\n      return \"getStyle\" in styleContext;\n    }\n    return false;\n  };\n\n  return StyleContext;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals, Values, AnyTiming} from \"@swim/util\";\nimport type {MemberAnimatorInit} from \"@swim/component\";\nimport {AnyLength, Length, AnyTransform, Transform} from \"@swim/math\";\nimport {\n  FontStyle,\n  FontVariant,\n  FontWeight,\n  FontStretch,\n  FontFamily,\n  AnyFont,\n  Font,\n  AnyColor,\n  Color,\n  AnyLinearGradient,\n  LinearGradient,\n  AnyBoxShadow,\n  BoxShadow,\n} from \"@swim/style\";\nimport type {\n  AlignContent,\n  AlignItems,\n  AlignSelf,\n  Appearance,\n  BackgroundClip,\n  BorderCollapse,\n  BorderStyle,\n  BoxSizing,\n  CssCursor,\n  CssDisplay,\n  FlexBasis,\n  FlexDirection,\n  FlexWrap,\n  JustifyContent,\n  Overflow,\n  OverscrollBehavior,\n  PointerEvents,\n  Position,\n  TextAlign,\n  TextDecorationStyle,\n  TextTransform,\n  TouchAction,\n  UserSelect,\n  VerticalAlign,\n  Visibility,\n  WhiteSpace,\n} from \"../css/types\";\nimport type {StyleContext} from \"./StyleContext\";\nimport {StyleAnimator} from \"../animator/StyleAnimator\";\nimport {StyleConstraintAnimator} from \"../animator/StyleConstraintAnimator\";\n\n/** @public */\nexport interface StyleMapInit {\n  alignContent?: MemberAnimatorInit<StyleMap, \"alignContent\">;\n  alignItems?: MemberAnimatorInit<StyleMap, \"alignItems\">;\n  alignSelf?: MemberAnimatorInit<StyleMap, \"alignSelf\">;\n  appearance?: MemberAnimatorInit<StyleMap, \"appearance\">;\n  backdropFilter?: MemberAnimatorInit<StyleMap, \"backdropFilter\">;\n  backgroundClip?: MemberAnimatorInit<StyleMap, \"backgroundClip\">;\n  backgroundColor?: MemberAnimatorInit<StyleMap, \"backgroundColor\">;\n  backgroundImage?: MemberAnimatorInit<StyleMap, \"backgroundImage\">;\n  borderCollapse?: MemberAnimatorInit<StyleMap, \"borderCollapse\">;\n  borderColor?: [AnyColor | null, AnyColor | null, AnyColor | null, AnyColor | null] | AnyColor | null;\n  borderTopColor?: MemberAnimatorInit<StyleMap, \"borderTopColor\">;\n  borderRightColor?: MemberAnimatorInit<StyleMap, \"borderRightColor\">;\n  borderBottomColor?: MemberAnimatorInit<StyleMap, \"borderBottomColor\">;\n  borderLeftColor?: MemberAnimatorInit<StyleMap, \"borderLeftColor\">;\n  borderRadius?: [AnyLength | null, AnyLength | null, AnyLength | null, AnyLength | null] | AnyLength | null;\n  borderTopLeftRadius?: MemberAnimatorInit<StyleMap, \"borderTopLeftRadius\">;\n  borderTopRightRadius?: MemberAnimatorInit<StyleMap, \"borderTopRightRadius\">;\n  borderBottomRightRadius?: MemberAnimatorInit<StyleMap, \"borderBottomRightRadius\">;\n  borderBottomLeftRadius?: MemberAnimatorInit<StyleMap, \"borderBottomLeftRadius\">;\n  borderSpacing?: MemberAnimatorInit<StyleMap, \"borderSpacing\">;\n  borderStyle?: [BorderStyle | undefined, BorderStyle | undefined, BorderStyle | undefined, BorderStyle | undefined] | BorderStyle | undefined;\n  borderTopStyle?: MemberAnimatorInit<StyleMap, \"borderTopStyle\">;\n  borderRightStyle?: MemberAnimatorInit<StyleMap, \"borderRightStyle\">;\n  borderBottomStyle?: MemberAnimatorInit<StyleMap, \"borderBottomStyle\">;\n  borderLeftStyle?: MemberAnimatorInit<StyleMap, \"borderLeftStyle\">;\n  borderWidth?: [AnyLength | null, AnyLength | null, AnyLength | null, AnyLength | null] | AnyLength | null;\n  borderTopWidth?: MemberAnimatorInit<StyleMap, \"borderTopWidth\">;\n  borderRightWidth?: MemberAnimatorInit<StyleMap, \"borderRightWidth\">;\n  borderBottomWidth?: MemberAnimatorInit<StyleMap, \"borderBottomWidth\">;\n  borderLeftWidth?: MemberAnimatorInit<StyleMap, \"borderLeftWidth\">;\n  bottom?: MemberAnimatorInit<StyleMap, \"bottom\">;\n  boxShadow?: MemberAnimatorInit<StyleMap, \"boxShadow\">;\n  boxSizing?: MemberAnimatorInit<StyleMap, \"boxSizing\">;\n  color?: MemberAnimatorInit<StyleMap, \"color\">;\n  cursor?: MemberAnimatorInit<StyleMap, \"cursor\">;\n  display?: MemberAnimatorInit<StyleMap, \"display\">;\n  filter?: MemberAnimatorInit<StyleMap, \"filter\">;\n  flexBasis?: MemberAnimatorInit<StyleMap, \"flexBasis\">;\n  flexDirection?: MemberAnimatorInit<StyleMap, \"flexDirection\">;\n  flexGrow?: MemberAnimatorInit<StyleMap, \"flexGrow\">;\n  flexShrink?: MemberAnimatorInit<StyleMap, \"flexShrink\">;\n  flexWrap?: MemberAnimatorInit<StyleMap, \"flexWrap\">;\n  font?: AnyFont;\n  fontFamily?: MemberAnimatorInit<StyleMap, \"fontFamily\">;\n  fontSize?: MemberAnimatorInit<StyleMap, \"fontSize\">;\n  fontStretch?: MemberAnimatorInit<StyleMap, \"fontStretch\">;\n  fontStyle?: MemberAnimatorInit<StyleMap, \"fontStyle\">;\n  fontVariant?: MemberAnimatorInit<StyleMap, \"fontVariant\">;\n  fontWeight?: MemberAnimatorInit<StyleMap, \"fontWeight\">;\n  height?: MemberAnimatorInit<StyleMap, \"height\">;\n  justifyContent?: MemberAnimatorInit<StyleMap, \"justifyContent\">;\n  left?: MemberAnimatorInit<StyleMap, \"left\">;\n  lineHeight?: MemberAnimatorInit<StyleMap, \"lineHeight\">;\n  margin?: [AnyLength | null, AnyLength | null, AnyLength | null, AnyLength | null] | AnyLength;\n  marginTop?: MemberAnimatorInit<StyleMap, \"marginTop\">;\n  marginRight?: MemberAnimatorInit<StyleMap, \"marginRight\">;\n  marginBottom?: MemberAnimatorInit<StyleMap, \"marginBottom\">;\n  marginLeft?: MemberAnimatorInit<StyleMap, \"marginLeft\">;\n  maxHeight?: MemberAnimatorInit<StyleMap, \"maxHeight\">;\n  maxWidth?: MemberAnimatorInit<StyleMap, \"maxWidth\">;\n  minHeight?: MemberAnimatorInit<StyleMap, \"minHeight\">;\n  minWidth?: MemberAnimatorInit<StyleMap, \"minWidth\">;\n  opacity?: MemberAnimatorInit<StyleMap, \"opacity\">;\n  order?: MemberAnimatorInit<StyleMap, \"order\">;\n  outlineColor?: MemberAnimatorInit<StyleMap, \"outlineColor\">;\n  outlineStyle?: MemberAnimatorInit<StyleMap, \"outlineStyle\">;\n  outlineWidth?: MemberAnimatorInit<StyleMap, \"outlineWidth\">;\n  overflow?: [Overflow | undefined, Overflow | undefined] | Overflow | undefined;\n  overflowX?: MemberAnimatorInit<StyleMap, \"overflowX\">;\n  overflowY?: MemberAnimatorInit<StyleMap, \"overflowY\">;\n  overflowScrolling?: MemberAnimatorInit<StyleMap, \"overflowScrolling\">;\n  overscrollBehavior?: [OverscrollBehavior | undefined, OverscrollBehavior | undefined] | OverscrollBehavior | undefined;\n  overscrollBehaviorX?: MemberAnimatorInit<StyleMap, \"overscrollBehaviorX\">;\n  overscrollBehaviorY?: MemberAnimatorInit<StyleMap, \"overscrollBehaviorY\">;\n  padding?: [AnyLength | null, AnyLength | null, AnyLength | null, AnyLength | null] | AnyLength | null;\n  paddingTop?: MemberAnimatorInit<StyleMap, \"paddingTop\">;\n  paddingRight?: MemberAnimatorInit<StyleMap, \"paddingRight\">;\n  paddingBottom?: MemberAnimatorInit<StyleMap, \"paddingBottom\">;\n  paddingLeft?: MemberAnimatorInit<StyleMap, \"paddingLeft\">;\n  pointerEvents?: MemberAnimatorInit<StyleMap, \"pointerEvents\">;\n  position?: MemberAnimatorInit<StyleMap, \"position\">;\n  right?: MemberAnimatorInit<StyleMap, \"right\">;\n  textAlign?: MemberAnimatorInit<StyleMap, \"textAlign\">;\n  textDecorationColor?: MemberAnimatorInit<StyleMap, \"textDecorationColor\">;\n  textDecorationLine?: MemberAnimatorInit<StyleMap, \"textDecorationLine\">;\n  textDecorationStyle?: MemberAnimatorInit<StyleMap, \"textDecorationStyle\">;\n  textOverflow?: MemberAnimatorInit<StyleMap, \"textOverflow\">;\n  textTransform?: MemberAnimatorInit<StyleMap, \"textTransform\">;\n  top?: MemberAnimatorInit<StyleMap, \"top\">;\n  touchAction?: MemberAnimatorInit<StyleMap, \"touchAction\">;\n  transform?: MemberAnimatorInit<StyleMap, \"transform\">;\n  userSelect?: MemberAnimatorInit<StyleMap, \"userSelect\">;\n  verticalAlign?: MemberAnimatorInit<StyleMap, \"verticalAlign\">;\n  visibility?: MemberAnimatorInit<StyleMap, \"visibility\">;\n  whiteSpace?: MemberAnimatorInit<StyleMap, \"whiteSpace\">;\n  width?: MemberAnimatorInit<StyleMap, \"width\">;\n  zIndex?: MemberAnimatorInit<StyleMap, \"zIndex\">;\n}\n\n/** @public */\nexport interface StyleMap extends StyleContext {\n  readonly alignContent: StyleAnimator<this, AlignContent | undefined>;\n\n  readonly alignItems: StyleAnimator<this, AlignItems | undefined>;\n\n  readonly alignSelf: StyleAnimator<this, AlignSelf | undefined>;\n\n  readonly appearance: StyleAnimator<this, Appearance | undefined>;\n\n  readonly backdropFilter: StyleAnimator<this, string | undefined>;\n\n  readonly backgroundClip: StyleAnimator<this, BackgroundClip | undefined>;\n\n  readonly backgroundColor: StyleAnimator<this, Color | null, AnyColor | null>;\n\n  readonly backgroundImage: StyleAnimator<this, LinearGradient | string | null, AnyLinearGradient | string | null>;\n\n  readonly borderCollapse: StyleAnimator<this, BorderCollapse | undefined>;\n\n  borderColor(): [Color | null, Color | null, Color | null, Color | null] | Color | null;\n  borderColor(value: [AnyColor | null, AnyColor | null, AnyColor | null, AnyColor | null] | AnyColor | null, timing?: AnyTiming | boolean, precedence?: number): this;\n\n  readonly borderTopColor: StyleAnimator<this, Color | null, AnyColor | null>;\n\n  readonly borderRightColor: StyleAnimator<this, Color | null, AnyColor | null>;\n\n  readonly borderBottomColor: StyleAnimator<this, Color | null, AnyColor | null>;\n\n  readonly borderLeftColor: StyleAnimator<this, Color | null, AnyColor | null>;\n\n  borderRadius(): [Length | null, Length | null, Length | null, Length | null] | Length | null;\n  borderRadius(value: [AnyLength | null, AnyLength | null, AnyLength | null, AnyLength | null] | AnyLength | null, timing?: AnyTiming | boolean, precedence?: number): this;\n\n  readonly borderTopLeftRadius: StyleAnimator<this, Length | null, AnyLength | null>;\n\n  readonly borderTopRightRadius: StyleAnimator<this, Length | null, AnyLength | null>;\n\n  readonly borderBottomRightRadius: StyleAnimator<this, Length | null, AnyLength | null>;\n\n  readonly borderBottomLeftRadius: StyleAnimator<this, Length | null, AnyLength | null>;\n\n  readonly borderSpacing: StyleAnimator<this, string | undefined>;\n\n  borderStyle(): [BorderStyle | undefined, BorderStyle | undefined, BorderStyle | undefined, BorderStyle | undefined] | BorderStyle | undefined;\n  borderStyle(value: [BorderStyle | undefined, BorderStyle | undefined, BorderStyle | undefined, BorderStyle | undefined] | BorderStyle | undefined, timing?: AnyTiming | boolean, precedence?: number): this;\n\n  readonly borderTopStyle: StyleAnimator<this, BorderStyle | undefined>;\n\n  readonly borderRightStyle: StyleAnimator<this, BorderStyle | undefined>;\n\n  readonly borderBottomStyle: StyleAnimator<this, BorderStyle | undefined>;\n\n  readonly borderLeftStyle: StyleAnimator<this, BorderStyle | undefined>;\n\n  borderWidth(): [Length | null, Length | null, Length | null, Length | null] | Length | null;\n  borderWidth(value: [AnyLength | null, AnyLength | null, AnyLength | null, AnyLength | null] | AnyLength | null, timing?: AnyTiming | boolean, precedence?: number): this;\n\n  readonly borderTopWidth: StyleAnimator<this, Length | null, AnyLength | null>;\n\n  readonly borderRightWidth: StyleAnimator<this, Length | null, AnyLength | null>;\n\n  readonly borderBottomWidth: StyleAnimator<this, Length | null, AnyLength | null>;\n\n  readonly borderLeftWidth: StyleAnimator<this, Length | null, AnyLength | null>;\n\n  readonly bottom: StyleConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  readonly boxShadow: StyleAnimator<this, BoxShadow | null, AnyBoxShadow | null>;\n\n  readonly boxSizing: StyleAnimator<this, BoxSizing | undefined>;\n\n  readonly color: StyleAnimator<this, Color | null, AnyColor | null>;\n\n  readonly cursor: StyleAnimator<this, CssCursor | undefined>;\n\n  readonly display: StyleAnimator<this, CssDisplay | undefined>;\n\n  readonly filter: StyleAnimator<this, string | undefined>;\n\n  readonly flexBasis: StyleAnimator<this, Length | FlexBasis | null, AnyLength | FlexBasis | null>;\n\n  readonly flexDirection: StyleAnimator<this, FlexDirection | string>;\n\n  readonly flexGrow: StyleAnimator<this, number | undefined>;\n\n  readonly flexShrink: StyleAnimator<this, number | undefined>;\n\n  readonly flexWrap: StyleAnimator<this, FlexWrap | undefined>;\n\n  font(): Font | null;\n  font(value: AnyFont | null, timing?: AnyTiming | boolean, precedence?: number): this;\n\n  readonly fontFamily: StyleAnimator<this, FontFamily | FontFamily[] | undefined, FontFamily | ReadonlyArray<FontFamily> | undefined>;\n\n  readonly fontSize: StyleAnimator<this, Length | null, AnyLength | null>;\n\n  readonly fontStretch: StyleAnimator<this, FontStretch | undefined>;\n\n  readonly fontStyle: StyleAnimator<this, FontStyle | undefined>;\n\n  readonly fontVariant: StyleAnimator<this, FontVariant | undefined>;\n\n  readonly fontWeight: StyleAnimator<this, FontWeight | undefined>;\n\n  readonly height: StyleConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  readonly justifyContent: StyleAnimator<this, JustifyContent | undefined>;\n\n  readonly left: StyleConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  readonly lineHeight: StyleAnimator<this, Length | null, AnyLength | null>;\n\n  margin(): [Length | null, Length | null, Length | null, Length | null] | Length | null;\n  margin(value: [AnyLength | null, AnyLength | null, AnyLength | null, AnyLength | null] | AnyLength | null, timing?: AnyTiming | boolean, precedence?: number): this;\n\n  readonly marginTop: StyleConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  readonly marginRight: StyleConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  readonly marginBottom: StyleConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  readonly marginLeft: StyleConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  readonly maxHeight: StyleAnimator<this, Length | null, AnyLength | null>;\n\n  readonly maxWidth: StyleAnimator<this, Length | null, AnyLength | null>;\n\n  readonly minHeight: StyleAnimator<this, Length | null, AnyLength | null>;\n\n  readonly minWidth: StyleAnimator<this, Length | null, AnyLength | null>;\n\n  readonly opacity: StyleAnimator<this, number | undefined>;\n\n  readonly order: StyleAnimator<this, number | undefined>;\n\n  readonly outlineColor: StyleAnimator<this, Color | null, AnyColor | null>;\n\n  readonly outlineStyle: StyleAnimator<this, BorderStyle | undefined>;\n\n  readonly outlineWidth: StyleAnimator<this, Length | null, AnyLength | null>;\n\n  overflow(): [Overflow | undefined, Overflow | undefined] | Overflow | undefined;\n  overflow(value: [Overflow | undefined, Overflow | undefined] | Overflow | undefined, timing?: AnyTiming | boolean, precedence?: number): this;\n\n  readonly overflowX: StyleAnimator<this, Overflow | undefined>;\n\n  readonly overflowY: StyleAnimator<this, Overflow | undefined>;\n\n  readonly overflowScrolling: StyleAnimator<this, \"auto\" | \"touch\" | undefined>;\n\n  overscrollBehavior(): [OverscrollBehavior | undefined, OverscrollBehavior | undefined] | OverscrollBehavior | undefined;\n  overscrollBehavior(value: [OverscrollBehavior | undefined, OverscrollBehavior | undefined] | OverscrollBehavior | undefined, timing?: AnyTiming | boolean, precedence?: number): this;\n\n  readonly overscrollBehaviorX: StyleAnimator<this, OverscrollBehavior | undefined>;\n\n  readonly overscrollBehaviorY: StyleAnimator<this, OverscrollBehavior | undefined>;\n\n  padding(): [Length | null, Length | null, Length | null, Length | null] | Length | null;\n  padding(value: [AnyLength | null, AnyLength | null, AnyLength | null, AnyLength | null] | AnyLength | null, timing?: AnyTiming | boolean, precedence?: number): this;\n\n  readonly paddingTop: StyleConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  readonly paddingRight: StyleConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  readonly paddingBottom: StyleConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  readonly paddingLeft: StyleConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  readonly pointerEvents: StyleAnimator<this, PointerEvents | undefined>;\n\n  readonly position: StyleAnimator<this, Position | undefined>;\n\n  readonly right: StyleConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  readonly textAlign: StyleAnimator<this, TextAlign | undefined>;\n\n  readonly textDecorationColor: StyleAnimator<this, Color | null, AnyColor | null>;\n\n  readonly textDecorationLine: StyleAnimator<this, string | undefined>;\n\n  readonly textDecorationStyle: StyleAnimator<this, TextDecorationStyle | undefined>;\n\n  readonly textOverflow: StyleAnimator<this, string | undefined>;\n\n  readonly textTransform: StyleAnimator<this, TextTransform | undefined>;\n\n  readonly top: StyleConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  readonly touchAction: StyleAnimator<this, TouchAction | undefined>;\n\n  readonly transform: StyleAnimator<this, Transform | null, AnyTransform | null>;\n\n  readonly userSelect: StyleAnimator<this, UserSelect | undefined>;\n\n  readonly verticalAlign: StyleAnimator<this, VerticalAlign | undefined, AnyLength | VerticalAlign | undefined>;\n\n  readonly visibility: StyleAnimator<this, Visibility | undefined>;\n\n  readonly whiteSpace: StyleAnimator<this, WhiteSpace | undefined>;\n\n  readonly width: StyleConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  readonly zIndex: StyleAnimator<this, number | undefined>;\n}\n\n/** @public */\nexport const StyleMap = (function () {\n  const StyleMap = {} as {\n    /** @internal */\n    init(map: StyleMap, init: StyleMapInit): void;\n\n    /** @internal */\n    define(prototype: StyleMap): void;\n  };\n\n  StyleMap.init = function (map: StyleMap, init: StyleMapInit): void {\n    if (init.alignContent !== void 0) {\n      const foo = init.alignContent;\n      foo;\n      map.alignContent(init.alignContent);\n    }\n    if (init.alignItems !== void 0) {\n      map.alignItems(init.alignItems);\n    }\n    if (init.alignSelf !== void 0) {\n      map.alignSelf(init.alignSelf);\n    }\n    if (init.appearance !== void 0) {\n      map.appearance(init.appearance);\n    }\n    if (init.backdropFilter !== void 0) {\n      map.backdropFilter(init.backdropFilter);\n    }\n    if (init.backgroundClip !== void 0) {\n      map.backgroundClip(init.backgroundClip);\n    }\n    if (init.backgroundColor !== void 0) {\n      map.backgroundColor(init.backgroundColor);\n    }\n    if (init.backgroundImage !== void 0) {\n      map.backgroundImage(init.backgroundImage);\n    }\n    if (init.borderCollapse !== void 0) {\n      map.borderCollapse(init.borderCollapse);\n    }\n    if (init.borderColor !== void 0) {\n      map.borderColor(init.borderColor);\n    }\n    if (init.borderTopColor !== void 0) {\n      map.borderTopColor(init.borderTopColor);\n    }\n    if (init.borderRightColor !== void 0) {\n      map.borderRightColor(init.borderRightColor);\n    }\n    if (init.borderBottomColor !== void 0) {\n      map.borderBottomColor(init.borderBottomColor);\n    }\n    if (init.borderLeftColor !== void 0) {\n      map.borderLeftColor(init.borderLeftColor);\n    }\n    if (init.borderRadius !== void 0) {\n      map.borderRadius(init.borderRadius);\n    }\n    if (init.borderTopLeftRadius !== void 0) {\n      map.borderTopLeftRadius(init.borderTopLeftRadius);\n    }\n    if (init.borderTopRightRadius !== void 0) {\n      map.borderTopRightRadius(init.borderTopRightRadius);\n    }\n    if (init.borderBottomRightRadius !== void 0) {\n      map.borderBottomRightRadius(init.borderBottomRightRadius);\n    }\n    if (init.borderBottomLeftRadius !== void 0) {\n      map.borderBottomLeftRadius(init.borderBottomLeftRadius);\n    }\n    if (init.borderSpacing !== void 0) {\n      map.borderSpacing(init.borderSpacing);\n    }\n    if (init.borderStyle !== void 0) {\n      map.borderStyle(init.borderStyle);\n    }\n    if (init.borderTopStyle !== void 0) {\n      map.borderTopStyle(init.borderTopStyle);\n    }\n    if (init.borderRightStyle !== void 0) {\n      map.borderRightStyle(init.borderRightStyle);\n    }\n    if (init.borderBottomStyle !== void 0) {\n      map.borderBottomStyle(init.borderBottomStyle);\n    }\n    if (init.borderLeftStyle !== void 0) {\n      map.borderLeftStyle(init.borderLeftStyle);\n    }\n    if (init.borderWidth !== void 0) {\n      map.borderWidth(init.borderWidth);\n    }\n    if (init.borderTopWidth !== void 0) {\n      map.borderTopWidth(init.borderTopWidth);\n    }\n    if (init.borderRightWidth !== void 0) {\n      map.borderRightWidth(init.borderRightWidth);\n    }\n    if (init.borderBottomWidth !== void 0) {\n      map.borderBottomWidth(init.borderBottomWidth);\n    }\n    if (init.borderLeftWidth !== void 0) {\n      map.borderLeftWidth(init.borderLeftWidth);\n    }\n    if (init.bottom !== void 0) {\n      map.bottom(init.bottom);\n    }\n    if (init.boxShadow !== void 0) {\n      map.boxShadow(init.boxShadow);\n    }\n    if (init.boxSizing !== void 0) {\n      map.boxSizing(init.boxSizing);\n    }\n    if (init.color !== void 0) {\n      map.color(init.color);\n    }\n    if (init.cursor !== void 0) {\n      map.cursor(init.cursor);\n    }\n    if (init.display !== void 0) {\n      map.display(init.display);\n    }\n    if (init.filter !== void 0) {\n      map.filter(init.filter);\n    }\n    if (init.flexBasis !== void 0) {\n      map.flexBasis(init.flexBasis);\n    }\n    if (init.flexDirection !== void 0) {\n      map.flexDirection(init.flexDirection);\n    }\n    if (init.flexGrow !== void 0) {\n      map.flexGrow(init.flexGrow);\n    }\n    if (init.flexShrink !== void 0) {\n      map.flexShrink(init.flexShrink);\n    }\n    if (init.flexWrap !== void 0) {\n      map.flexWrap(init.flexWrap);\n    }\n    if (init.font !== void 0) {\n      map.font(init.font);\n    }\n    if (init.fontFamily !== void 0) {\n      map.fontFamily(init.fontFamily);\n    }\n    if (init.fontSize !== void 0) {\n      map.fontSize(init.fontSize);\n    }\n    if (init.fontStretch !== void 0) {\n      map.fontStretch(init.fontStretch);\n    }\n    if (init.fontStyle !== void 0) {\n      map.fontStyle(init.fontStyle);\n    }\n    if (init.fontVariant !== void 0) {\n      map.fontVariant(init.fontVariant);\n    }\n    if (init.fontWeight !== void 0) {\n      map.fontWeight(init.fontWeight);\n    }\n    if (init.height !== void 0) {\n      map.height(init.height);\n    }\n    if (init.justifyContent !== void 0) {\n      map.justifyContent(init.justifyContent);\n    }\n    if (init.left !== void 0) {\n      map.left(init.left);\n    }\n    if (init.lineHeight !== void 0) {\n      map.lineHeight(init.lineHeight);\n    }\n    if (init.margin !== void 0) {\n      map.margin(init.margin);\n    }\n    if (init.marginTop !== void 0) {\n      map.marginTop(init.marginTop);\n    }\n    if (init.marginRight !== void 0) {\n      map.marginRight(init.marginRight);\n    }\n    if (init.marginBottom !== void 0) {\n      map.marginBottom(init.marginBottom);\n    }\n    if (init.marginLeft !== void 0) {\n      map.marginLeft(init.marginLeft);\n    }\n    if (init.maxHeight !== void 0) {\n      map.maxHeight(init.maxHeight);\n    }\n    if (init.maxWidth !== void 0) {\n      map.maxWidth(init.maxWidth);\n    }\n    if (init.minHeight !== void 0) {\n      map.minHeight(init.minHeight);\n    }\n    if (init.minWidth !== void 0) {\n      map.minWidth(init.minWidth);\n    }\n    if (init.opacity !== void 0) {\n      map.opacity(init.opacity);\n    }\n    if (init.order !== void 0) {\n      map.order(init.order);\n    }\n    if (init.outlineColor !== void 0) {\n      map.outlineColor(init.outlineColor);\n    }\n    if (init.outlineStyle !== void 0) {\n      map.outlineStyle(init.outlineStyle);\n    }\n    if (init.outlineWidth !== void 0) {\n      map.outlineWidth(init.outlineWidth);\n    }\n    if (init.overflow !== void 0) {\n      map.overflow(init.overflow);\n    }\n    if (init.overflowX !== void 0) {\n      map.overflowX(init.overflowX);\n    }\n    if (init.overflowY !== void 0) {\n      map.overflowY(init.overflowY);\n    }\n    if (init.overflowScrolling !== void 0) {\n      map.overflowScrolling(init.overflowScrolling);\n    }\n    if (init.overscrollBehavior !== void 0) {\n      map.overscrollBehavior(init.overscrollBehavior);\n    }\n    if (init.overscrollBehaviorX !== void 0) {\n      map.overscrollBehaviorX(init.overscrollBehaviorX);\n    }\n    if (init.overscrollBehaviorY !== void 0) {\n      map.overscrollBehaviorY(init.overscrollBehaviorY);\n    }\n    if (init.padding !== void 0) {\n      map.padding(init.padding);\n    }\n    if (init.paddingTop !== void 0) {\n      map.paddingTop(init.paddingTop);\n    }\n    if (init.paddingRight !== void 0) {\n      map.paddingRight(init.paddingRight);\n    }\n    if (init.paddingBottom !== void 0) {\n      map.paddingBottom(init.paddingBottom);\n    }\n    if (init.paddingLeft !== void 0) {\n      map.paddingLeft(init.paddingLeft);\n    }\n    if (init.pointerEvents !== void 0) {\n      map.pointerEvents(init.pointerEvents);\n    }\n    if (init.position !== void 0) {\n      map.position(init.position);\n    }\n    if (init.right !== void 0) {\n      map.right(init.right);\n    }\n    if (init.textAlign !== void 0) {\n      map.textAlign(init.textAlign);\n    }\n    if (init.textDecorationColor !== void 0) {\n      map.textDecorationColor(init.textDecorationColor);\n    }\n    if (init.textDecorationLine !== void 0) {\n      map.textDecorationLine(init.textDecorationLine);\n    }\n    if (init.textDecorationStyle !== void 0) {\n      map.textDecorationStyle(init.textDecorationStyle);\n    }\n    if (init.textOverflow !== void 0) {\n      map.textOverflow(init.textOverflow);\n    }\n    if (init.textTransform !== void 0) {\n      map.textTransform(init.textTransform);\n    }\n    if (init.top !== void 0) {\n      map.top(init.top);\n    }\n    if (init.touchAction !== void 0) {\n      map.touchAction(init.touchAction);\n    }\n    if (init.transform !== void 0) {\n      map.transform(init.transform);\n    }\n    if (init.userSelect !== void 0) {\n      map.userSelect(init.userSelect);\n    }\n    if (init.verticalAlign !== void 0) {\n      map.verticalAlign(init.verticalAlign);\n    }\n    if (init.visibility !== void 0) {\n      map.visibility(init.visibility);\n    }\n    if (init.whiteSpace !== void 0) {\n      map.whiteSpace(init.whiteSpace);\n    }\n    if (init.width !== void 0) {\n      map.width(init.width);\n    }\n    if (init.zIndex !== void 0) {\n      map.zIndex(init.zIndex);\n    }\n  };\n\n  StyleMap.define = function (prototype: StyleMap): void {\n    StyleAnimator({propertyNames: \"align-content\", type: String})(prototype, \"alignContent\");\n\n    StyleAnimator({propertyNames: \"align-items\", type: String})(prototype, \"alignItems\");\n\n    StyleAnimator({propertyNames: \"align-self\", type: String})(prototype, \"alignSelf\");\n\n    StyleAnimator({propertyNames: [\"appearance\", \"-webkit-appearance\"], type: String})(prototype, \"appearance\");\n\n    StyleAnimator({propertyNames: [\"backdrop-filter\", \"-webkit-backdrop-filter\"], type: String})(prototype, \"backdropFilter\");\n\n    StyleAnimator({propertyNames: [\"background-clip\", \"-webkit-background-clip\"], type: String})(prototype, \"backgroundClip\");\n\n    StyleAnimator({propertyNames: \"background-color\", type: Color, value: null})(prototype, \"backgroundColor\");\n\n    StyleAnimator({\n      propertyNames: \"background-image\",\n      type: Color,\n      value: null,\n      parse(value: string): LinearGradient | string | null {\n        try {\n          return LinearGradient.parse(value);\n        } catch (swallow) {\n          return value;\n        }\n      },\n      fromAny(value: AnyLinearGradient | string): LinearGradient | string | null {\n        if (typeof value === \"string\") {\n          try {\n            return LinearGradient.parse(value);\n          } catch (swallow) {\n            return value;\n          }\n        } else {\n          return LinearGradient.fromAny(value);\n        }\n      },\n    })(prototype, \"backgroundImage\");\n\n    StyleAnimator({propertyNames: \"border-collapse\", type: String})(prototype, \"borderCollapse\");\n\n    prototype.borderColor = borderColor;\n\n    StyleAnimator({propertyNames: \"border-top-color\", type: Color, value: null})(prototype, \"borderTopColor\");\n\n    StyleAnimator({propertyNames: \"border-right-color\", type: Color, value: null})(prototype, \"borderRightColor\");\n\n    StyleAnimator({propertyNames: \"border-bottom-color\", type: Color, value: null})(prototype, \"borderBottomColor\");\n\n    StyleAnimator({propertyNames: \"border-left-color\", type: Color, value: null})(prototype, \"borderLeftColor\");\n\n    prototype.borderRadius = borderRadius;\n\n    StyleAnimator({propertyNames: \"border-top-left-radius\", type: Length, value: null})(prototype, \"borderTopLeftRadius\");\n\n    StyleAnimator({propertyNames: \"border-top-right-radius\", type: Length, value: null})(prototype, \"borderTopRightRadius\");\n\n    StyleAnimator({propertyNames: \"border-bottom-right-radius\", type: Length, value: null})(prototype, \"borderBottomRightRadius\");\n\n    StyleAnimator({propertyNames: \"border-bottom-left-radius\", type: Length, value: null})(prototype, \"borderBottomLeftRadius\");\n\n    StyleAnimator({propertyNames: \"border-spacing\", type: String})(prototype, \"borderSpacing\");\n\n    prototype.borderStyle = borderStyle;\n\n    StyleAnimator({propertyNames: \"border-top-style\", type: String})(prototype, \"borderTopStyle\");\n\n    StyleAnimator({propertyNames: \"border-right-style\", type: String})(prototype, \"borderRightStyle\");\n\n    StyleAnimator({propertyNames: \"border-bottom-style\", type: String})(prototype, \"borderBottomStyle\");\n\n    StyleAnimator({propertyNames: \"border-left-style\", type: String})(prototype, \"borderLeftStyle\");\n\n    prototype.borderWidth = borderWidth;\n\n    StyleAnimator({propertyNames: \"border-top-width\", type: Length, value: null})(prototype, \"borderTopWidth\");\n\n    StyleAnimator({propertyNames: \"border-right-width\", type: Length, value: null})(prototype, \"borderRightWidth\");\n\n    StyleAnimator({propertyNames: \"border-bottom-width\", type: Length, value: null})(prototype, \"borderBottomWidth\");\n\n    StyleAnimator({propertyNames: \"border-left-width\", type: Length, value: null})(prototype, \"borderLeftWidth\");\n\n    StyleConstraintAnimator<StyleMap, Length | null>({\n      propertyNames: \"bottom\",\n      type: Length,\n      value: null,\n      get constraintValue(): Length | null {\n        const node = this.owner.node;\n        if (node instanceof HTMLElement) {\n          const offsetParent = node.offsetParent;\n          const offsetBounds = offsetParent !== null ? offsetParent.getBoundingClientRect()\n                             : node === document.body ? node.getBoundingClientRect() : null;\n          if (offsetBounds !== null) {\n            const bounds = node.getBoundingClientRect();\n            return Length.px(bounds.bottom - offsetBounds.bottom);\n          }\n        }\n        return null;\n      },\n    })(prototype, \"bottom\");\n\n    StyleAnimator({propertyNames: \"box-shadow\", type: BoxShadow, value: null})(prototype, \"boxShadow\");\n\n    StyleAnimator({propertyNames: \"box-sizing\", type: String})(prototype, \"boxSizing\");\n\n    StyleAnimator({propertyNames: \"color\", type: Color, value: null})(prototype, \"color\");\n\n    StyleAnimator({propertyNames: \"cursor\", type: String})(prototype, \"cursor\");\n\n    StyleAnimator({propertyNames: \"display\", type: String})(prototype, \"display\");\n\n    StyleAnimator({propertyNames: \"filter\", type: String})(prototype, \"filter\");\n\n    StyleAnimator({propertyNames: \"flex-basis\", type: Length, value: null})(prototype, \"flexBasis\");\n\n    StyleAnimator({propertyNames: \"flex-direction\", type: String})(prototype, \"flexDirection\");\n\n    StyleAnimator({propertyNames: \"flex-grow\", type: Number})(prototype, \"flexGrow\");\n\n    StyleAnimator({propertyNames: \"flex-shrink\", type: Number})(prototype, \"flexShrink\");\n\n    StyleAnimator({propertyNames: \"flex-wrap\", type: String})(prototype, \"flexWrap\");\n\n    prototype.font = font;\n\n    StyleAnimator({propertyNames: \"font-family\", type: FontFamily})(prototype, \"fontFamily\");\n\n    StyleAnimator({propertyNames: \"font-size\", type: Length, value: null})(prototype, \"fontSize\");\n\n    StyleAnimator({propertyNames: \"font-stretch\", type: String})(prototype, \"fontStretch\");\n\n    StyleAnimator({propertyNames: \"font-style\", type: String})(prototype, \"fontStyle\");\n\n    StyleAnimator({propertyNames: \"font-variant\", type: String})(prototype, \"fontVariant\");\n\n    StyleAnimator({propertyNames: \"font-weight\", type: String})(prototype, \"fontWeight\");\n\n    StyleConstraintAnimator<StyleMap, Length | null>({\n      propertyNames: \"height\",\n      type: Length,\n      value: null,\n      get constraintValue(): Length | null {\n        const node = this.owner.node;\n        return node instanceof HTMLElement ? Length.px(node.offsetHeight) : null;\n      },\n    })(prototype, \"height\");\n\n    StyleAnimator({propertyNames: \"justify-content\", type: String})(prototype, \"justifyContent\");\n\n    StyleConstraintAnimator<StyleMap, Length | null>({\n      propertyNames: \"left\",\n      type: Length,\n      value: null,\n      get constraintValue(): Length | null {\n        const node = this.owner.node;\n        return node instanceof HTMLElement ? Length.px(node.offsetLeft) : null;\n      },\n    })(prototype, \"left\");\n\n    StyleAnimator({propertyNames: \"line-height\", type: Length, value: null})(prototype, \"lineHeight\");\n\n    prototype.margin = margin;\n\n    StyleConstraintAnimator({propertyNames: \"margin-top\", type: Length, value: null})(prototype, \"marginTop\");\n\n    StyleConstraintAnimator({propertyNames: \"margin-right\", type: Length, value: null})(prototype, \"marginRight\");\n\n    StyleConstraintAnimator({propertyNames: \"margin-bottom\", type: Length, value: null})(prototype, \"marginBottom\");\n\n    StyleConstraintAnimator({propertyNames: \"margin-left\", type: Length, value: null})(prototype, \"marginLeft\");\n\n    StyleAnimator({propertyNames: \"max-height\", type: Length, value: null})(prototype, \"maxHeight\");\n\n    StyleAnimator({propertyNames: \"max-width\", type: Length, value: null})(prototype, \"maxWidth\");\n\n    StyleAnimator({propertyNames: \"min-height\", type: Length, value: null})(prototype, \"minHeight\");\n\n    StyleAnimator({propertyNames: \"min-width\", type: Length, value: null})(prototype, \"minWidth\");\n\n    StyleAnimator({propertyNames: \"opacity\", type: Number})(prototype, \"opacity\");\n\n    StyleAnimator({propertyNames: \"order\", type: Number})(prototype, \"order\");\n\n    StyleAnimator({propertyNames: \"outline-color\", type: Color, value: null})(prototype, \"outlineColor\");\n\n    StyleAnimator({propertyNames: \"outline-style\", type: String})(prototype, \"outlineStyle\");\n\n    StyleAnimator({propertyNames: \"outline-width\", type: Length, value: null})(prototype, \"outlineWidth\");\n\n    prototype.overflow = overflow;\n\n    StyleAnimator({propertyNames: \"overflow-x\", type: String})(prototype, \"overflowX\");\n\n    StyleAnimator({propertyNames: \"overflow-y\", type: String})(prototype, \"overflowY\");\n\n    StyleAnimator({propertyNames: \"-webkit-overflow-scrolling\", type: String})(prototype, \"overflowScrolling\");\n\n    prototype.overscrollBehavior = overscrollBehavior;\n\n    StyleAnimator({propertyNames: \"overscroll-behavior-x\", type: String})(prototype, \"overscrollBehaviorX\");\n\n    StyleAnimator({propertyNames: \"overscroll-behavior-y\", type: String})(prototype, \"overscrollBehaviorY\");\n\n    prototype.padding = padding;\n\n    StyleConstraintAnimator({propertyNames: \"padding-top\", type: Length, value: null})(prototype, \"paddingTop\");\n\n    StyleConstraintAnimator({propertyNames: \"padding-right\", type: Length, value: null})(prototype, \"paddingRight\");\n\n    StyleConstraintAnimator({propertyNames: \"padding-bottom\", type: Length, value: null})(prototype, \"paddingBottom\");\n\n    StyleConstraintAnimator({propertyNames: \"padding-left\", type: Length, value: null})(prototype, \"paddingLeft\");\n\n    StyleAnimator({propertyNames: \"pointer-events\", type: String})(prototype, \"pointerEvents\");\n\n    StyleAnimator({propertyNames: \"position\", type: String})(prototype, \"position\");\n\n    StyleConstraintAnimator<StyleMap, Length | null>({\n      propertyNames: \"right\",\n      type: Length,\n      value: null,\n      get constraintValue(): Length | null {\n        const node = this.owner.node;\n        if (node instanceof HTMLElement) {\n          const offsetParent = node.offsetParent;\n          const offsetBounds = offsetParent !== null ? offsetParent.getBoundingClientRect()\n                             : node === document.body ? node.getBoundingClientRect() : null;\n          if (offsetBounds !== null) {\n            const bounds = node.getBoundingClientRect();\n            return Length.px(bounds.right - offsetBounds.right);\n          }\n        }\n        return null;\n      },\n    })(prototype, \"right\");\n\n    StyleAnimator({propertyNames: \"text-align\", type: String})(prototype, \"textAlign\");\n\n    StyleAnimator({propertyNames: \"text-decoration-color\", type: Color, value: null})(prototype, \"textDecorationColor\");\n\n    StyleAnimator({propertyNames: \"text-decoration-line\", type: String})(prototype, \"textDecorationLine\");\n\n    StyleAnimator({propertyNames: \"text-decoration-style\", type: String})(prototype, \"textDecorationStyle\");\n\n    StyleAnimator({propertyNames: \"text-overflow\", type: String})(prototype, \"textOverflow\");\n\n    StyleAnimator({propertyNames: \"text-transform\", type: String})(prototype, \"textTransform\");\n\n    StyleConstraintAnimator<StyleMap, Length | null>({\n      propertyNames: \"top\",\n      type: Length,\n      value: null,\n      get constraintValue(): Length | null {\n        const node = this.owner.node;\n        return node instanceof HTMLElement ? Length.px(node.offsetTop) : null;\n      },\n    })(prototype, \"top\");\n\n    StyleAnimator({propertyNames: \"touch-action\", type: String})(prototype, \"touchAction\");\n\n    StyleAnimator({propertyNames: \"transform\", type: Transform, value: null})(prototype, \"transform\");\n\n    StyleAnimator({propertyNames: [\"user-select\", \"-webkit-user-select\", \"-moz-user-select\", \"-ms-user-select\"], type: String})(prototype, \"userSelect\");\n\n    StyleAnimator({propertyNames: \"vertical-align\", type: String})(prototype, \"verticalAlign\");\n\n    StyleAnimator({propertyNames: \"visibility\", type: String})(prototype, \"visibility\");\n\n    StyleAnimator({propertyNames: \"white-space\", type: String})(prototype, \"whiteSpace\");\n\n    StyleConstraintAnimator<StyleMap, Length | null>({\n      propertyNames: \"width\",\n      type: Length,\n      value: null,\n      get constraintValue(): Length | null {\n        const node = this.owner.node;\n        return node instanceof HTMLElement ? Length.px(node.offsetWidth) : null;\n      },\n    })(prototype, \"width\");\n\n    StyleAnimator({propertyNames: \"z-index\", type: Number})(prototype, \"zIndex\");\n  };\n\n  function borderColor(this: StyleMap): [Color | null, Color | null, Color | null, Color | null] | Color | null;\n  function borderColor(this: StyleMap, value: [AnyColor | null, AnyColor | null, AnyColor | null, AnyColor | null] | AnyColor | null, timing?: AnyTiming | boolean, precedence?: number): StyleMap;\n  function borderColor(this: StyleMap, value?: [AnyColor | null, AnyColor | null, AnyColor | null, AnyColor | null] | AnyColor | null, timing?: AnyTiming | boolean, precedence?: number): [Color | null, Color | null, Color | null, Color | null] | Color | null | StyleMap {\n    if (value === void 0) {\n      const borderTopColor = this.borderTopColor.value;\n      const borderRightColor = this.borderRightColor.value;\n      const borderBottomColor = this.borderBottomColor.value;\n      const borderLeftColor = this.borderLeftColor.value;\n      if (Values.equal(borderTopColor, borderRightColor)\n          && Values.equal(borderRightColor, borderBottomColor)\n          && Values.equal(borderBottomColor, borderLeftColor)) {\n        return borderTopColor;\n      } else {\n        return [borderTopColor, borderRightColor, borderBottomColor, borderLeftColor];\n      }\n    } else {\n      if (Array.isArray(value)) {\n        if (value.length >= 1) {\n          this.borderTopColor.setState(value[0], timing, precedence);\n        }\n        if (value.length >= 2) {\n          this.borderRightColor.setState(value[1], timing, precedence);\n        }\n        if (value.length >= 3) {\n          this.borderBottomColor.setState(value[2], timing, precedence);\n        }\n        if (value.length >= 4) {\n          this.borderLeftColor.setState(value[3], timing, precedence);\n        }\n      } else {\n        this.borderTopColor.setState(value, timing, precedence);\n        this.borderRightColor.setState(value, timing, precedence);\n        this.borderBottomColor.setState(value, timing, precedence);\n        this.borderLeftColor.setState(value, timing, precedence);\n      }\n      return this;\n    }\n  }\n\n  function borderRadius(this: StyleMap): [Length | null, Length | null, Length | null, Length | null] | Length | null;\n  function borderRadius(this: StyleMap, value: [AnyLength | null, AnyLength | null, AnyLength | null, AnyLength | null] | AnyLength | null, timing?: AnyTiming | boolean, precedence?: number): StyleMap;\n  function borderRadius(this: StyleMap, value?: [AnyLength | null, AnyLength | null, AnyLength | null, AnyLength | null] | AnyLength | null,timing?: AnyTiming | boolean, precedence?: number): [Length | null, Length | null, Length | null, Length | null] | Length | null | StyleMap {\n    if (value === void 0) {\n      const borderTopLeftRadius = this.borderTopLeftRadius.value;\n      const borderTopRightRadius = this.borderTopRightRadius.value;\n      const borderBottomRightRadius = this.borderBottomRightRadius.value;\n      const borderBottomLeftRadius = this.borderBottomLeftRadius.value;\n      if (Equals(borderTopLeftRadius, borderTopRightRadius)\n          && Equals(borderTopRightRadius, borderBottomRightRadius)\n          && Equals(borderBottomRightRadius, borderBottomLeftRadius)) {\n        return borderTopLeftRadius;\n      } else {\n        return [borderTopLeftRadius, borderTopRightRadius, borderBottomRightRadius, borderBottomLeftRadius];\n      }\n    } else {\n      if (Array.isArray(value)) {\n        if (value.length >= 1) {\n          this.borderTopLeftRadius.setState(value[0], timing, precedence);\n        }\n        if (value.length >= 2) {\n          this.borderTopRightRadius.setState(value[1], timing, precedence);\n        }\n        if (value.length >= 3) {\n          this.borderBottomRightRadius.setState(value[2], timing, precedence);\n        }\n        if (value.length >= 4) {\n          this.borderBottomLeftRadius.setState(value[3], timing, precedence);\n        }\n      } else {\n        this.borderTopLeftRadius.setState(value, timing, precedence);\n        this.borderTopRightRadius.setState(value, timing, precedence);\n        this.borderBottomRightRadius.setState(value, timing, precedence);\n        this.borderBottomLeftRadius.setState(value, timing, precedence);\n      }\n      return this;\n    }\n  }\n\n  function borderStyle(this: StyleMap): [BorderStyle | undefined, BorderStyle | undefined, BorderStyle | undefined, BorderStyle | undefined] | BorderStyle | undefined;\n  function borderStyle(this: StyleMap, value: [BorderStyle | undefined, BorderStyle | undefined, BorderStyle | undefined, BorderStyle | undefined] | BorderStyle | undefined, timing?: AnyTiming | boolean, precedence?: number): StyleMap;\n  function borderStyle(this: StyleMap, value?: [BorderStyle | undefined, BorderStyle | undefined, BorderStyle | undefined, BorderStyle | undefined] | BorderStyle | undefined, timing?: AnyTiming | boolean, precedence?: number): [BorderStyle | undefined, BorderStyle | undefined, BorderStyle | undefined, BorderStyle | undefined] | BorderStyle | undefined | StyleMap {\n    if (value === void 0) {\n      const borderTopStyle = this.borderTopStyle.value;\n      const borderRightStyle = this.borderRightStyle.value;\n      const borderBottomStyle = this.borderBottomStyle.value;\n      const borderLeftStyle = this.borderLeftStyle.value;\n      if (borderTopStyle === borderRightStyle\n          && borderRightStyle === borderBottomStyle\n          && borderBottomStyle === borderLeftStyle) {\n        return borderTopStyle;\n      } else {\n        return [borderTopStyle, borderRightStyle, borderBottomStyle, borderLeftStyle];\n      }\n    } else {\n      if (Array.isArray(value)) {\n        if (value.length >= 1) {\n          this.borderTopStyle.setState(value[0], timing, precedence);\n        }\n        if (value.length >= 2) {\n          this.borderRightStyle.setState(value[1], timing, precedence);\n        }\n        if (value.length >= 3) {\n          this.borderBottomStyle.setState(value[2], timing, precedence);\n        }\n        if (value.length >= 4) {\n          this.borderLeftStyle.setState(value[3], timing, precedence);\n        }\n      } else {\n        this.borderTopStyle.setState(value, timing, precedence);\n        this.borderRightStyle.setState(value, timing, precedence);\n        this.borderBottomStyle.setState(value, timing, precedence);\n        this.borderLeftStyle.setState(value, timing, precedence);\n      }\n      return this;\n    }\n  }\n\n  function borderWidth(this: StyleMap): [Length | null, Length | null, Length | null, Length | null] | Length | null;\n  function borderWidth(this: StyleMap, value: [AnyLength | null, AnyLength | null, AnyLength | null, AnyLength | null] | AnyLength | null, timing?: AnyTiming | boolean, precedence?: number): StyleMap;\n  function borderWidth(this: StyleMap, value?: [AnyLength | null, AnyLength | null, AnyLength | null, AnyLength | null] | AnyLength | null, timing?: AnyTiming | boolean, precedence?: number): [Length | null, Length | null, Length | null, Length | null] | Length | null | StyleMap {\n    if (value === void 0) {\n      const borderTopWidth = this.borderTopWidth.value;\n      const borderRightWidth = this.borderRightWidth.value;\n      const borderBottomWidth = this.borderBottomWidth.value;\n      const borderLeftWidth = this.borderLeftWidth.value;\n      if (Values.equal(borderTopWidth, borderRightWidth)\n          && Values.equal(borderRightWidth, borderBottomWidth)\n          && Values.equal(borderBottomWidth, borderLeftWidth)) {\n        return borderTopWidth;\n      } else {\n        return [borderTopWidth, borderRightWidth, borderBottomWidth, borderLeftWidth];\n      }\n    } else {\n      if (Array.isArray(value)) {\n        if (value.length >= 1) {\n          this.borderTopWidth.setState(value[0], timing, precedence);\n        }\n        if (value.length >= 2) {\n          this.borderRightWidth.setState(value[1], timing, precedence);\n        }\n        if (value.length >= 3) {\n          this.borderBottomWidth.setState(value[2], timing, precedence);\n        }\n        if (value.length >= 4) {\n          this.borderLeftWidth.setState(value[3], timing, precedence);\n        }\n      } else {\n        this.borderTopWidth.setState(value, timing, precedence);\n        this.borderRightWidth.setState(value, timing, precedence);\n        this.borderBottomWidth.setState(value, timing, precedence);\n        this.borderLeftWidth.setState(value, timing, precedence);\n      }\n      return this;\n    }\n  }\n\n  function font(this: StyleMap): Font | null;\n  function font(this: StyleMap, value: AnyFont | null, timing?: AnyTiming | boolean, precedence?: number): StyleMap;\n  function font(this: StyleMap, value?: AnyFont | null, timing?: AnyTiming | boolean, precedence?: number): Font | null | StyleMap {\n    if (value === void 0) {\n      const style = this.fontStyle.value;\n      const variant = this.fontVariant.value;\n      const weight = this.fontWeight.value;\n      const stretch = this.fontStretch.value;\n      const size = this.fontSize.value;\n      const height = this.lineHeight.value;\n      const family = this.fontFamily.value;\n      if (family !== void 0) {\n        return Font.create(style, variant, weight, stretch, size, height, family);\n      } else {\n        return null;\n      }\n    } else {\n      if (value !== null) {\n        value = Font.fromAny(value);\n        if (value.style !== void 0) {\n          this.fontStyle.setState(value.style, timing, precedence);\n        }\n        if (value.variant !== void 0) {\n          this.fontVariant.setState(value.variant, timing, precedence);\n        }\n        if (value.weight !== void 0) {\n          this.fontWeight.setState(value.weight, timing, precedence);\n        }\n        if (value.stretch !== void 0) {\n          this.fontStretch.setState(value.stretch, timing, precedence);\n        }\n        if (value.size !== void 0) {\n          this.fontSize.setState(value.size, timing, precedence);\n        }\n        if (value.height !== void 0) {\n          this.lineHeight.setState(value.height, timing, precedence);\n        }\n        this.fontFamily.setState(value.family, timing, precedence);\n      } else {\n        this.fontStyle.setState(void 0, timing, precedence);\n        this.fontVariant.setState(void 0, timing, precedence);\n        this.fontWeight.setState(void 0, timing, precedence);\n        this.fontStretch.setState(void 0, timing, precedence);\n        this.fontSize.setState(null, timing, precedence);\n        this.lineHeight.setState(null, timing, precedence);\n        this.fontFamily.setState(void 0, timing, precedence);\n      }\n      return this;\n    }\n  }\n\n  function margin(this: StyleMap): [Length | null, Length | null, Length | null, Length | null] | Length | null;\n  function margin(this: StyleMap, value: [AnyLength | null, AnyLength | null, AnyLength | null, AnyLength | null] | AnyLength | null, timing?: AnyTiming | boolean, precedence?: number): StyleMap;\n  function margin(this: StyleMap, value?: [AnyLength | null, AnyLength | null, AnyLength | null, AnyLength | null] | AnyLength | null, timing?: AnyTiming | boolean, precedence?: number): [Length | null, Length | null, Length | null, Length | null] | Length | null | StyleMap {\n    if (value === void 0) {\n      const marginTop = this.marginTop.value;\n      const marginRight = this.marginRight.value;\n      const marginBottom = this.marginBottom.value;\n      const marginLeft = this.marginLeft.value;\n      if (Values.equal(marginTop, marginRight)\n          && Values.equal(marginRight, marginBottom)\n          && Values.equal(marginBottom, marginLeft)) {\n        return marginTop;\n      } else {\n        return [marginTop, marginRight, marginBottom, marginLeft];\n      }\n    } else {\n      if (Array.isArray(value)) {\n        if (value.length >= 1) {\n          this.marginTop.setState(value[0], timing, precedence);\n        }\n        if (value.length >= 2) {\n          this.marginRight.setState(value[1], timing, precedence);\n        }\n        if (value.length >= 3) {\n          this.marginBottom.setState(value[2], timing, precedence);\n        }\n        if (value.length >= 4) {\n          this.marginLeft.setState(value[3], timing, precedence);\n        }\n      } else {\n        this.marginTop.setState(value, timing, precedence);\n        this.marginRight.setState(value, timing, precedence);\n        this.marginBottom.setState(value, timing, precedence);\n        this.marginLeft.setState(value, timing, precedence);\n      }\n      return this;\n    }\n  }\n\n  function overflow(this: StyleMap): [Overflow | undefined, Overflow | undefined] | Overflow | undefined;\n  function overflow(this: StyleMap, value: [Overflow | undefined, Overflow | undefined] | Overflow | undefined, timing?: AnyTiming | boolean, precedence?: number): StyleMap;\n  function overflow(this: StyleMap, value?: [Overflow | undefined, Overflow | undefined] | Overflow | undefined, timing?: AnyTiming | boolean, precedence?: number): [Overflow | undefined, Overflow | undefined] | Overflow | undefined | StyleMap {\n    if (value === void 0) {\n      const overflowX = this.overflowX.value;\n      const overflowY = this.overflowY.value;\n      if (overflowX === overflowY) {\n        return overflowX;\n      } else {\n        return [overflowX, overflowY];\n      }\n    } else {\n      if (Array.isArray(value)) {\n        if (value.length >= 1) {\n          this.overflowX.setState(value[0], timing, precedence);\n        }\n        if (value.length >= 2) {\n          this.overflowY.setState(value[1], timing, precedence);\n        }\n      } else {\n        this.overflowX.setState(value, timing, precedence);\n        this.overflowY.setState(value, timing, precedence);\n      }\n      return this;\n    }\n  }\n\n  function overscrollBehavior(this: StyleMap): [OverscrollBehavior | undefined, OverscrollBehavior | undefined] | OverscrollBehavior | undefined;\n  function overscrollBehavior(this: StyleMap, value: [OverscrollBehavior | undefined, OverscrollBehavior | undefined] | OverscrollBehavior | undefined, timing?: AnyTiming | boolean, precedence?: number): StyleMap;\n  function overscrollBehavior(this: StyleMap, value?: [OverscrollBehavior | undefined, OverscrollBehavior | undefined] | OverscrollBehavior | undefined, timing?: AnyTiming | boolean, precedence?: number): [OverscrollBehavior | undefined, OverscrollBehavior | undefined] | OverscrollBehavior | undefined | StyleMap {\n    if (value === void 0) {\n      const overscrollBehaviorX = this.overscrollBehaviorX.value;\n      const overscrollBehaviorY = this.overscrollBehaviorY.value;\n      if (overscrollBehaviorX === overscrollBehaviorY) {\n        return overscrollBehaviorX;\n      } else {\n        return [overscrollBehaviorX, overscrollBehaviorY];\n      }\n    } else {\n      if (Array.isArray(value)) {\n        if (value.length >= 1) {\n          this.overscrollBehaviorX.setState(value[0], timing, precedence);\n        }\n        if (value.length >= 2) {\n          this.overscrollBehaviorY.setState(value[1], timing, precedence);\n        }\n      } else {\n        this.overscrollBehaviorX.setState(value, timing, precedence);\n        this.overscrollBehaviorY.setState(value, timing, precedence);\n      }\n      return this;\n    }\n  }\n\n  function padding(this: StyleMap): [Length | null, Length | null, Length | null, Length | null] | Length | null;\n  function padding(this: StyleMap, value: [AnyLength | null, AnyLength | null, AnyLength | null, AnyLength | null] | AnyLength | null, timing?: AnyTiming | boolean, precedence?: number): StyleMap;\n  function padding(this: StyleMap, value?: [AnyLength | null, AnyLength | null, AnyLength | null, AnyLength | null] | AnyLength | null, timing?: AnyTiming | boolean, precedence?: number): [Length | null, Length | null, Length | null, Length | null] | Length | null | StyleMap {\n    if (value === void 0) {\n      const paddingTop = this.paddingTop.value;\n      const paddingRight = this.paddingRight.value;\n      const paddingBottom = this.paddingBottom.value;\n      const paddingLeft = this.paddingLeft.value;\n      if (Equals(paddingTop, paddingRight)\n          && Equals(paddingRight, paddingBottom)\n          && Equals(paddingBottom, paddingLeft)) {\n        return paddingTop;\n      } else {\n        return [paddingTop, paddingRight, paddingBottom, paddingLeft];\n      }\n    } else {\n      if (Array.isArray(value)) {\n        if (value.length >= 1) {\n          this.paddingTop.setState(value[0], timing, precedence);\n        }\n        if (value.length >= 2) {\n          this.paddingRight.setState(value[1], timing, precedence);\n        }\n        if (value.length >= 3) {\n          this.paddingBottom.setState(value[2], timing, precedence);\n        }\n        if (value.length >= 4) {\n          this.paddingLeft.setState(value[3], timing, precedence);\n        }\n      } else {\n        this.paddingTop.setState(value, timing, precedence);\n        this.paddingRight.setState(value, timing, precedence);\n        this.paddingBottom.setState(value, timing, precedence);\n        this.paddingLeft.setState(value, timing, precedence);\n      }\n      return this;\n    }\n  }\n\n  return StyleMap;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/** @public */\nexport interface CssContext {\n  /** @internal */\n  getRule(index: number): CSSRule | null;\n\n  /** @internal */\n  insertRule(cssText: string, index?: number): number;\n\n  /** @internal */\n  removeRule(index: number): void;\n}\n\n/** @public */\nexport const CssContext = (function () {\n  const CssContext = {} as {\n    is(object: unknown): object is CssContext;\n  };\n\n  CssContext.is = function (object: unknown): object is CssContext {\n    if (typeof object === \"object\" && object !== null || typeof object === \"function\") {\n      const cssContext = object as CssContext;\n      return \"getRule\" in cssContext;\n    }\n    return false;\n  };\n\n  return CssContext;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Proto, AnyTiming} from \"@swim/util\";\nimport {FastenerContext, FastenerOwner, FastenerInit, FastenerClass, Fastener} from \"@swim/component\";\nimport type {\n  AnyConstraintExpression,\n  ConstraintVariable,\n  ConstraintProperty,\n  ConstraintRelation,\n  AnyConstraintStrength,\n  Constraint,\n  ConstraintScope,\n} from \"@swim/constraint\";\nimport {Look, Feel, MoodVector, ThemeMatrix, ThemeContext} from \"@swim/theme\";\nimport {CssContext} from \"./CssContext\";\n\n/** @public */\nexport interface CssRuleInit extends FastenerInit {\n  extends?: {prototype: CssRule<any>} | string | boolean | null;\n  css?: string | (() => string);\n\n  initRule?(rule: CSSRule): void;\n}\n\n/** @public */\nexport type CssRuleDescriptor<O = unknown, I = {}> = ThisType<CssRule<O> & I> & CssRuleInit & Partial<I>;\n\n/** @public */\nexport interface CssRuleClass<F extends CssRule<any> = CssRule<any>> extends FastenerClass<F> {\n}\n\n/** @public */\nexport interface CssRuleFactory<F extends CssRule<any> = CssRule<any>> extends CssRuleClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): CssRuleFactory<F> & I;\n\n  define<O>(className: string, descriptor: CssRuleDescriptor<O>): CssRuleFactory<CssRule<any>>;\n  define<O, I = {}>(className: string, descriptor: {implements: unknown} & CssRuleDescriptor<O, I>): CssRuleFactory<CssRule<any> & I>;\n\n  <O>(descriptor: CssRuleDescriptor<O>): PropertyDecorator;\n  <O, I = {}>(descriptor: {implements: unknown} & CssRuleDescriptor<O, I>): PropertyDecorator;\n}\n\n/** @public */\nexport interface CssRule<O = unknown> extends Fastener<O>, FastenerContext, ConstraintScope, ThemeContext {\n  /** @override */\n  get fastenerType(): Proto<CssRule<any>>;\n\n  readonly rule: CSSRule;\n\n  /** @internal */\n  readonly fasteners: {[fastenerName: string]: Fastener | undefined} | null;\n\n  /** @override */\n  hasFastener(fastenerName: string, fastenerBound?: Proto<Fastener> | null): boolean;\n\n  /** @override */\n  getFastener<F extends Fastener<any>>(fastenerName: string, fastenerBound: Proto<F>): F | null;\n  /** @override */\n  getFastener(fastenerName: string, fastenerBound?: Proto<Fastener> | null): Fastener | null;\n\n  /** @override */\n  setFastener(fastenerName: string, fastener: Fastener | null): void;\n\n  /** @override */\n  getLazyFastener<F extends Fastener<any>>(fastenerName: string, fastenerBound: Proto<F>): F | null;\n  /** @override */\n  getLazyFastener(fastenerName: string, fastenerBound?: Proto<Fastener> | null): Fastener | null;\n\n  /** @override */\n  getSuperFastener<F extends Fastener<any>>(fastenerName: string, fastenerBound: Proto<F>): F | null;\n  /** @override */\n  getSuperFastener(fastenerName: string, fastenerBound?: Proto<Fastener> | null): Fastener | null;\n  /** @internal @override */\n  getSuperFastener(): Fastener | null;\n\n  /** @internal @protected */\n  mountFasteners(): void;\n\n  /** @internal @protected */\n  unmountFasteners(): void;\n\n  /** @override */\n  requireUpdate(updateFlags: number): void;\n\n  /** @internal */\n  readonly decoherent: ReadonlyArray<Fastener> | null;\n\n  /** @override */\n  decohereFastener(fastener: Fastener): void;\n\n  /** @override */\n  recohere(t: number): void\n\n  /** @internal @protected */\n  recohereFasteners(t: number): void\n\n  /** @override */\n  constraint(lhs: AnyConstraintExpression, relation: ConstraintRelation,\n             rhs?: AnyConstraintExpression, strength?: AnyConstraintStrength): Constraint;\n\n  /** @override */\n  hasConstraint(constraint: Constraint): boolean;\n\n  /** @override */\n  addConstraint(constraint: Constraint): void;\n\n  /** @override */\n  removeConstraint(constraint: Constraint): void;\n\n  /** @override */\n  constraintVariable(name: string, value?: number, strength?: AnyConstraintStrength): ConstraintProperty<unknown, number>;\n\n  /** @override */\n  hasConstraintVariable(variable: ConstraintVariable): boolean;\n\n  /** @override */\n  addConstraintVariable(variable: ConstraintVariable): void;\n\n  /** @override */\n  removeConstraintVariable(variable: ConstraintVariable): void;\n\n  /** @internal @override */\n  setConstraintVariable(constraintVariable: ConstraintVariable, state: number): void;\n\n  /** @override */\n  getLook<T>(look: Look<T, unknown>, mood?: MoodVector<Feel> | null): T | undefined;\n\n  /** @override */\n  getLookOr<T, E>(look: Look<T, unknown>, elseValue: E): T | E;\n  /** @override */\n  getLookOr<T, E>(look: Look<T, unknown>, mood: MoodVector<Feel> | null, elseValue: E): T | E;\n\n  applyTheme(theme: ThemeMatrix, mood: MoodVector, timing?: AnyTiming | boolean): void;\n\n  /** @protected @override */\n  onMount(): void;\n\n  /** @protected @override */\n  onUnmount(): void;\n\n  /** @internal */\n  createRule(cssText: string): CSSRule;\n\n  /** @internal */\n  initRule?(rule: CSSRule): void;\n\n  /** @internal */\n  initCss?(): string;\n}\n\n/** @public */\nexport const CssRule = (function (_super: typeof Fastener) {\n  const CssRule: CssRuleFactory = _super.extend(\"CssRule\");\n\n  Object.defineProperty(CssRule.prototype, \"fastenerType\", {\n    get: function (this: CssRule): Proto<CssRule<any>> {\n      return CssRule;\n    },\n    configurable: true,\n  });\n\n  CssRule.prototype.hasFastener = function (this: CssRule, fastenerName: string, fastenerBound?: Proto<Fastener> | null): boolean {\n    const fasteners = this.fasteners;\n    if (fasteners !== null) {\n      const fastener = fasteners[fastenerName];\n      if (fastener !== void 0 && (fastenerBound === void 0 || fastenerBound === null || fastener instanceof fastenerBound)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  CssRule.prototype.getFastener = function (this: CssRule, fastenerName: string, fastenerBound?: Proto<Fastener> | null): Fastener | null {\n    const fasteners = this.fasteners;\n    if (fasteners !== null) {\n      const fastener = fasteners[fastenerName];\n      if (fastener !== void 0 && (fastenerBound === void 0 || fastenerBound === null || fastener instanceof fastenerBound)) {\n        return fastener;\n      }\n    }\n    return null;\n  };\n\n  CssRule.prototype.setFastener = function (this: CssRule, fastenerName: string, newFastener: Fastener | null): void {\n    let fasteners = this.fasteners;\n    if (fasteners === null) {\n      fasteners = {};\n      (this as Mutable<typeof this>).fasteners = fasteners;\n    }\n    const oldFastener = fasteners[fastenerName];\n    if (oldFastener !== void 0 && this.mounted) {\n      oldFastener.unmount();\n    }\n    if (newFastener !== null) {\n      fasteners[fastenerName] = newFastener;\n      if (this.mounted) {\n        newFastener.mount();\n      }\n    } else {\n      delete fasteners[fastenerName];\n    }\n  };\n\n  CssRule.prototype.getLazyFastener = function (this: CssRule, fastenerName: string, fastenerBound?: Proto<Fastener> | null): Fastener | null {\n    return FastenerContext.getLazyFastener(this, fastenerName, fastenerBound);\n  };\n\n  CssRule.prototype.getSuperFastener = function (this: CssRule, fastenerName?: string, fastenerBound?: Proto<Fastener> | null): Fastener | null {\n    if (arguments.length === 0) {\n      return _super.prototype.getSuperFastener.call(this);\n    } else {\n      return null;\n    }\n  };\n\n  CssRule.prototype.mountFasteners = function (this: CssRule): void {\n    const fasteners = this.fasteners;\n    for (const fastenerName in fasteners) {\n      const fastener = fasteners[fastenerName]!;\n      fastener.mount();\n    }\n  };\n\n  CssRule.prototype.unmountFasteners = function (this: CssRule): void {\n    const fasteners = this.fasteners;\n    for (const fastenerName in fasteners) {\n      const fastener = fasteners[fastenerName]!;\n      fastener.unmount();\n    }\n  };\n\n  CssRule.prototype.requireUpdate = function (this: CssRule, updateFlags: number): void {\n    const propertyContext = this.owner;\n    if (FastenerContext.has(propertyContext, \"requireUpdate\")) {\n      propertyContext.requireUpdate(updateFlags);\n    }\n  };\n\n  CssRule.prototype.decohereFastener = function (this: CssRule, fastener: Fastener): void {\n    let decoherent = this.decoherent as Fastener[];\n    if (decoherent === null) {\n      decoherent = [];\n      (this as Mutable<typeof this>).decoherent = decoherent;\n    }\n    decoherent.push(fastener);\n\n    if ((this.flags & Fastener.DecoherentFlag) === 0) {\n      this.setCoherent(false);\n      this.decohere();\n    }\n  };\n\n  CssRule.prototype.recohereFasteners = function (this: CssRule, t: number): void {\n    const decoherent = this.decoherent;\n    if (decoherent !== null) {\n      const decoherentCount = decoherent.length;\n      if (decoherentCount !== 0) {\n        (this as Mutable<typeof this>).decoherent = null;\n        for (let i = 0; i < decoherentCount; i += 1) {\n          const fastener = decoherent[i]!;\n          fastener.recohere(t);\n        }\n      }\n    }\n  };\n\n  CssRule.prototype.recohere = function (this: CssRule, t: number): void {\n    this.recohereFasteners(t);\n    if (this.decoherent === null || this.decoherent.length === 0) {\n      this.setCoherent(true);\n    } else {\n      this.setCoherent(false);\n      this.decohere();\n    }\n  };\n\n  CssRule.prototype.constraint = function (this: CssRule<ConstraintScope>, lhs: AnyConstraintExpression, relation: ConstraintRelation,\n                                           rhs?: AnyConstraintExpression, strength?: AnyConstraintStrength): Constraint {\n    return this.owner.constraint(lhs, relation, rhs, strength);\n  };\n\n  CssRule.prototype.hasConstraint = function (this: CssRule<ConstraintScope>, constraint: Constraint): boolean {\n    return this.owner.hasConstraint(constraint);\n  };\n\n  CssRule.prototype.addConstraint = function (this: CssRule<ConstraintScope>, constraint: Constraint): void {\n    this.owner.addConstraint(constraint);\n  };\n\n  CssRule.prototype.removeConstraint = function (this: CssRule<ConstraintScope>, constraint: Constraint): void {\n    this.owner.removeConstraint(constraint);\n  };\n\n  CssRule.prototype.constraintVariable = function (this: CssRule<ConstraintScope>, name: string, value?: number, strength?: AnyConstraintStrength): ConstraintProperty<unknown, number> {\n    return this.owner.constraintVariable(name, value, strength);\n  };\n\n  CssRule.prototype.hasConstraintVariable = function (this: CssRule<ConstraintScope>, constraintVariable: ConstraintVariable): boolean {\n    return this.owner.hasConstraintVariable(constraintVariable);\n  };\n\n  CssRule.prototype.addConstraintVariable = function (this: CssRule<ConstraintScope>, constraintVariable: ConstraintVariable): void {\n    this.owner.addConstraintVariable(constraintVariable);\n  };\n\n  CssRule.prototype.removeConstraintVariable = function (this: CssRule<ConstraintScope>, constraintVariable: ConstraintVariable): void {\n    this.owner.removeConstraintVariable(constraintVariable);\n  };\n\n  CssRule.prototype.setConstraintVariable = function (this: CssRule<ConstraintScope>, constraintVariable: ConstraintVariable, state: number): void {\n    this.owner.setConstraintVariable(constraintVariable, state);\n  };\n\n  CssRule.prototype.getLook = function <T>(this: CssRule, look: Look<T, unknown>, mood?: MoodVector<Feel> | null): T | undefined {\n    const themeContext = this.owner;\n    if (ThemeContext.is(themeContext)) {\n      return themeContext.getLook(look, mood);\n    } else {\n      return void 0;\n    }\n  };\n\n  CssRule.prototype.getLookOr = function <T, E>(this: CssRule, look: Look<T, unknown>, mood: MoodVector<Feel> | null | E, elseValue?: E): T | E {\n    const themeContext = this.owner;\n    if (ThemeContext.is(themeContext)) {\n      if (arguments.length === 2) {\n        return themeContext.getLookOr(look, mood as E);\n      } else {\n        return themeContext.getLookOr(look, mood as MoodVector<Feel> | null, elseValue!);\n      }\n    } else if (arguments.length === 2) {\n      return mood as E;\n    } else {\n      return elseValue!;\n    }\n  };\n\n  CssRule.prototype.applyTheme = function (this: CssRule, theme: ThemeMatrix, mood: MoodVector, timing?: AnyTiming | boolean | null): void {\n    // hook\n  };\n\n  CssRule.prototype.onMount = function (this: CssRule): void {\n    _super.prototype.onMount.call(this);\n    this.mountFasteners();\n  };\n\n  CssRule.prototype.onUnmount = function (this: CssRule): void {\n    this.unmountFasteners();\n    _super.prototype.onUnmount.call(this);\n  };\n\n  CssRule.prototype.createRule = function (this: CssRule, cssText: string): CSSRule {\n    const cssContext = this.owner;\n    if (CssContext.is(cssContext)) {\n      const index = cssContext.insertRule(cssText);\n      const rule = cssContext.getRule(index);\n      if (rule instanceof CSSRule) {\n        return rule;\n      } else {\n        throw new TypeError(\"\" + rule);\n      }\n    } else {\n      throw new Error(\"no css context\");\n    }\n  };\n\n  CssRule.construct = function <F extends CssRule<any>>(ruleClass: {prototype: F}, rule: F | null, owner: FastenerOwner<F>): F {\n    rule = _super.construct(ruleClass, rule, owner) as F;\n    (rule as Mutable<typeof rule>).fasteners = null;\n    (rule as Mutable<typeof rule>).decoherent = null;\n    (rule as Mutable<typeof rule>).rule = null as unknown as CSSRule;\n    FastenerContext.init(rule);\n    return rule;\n  };\n\n  CssRule.define = function <O>(className: string, descriptor: CssRuleDescriptor<O>): CssRuleFactory<CssRule<any>> {\n    let superClass = descriptor.extends as CssRuleFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    let css = descriptor.css;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n    delete descriptor.css;\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const ruleClass = superClass.extend(className, descriptor);\n\n    if (typeof css === \"function\") {\n      ruleClass.prototype.initCss = css;\n      css = void 0;\n    }\n\n    ruleClass.construct = function (ruleClass: {prototype: CssRule<any>}, rule: CssRule<O> | null, owner: O): CssRule<O> {\n      rule = superClass!.construct(ruleClass, rule, owner);\n\n      if (affinity !== void 0) {\n        rule.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        rule.initInherits(inherits);\n      }\n\n      let cssText: string | undefined;\n      if (css !== void 0) {\n        cssText = css as string;\n      } else if (rule.initCss !== void 0) {\n        cssText = rule.initCss();\n      } else {\n        throw new Error(\"undefined css\");\n      }\n\n      (rule as Mutable<typeof rule>).rule = rule.createRule(cssText);\n      if (rule.initRule !== void 0) {\n        rule.initRule(rule.rule);\n      }\n\n      return rule;\n    };\n\n    return ruleClass;\n  };\n\n  return CssRule;\n})(Fastener);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, AnyTiming, Timing} from \"@swim/util\";\nimport type {FastenerOwner} from \"@swim/component\";\nimport {ToStyleString, ToCssValue} from \"@swim/style\";\nimport {Look, Mood, MoodVector, ThemeMatrix, ThemeAnimator} from \"@swim/theme\";\nimport {StyleMapInit, StyleMap} from \"./StyleMap\";\nimport {CssContext} from \"./CssContext\";\nimport {CssRuleInit, CssRuleClass, CssRule} from \"./CssRule\";\n\n/** @public */\nexport interface StyleRuleInit extends CssRuleInit {\n  extends?: {prototype: StyleRule<any>} | string | boolean | null;\n  style?: StyleMapInit;\n\n  willSetStyle?(propertyName: string, value: unknown, priority: string | undefined): void;\n  didSetStyle?(propertyName: string, value: unknown, priority: string | undefined): void;\n\n  initRule?(rule: CSSStyleRule): void;\n}\n\n/** @public */\nexport type StyleRuleDescriptor<O = unknown, I = {}> = ThisType<StyleRule<O> & I> & StyleRuleInit & Partial<I>;\n\n/** @public */\nexport interface StyleRuleClass<F extends StyleRule<any> = StyleRule<any>> extends CssRuleClass<F> {\n}\n\n/** @public */\nexport interface StyleRuleFactory<F extends StyleRule<any> = StyleRule<any>> extends StyleRuleClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): StyleRuleFactory<F> & I;\n\n  define<O>(className: string, descriptor: StyleRuleDescriptor<O>): StyleRuleFactory<StyleRule<any>>;\n  define<O, I = {}>(className: string, descriptor: {implements: unknown} & StyleRuleDescriptor<O, I>): StyleRuleFactory<StyleRule<any> & I>;\n\n  <O>(descriptor: StyleRuleDescriptor<O>): PropertyDecorator;\n  <O, I = {}>(descriptor: {implements: unknown} & StyleRuleDescriptor<O, I>): PropertyDecorator;\n}\n\n/** @public */\nexport interface StyleRule<O = unknown> extends CssRule<O>, StyleMap {\n  (property: string): unknown;\n  (property: string, value: unknown): O;\n\n  /** @override */\n  readonly rule: CSSStyleRule;\n\n  get selector(): string;\n\n  setSelector(selector: string): void;\n\n  /** @override */\n  getStyle(propertyNames: string | ReadonlyArray<string>): CSSStyleValue | string | undefined;\n\n  /** @override */\n  setStyle(propertyName: string, value: unknown, priority?: string): this;\n\n  /** @protected */\n  willSetStyle(propertyName: string, value: unknown, priority: string | undefined): void;\n\n  /** @protected */\n  onSetStyle(propertyName: string, value: unknown, priority: string | undefined): void;\n\n  /** @protected */\n  didSetStyle(propertyName: string, value: unknown, priority: string | undefined): void;\n\n  /** @override */\n  applyTheme(theme: ThemeMatrix, mood: MoodVector, timing?: AnyTiming | boolean | null): void;\n\n  /** @internal */\n  createRule(cssText: string): CSSStyleRule;\n\n  /** @internal */\n  initRule?(rule: CSSStyleRule): void;\n\n  /** @internal */\n  initCss?(): string;\n}\n\n/** @public */\nexport const StyleRule = (function (_super: typeof CssRule) {\n  const StyleRule: StyleRuleFactory = _super.extend(\"StyleRule\");\n\n  Object.defineProperty(StyleRule.prototype, \"selector\", {\n    get: function (this: StyleRule): string {\n      return this.rule.selectorText;\n    },\n    configurable: true,\n  });\n\n  StyleRule.prototype.setSelector = function (this: StyleRule, selector: string): void {\n    this.rule.selectorText = selector;\n  };\n\n  StyleRule.prototype.getStyle = function (this: StyleRule, propertyNames: string | ReadonlyArray<string>): CSSStyleValue | string | undefined {\n    if (typeof CSSStyleValue !== \"undefined\") { // CSS Typed OM support\n      const style = this.rule.styleMap;\n      if (typeof propertyNames === \"string\") {\n        return style.get(propertyNames);\n      } else {\n        for (let i = 0, n = propertyNames.length; i < n; i += 1) {\n          const value = style.get(propertyNames[i]!);\n          if (value !== void 0) {\n            return value;\n          }\n        }\n        return \"\";\n      }\n    } else {\n      const style = this.rule.style;\n      if (typeof propertyNames === \"string\") {\n        return style.getPropertyValue(propertyNames);\n      } else {\n        for (let i = 0, n = propertyNames.length; i < n; i += 1) {\n          const value = style.getPropertyValue(propertyNames[i]!);\n          if (value.length !== 0) {\n            return value;\n          }\n        }\n        return \"\";\n      }\n    }\n  };\n\n  StyleRule.prototype.setStyle = function (this: StyleRule, propertyName: string, value: unknown, priority?: string): StyleRule {\n    this.willSetStyle(propertyName, value, priority);\n    if (typeof CSSStyleValue !== \"undefined\") { // CSS Typed OM support\n      if (value !== void 0 && value !== null) {\n        const cssValue = ToCssValue(value);\n        if (cssValue !== null) {\n          try {\n            this.rule.styleMap.set(propertyName, cssValue);\n          } catch (e) {\n            // swallow\n          }\n        } else {\n          this.rule.style.setProperty(propertyName, ToStyleString(value), priority);\n        }\n      } else {\n        this.rule.styleMap.delete(propertyName);\n      }\n    } else {\n      if (value !== void 0 && value !== null) {\n        this.rule.style.setProperty(propertyName, ToStyleString(value), priority);\n      } else {\n        this.rule.style.removeProperty(propertyName);\n      }\n    }\n    this.onSetStyle(propertyName, value, priority);\n    this.didSetStyle(propertyName, value, priority);\n    return this;\n  };\n\n  StyleRule.prototype.willSetStyle = function (this: StyleRule, propertyName: string, value: unknown, priority: string | undefined): void {\n    // hook\n  };\n\n  StyleRule.prototype.onSetStyle = function (this: StyleRule, propertyName: string, value: unknown, priority: string | undefined): void {\n    // hook\n  };\n\n  StyleRule.prototype.didSetStyle = function (this: StyleRule, propertyName: string, value: unknown, priority: string | undefined): void {\n    // hook\n  };\n\n  StyleRule.prototype.applyTheme = function (theme: ThemeMatrix, mood: MoodVector, timing?: AnyTiming | boolean | null): void {\n    if (timing === void 0 || timing === true) {\n      timing = theme.getOr(Look.timing, Mood.ambient, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n    const fasteners = this.fasteners;\n    for (const fastenerName in fasteners) {\n      const fastener = fasteners[fastenerName]!;\n      if (fastener instanceof ThemeAnimator) {\n        fastener.applyTheme(theme, mood, timing as Timing | boolean);\n      }\n    }\n  };\n\n  StyleRule.prototype.createRule = function (this: StyleRule, cssText: string): CSSStyleRule {\n    const cssContext = this.owner;\n    if (CssContext.is(cssContext)) {\n      const index = cssContext.insertRule(cssText);\n      const rule = cssContext.getRule(index);\n      if (rule instanceof CSSStyleRule) {\n        return rule;\n      } else {\n        throw new TypeError(\"\" + rule);\n      }\n    } else {\n      throw new Error(\"no css context\");\n    }\n  };\n\n  StyleMap.define(StyleRule.prototype);\n\n  StyleRule.construct = function <F extends StyleRule<any>>(ruleClass: {prototype: F}, rule: F | null, owner: FastenerOwner<F>): F {\n    if (rule === null) {\n      rule = function (property: string, value: unknown): unknown | FastenerOwner<F> {\n        if (value === void 0) {\n          return rule!.getStyle(property);\n         } else {\n          rule!.setStyle(property, value);\n          return rule!.owner;\n        }\n      } as F;\n      delete (rule as Partial<Mutable<F>>).name; // don't clobber prototype name\n      Object.setPrototypeOf(rule, ruleClass.prototype);\n    }\n    rule = _super.construct(ruleClass, rule, owner) as F;\n    return rule;\n  };\n\n  StyleRule.define = function <O>(className: string, descriptor: StyleRuleDescriptor<O>): StyleRuleFactory<StyleRule<any>> {\n    let superClass = descriptor.extends as StyleRuleFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    let css = descriptor.css;\n    const style = descriptor.style;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n    delete descriptor.css;\n    delete descriptor.style;\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const ruleClass = superClass.extend(className, descriptor);\n\n    if (typeof css === \"function\") {\n      ruleClass.prototype.initCss = css;\n      css = void 0;\n    }\n\n    ruleClass.construct = function (ruleClass: {prototype: StyleRule<any>}, rule: StyleRule<O> | null, owner: O): StyleRule<O> {\n      rule = superClass!.construct(ruleClass, rule, owner);\n\n      if (affinity !== void 0) {\n        rule.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        rule.initInherits(inherits);\n      }\n\n      let cssText: string | undefined;\n      if (css !== void 0) {\n        cssText = css as string;\n      } else if (rule.initCss !== void 0) {\n        cssText = rule.initCss();\n      } else {\n        throw new Error(\"undefined css\");\n      }\n\n      (rule as Mutable<typeof rule>).rule = rule.createRule(cssText);\n      if (rule.initRule !== void 0) {\n        rule.initRule(rule.rule);\n      }\n\n      if (style !== void 0) {\n        StyleMap.init(rule, style);\n      }\n\n      return rule;\n    };\n\n    return ruleClass;\n  };\n\n  return StyleRule;\n})(CssRule);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, AnyTiming, Timing} from \"@swim/util\";\nimport type {FastenerOwner} from \"@swim/component\";\nimport {Look, Mood, MoodVector, ThemeMatrix} from \"@swim/theme\";\nimport {CssContext} from \"./CssContext\";\nimport {CssRuleInit, CssRuleClass, CssRule} from \"./CssRule\";\n\n/** @public */\nexport interface MediaRuleInit extends CssRuleInit {\n  extends?: {prototype: MediaRule<any>} | string | boolean | null;\n\n  initRule?(rule: CSSMediaRule): void;\n}\n\n/** @public */\nexport type MediaRuleDescriptor<O = unknown, I = {}> = ThisType<MediaRule<O> & I> & MediaRuleInit & Partial<I>;\n\n/** @public */\nexport interface MediaRuleClass<F extends MediaRule<any> = MediaRule<any>> extends CssRuleClass<F> {\n}\n\n/** @public */\nexport interface MediaRuleFactory<F extends MediaRule<any> = MediaRule<any>> extends MediaRuleClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): MediaRuleFactory<F> & I;\n\n  define<O>(className: string, descriptor: MediaRuleDescriptor<O>): MediaRuleFactory<MediaRule<any>>;\n  define<O, I = {}>(className: string, descriptor: {implements: unknown} & MediaRuleDescriptor<O, I>): MediaRuleFactory<MediaRule<any> & I>;\n\n  <O>(descriptor: MediaRuleDescriptor<O>): PropertyDecorator;\n  <O, I = {}>(descriptor: {implements: unknown} & MediaRuleDescriptor<O, I>): PropertyDecorator;\n}\n\n/** @public */\nexport interface MediaRule<O = unknown> extends CssRule<O>, CssContext {\n  /** @override */\n  readonly rule: CSSMediaRule;\n\n  /** @override */\n  getRule(index: number): CSSRule | null;\n\n  /** @override */\n  insertRule(cssText: string, index?: number): number;\n\n  /** @override */\n  removeRule(index: number): void;\n\n  /** @override */\n  applyTheme(theme: ThemeMatrix, mood: MoodVector, timing?: AnyTiming | boolean | null): void;\n\n  /** @internal */\n  createRule(cssText: string): CSSMediaRule;\n\n  /** @internal */\n  initRule?(rule: CSSMediaRule): void;\n\n  /** @internal */\n  initCss?(): string;\n}\n\n/** @public */\nexport const MediaRule = (function (_super: typeof CssRule) {\n  const MediaRule: MediaRuleFactory = _super.extend(\"MediaRule\");\n\n  MediaRule.prototype.getRule = function (this: MediaRule, index: number): CSSRule | null {\n    return this.rule.cssRules.item(index);\n  };\n\n  MediaRule.prototype.insertRule = function (this: MediaRule, cssText: string, index?: number): number {\n    return this.rule.insertRule(cssText, index);\n  };\n\n  MediaRule.prototype.removeRule = function (this: MediaRule, index: number): void {\n    this.rule.deleteRule(index);\n  };\n\n  MediaRule.prototype.applyTheme = function (theme: ThemeMatrix, mood: MoodVector, timing?: AnyTiming | boolean | null): void {\n    if (timing === void 0 || timing === true) {\n      timing = theme.getOr(Look.timing, Mood.ambient, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n    const fasteners = this.fasteners;\n    for (const fastenerName in fasteners) {\n      const fastener = fasteners[fastenerName]!;\n      if (fastener instanceof CssRule) {\n        fastener.applyTheme(theme, mood, timing);\n      }\n    }\n  };\n\n  MediaRule.prototype.createRule = function (this: MediaRule, cssText: string): CSSMediaRule {\n    const cssContext = this.owner;\n    if (CssContext.is(cssContext)) {\n      const index = cssContext.insertRule(cssText);\n      const rule = cssContext.getRule(index);\n      if (rule instanceof CSSMediaRule) {\n        return rule;\n      } else {\n        throw new TypeError(\"\" + rule);\n      }\n    } else {\n      throw new Error(\"no css context\");\n    }\n  };\n\n  MediaRule.construct = function <F extends MediaRule<any>>(ruleClass: {prototype: F}, rule: F | null, owner: FastenerOwner<F>): F {\n    rule = _super.construct(ruleClass, rule, owner) as F;\n    return rule;\n  };\n\n  MediaRule.define = function <O>(className: string, descriptor: MediaRuleDescriptor<O>): MediaRuleFactory<MediaRule<any>> {\n    let superClass = descriptor.extends as MediaRuleFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    let css = descriptor.css;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n    delete descriptor.css;\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const ruleClass = superClass.extend(className, descriptor);\n\n    if (typeof css === \"function\") {\n      ruleClass.prototype.initCss = css;\n      css = void 0;\n    }\n\n    ruleClass.construct = function (ruleClass: {prototype: MediaRule<any>}, rule: MediaRule<O> | null, owner: O): MediaRule<O> {\n      rule = superClass!.construct(ruleClass, rule, owner);\n\n      if (affinity !== void 0) {\n        rule.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        rule.initInherits(inherits);\n      }\n\n      let cssText: string | undefined;\n      if (css !== void 0) {\n        cssText = css as string;\n      } else if (rule.initCss !== void 0) {\n        cssText = rule.initCss();\n      } else {\n        throw new Error(\"undefined css\");\n      }\n\n      (rule as Mutable<typeof rule>).rule = rule.createRule(cssText);\n      if (rule.initRule !== void 0) {\n        rule.initRule(rule.rule);\n      }\n\n      return rule;\n    };\n\n    return ruleClass;\n  };\n\n  return MediaRule;\n})(CssRule);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Proto, AnyTiming, Timing} from \"@swim/util\";\nimport {FastenerContext, FastenerOwner, FastenerInit, FastenerClass, Fastener} from \"@swim/component\";\nimport type {\n  AnyConstraintExpression,\n  ConstraintVariable,\n  ConstraintProperty,\n  ConstraintRelation,\n  AnyConstraintStrength,\n  Constraint,\n  ConstraintScope,\n} from \"@swim/constraint\";\nimport {Look, Feel, Mood, MoodVector, ThemeMatrix, ThemeContext} from \"@swim/theme\";\nimport type {CssContext} from \"./CssContext\";\nimport {CssRule} from \"./CssRule\";\n\n/** @public */\nexport interface StyleSheetInit extends FastenerInit {\n  extends?: {prototype: StyleSheet<any>} | string | boolean | null;\n  css?: string | (() => string | undefined);\n\n  createStylesheet?(): CSSStyleSheet;\n  initStylesheet?(stylesheet: CSSStyleSheet): void;\n}\n\n/** @public */\nexport type StyleSheetDescriptor<O = unknown, I = {}> = ThisType<StyleSheet<O> & I> & StyleSheetInit & Partial<I>;\n\n/** @public */\nexport interface StyleSheetClass<F extends StyleSheet<any> = StyleSheet<any>> extends FastenerClass<F> {\n}\n\n/** @public */\nexport interface StyleSheetFactory<F extends StyleSheet<any> = StyleSheet<any>> extends StyleSheetClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): StyleSheetFactory<F> & I;\n\n  define<O>(className: string, descriptor: StyleSheetDescriptor<O>): StyleSheetFactory<StyleSheet<any>>;\n  define<O, I = {}>(className: string, descriptor: {implements: unknown} & StyleSheetDescriptor<O, I>): StyleSheetFactory<StyleSheet<any> & I>;\n\n  <O>(descriptor: StyleSheetDescriptor<O>): PropertyDecorator;\n  <O, I = {}>(descriptor: {implements: unknown} & StyleSheetDescriptor<O, I>): PropertyDecorator;\n}\n\n/** @public */\nexport interface StyleSheet<O = unknown> extends Fastener<O>, FastenerContext, ConstraintScope, ThemeContext, CssContext {\n  /** @override */\n  get fastenerType(): Proto<StyleSheet<any>>;\n\n  readonly stylesheet: CSSStyleSheet;\n\n  /** @override */\n  getRule(index: number): CSSRule | null;\n\n  /** @override */\n  insertRule(cssText: string, index?: number): number;\n\n  /** @override */\n  removeRule(index: number): void;\n\n  /** @internal */\n  readonly fasteners: {[fastenerName: string]: Fastener | undefined} | null;\n\n  /** @override */\n  hasFastener(fastenerName: string, fastenerBound?: Proto<Fastener> | null): boolean;\n\n  /** @override */\n  getFastener<F extends Fastener<any>>(fastenerName: string, fastenerBound: Proto<F>): F | null;\n  /** @override */\n  getFastener(fastenerName: string, fastenerBound?: Proto<Fastener> | null): Fastener | null;\n\n  /** @override */\n  setFastener(fastenerName: string, fastener: Fastener | null): void;\n\n  /** @override */\n  getLazyFastener<F extends Fastener<any>>(fastenerName: string, fastenerBound: Proto<F>): F | null;\n  /** @override */\n  getLazyFastener(fastenerName: string, fastenerBound?: Proto<Fastener> | null): Fastener | null;\n\n  /** @override */\n  getSuperFastener<F extends Fastener<any>>(fastenerName: string, fastenerBound: Proto<F>): F | null;\n  /** @override */\n  getSuperFastener(fastenerName: string, fastenerBound?: Proto<Fastener> | null): Fastener | null;\n  /** @internal @override */\n  getSuperFastener(): Fastener | null;\n\n  /** @internal @protected */\n  mountFasteners(): void;\n\n  /** @internal @protected */\n  unmountFasteners(): void;\n\n  /** @override */\n  requireUpdate(updateFlags: number): void;\n\n  /** @internal */\n  readonly decoherent: ReadonlyArray<Fastener> | null;\n\n  /** @override */\n  decohereFastener(fastener: Fastener): void;\n\n  /** @override */\n  recohere(t: number): void\n\n  /** @internal @protected */\n  recohereFasteners(t: number): void\n\n  /** @override */\n  constraint(lhs: AnyConstraintExpression, relation: ConstraintRelation,\n             rhs?: AnyConstraintExpression, strength?: AnyConstraintStrength): Constraint;\n\n  /** @override */\n  hasConstraint(constraint: Constraint): boolean;\n\n  /** @override */\n  addConstraint(constraint: Constraint): void;\n\n  /** @override */\n  removeConstraint(constraint: Constraint): void;\n\n  /** @override */\n  constraintVariable(name: string, value?: number, strength?: AnyConstraintStrength): ConstraintProperty<unknown, number>;\n\n  /** @override */\n  hasConstraintVariable(variable: ConstraintVariable): boolean;\n\n  /** @override */\n  addConstraintVariable(variable: ConstraintVariable): void;\n\n  /** @override */\n  removeConstraintVariable(variable: ConstraintVariable): void;\n\n  /** @internal @override */\n  setConstraintVariable(constraintVariable: ConstraintVariable, state: number): void;\n\n  /** @override */\n  getLook<T>(look: Look<T, unknown>, mood?: MoodVector<Feel> | null): T | undefined;\n\n  /** @override */\n  getLookOr<T, E>(look: Look<T, unknown>, elseValue: E): T | E;\n  /** @override */\n  getLookOr<T, E>(look: Look<T, unknown>, mood: MoodVector<Feel> | null, elseValue: E): T | E;\n\n  applyTheme(theme: ThemeMatrix, mood: MoodVector, timing?: AnyTiming | boolean | null): void;\n\n  /** @protected @override */\n  onMount(): void;\n\n  /** @protected @override */\n  onUnmount(): void;\n\n  /** @internal */\n  createStylesheet(): CSSStyleSheet;\n\n  /** @internal */\n  initStylesheet?(stylesheet: CSSStyleSheet): void;\n\n  /** @internal */\n  initCss?(): string | undefined;\n}\n\n/** @public */\nexport const StyleSheet = (function (_super: typeof Fastener) {\n  const StyleSheet: StyleSheetFactory = _super.extend(\"StyleSheet\");\n\n  Object.defineProperty(StyleSheet.prototype, \"fastenerType\", {\n    get: function (this: StyleSheet): Proto<StyleSheet<any>> {\n      return StyleSheet;\n    },\n    configurable: true,\n  });\n\n  StyleSheet.prototype.getRule = function (this: StyleSheet, index: number): CSSRule | null {\n    return this.stylesheet.cssRules.item(index);\n  };\n\n  StyleSheet.prototype.insertRule = function (this: StyleSheet, cssText: string, index?: number): number {\n    return this.stylesheet.insertRule(cssText, index);\n  };\n\n  StyleSheet.prototype.removeRule = function (this: StyleSheet, index: number): void {\n    this.stylesheet.deleteRule(index);\n  };\n\n  StyleSheet.prototype.hasFastener = function (this: StyleSheet, fastenerName: string, fastenerBound?: Proto<Fastener> | null): boolean {\n    const fasteners = this.fasteners;\n    if (fasteners !== null) {\n      const fastener = fasteners[fastenerName];\n      if (fastener !== void 0 && (fastenerBound === void 0 || fastenerBound === null || fastener instanceof fastenerBound)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  StyleSheet.prototype.getFastener = function (this: StyleSheet, fastenerName: string, fastenerBound?: Proto<Fastener> | null): Fastener | null {\n    const fasteners = this.fasteners;\n    if (fasteners !== null) {\n      const fastener = fasteners[fastenerName];\n      if (fastener !== void 0 && (fastenerBound === void 0 || fastenerBound === null || fastener instanceof fastenerBound)) {\n        return fastener;\n      }\n    }\n    return null;\n  };\n\n  StyleSheet.prototype.setFastener = function (this: StyleSheet, fastenerName: string, newFastener: Fastener | null): void {\n    let fasteners = this.fasteners;\n    if (fasteners === null) {\n      fasteners = {};\n      (this as Mutable<typeof this>).fasteners = fasteners;\n    }\n    const oldFastener = fasteners[fastenerName];\n    if (oldFastener !== void 0 && this.mounted) {\n      oldFastener.unmount();\n    }\n    if (newFastener !== null) {\n      fasteners[fastenerName] = newFastener;\n      if (this.mounted) {\n        newFastener.mount();\n      }\n    } else {\n      delete fasteners[fastenerName];\n    }\n  };\n\n  StyleSheet.prototype.getLazyFastener = function (this: StyleSheet, fastenerName: string, fastenerBound?: Proto<Fastener> | null): Fastener | null {\n    return FastenerContext.getLazyFastener(this, fastenerName, fastenerBound);\n  };\n\n  StyleSheet.prototype.getSuperFastener = function (this: StyleSheet, fastenerName?: string, fastenerBound?: Proto<Fastener> | null): Fastener | null {\n    if (arguments.length === 0) {\n      return _super.prototype.getSuperFastener.call(this);\n    } else {\n      return null;\n    }\n  };\n\n  StyleSheet.prototype.mountFasteners = function (this: StyleSheet): void {\n    const fasteners = this.fasteners;\n    for (const fastenerName in fasteners) {\n      const fastener = fasteners[fastenerName]!;\n      fastener.mount();\n    }\n  };\n\n  StyleSheet.prototype.unmountFasteners = function (this: StyleSheet): void {\n    const fasteners = this.fasteners;\n    for (const fastenerName in fasteners) {\n      const fastener = fasteners[fastenerName]!;\n      fastener.unmount();\n    }\n  };\n\n  StyleSheet.prototype.requireUpdate = function (this: StyleSheet, updateFlags: number): void {\n    const fastenerContext = this.owner;\n    if (FastenerContext.has(fastenerContext, \"requireUpdate\")) {\n      fastenerContext.requireUpdate(updateFlags);\n    }\n  };\n\n  StyleSheet.prototype.decohereFastener = function (this: StyleSheet, fastener: Fastener): void {\n    let decoherent = this.decoherent as Fastener[];\n    if (decoherent === null) {\n      decoherent = [];\n      (this as Mutable<typeof this>).decoherent = decoherent;\n    }\n    decoherent.push(fastener);\n\n    if ((this.flags & Fastener.DecoherentFlag) === 0) {\n      this.setCoherent(false);\n      this.decohere();\n    }\n  };\n\n  StyleSheet.prototype.recohereFasteners = function (this: StyleSheet, t: number): void {\n    const decoherent = this.decoherent;\n    if (decoherent !== null) {\n      const decoherentCount = decoherent.length;\n      if (decoherentCount !== 0) {\n        (this as Mutable<typeof this>).decoherent = null;\n        for (let i = 0; i < decoherentCount; i += 1) {\n          const fastener = decoherent[i]!;\n          fastener.recohere(t);\n        }\n      }\n    }\n  };\n\n  StyleSheet.prototype.recohere = function (this: StyleSheet, t: number): void {\n    this.recohereFasteners(t);\n    if (this.decoherent === null || this.decoherent.length === 0) {\n      this.setCoherent(true);\n    } else {\n      this.setCoherent(false);\n      this.decohere();\n    }\n  };\n\n  StyleSheet.prototype.constraint = function (this: StyleSheet<ConstraintScope>, lhs: AnyConstraintExpression, relation: ConstraintRelation,\n                                              rhs?: AnyConstraintExpression, strength?: AnyConstraintStrength): Constraint {\n    return this.owner.constraint(lhs, relation, rhs, strength);\n  };\n\n  StyleSheet.prototype.hasConstraint = function (this: StyleSheet<ConstraintScope>, constraint: Constraint): boolean {\n    return this.owner.hasConstraint(constraint);\n  };\n\n  StyleSheet.prototype.addConstraint = function (this: StyleSheet<ConstraintScope>, constraint: Constraint): void {\n    this.owner.addConstraint(constraint);\n  };\n\n  StyleSheet.prototype.removeConstraint = function (this: StyleSheet<ConstraintScope>, constraint: Constraint): void {\n    this.owner.removeConstraint(constraint);\n  };\n\n  StyleSheet.prototype.constraintVariable = function (this: StyleSheet<ConstraintScope>, name: string, value?: number, strength?: AnyConstraintStrength): ConstraintProperty<unknown, number> {\n    return this.owner.constraintVariable(name, value, strength);\n  };\n\n  StyleSheet.prototype.hasConstraintVariable = function (this: StyleSheet<ConstraintScope>, constraintVariable: ConstraintVariable): boolean {\n    return this.owner.hasConstraintVariable(constraintVariable);\n  };\n\n  StyleSheet.prototype.addConstraintVariable = function (this: StyleSheet<ConstraintScope>, constraintVariable: ConstraintVariable): void {\n    this.owner.addConstraintVariable(constraintVariable);\n  };\n\n  StyleSheet.prototype.removeConstraintVariable = function (this: StyleSheet<ConstraintScope>, constraintVariable: ConstraintVariable): void {\n    this.owner.removeConstraintVariable(constraintVariable);\n  };\n\n  StyleSheet.prototype.setConstraintVariable = function (this: StyleSheet<ConstraintScope>, constraintVariable: ConstraintVariable, state: number): void {\n    this.owner.setConstraintVariable(constraintVariable, state);\n  };\n\n  StyleSheet.prototype.getLook = function <T>(this: StyleSheet, look: Look<T, unknown>, mood?: MoodVector<Feel> | null): T | undefined {\n    const themeContext = this.owner;\n    if (ThemeContext.is(themeContext)) {\n      return themeContext.getLook(look, mood);\n    } else {\n      return void 0;\n    }\n  };\n\n  StyleSheet.prototype.getLookOr = function <T, E>(this: StyleSheet, look: Look<T, unknown>, mood: MoodVector<Feel> | null | E, elseValue?: E): T | E {\n    const themeContext = this.owner;\n    if (ThemeContext.is(themeContext)) {\n      if (arguments.length === 2) {\n        return themeContext.getLookOr(look, mood as E);\n      } else {\n        return themeContext.getLookOr(look, mood as MoodVector<Feel> | null, elseValue!);\n      }\n    } else if (arguments.length === 2) {\n      return mood as E;\n    } else {\n      return elseValue!;\n    }\n  };\n\n  StyleSheet.prototype.applyTheme = function (this: StyleSheet, theme: ThemeMatrix, mood: MoodVector, timing?: AnyTiming | boolean | null): void {\n    if (timing === void 0 || timing === true) {\n      timing = theme.getOr(Look.timing, Mood.ambient, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n    const fasteners = this.fasteners;\n    for (const fastenerName in fasteners) {\n      const fastener = fasteners[fastenerName]!;\n      if (fastener instanceof CssRule) {\n        fastener.applyTheme(theme, mood, timing);\n      }\n    }\n  };\n\n  StyleSheet.prototype.onMount = function (this: StyleSheet): void {\n    _super.prototype.onMount.call(this);\n    this.mountFasteners();\n  };\n\n  StyleSheet.prototype.onUnmount = function (this: StyleSheet): void {\n    this.unmountFasteners();\n    _super.prototype.onUnmount.call(this);\n  };\n\n  StyleSheet.prototype.createStylesheet = function (this: StyleSheet): CSSStyleSheet {\n    return new CSSStyleSheet();\n  };\n\n  StyleSheet.construct = function <F extends StyleSheet<any>>(sheetClass: {prototype: F}, sheet: F | null, owner: FastenerOwner<F>): F {\n    sheet = _super.construct(sheetClass, sheet, owner) as F;\n    (sheet as Mutable<typeof sheet>).fasteners = null;\n    (sheet as Mutable<typeof sheet>).decoherent = null;\n    (sheet as Mutable<typeof sheet>).stylesheet = null as unknown as CSSStyleSheet;\n    FastenerContext.init(sheet);\n    return sheet;\n  };\n\n  StyleSheet.define = function <O>(className: string, descriptor: StyleSheetDescriptor<O>): StyleSheetFactory<StyleSheet<any>> {\n    let superClass = descriptor.extends as StyleSheetFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    let css = descriptor.css;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n    delete descriptor.css;\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const sheetClass = superClass.extend(className, descriptor);\n\n    if (typeof css === \"function\") {\n      sheetClass.prototype.initCss = css;\n      css = void 0;\n    }\n\n    sheetClass.construct = function (sheetClass: {prototype: StyleSheet<any>}, sheet: StyleSheet<O> | null, owner: O): StyleSheet<O> {\n      sheet = superClass!.construct(sheetClass, sheet, owner);\n\n      if (affinity !== void 0) {\n        sheet.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        sheet.initInherits(inherits);\n      }\n\n      //let cssText: string | undefined;\n      //if (css !== void 0) {\n      //  cssText = css as string;\n      //} else if (sheet.initCss !== void 0) {\n      //  cssText = sheet.initCss();\n      //}\n\n      (sheet as Mutable<typeof sheet>).stylesheet = sheet.createStylesheet();\n      if (sheet.initStylesheet !== void 0) {\n        sheet.initStylesheet(sheet.stylesheet);\n      }\n\n      return sheet;\n    };\n\n    return sheetClass;\n  };\n\n  return StyleSheet;\n})(Fastener);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, Creatable} from \"@swim/util\";\nimport {Provider} from \"@swim/component\";\nimport {R2Box, Transform} from \"@swim/math\";\nimport {AnyView, ViewInit, ViewFactory, ViewClass, ViewCreator, View, ModalService} from \"@swim/view\";\nimport {DomService} from \"../service/DomService\";\nimport {DomProvider} from \"../service/DomProvider\";\nimport type {NodeViewObserver} from \"./NodeViewObserver\";\nimport {TextView} from \"../\"; // forward import\nimport {ViewElement, ElementView} from \"../\"; // forward import\n\n/** @public */\nexport type ViewNodeType<V extends NodeView> =\n  V extends {readonly node: infer N} ? N : never;\n\n/** @public */\nexport interface ViewNode extends Node {\n  view?: NodeView;\n}\n\n/** @public */\nexport type AnyNodeView<V extends NodeView = NodeView> = AnyView<V> | ViewNodeType<V>;\n\n/** @public */\nexport interface NodeViewInit extends ViewInit {\n  text?: string;\n}\n\n/** @public */\nexport interface NodeViewFactory<V extends NodeView = NodeView, U = AnyNodeView<V>> extends ViewFactory<V, U> {\n  fromNode(node: ViewNodeType<V>): V\n}\n\n/** @public */\nexport interface NodeViewClass<V extends NodeView = NodeView, U = AnyNodeView<V>> extends ViewClass<V, U>, NodeViewFactory<V, U> {\n}\n\n/** @public */\nexport interface NodeViewConstructor<V extends NodeView = NodeView, U = AnyNodeView<V>> extends NodeViewClass<V, U> {\n  new(node: ViewNodeType<V>): V;\n}\n\n/** @public */\nexport class NodeView extends View {\n  constructor(node: Node) {\n    super();\n    this.node = node;\n    (node as ViewNode).view = this;\n  }\n\n  override readonly observerType?: Class<NodeViewObserver>;\n\n  readonly node: Node;\n\n  override setChild<V extends View>(key: string, newChild: V): View | null;\n  override setChild<F extends ViewCreator<F>>(key: string, factory: F): View | null;\n  override setChild(key: string, newChild: AnyView | Node | null): View | null;\n  override setChild(key: string, newChild: AnyView | Node | null): View | null {\n    const oldChild = this.getChild(key);\n    let target: View | null;\n\n    if (newChild instanceof Node) {\n      newChild = NodeView.fromNode(newChild);\n    } else if (newChild !== null) {\n      newChild = View.fromAny(newChild);\n    }\n\n    if (oldChild !== null && newChild !== null && oldChild !== newChild) { // replace\n      newChild.remove();\n      target = oldChild.nextSibling;\n\n      if ((oldChild.flags & View.RemovingFlag) === 0) {\n        oldChild.setFlags(oldChild.flags | View.RemovingFlag);\n        this.willRemoveChild(oldChild);\n        oldChild.detachParent(this);\n        this.removeChildMap(oldChild);\n        this.onRemoveChild(oldChild);\n        this.didRemoveChild(oldChild);\n        oldChild.setKey(void 0);\n        oldChild.setFlags(oldChild.flags & ~View.RemovingFlag);\n      }\n\n      newChild.setKey(oldChild.key);\n      this.willInsertChild(newChild, target);\n      if (newChild instanceof NodeView) {\n        if (oldChild instanceof NodeView) {\n          this.node.replaceChild(newChild.node, oldChild.node);\n        } else if (target !== null) {\n          let targetNode: Node | null = null;\n          let next: View | null = target;\n          do {\n            if (next instanceof NodeView) {\n              targetNode = next.node;\n              break;\n            }\n            next = next.nextSibling;\n          } while (next !== null);\n          this.node.insertBefore(newChild.node, targetNode);\n        } else {\n          this.node.appendChild(newChild.node);\n        }\n      } else if (oldChild instanceof NodeView) {\n        this.node.removeChild(oldChild.node);\n      }\n      this.insertChildMap(newChild);\n      newChild.attachParent(this, target);\n      this.onInsertChild(newChild, target);\n      this.didInsertChild(newChild, target);\n      newChild.cascadeInsert();\n    } else if (newChild !== oldChild || newChild !== null && newChild.key !== key) {\n      if (oldChild !== null) { // remove\n        target = oldChild.nextSibling;\n        if ((oldChild.flags & View.RemovingFlag) === 0) {\n          oldChild.setFlags(oldChild.flags | View.RemovingFlag);\n          this.willRemoveChild(oldChild);\n          oldChild.detachParent(this);\n          this.removeChildMap(oldChild);\n          if (oldChild instanceof NodeView) {\n            this.node.removeChild(oldChild.node);\n          }\n          this.onRemoveChild(oldChild);\n          this.didRemoveChild(oldChild);\n          oldChild.setKey(void 0);\n          oldChild.setFlags(oldChild.flags & ~View.RemovingFlag);\n        }\n      } else {\n        target = null;\n      }\n\n      if (newChild !== null) { // insert\n        newChild.remove();\n\n        newChild.setKey(key);\n        this.willInsertChild(newChild, target);\n        if (newChild instanceof NodeView) {\n          let targetNode: Node | null = null;\n          if (target !== null) {\n            let next: View | null = target;\n            do {\n              if (next instanceof NodeView) {\n                targetNode = next.node;\n                break;\n              }\n              next = next.nextSibling;\n            } while (next !== null);\n          }\n          this.node.insertBefore(newChild.node, targetNode);\n        }\n        this.insertChildMap(newChild);\n        newChild.attachParent(this, target);\n        this.onInsertChild(newChild, target);\n        this.didInsertChild(newChild, target);\n        newChild.cascadeInsert();\n      }\n    }\n\n    return oldChild;\n  }\n\n  override appendChild<V extends View>(child: V, key?: string): V;\n  override appendChild<F extends ViewCreator<F>>(factory: F, key?: string): InstanceType<F>;\n  override appendChild(child: AnyView | Node, key?: string): View;\n  override appendChild(child: AnyView | Node, key?: string): View {\n    if (child instanceof Node) {\n      child = NodeView.fromNode(child);\n    } else {\n      child = View.fromAny(child);\n    }\n\n    child.remove();\n    if (key !== void 0) {\n      this.removeChild(key);\n    }\n\n    child.setKey(key);\n    this.willInsertChild(child, null);\n    if (child instanceof NodeView) {\n      this.node.appendChild(child.node);\n    }\n    this.insertChildMap(child);\n    child.attachParent(this, null);\n    this.onInsertChild(child, null);\n    this.didInsertChild(child, null);\n    child.cascadeInsert();\n\n    return child;\n  }\n\n  override prependChild<V extends View>(child: V, key?: string): V;\n  override prependChild<F extends ViewCreator<F>>(factory: F, key?: string): InstanceType<F>;\n  override prependChild(child: AnyView | Node, key?: string): View;\n  override prependChild(child: AnyView | Node, key?: string): View {\n    if (child instanceof Node) {\n      child = NodeView.fromNode(child);\n    } else {\n      child = View.fromAny(child);\n    }\n\n    child.remove();\n    if (key !== void 0) {\n      this.removeChild(key);\n    }\n    const target = this.firstChild;\n\n    child.setKey(key);\n    this.willInsertChild(child, target);\n    if (child instanceof NodeView) {\n      this.node.insertBefore(child.node, this.node.firstChild);\n    }\n    this.insertChildMap(child);\n    child.attachParent(this, target);\n    this.onInsertChild(child, target);\n    this.didInsertChild(child, target);\n    child.cascadeInsert();\n\n    return child;\n  }\n\n  override insertChild<V extends View>(child: V, target: View | Node | null, key?: string): V;\n  override insertChild<F extends ViewCreator<F>>(factory: F, target: View | null, key?: string): InstanceType<F>;\n  override insertChild(child: AnyView | Node, target: View | Node | null, key?: string): View;\n  override insertChild(child: AnyView | Node, target: View | Node | null, key?: string): View {\n    if (target instanceof View && target.parent !== this || target instanceof Node && target.parentNode !== this.node) {\n      throw new TypeError(\"\" + target);\n    }\n\n    if (child instanceof Node) {\n      child = NodeView.fromNode(child);\n    } else {\n      child = View.fromAny(child);\n    }\n\n    child.remove();\n    if (key !== void 0) {\n      this.removeChild(key);\n    }\n\n    let targetView: View | null;\n    let targetNode: Node | null;\n    if (target instanceof Node) {\n      targetView = null;\n      targetNode = target;\n      let next: ViewNode | null = target;\n      do {\n        if (next.view !== void 0) {\n          targetView = next.view;\n          break;\n        }\n        next = next.nextSibling;\n      } while (next !== null);\n    } else {\n      targetView = target;\n      targetNode = null;\n    }\n\n    child.setKey(key);\n    this.willInsertChild(child, targetView);\n    if (child instanceof NodeView) {\n      if (targetNode === null && targetView !== null) {\n        let next: View | null = targetView;\n        do {\n          if (next instanceof NodeView) {\n            targetNode = next.node;\n            break;\n          }\n          next = next.nextSibling;\n        } while (next !== null);\n      }\n      this.node.insertBefore(child.node, targetNode);\n    }\n    this.insertChildMap(child);\n    child.attachParent(this, targetView);\n    this.onInsertChild(child, targetView);\n    this.didInsertChild(child, targetView);\n    child.cascadeInsert();\n\n    return child;\n  }\n\n  /** @internal */\n  injectChild<V extends NodeView>(child: V, target: View | Node | null, key?: string): V;\n  /** @internal */\n  injectChild(child: AnyNodeView, target: View | Node | null, key?: string): View;\n  injectChild(child: AnyNodeView, target: View | Node | null, key?: string): View {\n    if (target instanceof View && target.parent !== this || target instanceof Node && target.parentNode !== this.node) {\n      throw new TypeError(\"\" + target);\n    }\n\n    child = NodeView.fromAny(child);\n\n    if (key !== void 0) {\n      this.removeChild(key);\n    }\n\n    if (target instanceof Node) {\n      let next: ViewNode | null = target;\n      target = null;\n      do {\n        if (next.view !== void 0) {\n          target = next.view;\n          break;\n        }\n        next = next.nextSibling;\n      } while (next !== null);\n    }\n\n    child.setKey(key);\n    this.willInsertChild(child, target);\n    this.insertChildMap(child);\n    child.attachParent(this, target);\n    this.onInsertChild(child, target);\n    this.didInsertChild(child, target);\n    child.cascadeInsert();\n\n    return child;\n  }\n\n  override replaceChild<V extends View>(newChild: View, oldChild: V): V;\n  override replaceChild<V extends View>(newChild: AnyView | Node, oldChild: V): V;\n  override replaceChild(newChild: AnyView | Node, oldChild: View): View {\n    if (oldChild.parent !== this) {\n      throw new TypeError(\"\" + oldChild);\n    }\n\n    if (newChild instanceof Node) {\n      newChild = NodeView.fromNode(newChild);\n    } else {\n      newChild = View.fromAny(newChild);\n    }\n\n    if (newChild !== oldChild) {\n      newChild.remove();\n      const target = oldChild.nextSibling;\n\n      if ((oldChild.flags & View.RemovingFlag) === 0) {\n        oldChild.setFlags(oldChild.flags | View.RemovingFlag);\n        this.willRemoveChild(oldChild);\n        oldChild.detachParent(this);\n        this.removeChildMap(oldChild);\n        this.onRemoveChild(oldChild);\n        this.didRemoveChild(oldChild);\n        oldChild.setKey(void 0);\n        oldChild.setFlags(oldChild.flags & ~View.RemovingFlag);\n      }\n\n      newChild.setKey(oldChild.key);\n      this.willInsertChild(newChild, target);\n      if (newChild instanceof NodeView) {\n        if (oldChild instanceof NodeView) {\n          this.node.replaceChild(newChild.node, oldChild.node);\n        } else if (target !== null) {\n          let targetNode: Node | null = null;\n          let next: View | null = target;\n          do {\n            if (next instanceof NodeView) {\n              targetNode = next.node;\n              break;\n            }\n            next = next.nextSibling;\n          } while (next !== null);\n          this.node.insertBefore(newChild.node, targetNode);\n        } else {\n          this.node.appendChild(newChild.node);\n        }\n      } else if (oldChild instanceof NodeView) {\n        this.node.removeChild(oldChild.node);\n      }\n      this.insertChildMap(newChild);\n      newChild.attachParent(this, target);\n      this.onInsertChild(newChild, target);\n      this.didInsertChild(newChild, target);\n      newChild.cascadeInsert();\n    }\n\n    return oldChild;\n  }\n\n  override removeChild<V extends View | Node>(child: V): V;\n  override removeChild(key: string | View): View | null;\n  override removeChild(key: string | View | Node): View | Node | null;\n  override removeChild(key: string | View | ViewNode): View | Node | null {\n    let child: View | null;\n    if (typeof key === \"string\") {\n      child = this.getChild(key);\n      if (child === null) {\n        return null;\n      }\n    } else if (key instanceof Node) {\n      if (key.parentNode !== this.node) {\n        throw new Error(\"not a child node\");\n      }\n      if (key.view !== void 0) {\n        child = key.view;\n      } else {\n        this.node.removeChild(key);\n        return key;\n      }\n    } else {\n      child = key;\n      if (child.parent !== this) {\n        throw new Error(\"not a child\");\n      }\n    }\n\n    if ((child.flags & View.RemovingFlag) === 0) {\n      child.setFlags(child.flags | View.RemovingFlag);\n      this.willRemoveChild(child);\n      child.detachParent(this);\n      this.removeChildMap(child);\n      if (child instanceof NodeView) {\n        this.node.removeChild(child.node);\n      }\n      this.onRemoveChild(child);\n      this.didRemoveChild(child);\n      child.setKey(void 0);\n      child.setFlags(child.flags & ~View.RemovingFlag);\n    }\n\n    return child;\n  }\n\n  override removeChildren(): void {\n    let child: View | null;\n    while (child = this.lastChild, child !== null) {\n      if ((child.flags & View.RemovingFlag) !== 0) {\n        throw new Error(\"inconsistent removeChildren\");\n      }\n      this.willRemoveChild(child);\n      child.detachParent(this);\n      this.removeChildMap(child);\n      if (child instanceof NodeView) {\n        this.node.removeChild(child.node);\n      }\n      this.onRemoveChild(child);\n      this.didRemoveChild(child);\n      child.setKey(void 0);\n      child.setFlags(child.flags & ~View.RemovingFlag);\n    }\n  }\n\n  /** @internal */\n  static isRootView(node: Node): boolean {\n    do {\n      const parentNode: ViewNode | null = node.parentNode;\n      if (parentNode !== null) {\n        const parentView = parentNode.view;\n        if (parentView !== void 0) {\n          return false;\n        }\n        node = parentNode;\n        continue;\n      }\n      break;\n    } while (true);\n    return true;\n  }\n\n  /** @internal */\n  static isNodeMounted(node: Node): boolean {\n    let isConnected: boolean | undefined = node.isConnected;\n    if (typeof isConnected !== \"boolean\") {\n      const ownerDocument = node.ownerDocument;\n      if (ownerDocument !== null) {\n        const position = ownerDocument.compareDocumentPosition(node);\n        isConnected = (position & node.DOCUMENT_POSITION_DISCONNECTED) === 0;\n      } else {\n        isConnected = false;\n      }\n    }\n    return isConnected;\n  }\n\n  /** @internal */\n  static mount(view: NodeView): void {\n    if (view.parent === null) {\n      const parentNode = view.node.parentNode as ViewNode | null;\n      const parentView = parentNode !== null && parentNode.view !== void 0 ? parentNode.view : null;\n      if (parentView !== null) {\n        let targetView: View | null = null;\n        let targetNode: ViewNode | null = view.node.nextSibling;\n        while (targetNode !== null) {\n          if (targetNode.view !== void 0) {\n            targetView = targetNode.view;\n            break;\n          }\n          targetNode = targetNode.nextSibling;\n        }\n        view.attachParent(parentView, targetView);\n        view.cascadeInsert();\n      } else {\n        view.mount();\n      }\n    }\n  }\n\n  /** @internal */\n  override mount(): void {\n    if (!this.mounted && NodeView.isNodeMounted(this.node) && NodeView.isRootView(this.node)) {\n      this.cascadeMount();\n      this.cascadeInsert();\n    }\n  }\n\n  @Provider({\n    extends: DomProvider,\n    type: DomService,\n    observes: false,\n    service: DomService.global(),\n  })\n  declare readonly domProvider: DomProvider<this>;\n\n  text(): string | undefined;\n  text(value: string | null | undefined): this;\n  text(value?: string | null | undefined): string | undefined | this {\n    if (arguments.length === 0) {\n      value = this.node.textContent;\n      if (value === null) {\n        value = void 0;\n      }\n      return value;\n    } else {\n      if (value === void 0) {\n        value = null;\n      }\n      this.node.textContent = value;\n      return this;\n    }\n  }\n\n  override get parentTransform(): Transform {\n    return Transform.identity();\n  }\n\n  override get clientBounds(): R2Box {\n    const range = document.createRange();\n    range.selectNode(this.node);\n    const bounds = range.getBoundingClientRect();\n    range.detach();\n    return new R2Box(bounds.left, bounds.top, bounds.right, bounds.bottom);\n  }\n\n  override get pageBounds(): R2Box {\n    const range = document.createRange();\n    range.selectNode(this.node);\n    const bounds = range.getBoundingClientRect();\n    range.detach();\n    const scrollX = window.pageXOffset;\n    const scrollY = window.pageYOffset;\n    return new R2Box(bounds.left + scrollX, bounds.top + scrollY,\n                     bounds.right + scrollX, bounds.bottom + scrollY);\n  }\n\n  override dispatchEvent(event: Event): boolean {\n    return this.node.dispatchEvent(event);\n  }\n\n  override on(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): this {\n    this.node.addEventListener(type, listener, options);\n    return this;\n  }\n\n  override off(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions | boolean): this {\n    this.node.removeEventListener(type, listener, options);\n    return this;\n  }\n\n  override init(init: NodeViewInit): void {\n    super.init(init);\n    if (init.text !== void 0) {\n      this.text(init.text);\n    }\n  }\n\n  static fromNode<S extends new (node: Node) => InstanceType<S>>(this: S, node: ViewNodeType<InstanceType<S>>): InstanceType<S>;\n  static fromNode(node: Node): NodeView;\n  static fromNode(node: Node): NodeView {\n    let view = (node as ViewNode).view;\n    if (view === void 0) {\n      if (node instanceof Element) {\n        view = ElementView.fromNode(node as ViewElement);\n      } else if (node instanceof Text) {\n        view = TextView.fromNode(node);\n      } else {\n        view = new this(node);\n        this.mount(view);\n      }\n    } else if (!(view instanceof this)) {\n      throw new TypeError(view + \" not an instance of \" + this);\n    }\n    return view;\n  }\n\n  static override fromAny<S extends abstract new (...args: any) => InstanceType<S>>(this: S, value: AnyNodeView<InstanceType<S>>): InstanceType<S>;\n  static override fromAny(value: AnyNodeView): NodeView;\n  static override fromAny(value: AnyNodeView): NodeView {\n    if (value === void 0 || value === null) {\n      return value;\n    } else if (value instanceof View) {\n      if (value instanceof this) {\n        return value;\n      } else {\n        throw new TypeError(value + \" not an instance of \" + this);\n      }\n    } else if (value instanceof Node) {\n      return this.fromNode(value);\n    } else if (Creatable.is(value)) {\n      return value.create();\n    } else {\n      return this.fromInit(value);\n    }\n  }\n}\n\nModalService.insertModalView = function (modalView: NodeView): void {\n  const matteNode = document.body as ViewNode;\n  const matteView = matteNode.view;\n  if (matteView !== void 0) {\n    matteView.appendChild(modalView);\n  } else if (modalView instanceof NodeView) {\n    matteNode.appendChild(modalView.node);\n    modalView.mount();\n  } else {\n    throw new TypeError(\"\" + modalView);\n  }\n};\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, Creatable} from \"@swim/util\";\nimport {View} from \"@swim/view\";\nimport {AnyNodeView, NodeViewInit, NodeViewConstructor, NodeView} from \"../node/NodeView\";\nimport type {TextViewObserver} from \"./TextViewObserver\";\n\n/** @public */\nexport interface ViewText extends Text {\n  view?: TextView;\n}\n\n/** @public */\nexport type AnyTextView<V extends TextView = TextView> = AnyNodeView<V> | string;\n\n/** @public */\nexport interface TextViewInit extends NodeViewInit {\n}\n\n/** @public */\nexport interface TextViewConstructor<V extends TextView = TextView, U = AnyTextView<V>> extends NodeViewConstructor<V, U> {\n  new(node: Text): V;\n}\n\n/** @public */\nexport class TextView extends NodeView {\n  constructor(node: Text) {\n    super(node);\n  }\n\n  override readonly observerType?: Class<TextViewObserver>;\n\n  override readonly node!: Text;\n\n  override init(init: TextViewInit): void {\n    super.init(init);\n  }\n\n  static override create<S extends new (node: Text) => InstanceType<S>>(this: S, text?: string): InstanceType<S>;\n  static override create(text?: string): TextView;\n  static override create(text?: string): TextView {\n    if (text === void 0) {\n      text = \"\";\n    }\n    const node = document.createTextNode(text);\n    return new this(node);\n  }\n\n  static override fromNode<S extends new (node: Text) => InstanceType<S>>(this: S, node: Text): InstanceType<S>;\n  static override fromNode(node: Text): TextView;\n  static override fromNode(node: Text): TextView {\n    let view = (node as ViewText).view;\n    if (view === void 0) {\n      view = new this(node);\n    } else if (!(view instanceof this)) {\n      throw new TypeError(view + \" not an instance of \" + this);\n    }\n    return view;\n  }\n\n  static override fromAny<S extends abstract new (...args: any) => InstanceType<S>>(this: S, value: AnyTextView<InstanceType<S>>): InstanceType<S>;\n  static override fromAny(value: AnyTextView | string): TextView;\n  static override fromAny(value: AnyTextView | string): TextView {\n    if (value === void 0 || value === null) {\n      return value;\n    } else if (value instanceof View) {\n      if (value instanceof this) {\n        return value;\n      } else {\n        throw new TypeError(value + \" not an instance of \" + this);\n      }\n    } else if (value instanceof Node) {\n      return this.fromNode(value);\n    } else if (typeof value === \"string\") {\n      return this.create(value);\n    } else if (Creatable.is(value)) {\n      return value.create();\n    } else {\n      return this.fromInit(value);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, Arrays, Creatable, ObserverType} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {R2Box} from \"@swim/math\";\nimport {ThemeMatrix, Theme} from \"@swim/theme\";\nimport {ToAttributeString, ToStyleString, ToCssValue} from \"@swim/style\";\nimport {View, Viewport} from \"@swim/view\";\nimport type {StyleContext} from \"../css/StyleContext\";\nimport {\n  ViewNodeType,\n  AnyNodeView,\n  NodeViewInit,\n  NodeViewFactory,\n  NodeViewClass,\n  NodeViewConstructor,\n  NodeView,\n} from \"../node/NodeView\";\nimport type {\n  ElementViewObserver,\n  ElementViewObserverCache,\n  ViewWillSetAttribute,\n  ViewDidSetAttribute,\n  ViewWillSetStyle,\n  ViewDidSetStyle,\n} from \"./ElementViewObserver\";\nimport {DomService} from \"../\"; // forward import\nimport {HtmlView} from \"../\"; // forward import\nimport {SvgView} from \"../\"; // forward import\n\n/** @public */\nexport interface ViewElement extends Element, ElementCSSInlineStyle {\n  view?: ElementView;\n}\n\n/** @public */\nexport type AnyElementView<V extends ElementView = ElementView> = AnyNodeView<V>;\n\n/** @public */\nexport interface ElementViewInit extends NodeViewInit {\n  id?: string;\n  classList?: string[];\n}\n\n/** @public */\nexport interface ElementViewFactory<V extends ElementView = ElementView, U = AnyElementView<V>> extends NodeViewFactory<V, U> {\n  fromTag(tag: string): V;\n}\n\n/** @public */\nexport interface ElementViewClass<V extends ElementView = ElementView, U = AnyElementView<V>> extends NodeViewClass<V, U>, ElementViewFactory<V, U> {\n  readonly tag?: string;\n  readonly namespace?: string;\n}\n\n/** @public */\nexport interface ElementViewConstructor<V extends ElementView = ElementView, U = AnyElementView<V>> extends NodeViewConstructor<V, U>, ElementViewClass<V, U> {\n}\n\n/** @public */\nexport class ElementView extends NodeView implements StyleContext {\n  constructor(node: Element) {\n    super(node);\n    this.initElement(node);\n  }\n\n  override readonly observerType?: Class<ElementViewObserver>;\n\n  override readonly node!: Element & ElementCSSInlineStyle;\n\n  protected initElement(node: Element): void {\n    const themeName = node.getAttribute(\"swim-theme\");\n    if (themeName !== null && themeName !== \"\") {\n      let theme: ThemeMatrix | undefined;\n      if (themeName === \"auto\") {\n        const viewport = Viewport.detect();\n        const colorScheme = viewport.colorScheme;\n        if (colorScheme === \"dark\") {\n          theme = Theme.dark;\n        } else {\n          theme = Theme.light;\n        }\n      } else if (themeName.indexOf('.') < 0) {\n        theme = (Theme as any)[themeName];\n      } else {\n        theme = DomService.eval(themeName) as ThemeMatrix | undefined;\n      }\n      if (theme instanceof ThemeMatrix) {\n        this.theme.setValue(theme, Affinity.Extrinsic);\n      } else {\n        throw new TypeError(\"unknown swim-theme: \" + themeName);\n      }\n    }\n  }\n\n  /** @internal */\n  protected override mountTheme(): void {\n    super.mountTheme();\n    if (NodeView.isRootView(this.node)) {\n      const themeService = this.themeProvider.service;\n      if (themeService !== void 0 && themeService !== null) {\n        if (this.mood.hasAffinity(Affinity.Intrinsic) && this.mood.value === null) {\n          this.mood.setValue(themeService.mood, Affinity.Intrinsic);\n        }\n        if (this.theme.hasAffinity(Affinity.Intrinsic) && this.theme.value === null) {\n          this.theme.setValue(themeService.theme, Affinity.Intrinsic);\n        }\n      }\n    }\n  }\n\n  getAttribute(attributeName: string): string | null {\n    return this.node.getAttribute(attributeName);\n  }\n\n  setAttribute(attributeName: string, value: unknown): this {\n    this.willSetAttribute(attributeName, value);\n    if (value !== void 0 && value !== null) {\n      this.node.setAttribute(attributeName, ToAttributeString(value));\n    } else {\n      this.node.removeAttribute(attributeName);\n    }\n    this.onSetAttribute(attributeName, value);\n    this.didSetAttribute(attributeName, value);\n    return this;\n  }\n\n  protected willSetAttribute(attributeName: string, value: unknown): void {\n    const observers = this.observerCache.viewWillSetAttributeObservers;\n    if (observers !== void 0) {\n      for (let i = 0, n = observers.length; i < n; i += 1) {\n        const observer = observers[i]!;\n        observer.viewWillSetAttribute(attributeName, value, this);\n      }\n    }\n  }\n\n  protected onSetAttribute(attributeName: string, value: unknown): void {\n    // hook\n  }\n\n  protected didSetAttribute(attributeName: string, value: unknown): void {\n    const observers = this.observerCache.viewDidSetAttributeObservers;\n    if (observers !== void 0) {\n      for (let i = 0, n = observers.length; i < n; i += 1) {\n        const observer = observers[i]!;\n        observer.viewDidSetAttribute(attributeName, value, this);\n      }\n    }\n  }\n\n  getStyle(propertyNames: string | ReadonlyArray<string>): CSSStyleValue | string | undefined {\n    if (typeof CSSStyleValue !== \"undefined\") { // CSS Typed OM support\n      const style = this.node.attributeStyleMap;\n      if (typeof propertyNames === \"string\") {\n        try {\n          return style.get(propertyNames);\n        } catch (e) {\n          return void 0;\n        }\n      } else {\n        for (let i = 0, n = propertyNames.length; i < n; i += 1) {\n          const value = style.get(propertyNames[i]!);\n          if (value !== void 0) {\n            return value;\n          }\n        }\n        return \"\";\n      }\n    } else {\n      const style = this.node.style;\n      if (typeof propertyNames === \"string\") {\n        return style.getPropertyValue(propertyNames);\n      } else {\n        for (let i = 0, n = propertyNames.length; i < n; i += 1) {\n          const value = style.getPropertyValue(propertyNames[i]!);\n          if (value.length !== 0) {\n            return value;\n          }\n        }\n        return \"\";\n      }\n    }\n  }\n\n  setStyle(propertyName: string, value: unknown, priority?: string): this {\n    this.willSetStyle(propertyName, value, priority);\n    if (typeof CSSStyleValue !== \"undefined\") { // CSS Typed OM support\n      if (value !== void 0 && value !== null) {\n        const cssValue = ToCssValue(value);\n        if (cssValue !== null) {\n          try {\n            this.node.attributeStyleMap.set(propertyName, cssValue);\n          } catch (e) {\n            // swallow\n          }\n        } else {\n          this.node.style.setProperty(propertyName, ToStyleString(value), priority);\n        }\n      } else {\n        this.node.attributeStyleMap.delete(propertyName);\n      }\n    } else {\n      if (value !== void 0 && value !== null) {\n        this.node.style.setProperty(propertyName, ToStyleString(value), priority);\n      } else {\n        this.node.style.removeProperty(propertyName);\n      }\n    }\n    this.onSetStyle(propertyName, value, priority);\n    this.didSetStyle(propertyName, value, priority);\n    return this;\n  }\n\n  protected willSetStyle(propertyName: string, value: unknown, priority: string | undefined): void {\n    const observers = this.observerCache.viewWillSetStyleObservers;\n    if (observers !== void 0) {\n      for (let i = 0, n = observers.length; i < n; i += 1) {\n        const observer = observers[i]!;\n        observer.viewWillSetStyle(propertyName, value, priority, this);\n      }\n    }\n  }\n\n  protected onSetStyle(propertyName: string, value: unknown, priority: string | undefined): void {\n    // hook\n  }\n\n  protected didSetStyle(propertyName: string, value: unknown, priority: string | undefined): void {\n    const observers = this.observerCache.viewDidSetStyleObservers;\n    if (observers !== void 0) {\n      for (let i = 0, n = observers.length; i < n; i += 1) {\n        const observer = observers[i]!;\n        observer.viewDidSetStyle(propertyName, value, priority, this);\n      }\n    }\n  }\n\n  id(): string | undefined;\n  id(value: string | undefined): this;\n  id(value?: string | undefined): string | undefined | this {\n    if (arguments.length == 0) {\n      const id = this.getAttribute(\"id\");\n      return id !== null ? id : void 0;\n    } else {\n      this.setAttribute(\"id\", value);\n      return this;\n    }\n  }\n\n  className(): string | undefined;\n  className(value: string | undefined): this;\n  className(value?: string | undefined): string | undefined | this {\n    if (arguments.length === 0) {\n      const className = this.getAttribute(\"class\");\n      return className !== null ? className : void 0;\n    } else {\n      this.setAttribute(\"class\", value);\n      return this;\n    }\n  }\n\n  get classList(): DOMTokenList {\n    return this.node.classList;\n  }\n\n  hasClass(className: string): boolean {\n    return this.node.classList.contains(className);\n  }\n\n  addClass(...classNames: string[]): this {\n    const classList = this.node.classList;\n    for (let i = 0, n = classNames.length; i < n; i += 1) {\n      classList.add(classNames[i]!);\n    }\n    return this;\n  }\n\n  removeClass(...classNames: string[]): this {\n    const classList = this.node.classList;\n    for (let i = 0, n = classNames.length; i < n; i += 1) {\n      classList.remove(classNames[i]!);\n    }\n    return this;\n  }\n\n  toggleClass(className: string, state?: boolean): this {\n    const classList = this.node.classList;\n    if (state === void 0) {\n      classList.toggle(className);\n    } else if (state === true) {\n      classList.add(className);\n    } else if (state === false) {\n      classList.remove(className);\n    }\n    return this;\n  }\n\n  override get clientBounds(): R2Box {\n    const bounds = this.node.getBoundingClientRect();\n    return new R2Box(bounds.left, bounds.top, bounds.right, bounds.bottom);\n  }\n\n  override get pageBounds(): R2Box {\n    const bounds = this.node.getBoundingClientRect();\n    const scrollX = window.pageXOffset;\n    const scrollY = window.pageYOffset;\n    return new R2Box(bounds.left + scrollX, bounds.top + scrollY,\n                     bounds.right + scrollX, bounds.bottom + scrollY);\n  }\n\n  override on<K extends keyof ElementEventMap>(type: K, listener: (this: Element, event: ElementEventMap[K]) => unknown,\n                                               options?: AddEventListenerOptions | boolean): this;\n  override on(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): this;\n  override on(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): this {\n    this.node.addEventListener(type, listener, options);\n    return this;\n  }\n\n  override off<K extends keyof ElementEventMap>(type: K, listener: (this: Element, event: ElementEventMap[K]) => unknown,\n                                                options?: EventListenerOptions | boolean): this;\n  override off(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions | boolean): this;\n  override off(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions | boolean): this {\n    this.node.removeEventListener(type, listener, options);\n    return this;\n  }\n\n  /** @internal */\n  override readonly observerCache!: ElementViewObserverCache<this>;\n\n  protected override onObserve(observer: ObserverType<this>): void {\n    super.onObserve(observer);\n    if (observer.viewWillSetAttribute !== void 0) {\n      this.observerCache.viewWillSetAttributeObservers = Arrays.inserted(observer as ViewWillSetAttribute, this.observerCache.viewWillSetAttributeObservers);\n    }\n    if (observer.viewDidSetAttribute !== void 0) {\n      this.observerCache.viewDidSetAttributeObservers = Arrays.inserted(observer as ViewDidSetAttribute, this.observerCache.viewDidSetAttributeObservers);\n    }\n    if (observer.viewWillSetStyle !== void 0) {\n      this.observerCache.viewWillSetStyleObservers = Arrays.inserted(observer as ViewWillSetStyle, this.observerCache.viewWillSetStyleObservers);\n    }\n    if (observer.viewDidSetStyle !== void 0) {\n      this.observerCache.viewDidSetStyleObservers = Arrays.inserted(observer as ViewDidSetStyle, this.observerCache.viewDidSetStyleObservers);\n    }\n  }\n\n  protected override onUnobserve(observer: ObserverType<this>): void {\n    super.onUnobserve(observer);\n    if (observer.viewWillSetAttribute !== void 0) {\n      this.observerCache.viewWillSetAttributeObservers = Arrays.removed(observer as ViewWillSetAttribute, this.observerCache.viewWillSetAttributeObservers);\n    }\n    if (observer.viewDidSetAttribute !== void 0) {\n      this.observerCache.viewDidSetAttributeObservers = Arrays.removed(observer as ViewDidSetAttribute, this.observerCache.viewDidSetAttributeObservers);\n    }\n    if (observer.viewWillSetStyle !== void 0) {\n      this.observerCache.viewWillSetStyleObservers = Arrays.removed(observer as ViewWillSetStyle, this.observerCache.viewWillSetStyleObservers);\n    }\n    if (observer.viewDidSetStyle !== void 0) {\n      this.observerCache.viewDidSetStyleObservers = Arrays.removed(observer as ViewDidSetStyle, this.observerCache.viewDidSetStyleObservers);\n    }\n  }\n\n  override init(init: ElementViewInit): void {\n    super.init(init);\n    if (init.id !== void 0) {\n      this.id(init.id);\n    }\n    if (init.classList !== void 0) {\n      this.addClass(...init.classList);\n    }\n  }\n\n  /** @internal */\n  static readonly tag?: string;\n\n  /** @internal */\n  static readonly namespace?: string;\n\n  static override create<S extends abstract new (...args: any) => InstanceType<S>>(this: S): InstanceType<S>;\n  static override create(): ElementView;\n  static override create(): ElementView {\n    let tag = this.tag;\n    if (tag === void 0) {\n      tag = \"div\";\n    }\n    return this.fromTag(tag);\n  }\n\n  static fromTag<S extends abstract new (...args: any) => InstanceType<S>>(this: S, tag: string, namespace?: string): InstanceType<S>;\n  static fromTag(tag: string, namespace?: string): ElementView;\n  static fromTag(tag: string, namespace?: string): ElementView {\n    if (namespace === void 0) {\n      if (tag === \"svg\") {\n        namespace = SvgView.namespace;\n      }\n    }\n    let node: Element;\n    if (namespace !== void 0) {\n      node = document.createElementNS(namespace, tag);\n    } else {\n      node = document.createElement(tag);\n    }\n    return this.fromNode(node);\n  }\n\n  static override fromNode<S extends new (node: Element) => InstanceType<S>>(this: S, node: ViewNodeType<InstanceType<S>>): InstanceType<S>;\n  static override fromNode(node: Element): ElementView;\n  static override fromNode(node: Element): ElementView {\n    let view = (node as ViewElement).view;\n    if (view === void 0) {\n      if (node instanceof HTMLElement) {\n        view = HtmlView.fromNode(node);\n      } else if (node instanceof SVGElement) {\n        view = SvgView.fromNode(node);\n      } else {\n        view = new this(node);\n        this.mount(view);\n      }\n    } else if (!(view instanceof this)) {\n      throw new TypeError(view + \" not an instance of \" + this);\n    }\n    return view;\n  }\n\n  static override fromAny<S extends abstract new (...args: any) => InstanceType<S>>(this: S, value: AnyElementView<InstanceType<S>>): InstanceType<S>;\n  static override fromAny(value: AnyElementView | string): ElementView;\n  static override fromAny(value: AnyElementView | string): ElementView {\n    if (value === void 0 || value === null) {\n      return value;\n    } else if (value instanceof View) {\n      if (value instanceof this) {\n        return value;\n      } else {\n        throw new TypeError(value + \" not an instance of \" + this);\n      }\n    } else if (value instanceof Node) {\n      return this.fromNode(value);\n    } else if (typeof value === \"string\") {\n      return this.fromTag(value);\n    } else if (Creatable.is(value)) {\n      return value.create();\n    } else {\n      return this.fromInit(value);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, AnyTiming, Timing, Creatable, InitType} from \"@swim/util\";\nimport {Affinity, MemberAnimatorInit} from \"@swim/component\";\nimport {Transform} from \"@swim/math\";\nimport {Look, Mood, MoodVector, ThemeMatrix} from \"@swim/theme\";\nimport {ViewFlags, AnyView, ViewCreator, View} from \"@swim/view\";\nimport {AttributeAnimator} from \"../animator/AttributeAnimator\";\nimport {StyleMapInit, StyleMap} from \"../css/StyleMap\";\nimport type {ViewNodeType} from \"../node/NodeView\";\nimport {\n  AnyElementView,\n  ElementViewInit,\n  ElementViewFactory,\n  ElementViewClass,\n  ElementViewConstructor,\n  ElementView,\n} from \"../element/ElementView\";\nimport type {HtmlViewObserver} from \"./HtmlViewObserver\";\nimport {StyleView} from \"./\"; // forward import\nimport {SvgView} from \"../\"; // forward import\n\n/** @public */\nexport interface ViewHtml extends HTMLElement {\n  view?: HtmlView;\n}\n\n/** @public */\nexport type AnyHtmlView<V extends HtmlView = HtmlView> = AnyElementView<V> | keyof HtmlViewTagMap;\n\n/** @public */\nexport interface HtmlViewInit extends ElementViewInit {\n  attributes?: HtmlViewAttributesInit;\n  style?: HtmlViewStyleInit;\n}\n\n/** @public */\nexport interface HtmlViewAttributesInit {\n  autocomplete?: MemberAnimatorInit<HtmlView, \"autocomplete\">;\n  checked?: MemberAnimatorInit<HtmlView, \"checked\">;\n  colspan?: MemberAnimatorInit<HtmlView, \"colspan\">;\n  disabled?: MemberAnimatorInit<HtmlView, \"disabled\">;\n  placeholder?: MemberAnimatorInit<HtmlView, \"placeholder\">;\n  rowspan?: MemberAnimatorInit<HtmlView, \"rowspan\">;\n  selected?: MemberAnimatorInit<HtmlView, \"selected\">;\n  title?: MemberAnimatorInit<HtmlView, \"title\">;\n  type?: MemberAnimatorInit<HtmlView, \"type\">;\n  value?: MemberAnimatorInit<HtmlView, \"value\">;\n}\n\n/** @public */\nexport interface HtmlViewStyleInit extends StyleMapInit {\n}\n\n/** @public */\nexport interface HtmlViewTagMap {\n  a: HtmlView;\n  abbr: HtmlView;\n  address: HtmlView;\n  area: HtmlView;\n  article: HtmlView;\n  aside: HtmlView;\n  audio: HtmlView;\n  b: HtmlView;\n  base: HtmlView;\n  bdi: HtmlView;\n  bdo: HtmlView;\n  blockquote: HtmlView;\n  body: HtmlView;\n  br: HtmlView;\n  button: HtmlView;\n  canvas: HtmlView;\n  caption: HtmlView;\n  cite: HtmlView;\n  code: HtmlView;\n  col: HtmlView;\n  colgroup: HtmlView;\n  data: HtmlView;\n  datalist: HtmlView;\n  dd: HtmlView;\n  del: HtmlView;\n  details: HtmlView;\n  dfn: HtmlView;\n  dialog: HtmlView;\n  div: HtmlView;\n  dl: HtmlView;\n  dt: HtmlView;\n  em: HtmlView;\n  embed: HtmlView;\n  fieldset: HtmlView;\n  figcaption: HtmlView;\n  figure: HtmlView;\n  footer: HtmlView;\n  form: HtmlView;\n  h1: HtmlView;\n  h2: HtmlView;\n  h3: HtmlView;\n  h4: HtmlView;\n  h5: HtmlView;\n  h6: HtmlView;\n  head: HtmlView;\n  header: HtmlView;\n  hr: HtmlView;\n  html: HtmlView;\n  i: HtmlView;\n  iframe: HtmlView;\n  img: HtmlView;\n  input: HtmlView;\n  ins: HtmlView;\n  kbd: HtmlView;\n  label: HtmlView;\n  legend: HtmlView;\n  li: HtmlView;\n  link: HtmlView;\n  main: HtmlView;\n  map: HtmlView;\n  mark: HtmlView;\n  meta: HtmlView;\n  meter: HtmlView;\n  nav: HtmlView;\n  noscript: HtmlView;\n  object: HtmlView;\n  ol: HtmlView;\n  optgroup: HtmlView;\n  option: HtmlView;\n  output: HtmlView;\n  p: HtmlView;\n  param: HtmlView;\n  picture: HtmlView;\n  pre: HtmlView;\n  progress: HtmlView;\n  q: HtmlView;\n  rb: HtmlView;\n  rp: HtmlView;\n  rt: HtmlView;\n  rtc: HtmlView;\n  ruby: HtmlView;\n  s: HtmlView;\n  samp: HtmlView;\n  script: HtmlView;\n  section: HtmlView;\n  select: HtmlView;\n  small: HtmlView;\n  slot: HtmlView;\n  source: HtmlView;\n  span: HtmlView;\n  strong: HtmlView;\n  style: StyleView;\n  sub: HtmlView;\n  summary: HtmlView;\n  sup: HtmlView;\n  table: HtmlView;\n  tbody: HtmlView;\n  td: HtmlView;\n  template: HtmlView;\n  textarea: HtmlView;\n  tfoot: HtmlView;\n  th: HtmlView;\n  thead: HtmlView;\n  time: HtmlView;\n  title: HtmlView;\n  tr: HtmlView;\n  track: HtmlView;\n  u: HtmlView;\n  ul: HtmlView;\n  var: HtmlView;\n  video: HtmlView;\n  wbr: HtmlView;\n}\n\n/** @public */\nexport interface HtmlViewFactory<V extends HtmlView = HtmlView, U = AnyHtmlView<V>> extends ElementViewFactory<V, U> {\n}\n\n/** @public */\nexport interface HtmlViewClass<V extends HtmlView = HtmlView, U = AnyHtmlView<V>> extends ElementViewClass<V, U>, HtmlViewFactory<V, U> {\n  readonly tag: string;\n}\n\n/** @public */\nexport interface HtmlViewConstructor<V extends HtmlView = HtmlView, U = AnyHtmlView<V>> extends ElementViewConstructor<V, U>, HtmlViewClass<V, U> {\n  readonly tag: string;\n}\n\n/** @public */\nexport class HtmlView extends ElementView {\n  constructor(node: HTMLElement) {\n    super(node);\n  }\n\n  override readonly observerType?: Class<HtmlViewObserver>;\n\n  override readonly node!: HTMLElement;\n\n  override setChild<V extends View>(key: string, newChild: V): View | null;\n  override setChild<F extends ViewCreator<F>>(key: string, factory: F): View | null;\n  override setChild(key: string, newChild: AnyView | Node | keyof HtmlViewTagMap | null): View | null;\n  override setChild(key: string, newChild: AnyView | Node | keyof HtmlViewTagMap | null): View | null {\n    if (typeof newChild === \"string\") {\n      newChild = HtmlView.fromTag(newChild);\n    }\n    return super.setChild(key, newChild);\n  }\n\n  override appendChild<V extends View>(child: V, key?: string): V;\n  override appendChild<F extends ViewCreator<F>>(factory: F, key?: string): InstanceType<F>;\n  override appendChild<K extends keyof HtmlViewTagMap>(tag: K, key?: string): HtmlViewTagMap[K];\n  override appendChild(child: AnyView | Node | keyof HtmlViewTagMap, key?: string): View;\n  override appendChild(child: AnyView | Node | keyof HtmlViewTagMap, key?: string): View {\n    if (typeof child === \"string\") {\n      child = HtmlView.fromTag(child);\n    }\n    return super.appendChild(child, key);\n  }\n\n  override prependChild<V extends View>(child: V, key?: string): V;\n  override prependChild<F extends ViewCreator<F>>(factory: F, key?: string): InstanceType<F>;\n  override prependChild<K extends keyof HtmlViewTagMap>(tag: K, key?: string): HtmlViewTagMap[K];\n  override prependChild(child: AnyView | Node | keyof HtmlViewTagMap, key?: string): View;\n  override prependChild(child: AnyView | Node | keyof HtmlViewTagMap, key?: string): View {\n    if (typeof child === \"string\") {\n      child = HtmlView.fromTag(child);\n    }\n    return super.prependChild(child, key);\n  }\n\n  override insertChild<V extends View>(child: V, target: View | Node | null, key?: string): V;\n  override insertChild<F extends ViewCreator<F>>(factory: F, target: View | Node | null, key?: string): InstanceType<F>;\n  override insertChild<K extends keyof HtmlViewTagMap>(tag: K, target: View | Node | null, key?: string): HtmlViewTagMap[K];\n  override insertChild(child: AnyView | Node | keyof HtmlViewTagMap, target: View | Node | null, key?: string): View;\n  override insertChild(child: AnyView | Node | keyof HtmlViewTagMap, target: View | Node | null, key?: string): View {\n    if (typeof child === \"string\") {\n      child = HtmlView.fromTag(child);\n    }\n    return super.insertChild(child, target, key);\n  }\n\n  override replaceChild<V extends View>(newChild: View, oldChild: V): V;\n  override replaceChild<V extends View>(newChild: AnyView | Node | keyof HtmlViewTagMap, oldChild: V): V;\n  override replaceChild(newChild: AnyView | Node | keyof HtmlViewTagMap, oldChild: View): View {\n    if (typeof newChild === \"string\") {\n      newChild = HtmlView.fromTag(newChild);\n    }\n    return super.replaceChild(newChild, oldChild);\n  }\n\n  @AttributeAnimator({attributeName: \"autocomplete\", type: String})\n  readonly autocomplete!: AttributeAnimator<this, string>;\n\n  @AttributeAnimator({attributeName: \"checked\", type: Boolean})\n  readonly checked!: AttributeAnimator<this, boolean, boolean | string>;\n\n  @AttributeAnimator({attributeName: \"colspan\", type: Number})\n  readonly colspan!: AttributeAnimator<this, number, number | string>;\n\n  @AttributeAnimator({attributeName: \"disabled\", type: Boolean})\n  readonly disabled!: AttributeAnimator<this, boolean, boolean | string>;\n\n  @AttributeAnimator({attributeName: \"placeholder\", type: String})\n  readonly placeholder!: AttributeAnimator<this, string>;\n\n  @AttributeAnimator({attributeName: \"rowspan\", type: Number})\n  readonly rowspan!: AttributeAnimator<this, number, number | string>;\n\n  @AttributeAnimator({attributeName: \"selected\", type: Boolean})\n  readonly selected!: AttributeAnimator<this, boolean, boolean | string>;\n\n  @AttributeAnimator({attributeName: \"title\", type: String})\n  readonly title!: AttributeAnimator<this, string>;\n\n  @AttributeAnimator({attributeName: \"type\", type: String})\n  readonly type!: AttributeAnimator<this, string>;\n\n  @AttributeAnimator({attributeName: \"value\", type: String})\n  readonly value!: AttributeAnimator<this, string>;\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    if (this.node.hasAttribute(\"swim-theme\")) {\n      this.applyRootTheme(theme, mood, timing);\n    }\n  }\n\n  /** @internal */\n  applyRootTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    const font = theme.getOr(Look.font, Mood.ambient, null);\n    if (font !== null) {\n      if (font.style !== void 0) {\n        this.fontStyle.setState(font.style, void 0, 0);\n      }\n      if (font.variant !== void 0) {\n        this.fontVariant.setState(font.variant, void 0, 0);\n      }\n      if (font.weight !== void 0) {\n        this.fontWeight.setState(font.weight, void 0, 0);\n      }\n      if (font.stretch !== void 0) {\n        this.fontStretch.setState(font.stretch, void 0, 0);\n      }\n      if (font.size !== null) {\n        this.fontSize.setState(font.size, void 0, 0);\n      }\n      if (font.height !== null) {\n        this.lineHeight.setState(font.height, void 0, 0);\n      }\n      this.fontFamily.setState(font.family, void 0, 0);\n    }\n    this.backgroundColor.setState(theme.getOr(Look.backgroundColor, Mood.ambient, null), timing, Affinity.Intrinsic);\n    this.color.setState(theme.getOr(Look.color, Mood.ambient, null), timing, Affinity.Intrinsic);\n  }\n\n  /** @internal */\n  static isPositioned(element: HTMLElement): boolean {\n    const style = window.getComputedStyle(element);\n    return style.position === \"relative\" || style.position === \"absolute\";\n  }\n\n  isPositioned(): boolean {\n    return HtmlView.isPositioned(this.node);\n  }\n\n  /** @internal */\n  static parentTransform(element: HTMLElement): Transform {\n    if (HtmlView.isPositioned(element)) {\n      const dx = element.offsetLeft;\n      const dy = element.offsetTop;\n      if (dx !== 0 || dy !== 0) {\n        return Transform.translate(-dx, -dy);\n      }\n    }\n    return Transform.identity();\n  }\n\n  /** @internal */\n  static pageTransform(element: HTMLElement): Transform {\n    const parentNode = element.parentNode;\n    if (parentNode instanceof HTMLElement) {\n      return HtmlView.pageTransform(parentNode).transform(HtmlView.parentTransform(element));\n    } else {\n      return Transform.identity();\n    }\n  }\n\n  override get parentTransform(): Transform {\n    const transform = this.transform.value;\n    if (transform !== null) {\n      return transform;\n    } else if (this.isPositioned()) {\n      const dx = this.node.offsetLeft;\n      const dy = this.node.offsetTop;\n      if (dx !== 0 || dy !== 0) {\n        return Transform.translate(-dx, -dy);\n      }\n    }\n    return Transform.identity();\n  }\n\n  override get pageTransform(): Transform {\n    const parentView = this.parent;\n    if (parentView !== null) {\n      return parentView.pageTransform.transform(this.parentTransform);\n    } else {\n      const parentNode = this.node.parentNode;\n      if (parentNode instanceof HTMLElement) {\n        return HtmlView.pageTransform(parentNode).transform(this.parentTransform);\n      } else {\n        return Transform.identity();\n      }\n    }\n  }\n\n  override on<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, event: HTMLElementEventMap[K]) => unknown,\n                                                   options?: AddEventListenerOptions | boolean): this;\n  override on(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): this;\n  override on(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): this {\n    this.node.addEventListener(type, listener, options);\n    return this;\n  }\n\n  override off<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, event: HTMLElementEventMap[K]) => unknown,\n                                                    options?: EventListenerOptions | boolean): this;\n  override off(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions | boolean): this;\n  override off(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions | boolean): this {\n    this.node.removeEventListener(type, listener, options);\n    return this;\n  }\n\n  /** @internal */\n  protected initAttributes(init: HtmlViewAttributesInit): void {\n    if (init.autocomplete !== void 0) {\n      this.autocomplete(init.autocomplete);\n    }\n    if (init.checked !== void 0) {\n      this.checked(init.checked);\n    }\n    if (init.colspan !== void 0) {\n      this.colspan(init.colspan);\n    }\n    if (init.disabled !== void 0) {\n      this.disabled(init.disabled);\n    }\n    if (init.placeholder !== void 0) {\n      this.placeholder(init.placeholder);\n    }\n    if (init.rowspan !== void 0) {\n      this.rowspan(init.rowspan);\n    }\n    if (init.selected !== void 0) {\n      this.selected(init.selected);\n    }\n    if (init.title !== void 0) {\n      this.title(init.title);\n    }\n    if (init.type !== void 0) {\n      this.type(init.type);\n    }\n    if (init.value !== void 0) {\n      this.value(init.value);\n    }\n  }\n\n  /** @internal */\n  protected initStyle(init: HtmlViewStyleInit): void {\n    StyleMap.init(this, init);\n  }\n\n  override init(init: HtmlViewInit): void {\n    super.init(init);\n    if (init.attributes !== void 0) {\n      this.initAttributes(init.attributes);\n    }\n    if (init.style !== void 0) {\n      this.initStyle(init.style);\n    }\n  }\n\n  static override readonly tag: string = \"div\";\n\n  static override create<S extends abstract new (...args: any) => InstanceType<S>>(this: S): InstanceType<S>;\n  static override create(): HtmlView;\n  static override create(): HtmlView {\n    return this.fromTag(this.tag);\n  }\n\n  static override fromTag(tag: \"style\"): StyleView;\n  static override fromTag(tag: \"svg\"): SvgView;\n  static override fromTag<S extends abstract new (...args: any) => InstanceType<S>>(this: S, tag: string): InstanceType<S>;\n  static override fromTag(tag: string): HtmlView;\n  static override fromTag(tag: string): ElementView {\n    if (tag === \"style\" && this !== StyleView) {\n      return StyleView.create();\n    } else if (tag === \"svg\") {\n      return SvgView.create();\n    } else {\n      const node = document.createElement(tag);\n      return this.fromNode(node);\n    }\n  }\n\n  static override fromNode<S extends new (node: HTMLElement) => InstanceType<S>>(this: S, node: ViewNodeType<InstanceType<S>>): InstanceType<S>;\n  static override fromNode(node: HTMLElement): HtmlView;\n  static override fromNode(node: HTMLElement): HtmlView {\n    let view = (node as ViewHtml).view;\n    if (view === void 0) {\n      view = new this(node);\n      this.mount(view);\n    } else if (!(view instanceof this)) {\n      throw new TypeError(view + \" not an instance of \" + this);\n    }\n    return view;\n  }\n\n  static override fromAny<S extends abstract new (...args: any) => InstanceType<S>>(this: S, value: AnyHtmlView<InstanceType<S>>): InstanceType<S>;\n  static override fromAny(value: AnyHtmlView | string): HtmlView;\n  static override fromAny(value: AnyHtmlView | string): HtmlView {\n    if (value === void 0 || value === null) {\n      return value;\n    } else if (value instanceof View) {\n      if (value instanceof this) {\n        return value;\n      } else {\n        throw new TypeError(value + \" not an instance of \" + this);\n      }\n    } else if (value instanceof Node) {\n      return this.fromNode(value);\n    } else if (typeof value === \"string\") {\n      return this.fromTag(value);\n    } else if (Creatable.is(value)) {\n      return value.create();\n    } else {\n      return this.fromInit(value);\n    }\n  }\n\n  static forTag<S extends abstract new (...args: any) => InstanceType<S>>(this: S, tag: string): HtmlViewFactory<InstanceType<S>>;\n  static forTag(tag: string): HtmlViewFactory;\n  static forTag(tag: string): HtmlViewFactory {\n    if (tag === this.tag) {\n      return this;\n    } else {\n      return new HtmlViewTagFactory(this, tag);\n    }\n  }\n}\n/** @public */\nexport interface HtmlView extends StyleMap {\n  applyTheme(theme: ThemeMatrix, mood: MoodVector, timing?: AnyTiming | boolean): void;\n  requireUpdate(updateFlags: ViewFlags, immediate?: boolean): void;\n}\nStyleMap.define(HtmlView.prototype);\n\n/** @internal */\nexport class HtmlViewTagFactory<V extends HtmlView> implements HtmlViewFactory<V> {\n  constructor(factory: HtmlViewFactory<V>, tag: string) {\n    this.factory = factory;\n    this.tag = tag;\n  }\n\n  /** @internal */\n  readonly factory: HtmlViewFactory<V>;\n\n  readonly tag: string;\n\n  create(): V {\n    return this.fromTag(this.tag);\n  }\n\n  fromTag(tag: string): V {\n    const node = document.createElement(tag);\n    return this.fromNode(node as ViewNodeType<V>);\n  }\n\n  fromNode(node: ViewNodeType<V>): V {\n    return this.factory.fromNode(node);\n  }\n\n  fromInit(init: InitType<V>): V {\n    let type = init.type;\n    if (type === void 0) {\n      type = this;\n    }\n    const view = type.create() as V;\n    view.init(init);\n    return view;\n  }\n\n  fromAny(value: AnyHtmlView<V>): V {\n    return this.factory.fromAny(value);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class, Timing} from \"@swim/util\";\nimport type {MoodVector, ThemeMatrix} from \"@swim/theme\";\nimport type {StyleContext} from \"../css/StyleContext\";\nimport {StyleSheet} from \"../css/StyleSheet\";\nimport {HtmlViewInit, HtmlView} from \"../html/HtmlView\";\nimport type {StyleViewObserver} from \"./StyleViewObserver\";\n\n/** @public */\nexport interface StyleViewInit extends HtmlViewInit {\n}\n\n/** @public */\nexport class StyleView extends HtmlView implements StyleContext {\n  constructor(node: HTMLStyleElement) {\n    super(node);\n  }\n\n  override readonly observerType?: Class<StyleViewObserver>;\n\n  override readonly node!: HTMLStyleElement;\n\n  @StyleSheet<StyleView>({\n    createStylesheet(): CSSStyleSheet {\n      return this.owner.node.sheet!;\n    },\n  })\n  readonly sheet!: StyleSheet<this>;\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    this.sheet.applyTheme(theme, mood, timing);\n  }\n\n  override init(init: StyleViewInit): void {\n    super.init(init);\n  }\n\n  /** @internal */\n  static override readonly tag: string = \"style\";\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, AnyTiming, Creatable, InitType} from \"@swim/util\";\nimport type {MemberAnimatorInit} from \"@swim/component\";\nimport {AnyLength, Length, AnyTransform, Transform} from \"@swim/math\";\nimport {\n  FontStyle,\n  FontVariant,\n  FontWeight,\n  FontStretch,\n  FontFamily,\n  AnyFont,\n  Font,\n  AnyColor,\n  Color,\n} from \"@swim/style\";\nimport {AnyView, ViewCreator, View} from \"@swim/view\";\nimport {AttributeAnimator} from \"../animator/AttributeAnimator\";\nimport {StyleAnimator} from \"../animator/StyleAnimator\";\nimport type {\n  AlignmentBaseline,\n  CssCursor,\n  FillRule,\n  StrokeLinecap,\n  StrokeLinejoin,\n  SvgPointerEvents,\n  TextAnchor,\n  TouchAction,\n} from \"../css/types\";\nimport type {ViewNodeType} from \"../node/NodeView\";\nimport {\n  AnyElementView,\n  ElementViewInit,\n  ElementViewFactory,\n  ElementViewClass,\n  ElementViewConstructor,\n  ElementView,\n} from \"../element/ElementView\";\nimport type {SvgViewObserver} from \"./SvgViewObserver\";\n\n/** @public */\nexport interface ViewSvg extends SVGElement {\n  view?: SvgView;\n}\n\n/** @public */\nexport type AnySvgView<V extends SvgView = SvgView> = AnyElementView<V> | keyof SvgViewTagMap;\n\n/** @public */\nexport interface SvgViewInit extends ElementViewInit {\n  attributes?: SvgViewAttributesInit;\n  style?: SvgViewStyleInit;\n}\n\n/** @public */\nexport interface SvgViewAttributesInit {\n  alignmentBaseline?: MemberAnimatorInit<SvgView, \"alignmentBaseline\">;\n  clipPath?: MemberAnimatorInit<SvgView, \"clipPath\">;\n  cursor?: MemberAnimatorInit<SvgView, \"cursor\">;\n  cx?: MemberAnimatorInit<SvgView, \"cx\">;\n  cy?: MemberAnimatorInit<SvgView, \"cy\">;\n  d?: MemberAnimatorInit<SvgView, \"d\">;\n  dx?: MemberAnimatorInit<SvgView, \"dx\">;\n  dy?: MemberAnimatorInit<SvgView, \"dy\">;\n  edgeMode?: MemberAnimatorInit<SvgView, \"edgeMode\">;\n  fill?: MemberAnimatorInit<SvgView, \"fill\">;\n  fillRule?: MemberAnimatorInit<SvgView, \"fillRule\">;\n  floodColor?: MemberAnimatorInit<SvgView, \"floodColor\">;\n  floodOpacity?: MemberAnimatorInit<SvgView, \"floodOpacity\">;\n  height?: MemberAnimatorInit<SvgView, \"height\">;\n  in?: MemberAnimatorInit<SvgView, \"in\">;\n  in2?: MemberAnimatorInit<SvgView, \"in2\">;\n  lengthAdjust?: MemberAnimatorInit<SvgView, \"lengthAdjust\">;\n  mode?: MemberAnimatorInit<SvgView, \"mode\">;\n  opacity?: MemberAnimatorInit<SvgView, \"opacity\">;\n  pointerEvents?: MemberAnimatorInit<SvgView, \"pointerEvents\">;\n  points?: MemberAnimatorInit<SvgView, \"points\">;\n  preserveAspectRatio?: MemberAnimatorInit<SvgView, \"preserveAspectRatio\">;\n  r?: MemberAnimatorInit<SvgView, \"r\">;\n  result?: MemberAnimatorInit<SvgView, \"result\">;\n  stdDeviation?: MemberAnimatorInit<SvgView, \"stdDeviation\">;\n  stroke?: MemberAnimatorInit<SvgView, \"stroke\">;\n  strokeDasharray?: MemberAnimatorInit<SvgView, \"strokeDasharray\">;\n  strokeDashoffset?: MemberAnimatorInit<SvgView, \"strokeDashoffset\">;\n  strokeLinecap?: MemberAnimatorInit<SvgView, \"strokeLinecap\">;\n  strokeLinejoin?: MemberAnimatorInit<SvgView, \"strokeLinejoin\">;\n  strokeMiterlimit?: MemberAnimatorInit<SvgView, \"strokeMiterlimit\">;\n  strokeWidth?: MemberAnimatorInit<SvgView, \"strokeWidth\">;\n  textAnchor?: MemberAnimatorInit<SvgView, \"textAnchor\">;\n  textLength?: MemberAnimatorInit<SvgView, \"textLength\">;\n  transform?: MemberAnimatorInit<SvgView, \"transform\">;\n  type?: MemberAnimatorInit<SvgView, \"type\">;\n  values?: MemberAnimatorInit<SvgView, \"values\">;\n  viewBox?: MemberAnimatorInit<SvgView, \"viewBox\">;\n  width?: MemberAnimatorInit<SvgView, \"width\">;\n  x?: MemberAnimatorInit<SvgView, \"x\">;\n  x1?: MemberAnimatorInit<SvgView, \"x1\">;\n  x2?: MemberAnimatorInit<SvgView, \"x2\">;\n  y?: MemberAnimatorInit<SvgView, \"y\">;\n  y1?: MemberAnimatorInit<SvgView, \"y1\">;\n  y2?: MemberAnimatorInit<SvgView, \"y2\">;\n}\n\n/** @public */\nexport interface SvgViewStyleInit {\n  cssTransform?: MemberAnimatorInit<SvgView, \"cssTransform\">;\n  filter?: MemberAnimatorInit<SvgView, \"filter\">;\n  fontFamily?: MemberAnimatorInit<SvgView, \"fontFamily\">;\n  fontSize?: MemberAnimatorInit<SvgView, \"fontSize\">;\n  fontStretch?: MemberAnimatorInit<SvgView, \"fontStretch\">;\n  fontStyle?: MemberAnimatorInit<SvgView, \"fontStyle\">;\n  fontVariant?: MemberAnimatorInit<SvgView, \"fontVariant\">;\n  fontWeight?: MemberAnimatorInit<SvgView, \"fontWeight\">;\n  lineHeight?: MemberAnimatorInit<SvgView, \"lineHeight\">;\n  touchAction?: MemberAnimatorInit<SvgView, \"touchAction\">;\n}\n\n/** @public */\nexport interface SvgViewTagMap {\n  a: SvgView;\n  animate: SvgView;\n  animateMotion: SvgView;\n  animateTransform: SvgView;\n  audio: SvgView;\n  canvas: SvgView;\n  circle: SvgView;\n  clipPath: SvgView;\n  defs: SvgView;\n  desc: SvgView;\n  discard: SvgView;\n  ellipse: SvgView;\n  feBlend: SvgView;\n  feColorMatrix: SvgView;\n  feComponentTransfer: SvgView;\n  feComposite: SvgView;\n  feConvolveMatrix: SvgView;\n  feDiffuseLighting: SvgView;\n  feDisplacementMap: SvgView;\n  feDistantLight: SvgView;\n  feDropShadow: SvgView;\n  feFlood: SvgView;\n  feFuncA: SvgView;\n  feFuncB: SvgView;\n  feFuncG: SvgView;\n  feFuncR: SvgView;\n  feGaussianBlur: SvgView;\n  feImage: SvgView;\n  feMerge: SvgView;\n  feMergeNode: SvgView;\n  feMorphology: SvgView;\n  feOffset: SvgView;\n  fePointLight: SvgView;\n  feSpecularLighting: SvgView;\n  feSpotLight: SvgView;\n  feTile: SvgView;\n  feTurbulence: SvgView;\n  filter: SvgView;\n  foreignObject: SvgView;\n  g: SvgView;\n  iframe: SvgView;\n  image: SvgView;\n  line: SvgView;\n  linearGradient: SvgView;\n  marker: SvgView;\n  mask: SvgView;\n  metadata: SvgView;\n  mpath: SvgView;\n  path: SvgView;\n  pattern: SvgView;\n  polygon: SvgView;\n  polyline: SvgView;\n  radialGradient: SvgView;\n  rect: SvgView;\n  script: SvgView;\n  set: SvgView;\n  stop: SvgView;\n  style: SvgView;\n  svg: SvgView;\n  switch: SvgView;\n  symbol: SvgView;\n  text: SvgView;\n  textPath: SvgView;\n  title: SvgView;\n  tspan: SvgView;\n  unknown: SvgView;\n  use: SvgView;\n  video: SvgView;\n  view: SvgView;\n}\n\n/** @public */\nexport interface SvgViewFactory<V extends SvgView = SvgView, U = AnySvgView<V>> extends ElementViewFactory<V, U> {\n}\n\n/** @public */\nexport interface SvgViewClass<V extends SvgView = SvgView, U = AnySvgView<V>> extends ElementViewClass<V, U>, SvgViewFactory<V, U> {\n  readonly tag: string;\n  readonly namespace: string;\n}\n\n/** @public */\nexport interface SvgViewConstructor<V extends SvgView = SvgView, U = AnySvgView<V>> extends ElementViewConstructor<V, U>, SvgViewClass<V, U> {\n  readonly tag: string;\n  readonly namespace: string;\n}\n\n/** @public */\nexport class SvgView extends ElementView {\n  constructor(node: SVGElement) {\n    super(node);\n  }\n\n  override readonly observerType?: Class<SvgViewObserver>;\n\n  override readonly node!: SVGElement;\n\n  override setChild<V extends View>(key: string, newChild: V): View | null;\n  override setChild<F extends ViewCreator<F>>(key: string, factory: F): View | null;\n  override setChild(key: string, newChild: AnyView | Node | keyof SvgViewTagMap | null): View | null;\n  override setChild(key: string, newChild: AnyView | Node | keyof SvgViewTagMap | null): View | null {\n    if (typeof newChild === \"string\") {\n      newChild = SvgView.fromTag(newChild);\n    }\n    return super.setChild(key, newChild);\n  }\n\n  override appendChild<V extends View>(child: V, key?: string): V;\n  override appendChild<F extends ViewCreator<F>>(factory: F, key?: string): InstanceType<F>;\n  override appendChild<K extends keyof SvgViewTagMap>(tag: K, key?: string): SvgViewTagMap[K];\n  override appendChild(child: AnyView | Node | keyof SvgViewTagMap, key?: string): View;\n  override appendChild(child: AnyView | Node | keyof SvgViewTagMap, key?: string): View {\n    if (typeof child === \"string\") {\n      child = SvgView.fromTag(child);\n    }\n    return super.appendChild(child, key);\n  }\n\n  override prependChild<V extends View>(child: V, key?: string): V;\n  override prependChild<F extends ViewCreator<F>>(factory: F, key?: string): InstanceType<F>;\n  override prependChild<K extends keyof SvgViewTagMap>(tag: K, key?: string): SvgViewTagMap[K];\n  override prependChild(child: AnyView | Node | keyof SvgViewTagMap, key?: string): View;\n  override prependChild(child: AnyView | Node | keyof SvgViewTagMap, key?: string): View {\n    if (typeof child === \"string\") {\n      child = SvgView.fromTag(child);\n    }\n    return super.prependChild(child, key);\n  }\n\n  override insertChild<V extends View>(child: V, target: View | Node | null, key?: string): V;\n  override insertChild<F extends ViewCreator<F>>(factory: F, target: View | Node | null, key?: string): InstanceType<F>;\n  override insertChild<K extends keyof SvgViewTagMap>(tag: K, target: View | Node | null, key?: string): SvgViewTagMap[K];\n  override insertChild(child: AnyView | Node | keyof SvgViewTagMap, target: View | Node | null, key?: string): View;\n  override insertChild(child: AnyView | Node | keyof SvgViewTagMap, target: View | Node | null, key?: string): View {\n    if (typeof child === \"string\") {\n      child = SvgView.fromTag(child);\n    }\n    return super.insertChild(child, target, key);\n  }\n\n  override replaceChild<V extends View>(newChild: View, oldChild: V): V;\n  override replaceChild<V extends View>(newChild: AnyView | Node | keyof SvgViewTagMap, oldChild: V): V;\n  override replaceChild(newChild: AnyView | Node | keyof SvgViewTagMap, oldChild: View): View {\n    if (typeof newChild === \"string\") {\n      newChild = SvgView.fromTag(newChild);\n    }\n    return super.replaceChild(newChild, oldChild);\n  }\n\n  @AttributeAnimator({attributeName: \"alignment-baseline\", type: String})\n  readonly alignmentBaseline!: AttributeAnimator<this, AlignmentBaseline>;\n\n  @AttributeAnimator({attributeName: \"clip-path\", type: String})\n  readonly clipPath!: AttributeAnimator<this, string | undefined>;\n\n  @AttributeAnimator({attributeName: \"cursor\", type: String})\n  readonly cursor!: AttributeAnimator<this, CssCursor | undefined>;\n\n  @AttributeAnimator({attributeName: \"cx\", type: Number})\n  readonly cx!: AttributeAnimator<this, number | undefined>;\n\n  @AttributeAnimator({attributeName: \"cy\", type: Number})\n  readonly cy!: AttributeAnimator<this, number | undefined>;\n\n  @AttributeAnimator({attributeName: \"d\", type: String})\n  readonly d!: AttributeAnimator<this, string | undefined>;\n\n  @AttributeAnimator({attributeName: \"dx\", type: Length, value: null})\n  readonly dx!: AttributeAnimator<this, Length | null, AnyLength | null>;\n\n  @AttributeAnimator({attributeName: \"dy\", type: Length, value: null})\n  readonly dy!: AttributeAnimator<this, Length | null, AnyLength | null>;\n\n  @AttributeAnimator({attributeName: \"edgeMode\", type: String})\n  readonly edgeMode!: AttributeAnimator<this, string | undefined>;\n\n  @AttributeAnimator({attributeName: \"fill\", type: Color, value: null})\n  readonly fill!: AttributeAnimator<this, Color | null, AnyColor | null>;\n\n  @AttributeAnimator({attributeName: \"fill-rule\", type: String})\n  readonly fillRule!: AttributeAnimator<this, FillRule | undefined>;\n\n  @AttributeAnimator({attributeName: \"flood-color\", type: Color, value: null})\n  readonly floodColor!: AttributeAnimator<this, Color | null, AnyColor | null>;\n\n  @AttributeAnimator({attributeName: \"flood-opacity\", type: Number})\n  readonly floodOpacity!: AttributeAnimator<this, number | undefined>;\n\n  @AttributeAnimator({attributeName: \"height\", type: Length, value: null})\n  readonly height!: AttributeAnimator<this, Length | null, AnyLength | null>;\n\n  @AttributeAnimator({attributeName: \"in\", type: String})\n  readonly in!: AttributeAnimator<this, string | undefined>;\n\n  @AttributeAnimator({attributeName: \"in2\", type: String})\n  readonly in2!: AttributeAnimator<this, string | undefined>;\n\n  @AttributeAnimator({attributeName: \"lengthAdjust\", type: String})\n  readonly lengthAdjust!: AttributeAnimator<this, \"spacing\" | \"spacingAndGlyphs\" | undefined>;\n\n  @AttributeAnimator({attributeName: \"mode\", type: String})\n  readonly mode!: AttributeAnimator<this, string | undefined>;\n\n  @AttributeAnimator({attributeName: \"opacity\", type: Number})\n  readonly opacity!: AttributeAnimator<this, number | undefined>;\n\n  @AttributeAnimator({attributeName: \"pointer-events\", type: String})\n  readonly pointerEvents!: AttributeAnimator<this, SvgPointerEvents | undefined>;\n\n  @AttributeAnimator({attributeName: \"points\", type: String})\n  readonly points!: AttributeAnimator<this, string | undefined>;\n\n  @AttributeAnimator({attributeName: \"preserveAspectRatio\", type: Boolean})\n  readonly preserveAspectRatio!: AttributeAnimator<this, boolean | undefined>;\n\n  @AttributeAnimator({attributeName: \"r\", type: Number})\n  readonly r!: AttributeAnimator<this, number | undefined>;\n\n  @AttributeAnimator({attributeName: \"result\", type: String})\n  readonly result!: AttributeAnimator<this, string | undefined>;\n\n  @AttributeAnimator({attributeName: \"stdDeviation\", type: Number})\n  readonly stdDeviation!: AttributeAnimator<this, number | undefined>;\n\n  @AttributeAnimator({attributeName: \"stroke\", type: Color, value: null})\n  readonly stroke!: AttributeAnimator<this, Color | null, AnyColor | null>;\n\n  @AttributeAnimator({attributeName: \"stroke-dasharray\", type: String})\n  readonly strokeDasharray!: AttributeAnimator<this, string | undefined>;\n\n  @AttributeAnimator({attributeName: \"stroke-dashoffset\", type: Number})\n  readonly strokeDashoffset!: AttributeAnimator<this, number | undefined>;\n\n  @AttributeAnimator({attributeName: \"stroke-linecap\", type: String})\n  readonly strokeLinecap!: AttributeAnimator<this, StrokeLinecap | undefined>;\n\n  @AttributeAnimator({attributeName: \"stroke-linejoin\", type: String})\n  readonly strokeLinejoin!: AttributeAnimator<this, StrokeLinejoin | undefined>;\n\n  @AttributeAnimator({attributeName: \"stroke-miterlimit\", type: Number})\n  readonly strokeMiterlimit!: AttributeAnimator<this, number | undefined>;\n\n  @AttributeAnimator({attributeName: \"stroke-width\", type: Number})\n  readonly strokeWidth!: AttributeAnimator<this, number | undefined>;\n\n  @AttributeAnimator({attributeName: \"text-anchor\", type: String})\n  readonly textAnchor!: AttributeAnimator<this, TextAnchor | undefined>;\n\n  @AttributeAnimator({attributeName: \"textLength\", type: Length, value: null})\n  readonly textLength!: AttributeAnimator<this, Length | null, AnyLength | null>;\n\n  @AttributeAnimator({attributeName: \"transform\", type: Transform, value: null})\n  readonly transform!: AttributeAnimator<this, Transform | null, AnyTransform | null>;\n\n  @AttributeAnimator({attributeName: \"type\", type: String})\n  readonly type!: AttributeAnimator<this, string | undefined>;\n\n  @AttributeAnimator({attributeName: \"values\", type: String})\n  readonly values!: AttributeAnimator<this, string | undefined>;\n\n  @AttributeAnimator({attributeName: \"viewBox\", type: String})\n  readonly viewBox!: AttributeAnimator<this, string | undefined>;\n\n  @AttributeAnimator({attributeName: \"width\", type: Length, value: null})\n  readonly width!: AttributeAnimator<this, Length | null, AnyLength | null>;\n\n  @AttributeAnimator({attributeName: \"x\", type: Number})\n  readonly x!: AttributeAnimator<this, number | undefined>;\n\n  @AttributeAnimator({attributeName: \"x1\", type: Number})\n  readonly x1!: AttributeAnimator<this, number | undefined>;\n\n  @AttributeAnimator({attributeName: \"x2\", type: Number})\n  readonly x2!: AttributeAnimator<this, number | undefined>;\n\n  @AttributeAnimator({attributeName: \"y\", type: Number})\n  readonly y!: AttributeAnimator<this, number | undefined>;\n\n  @AttributeAnimator({attributeName: \"y1\", type: Number})\n  readonly y1!: AttributeAnimator<this, number | undefined>;\n\n  @AttributeAnimator({attributeName: \"y2\", type: Number})\n  readonly y2!: AttributeAnimator<this, number | undefined>;\n\n  @StyleAnimator({propertyNames: \"transform\", type: Transform, value: null})\n  readonly cssTransform!: StyleAnimator<this, Transform | null, AnyTransform | null>;\n\n  @StyleAnimator({propertyNames: \"filter\", type: String})\n  readonly filter!: StyleAnimator<this, string | undefined>;\n\n  font(): Font | null;\n  font(value: AnyFont | null, timing?: AnyTiming | boolean): this;\n  font(value?: AnyFont | null, timing?: AnyTiming | boolean): Font | null | this {\n    if (value === void 0) {\n      const style = this.fontStyle.value;\n      const variant = this.fontVariant.value;\n      const weight = this.fontWeight.value;\n      const stretch = this.fontStretch.value;\n      const size = this.fontSize.value;\n      const height = this.lineHeight.value;\n      const family = this.fontFamily.value;\n      if (family !== void 0) {\n        return Font.create(style, variant, weight, stretch, size, height, family);\n      } else {\n        return null;\n      }\n    } else {\n      if (value !== null) {\n        value = Font.fromAny(value);\n        if (value.style !== void 0) {\n          this.fontStyle.setState(value.style, timing);\n        }\n        if (value.variant !== void 0) {\n          this.fontVariant.setState(value.variant, timing);\n        }\n        if (value.weight !== void 0) {\n          this.fontWeight.setState(value.weight, timing);\n        }\n        if (value.stretch !== void 0) {\n          this.fontStretch.setState(value.stretch, timing);\n        }\n        if (value.size !== void 0) {\n          this.fontSize.setState(value.size, timing);\n        }\n        if (value.height !== void 0) {\n          this.lineHeight.setState(value.height, timing);\n        }\n        this.fontFamily.setState(value.family, timing);\n      } else {\n        this.fontStyle.setState(void 0, timing);\n        this.fontVariant.setState(void 0, timing);\n        this.fontWeight.setState(void 0, timing);\n        this.fontStretch.setState(void 0, timing);\n        this.fontSize.setState(null, timing);\n        this.lineHeight.setState(null, timing);\n        this.fontFamily.setState(void 0, timing);\n      }\n      return this;\n    }\n  }\n\n  @StyleAnimator({propertyNames: \"font-family\", type: FontFamily})\n  readonly fontFamily!: StyleAnimator<this, FontFamily | FontFamily[] | undefined, FontFamily | ReadonlyArray<FontFamily> | undefined>;\n\n  @StyleAnimator({propertyNames: \"font-size\", type: Length, value: null})\n  readonly fontSize!: StyleAnimator<this, Length | null, AnyLength | null>;\n\n  @StyleAnimator({propertyNames: \"font-stretch\", type: String})\n  readonly fontStretch!: StyleAnimator<this, FontStretch | undefined>;\n\n  @StyleAnimator({propertyNames: \"font-style\", type: String})\n  readonly fontStyle!: StyleAnimator<this, FontStyle | undefined>;\n\n  @StyleAnimator({propertyNames: \"font-variant\", type: String})\n  readonly fontVariant!: StyleAnimator<this, FontVariant | undefined>;\n\n  @StyleAnimator({propertyNames: \"font-weight\", type: String})\n  readonly fontWeight!: StyleAnimator<this, FontWeight | undefined>;\n\n  @StyleAnimator({propertyNames: \"line-height\", type: Length, value: null})\n  readonly lineHeight!: StyleAnimator<this, Length | null, AnyLength | null>;\n\n  @StyleAnimator({propertyNames: \"touch-action\", type: String})\n  readonly touchAction!: StyleAnimator<this, TouchAction | undefined>;\n\n  override get parentTransform(): Transform {\n    const transform = this.transform.value;\n    return transform !== null ? transform : Transform.identity();\n  }\n\n  override on<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGElement, event: SVGElementEventMap[K]) => unknown,\n                                                  options?: AddEventListenerOptions | boolean): this;\n  override on(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): this;\n  override on(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): this {\n    this.node.addEventListener(type, listener, options);\n    return this;\n  }\n\n  override off<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGElement, event: SVGElementEventMap[K]) => unknown,\n                                                   options?: EventListenerOptions | boolean): this;\n  override off(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions | boolean): this;\n  override off(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions | boolean): this {\n    this.node.removeEventListener(type, listener, options);\n    return this;\n  }\n\n  /** @internal */\n  protected initAttributes(init: SvgViewAttributesInit): void {\n    if (init.alignmentBaseline !== void 0) {\n      this.alignmentBaseline(init.alignmentBaseline);\n    }\n    if (init.clipPath !== void 0) {\n      this.clipPath(init.clipPath);\n    }\n    if (init.cursor !== void 0) {\n      this.cursor(init.cursor);\n    }\n    if (init.cx !== void 0) {\n      this.cx(init.cx);\n    }\n    if (init.cy !== void 0) {\n      this.cy(init.cy);\n    }\n    if (init.cy !== void 0) {\n      this.cy(init.cy);\n    }\n    if (init.d !== void 0) {\n      this.d(init.d);\n    }\n    if (init.dx !== void 0) {\n      this.dx(init.dx);\n    }\n    if (init.dy !== void 0) {\n      this.dy(init.dy);\n    }\n    if (init.edgeMode !== void 0) {\n      this.edgeMode(init.edgeMode);\n    }\n    if (init.fill !== void 0) {\n      this.fill(init.fill);\n    }\n    if (init.fillRule !== void 0) {\n      this.fillRule(init.fillRule);\n    }\n    if (init.floodColor !== void 0) {\n      this.floodColor(init.floodColor);\n    }\n    if (init.floodOpacity !== void 0) {\n      this.floodOpacity(init.floodOpacity);\n    }\n    if (init.height !== void 0) {\n      this.height(init.height);\n    }\n    if (init.in !== void 0) {\n      this.in(init.in);\n    }\n    if (init.in2 !== void 0) {\n      this.in2(init.in2);\n    }\n    if (init.lengthAdjust !== void 0) {\n      this.lengthAdjust(init.lengthAdjust);\n    }\n    if (init.mode !== void 0) {\n      this.mode(init.mode);\n    }\n    if (init.opacity !== void 0) {\n      this.opacity(init.opacity);\n    }\n    if (init.pointerEvents !== void 0) {\n      this.pointerEvents(init.pointerEvents);\n    }\n    if (init.points !== void 0) {\n      this.points(init.points);\n    }\n    if (init.preserveAspectRatio !== void 0) {\n      this.preserveAspectRatio(init.preserveAspectRatio);\n    }\n    if (init.r !== void 0) {\n      this.r(init.r);\n    }\n    if (init.result !== void 0) {\n      this.result(init.result);\n    }\n    if (init.stdDeviation !== void 0) {\n      this.stdDeviation(init.stdDeviation);\n    }\n    if (init.stroke !== void 0) {\n      this.stroke(init.stroke);\n    }\n    if (init.strokeDasharray !== void 0) {\n      this.strokeDasharray(init.strokeDasharray);\n    }\n    if (init.strokeDashoffset !== void 0) {\n      this.strokeDashoffset(init.strokeDashoffset);\n    }\n    if (init.strokeLinecap !== void 0) {\n      this.strokeLinecap(init.strokeLinecap);\n    }\n    if (init.strokeLinejoin !== void 0) {\n      this.strokeLinejoin(init.strokeLinejoin);\n    }\n    if (init.strokeMiterlimit !== void 0) {\n      this.strokeMiterlimit(init.strokeMiterlimit);\n    }\n    if (init.strokeWidth !== void 0) {\n      this.strokeWidth(init.strokeWidth);\n    }\n    if (init.textAnchor !== void 0) {\n      this.textAnchor(init.textAnchor);\n    }\n    if (init.textLength !== void 0) {\n      this.textLength(init.textLength);\n    }\n    if (init.transform !== void 0) {\n      this.transform(init.transform);\n    }\n    if (init.type !== void 0) {\n      this.type(init.type);\n    }\n    if (init.values !== void 0) {\n      this.values(init.values);\n    }\n    if (init.viewBox !== void 0) {\n      this.viewBox(init.viewBox);\n    }\n    if (init.width !== void 0) {\n      this.width(init.width);\n    }\n    if (init.x !== void 0) {\n      this.x(init.x);\n    }\n    if (init.x1 !== void 0) {\n      this.x1(init.x1);\n    }\n    if (init.x2 !== void 0) {\n      this.x2(init.x2);\n    }\n    if (init.y !== void 0) {\n      this.y(init.y);\n    }\n    if (init.y1 !== void 0) {\n      this.y1(init.y1);\n    }\n    if (init.y2 !== void 0) {\n      this.y2(init.y2);\n    }\n  }\n\n  /** @internal */\n  protected initStyle(init: SvgViewStyleInit): void {\n    if (init.cssTransform !== void 0) {\n      this.cssTransform(init.cssTransform);\n    }\n    if (init.filter !== void 0) {\n      this.filter(init.filter);\n    }\n    if (init.fontFamily !== void 0) {\n      this.fontFamily(init.fontFamily);\n    }\n    if (init.fontSize !== void 0) {\n      this.fontSize(init.fontSize);\n    }\n    if (init.fontStretch !== void 0) {\n      this.fontStretch(init.fontStretch);\n    }\n    if (init.fontStyle !== void 0) {\n      this.fontStyle(init.fontStyle);\n    }\n    if (init.fontVariant !== void 0) {\n      this.fontVariant(init.fontVariant);\n    }\n    if (init.fontWeight !== void 0) {\n      this.fontWeight(init.fontWeight);\n    }\n    if (init.lineHeight !== void 0) {\n      this.lineHeight(init.lineHeight);\n    }\n    if (init.touchAction !== void 0) {\n      this.touchAction(init.touchAction);\n    }\n  }\n\n  override init(init: SvgViewInit): void {\n    super.init(init);\n    if (init.attributes !== void 0) {\n      this.initAttributes(init.attributes);\n    }\n    if (init.style !== void 0) {\n      this.initStyle(init.style);\n    }\n  }\n\n  static override readonly tag: string = \"svg\";\n\n  static override readonly namespace: string = \"http://www.w3.org/2000/svg\";\n\n  static override create<S extends abstract new (...args: any) => InstanceType<S>>(this: S): InstanceType<S>;\n  static override create(): SvgView;\n  static override create(): SvgView {\n    return this.fromTag(this.tag);\n  }\n\n  static override fromTag<S extends abstract new (...args: any) => InstanceType<S>>(this: S, tag: string): InstanceType<S>;\n  static override fromTag(tag: string): SvgView;\n  static override fromTag(tag: string): SvgView {\n    const node = document.createElementNS(this.namespace, tag) as SVGElement;\n    return this.fromNode(node);\n  }\n\n  static override fromNode<S extends new (node: SVGElement) => InstanceType<S>>(this: S, node: ViewNodeType<InstanceType<S>>): InstanceType<S>;\n  static override fromNode(node: SVGElement): SvgView;\n  static override fromNode(node: SVGElement): SvgView {\n    let view = (node as ViewSvg).view;\n    if (view === void 0) {\n      view = new this(node);\n      this.mount(view);\n    } else if (!(view instanceof this)) {\n      throw new TypeError(view + \" not an instance of \" + this);\n    }\n    return view;\n  }\n\n  static override fromAny<S extends abstract new (...args: any) => InstanceType<S>>(this: S, value: AnySvgView<InstanceType<S>>): InstanceType<S>;\n  static override fromAny(value: AnySvgView | string): SvgView;\n  static override fromAny(value: AnySvgView | string): SvgView {\n    if (value === void 0 || value === null) {\n      return value;\n    } else if (value instanceof View) {\n      if (value instanceof this) {\n        return value;\n      } else {\n        throw new TypeError(value + \" not an instance of \" + this);\n      }\n    } else if (value instanceof Node) {\n      return this.fromNode(value);\n    } else if (typeof value === \"string\") {\n      return this.fromTag(value);\n    } else if (Creatable.is(value)) {\n      return value.create();\n    } else {\n      return this.fromInit(value);\n    }\n  }\n\n  static forTag<S extends abstract new (...args: any) => InstanceType<S>>(this: S, tag: string): SvgViewFactory<InstanceType<S>>;\n  static forTag(tag: string): SvgViewFactory;\n  static forTag(tag: string): SvgViewFactory {\n    if (tag === this.tag) {\n      return this;\n    } else {\n      return new SvgViewTagFactory(this, tag);\n    }\n  }\n}\n\n/** @internal */\nexport class SvgViewTagFactory<V extends SvgView> implements SvgViewFactory<V> {\n  constructor(factory: SvgViewFactory<V>, tag: string) {\n    this.factory = factory;\n    this.tag = tag;\n  }\n\n  /** @internal */\n  readonly factory: SvgViewFactory<V>;\n\n  readonly tag: string;\n\n  get namespace(): string {\n    return SvgView.namespace;\n  }\n\n  create(): V {\n    return this.fromTag(this.tag);\n  }\n\n  fromTag(tag: string): V {\n    const node = document.createElementNS(this.namespace, tag) as SVGElement;\n    return this.fromNode(node as ViewNodeType<V>);\n  }\n\n  fromNode(node: ViewNodeType<V>): V {\n    return this.factory.fromNode(node);\n  }\n\n  fromInit(init: InitType<V>): V {\n    let type = init.type;\n    if (type === void 0) {\n      type = this;\n    }\n    const view = type.create() as V;\n    view.init(init);\n    return view;\n  }\n\n  fromAny(value: AnySvgView<V>): V {\n    return this.factory.fromAny(value);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {R2Box} from \"@swim/math\";\nimport type {CanvasContext} from \"../canvas/CanvasContext\";\nimport type {CanvasRenderer} from \"../canvas/CanvasRenderer\";\nimport type {SpriteSheet} from \"./SpriteSheet\";\n\n/** @public */\nexport class Sprite {\n  /** @internal */\n  constructor(sheet: SpriteSheet, rowIndex: number, colIndex: number) {\n    this.sheet = sheet;\n    this.rowIndex = rowIndex;\n    this.colIndex = colIndex;\n  }\n\n  /** @internal */\n  readonly sheet: SpriteSheet;\n\n  /** @internal */\n  readonly rowIndex: number;\n\n  /** @internal */\n  readonly colIndex: number;\n\n  get width(): number {\n    return this.sheet.spriteWidth;\n  }\n\n  get height(): number {\n    return this.sheet.spriteHeight;\n  }\n\n  get pixelRatio(): number {\n    return this.sheet.pixelRatio;\n  }\n\n  getRenderer(): CanvasRenderer {\n    return this.sheet.getSpriteRenderer(this.rowIndex, this.colIndex);\n  }\n\n  clear(): void {\n    return this.sheet.clearSprite(this.rowIndex, this.colIndex);\n  }\n\n  draw(context: CanvasContext, frame: R2Box): void {\n    this.sheet.drawSprite(context, frame, this.rowIndex, this.colIndex);\n  }\n\n  release(): void {\n    this.sheet.releaseSprite(this);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {R2Box, Transform} from \"@swim/math\";\nimport {Sprite} from \"./Sprite\";\nimport type {CanvasContext} from \"../canvas/CanvasContext\";\nimport {CanvasRenderer} from \"../\"; // forward import\n\n/** @public */\nexport class SpriteSheet {\n  constructor(spriteWidth: number, spriteHeight: number,\n              canvasWidth: number, canvasHeight: number, pixelRatio: number) {\n    const rowCount = Math.floor(canvasHeight / spriteHeight);\n    const colCount = Math.floor(canvasWidth / spriteWidth);\n    const spriteCount = rowCount * colCount;\n    const sprites = new Array<Sprite>(spriteCount);\n    const freeSprites = new Array<Sprite>(spriteCount);\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = canvasWidth * pixelRatio;\n    canvas.height = canvasHeight * pixelRatio;\n    canvas.style.width = canvasWidth + \"px\";\n    canvas.style.height = canvasHeight + \"px\";\n    const context = canvas.getContext(\"2d\")!\n    const renderer = new CanvasRenderer(context, Transform.identity(), pixelRatio);\n\n    this.spriteWidth = spriteWidth;\n    this.spriteHeight = spriteHeight;\n    this.sprites = sprites;\n    this.freeSprites = freeSprites;\n    this.canvas = canvas;\n    this.renderer = renderer;\n    this.nextSheet = null;\n\n    this.createSprites(sprites, rowCount, colCount);\n\n    for (let k = 0; k < spriteCount; k += 1) {\n      freeSprites[k] = sprites[spriteCount - k - 1]!;\n    }\n  }\n\n  protected createSprites(sprites: Sprite[], rowCount: number, colCount: number): void {\n    let k = 0;\n    for (let rowIndex = 0; rowIndex < rowCount; rowIndex += 1) {\n      for (let colIndex = 0; colIndex < colCount; colIndex += 1) {\n        const sprite = this.createSprite(rowIndex, colIndex);\n        sprites[k] = sprite;\n        k += 1;\n      }\n    }\n  }\n\n  protected createSprite(rowIndex: number, colIndex: number): Sprite {\n    return new Sprite(this, rowIndex, colIndex);\n  }\n\n  readonly spriteWidth: number;\n\n  readonly spriteHeight: number;\n\n  readonly sprites: ReadonlyArray<Sprite>;\n\n  /** @internal */\n  readonly freeSprites: Sprite[];\n\n  readonly canvas: HTMLCanvasElement;\n\n  readonly renderer: CanvasRenderer;\n\n  /** @internal */\n  nextSheet: SpriteSheet | null;\n\n  get pixelRatio(): number {\n    return this.renderer.pixelRatio;\n  }\n\n  get canvasWidth(): number {\n    return this.canvas.width / this.pixelRatio;\n  }\n\n  get canvasHeight(): number {\n    return this.canvas.height / this.pixelRatio;\n  }\n\n  get rowCount(): number {\n    return Math.floor(this.canvasHeight / this.spriteHeight);\n  }\n\n  get colCount(): number {\n    return Math.floor(this.canvasWidth / this.spriteWidth);\n  }\n\n  get spriteCount(): number {\n    return this.rowCount * this.colCount;\n  }\n\n  get freeCount(): number {\n    return this.freeSprites.length;\n  }\n\n  /** @internal */\n  static acquireNextFreeSheet(sheet: SpriteSheet): SpriteSheet | null {\n    do {\n      const nextSheet = sheet.nextSheet;\n      if (nextSheet === null) {\n        return null;\n      } else if (nextSheet.freeCount !== 0) {\n        sheet.nextSheet = nextSheet.nextSheet;\n        nextSheet.nextSheet = null;\n        return nextSheet;\n      } else {\n        sheet = nextSheet;\n      }\n    } while (true);\n  }\n\n  acquireSprite(): Sprite | null {\n    const sprite = this.freeSprites.pop();\n    return sprite !== void 0 ? sprite : null;\n  }\n\n  /** @internal */\n  releaseSprite(sprite: Sprite): void {\n    // assert(sprite.sheet === this);\n    // assert(this.freeSprites.indexOf(sprite) < 0);\n    this.clearSprite(sprite.rowIndex, sprite.colIndex);\n    this.freeSprites.push(sprite);\n  }\n\n  /** @internal */\n  clearSprite(rowIndex: number, colIndex: number): void {\n    const renderer = this.getSpriteRenderer(rowIndex, colIndex);\n    renderer.context.clearRect(0, 0, this.spriteWidth, this.spriteHeight);\n  }\n\n  /** @internal */\n  getSpriteRenderer(rowIndex: number, colIndex: number): CanvasRenderer {\n    const renderer = this.renderer;\n    const context = renderer.context;\n    const pixelRatio = renderer.pixelRatio;\n    const dx = rowIndex * this.spriteWidth * pixelRatio;\n    const dy = colIndex * this.spriteHeight * pixelRatio;\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, dx, dy);\n    renderer.setTransform(Transform.affine(pixelRatio, 0, 0, pixelRatio, dx, dy));\n    return renderer;\n  }\n\n  /** @internal */\n  drawSprite(context: CanvasContext, frame: R2Box, rowIndex: number, colIndex: number): void {\n    const spritePixelRatio = this.renderer.pixelRatio;\n    const spriteWidth = this.spriteWidth * spritePixelRatio;\n    const spriteHeight = this.spriteHeight * spritePixelRatio;\n    const spriteX = rowIndex * spriteWidth;\n    const spriteY = colIndex * spriteHeight;\n    context.drawImage(this.canvas, spriteX, spriteY, spriteWidth, spriteHeight,\n                      frame.x, frame.y, this.spriteWidth, this.spriteHeight);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\nimport type {Sprite} from \"./Sprite\";\nimport {SpriteSheet} from \"./SpriteSheet\";\n\n/** @public */\nexport class SpriteService {\n  constructor(canvasWidth?: number, canvasHeight?: number, pixelRatio?: number,\n              minSizeClass?: number, maxSizeClass?: number) {\n    if (pixelRatio === void 0) {\n      pixelRatio = window.devicePixelRatio || 1;\n    }\n    if (canvasWidth === void 0) {\n      canvasWidth = Math.floor(SpriteService.TextureWidth / pixelRatio);\n    }\n    if (canvasHeight === void 0) {\n      canvasHeight = Math.floor(SpriteService.TextureHeight / pixelRatio);\n    }\n    if (maxSizeClass === void 0) {\n      maxSizeClass = Math.floor(Math.log2(Math.min(canvasWidth, canvasHeight) / 4));\n    }\n    if (minSizeClass === void 0) {\n      minSizeClass = Math.min(4, maxSizeClass);\n    }\n    this.canvasWidth = canvasWidth;\n    this.canvasHeight = canvasHeight;\n    this.minSizeClass = minSizeClass;\n    this.maxSizeClass = maxSizeClass;\n    this.pixelRatio = pixelRatio;\n\n    const slabCount = maxSizeClass - minSizeClass + 1;\n    const slabs = new Array<SpriteSheet | null>(slabCount);\n    for (let i = 0; i < slabCount; i += 1) {\n      slabs[i] = null;\n    }\n    this.slabs = slabs;\n  }\n\n  readonly canvasWidth: number;\n\n  readonly canvasHeight: number;\n\n  readonly pixelRatio: number;\n\n  readonly minSizeClass: number;\n\n  readonly maxSizeClass: number;\n\n  readonly slabs: ReadonlyArray<SpriteSheet | null>;\n\n  /** @internal */\n  protected createSlab(sizeClass: number): SpriteSheet {\n    const spriteSize = 1 << sizeClass;\n    return new SpriteSheet(spriteSize, spriteSize, this.canvasWidth, this.canvasHeight, this.pixelRatio);\n  }\n\n  /** @internal */\n  getFreeSlab(sizeClass: number): SpriteSheet | null {\n    sizeClass = Math.max(this.minSizeClass, sizeClass);\n    if (sizeClass <= this.maxSizeClass) {\n      const index = sizeClass - this.minSizeClass;\n      const slabs = this.slabs as Array<SpriteSheet | null>;\n      let slab: SpriteSheet | null = slabs[index]!;\n      if (slab === null) {\n        slab = this.createSlab(sizeClass);\n        slabs[index] = slab;\n      } else if (slab.freeCount === 0) {\n        let freeSlab = SpriteSheet.acquireNextFreeSheet(slab);\n        if (freeSlab === null) {\n          freeSlab = this.createSlab(sizeClass);\n        }\n        freeSlab.nextSheet = slab;\n        slab = freeSlab;\n        slabs[index] = slab;\n      }\n      return slab;\n    }\n    return null;\n  }\n\n  /** @internal */\n  protected createSheet(width: number, height: number): SpriteSheet {\n    return new SpriteSheet(width, height, width, height, this.pixelRatio);\n  }\n\n  /** @internal */\n  getFreeSheet(width: number, height: number): SpriteSheet {\n    const widthClass = Math.ceil(Math.log2(width));\n    const heightClass = Math.ceil(Math.log2(height));\n    const sizeClass = Math.max(widthClass, heightClass);\n    let sheet = this.getFreeSlab(sizeClass);\n    if (sheet === null) {\n      sheet = this.createSheet(width, height);\n    }\n    return sheet;\n  }\n\n  acquireSprite(width: number, height: number): Sprite {\n    const sheet = this.getFreeSheet(width, height);\n    const sprite = sheet.acquireSprite()!;\n    // assert(sprite !== null);\n    return sprite;\n  }\n\n  @Lazy\n  static global(): SpriteService {\n    return new SpriteService();\n  }\n\n  /** @internal */\n  static readonly TextureWidth: number = 512;\n  /** @internal */\n  static readonly TextureHeight: number = 512;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/** @public */\nexport type AnyGraphicsRenderer = GraphicsRenderer | GraphicsRendererType;\n\n/** @public */\nexport type GraphicsRendererType = \"canvas\" | \"webgl\";\n\n/** @public */\nexport abstract class GraphicsRenderer {\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Class} from \"@swim/util\";\nimport {Provider} from \"@swim/component\";\nimport {R2Box, Transform} from \"@swim/math\";\nimport type {Color} from \"@swim/style\";\nimport {\n  ViewEvent,\n  ViewMouseEvent,\n  ViewPointerEvent,\n  ViewEventHandler,\n  ViewContext,\n  ViewContextType,\n  ViewInit,\n  ViewFlags,\n  View,\n} from \"@swim/view\";\nimport {SpriteService} from \"../sprite/SpriteService\";\nimport type {GraphicsRenderer} from \"./GraphicsRenderer\";\nimport type {GraphicsViewContext} from \"./GraphicsViewContext\";\nimport type {GraphicsViewObserver} from \"./GraphicsViewObserver\";\nimport type {CanvasContext} from \"../canvas/CanvasContext\";\nimport {CanvasView} from \"../\"; // forward import\n\n/** @public */\nexport interface GraphicsViewEventMap {\n  \"auxclick\": MouseEvent;\n  \"click\": MouseEvent;\n  \"contextmenu\": MouseEvent;\n  \"dblclick\": MouseEvent;\n  \"mousedown\": MouseEvent;\n  \"mouseenter\": MouseEvent;\n  \"mouseleave\": MouseEvent;\n  \"mousemove\": MouseEvent;\n  \"mouseout\": MouseEvent;\n  \"mouseover\": MouseEvent;\n  \"mouseup\": MouseEvent;\n  \"pointercancel\": PointerEvent;\n  \"pointerdown\": PointerEvent;\n  \"pointerenter\": PointerEvent;\n  \"pointerleave\": PointerEvent;\n  \"pointermove\": PointerEvent;\n  \"pointerout\": PointerEvent;\n  \"pointerover\": PointerEvent;\n  \"pointerup\": PointerEvent;\n  \"touchcancel\": TouchEvent;\n  \"touchend\": TouchEvent;\n  \"touchmove\": TouchEvent;\n  \"touchstart\": TouchEvent;\n  \"wheel\": WheelEvent;\n}\n\n/** @public */\nexport interface GraphicsViewInit extends ViewInit {\n  hidden?: boolean;\n}\n\n/** @public */\nexport class GraphicsView extends View {\n  constructor() {\n    super();\n    this.ownViewFrame = null;\n    this.eventHandlers = null;\n    this.hoverSet = null;\n  }\n\n  override readonly observerType?: Class<GraphicsViewObserver>;\n\n  override readonly contextType?: Class<GraphicsViewContext>;\n\n  declare readonly renderer: GraphicsRenderer | null; // getter defined below to work around useDefineForClassFields lunacy\n\n  protected override needsProcess(processFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    if ((this.flags & View.NeedsAnimate) === 0) {\n      processFlags &= ~View.NeedsAnimate;\n    }\n    return processFlags;\n  }\n\n  protected renderViewOutline(viewBox: R2Box, context: CanvasContext, outlineColor: Color, outlineWidth: number): void {\n    if (viewBox.isDefined()) {\n      // save\n      const contextLineWidth = context.lineWidth;\n      const contextStrokeStyle = context.strokeStyle;\n\n      context.beginPath();\n      context.moveTo(viewBox.xMin, viewBox.yMin);\n      context.lineTo(viewBox.xMin, viewBox.yMax);\n      context.lineTo(viewBox.xMax, viewBox.yMax);\n      context.lineTo(viewBox.xMax, viewBox.yMin);\n      context.closePath();\n      context.lineWidth = outlineWidth;\n      context.strokeStyle = outlineColor.toString();\n      context.stroke();\n\n      // restore\n      context.lineWidth = contextLineWidth;\n      context.strokeStyle = contextStrokeStyle;\n    }\n  }\n\n  @Provider({\n    type: SpriteService,\n    observes: false,\n    service: SpriteService.global(),\n  })\n  readonly spriteProvider!: Provider<this, SpriteService>;\n\n  /** @internal */\n  readonly ownViewFrame: R2Box | null;\n\n  /**\n   * The parent-specified view-coordinate bounding box in which this view\n   * should layout and render graphics.\n   */\n  get viewFrame(): R2Box {\n    let viewFrame = this.ownViewFrame;\n    if (viewFrame === null) {\n      viewFrame = this.deriveViewFrame();\n    }\n    return viewFrame;\n  }\n\n  /**\n   * Sets the view-coordinate bounding box in which this view should layout\n   * and render graphics. Should only be invoked by the view's parent view.\n   */\n  setViewFrame(viewFrame: R2Box | null): void {\n    (this as Mutable<this>).ownViewFrame = viewFrame;\n  }\n\n  protected deriveViewFrame(): R2Box {\n    const parent = this.parent;\n    if (parent instanceof GraphicsView || parent instanceof CanvasView) {\n      return parent.viewFrame;\n    } else {\n      return R2Box.undefined();\n    }\n  }\n\n  cullViewFrame(viewFrame: R2Box = this.viewFrame): void {\n    this.setCulled(!viewFrame.intersects(this.viewBounds));\n  }\n\n  /**\n   * The self-defined view-coordinate bounding box surrounding all graphics\n   * this view could possibly render. Views with view bounds that don't\n   * overlap their view frames may be culled from rendering and hit testing.\n   */\n  declare readonly viewBounds: R2Box; // getter defined below to work around useDefineForClassFields lunacy\n\n  get ownViewBounds(): R2Box | null {\n    return null;\n  }\n\n  deriveViewBounds(): R2Box {\n    let viewBounds: R2Box | undefined;\n    let child = this.firstChild;\n    while (child !== null) {\n      if (child instanceof GraphicsView && !child.hidden && !child.unbounded) {\n        const childViewBounds = child.viewBounds;\n        if (childViewBounds.isDefined()) {\n          if (viewBounds !== void 0) {\n            viewBounds = viewBounds.union(childViewBounds);\n          } else {\n            viewBounds = childViewBounds;\n          }\n        }\n      }\n      child = child.nextSibling;\n    }\n    if (viewBounds === void 0) {\n      viewBounds = this.viewFrame;\n    }\n    return viewBounds;\n  }\n\n  /**\n   * The self-defined view-coordinate bounding box surrounding all hit regions\n   * in this view.\n   */\n  get hitBounds(): R2Box {\n    return this.viewBounds;\n  }\n\n  deriveHitBounds(): R2Box {\n    let hitBounds: R2Box | undefined;\n    let child = this.firstChild;\n    while (child !== null) {\n      if (child instanceof GraphicsView && !child.hidden && !child.intangible) {\n        const childHitBounds = child.hitBounds;\n        if (hitBounds === void 0) {\n          hitBounds = childHitBounds;\n        } else {\n          hitBounds = hitBounds.union(childHitBounds);\n        }\n      }\n      child = child.nextSibling;\n    }\n    if (hitBounds === void 0) {\n      hitBounds = this.viewBounds;\n    }\n    return hitBounds;\n  }\n\n  cascadeHitTest(x: number, y: number, baseViewContext: ViewContext): GraphicsView | null {\n    if (!this.hidden && !this.culled && !this.intangible) {\n      const hitBounds = this.hitBounds;\n      if (hitBounds.contains(x, y)) {\n        const viewContext = this.extendViewContext(baseViewContext);\n        let hit = this.hitTestChildren(x, y, viewContext);\n        if (hit === null) {\n          const outerViewContext = ViewContext.current;\n          try {\n            ViewContext.current = viewContext;\n            this.setFlags(this.flags | View.ContextualFlag);\n            hit = this.hitTest(x, y, viewContext);\n          } finally {\n            this.setFlags(this.flags & ~View.ContextualFlag);\n            ViewContext.current = outerViewContext;\n          }\n        }\n        return hit;\n      }\n    }\n    return null;\n  }\n\n  protected hitTest(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    return null;\n  }\n\n  protected hitTestChildren(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    let child = this.firstChild;\n    while (child !== null) {\n      if (child instanceof GraphicsView) {\n        const hit = this.hitTestChild(child, x, y, viewContext);\n        if (hit !== null) {\n          return hit;\n        }\n      }\n      child = child.nextSibling;\n    }\n    return null;\n  }\n\n  protected hitTestChild(child: GraphicsView, x: number, y: number,\n                         viewContext: ViewContextType<this>): GraphicsView | null {\n    return child.cascadeHitTest(x, y, viewContext);\n  }\n\n  override get parentTransform(): Transform {\n    return Transform.identity();\n  }\n\n  override get clientBounds(): R2Box {\n    const inverseClientTransform = this.clientTransform.inverse();\n    return this.viewBounds.transform(inverseClientTransform);\n  }\n\n  override get popoverFrame(): R2Box {\n    const inversePageTransform = this.pageTransform.inverse();\n    return this.viewBounds.transform(inversePageTransform);\n  }\n\n  /** @internal */\n  readonly eventHandlers: {[type: string]: ViewEventHandler[] | undefined} | null;\n\n  override on<K extends keyof GraphicsViewEventMap>(type: K, listener: (this: this, event: GraphicsViewEventMap[K]) => unknown,\n                                                    options?: AddEventListenerOptions | boolean): this;\n  override on(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): this;\n  override on(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): this {\n    let eventHandlers = this.eventHandlers;\n    if (eventHandlers === null) {\n      eventHandlers = {};\n      (this as Mutable<this>).eventHandlers = eventHandlers;\n    }\n    let handlers = eventHandlers[type];\n    const capture = typeof options === \"boolean\" ? options\n                  : typeof options === \"object\" && options !== null && options.capture || false;\n    const passive = options && typeof options === \"object\" && options.passive || false;\n    const once = options && typeof options === \"object\" && options.once || false;\n    let handler: ViewEventHandler | undefined;\n    if (handlers === void 0) {\n      handler = {listener, capture, passive, once};\n      handlers = [handler];\n      eventHandlers[type] = handlers;\n    } else {\n      const n = handlers.length;\n      let i = 0;\n      while (i < n) {\n        handler = handlers[i]!;\n        if (handler.listener === listener && handler.capture === capture) {\n          break;\n        }\n        i += 1;\n      }\n      if (i < n) {\n        handler!.passive = passive;\n        handler!.once = once;\n      } else {\n        handler = {listener, capture, passive, once};\n        handlers.push(handler);\n      }\n    }\n    return this;\n  }\n\n  override off<K extends keyof GraphicsViewEventMap>(type: K, listener: (this: View, event: GraphicsViewEventMap[K]) => unknown,\n                                                     options?: EventListenerOptions | boolean): this;\n  override off(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions | boolean): this;\n  override off(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions | boolean): this {\n    const eventHandlers = this.eventHandlers;\n    if (eventHandlers !== null) {\n      const handlers = eventHandlers[type];\n      if (handlers !== void 0) {\n        const capture = typeof options === \"boolean\" ? options\n                      : typeof options === \"object\" && options !== null && options.capture || false;\n        const n = handlers.length;\n        let i = 0;\n        while (i < n) {\n          const handler = handlers[i]!;\n          if (handler.listener === listener && handler.capture === capture) {\n            handlers.splice(i, 1);\n            if (handlers.length === 0) {\n              delete eventHandlers[type];\n            }\n            break;\n          }\n          i += 1;\n        }\n      }\n    }\n    return this;\n  }\n\n  /** @internal */\n  handleEvent(event: ViewEvent): void {\n    const type = event.type;\n    const eventHandlers = this.eventHandlers;\n    if (eventHandlers !== null) {\n      const handlers = eventHandlers[type];\n      if (handlers !== void 0) {\n        let i = 0;\n        while (i < handlers.length) {\n          const handler = handlers[i]!;\n          if (!handler.capture) {\n            const listener = handler.listener;\n            if (typeof listener === \"function\") {\n              listener.call(this, event);\n            } else if (typeof listener === \"object\" && listener !== null) {\n              listener.handleEvent(event);\n            }\n            if (handler.once) {\n              handlers.splice(i, 1);\n              continue;\n            }\n          }\n          i += 1;\n        }\n        if (handlers.length === 0) {\n          delete eventHandlers[type];\n        }\n      }\n    }\n    if (type === \"mouseover\") {\n      this.onMouseOver(event as ViewMouseEvent);\n    } else if (type === \"mouseout\") {\n      this.onMouseOut(event as ViewMouseEvent);\n    } else if (type === \"pointerover\") {\n      this.onPointerOver(event as ViewPointerEvent);\n    } else if (type === \"pointerout\") {\n      this.onPointerOut(event as ViewPointerEvent);\n    }\n  }\n\n  /**\n   * Invokes event handlers registered with this `View` before propagating the\n   * `event` up the view hierarchy. Returns a `View`, without invoking any\n   * registered event handlers, on which `dispatchEvent` should be called to\n   * continue event propagation.\n   * @internal\n   */\n  bubbleEvent(event: ViewEvent): View | null {\n    this.handleEvent(event);\n    let next: View | null;\n    if (event.bubbles && !event.cancelBubble) {\n      const parent = this.parent;\n      if (parent instanceof GraphicsView || parent instanceof CanvasView) {\n        next = parent.bubbleEvent(event);\n      } else {\n        next = parent;\n      }\n    } else {\n      next = null;\n    }\n    return next;\n  }\n\n  override dispatchEvent(event: ViewEvent): boolean {\n    event.targetView = this;\n    const next = this.bubbleEvent(event);\n    if (next !== null) {\n      return next.dispatchEvent(event);\n    } else {\n      return !event.cancelBubble;\n    }\n  }\n\n  /** @internal */\n  readonly hoverSet: {[id: string]: null | undefined} | null;\n\n  isHovering(): boolean {\n    const hoverSet = this.hoverSet;\n    return hoverSet !== null && Object.keys(hoverSet).length !== 0;\n  }\n\n  /** @internal */\n  protected onMouseOver(event: ViewMouseEvent): void {\n    let hoverSet = this.hoverSet;\n    if (hoverSet === null) {\n      hoverSet = {};\n      (this as Mutable<this>).hoverSet = hoverSet;\n    }\n    if (hoverSet.mouse === void 0) {\n      hoverSet.mouse = null;\n      const eventHandlers = this.eventHandlers;\n      if (eventHandlers !== null && eventHandlers.mouseenter !== void 0) {\n        const enterEvent = new MouseEvent(\"mouseenter\", {\n          bubbles: false,\n          button: event.button,\n          buttons: event.buttons,\n          altKey: event.altKey,\n          ctrlKey: event.ctrlKey,\n          metaKey: event.metaKey,\n          shiftKey: event.shiftKey,\n          clientX: event.clientX,\n          clientY: event.clientY,\n          screenX: event.screenX,\n          screenY: event.screenY,\n          movementX: event.movementX,\n          movementY: event.movementY,\n          view: event.view,\n          detail: event.detail,\n          relatedTarget: event.relatedTarget,\n        }) as ViewMouseEvent;\n        enterEvent.targetView = this;\n        enterEvent.relatedTargetView = event.relatedTargetView;\n        this.handleEvent(enterEvent);\n      }\n    }\n  }\n\n  /** @internal */\n  protected onMouseOut(event: ViewMouseEvent): void {\n    const hoverSet = this.hoverSet;\n    if (hoverSet !== null && hoverSet.mouse !== void 0) {\n      delete hoverSet.mouse;\n      const eventHandlers = this.eventHandlers;\n      if (eventHandlers !== null && eventHandlers.mouseleave !== void 0) {\n        const leaveEvent = new MouseEvent(\"mouseleave\", {\n          bubbles: false,\n          button: event.button,\n          buttons: event.buttons,\n          altKey: event.altKey,\n          ctrlKey: event.ctrlKey,\n          metaKey: event.metaKey,\n          shiftKey: event.shiftKey,\n          clientX: event.clientX,\n          clientY: event.clientY,\n          screenX: event.screenX,\n          screenY: event.screenY,\n          movementX: event.movementX,\n          movementY: event.movementY,\n          view: event.view,\n          detail: event.detail,\n          relatedTarget: event.relatedTarget,\n        }) as ViewMouseEvent;\n        leaveEvent.targetView = this;\n        leaveEvent.relatedTargetView = event.relatedTargetView;\n        this.handleEvent(leaveEvent);\n      }\n    }\n  }\n\n  /** @internal */\n  protected onPointerOver(event: ViewPointerEvent): void {\n    let hoverSet = this.hoverSet;\n    if (hoverSet === null) {\n      hoverSet = {};\n      (this as Mutable<this>).hoverSet = hoverSet;\n    }\n    const id = \"\" + event.pointerId;\n    if (hoverSet[id] === void 0) {\n      hoverSet[id] = null;\n      const eventHandlers = this.eventHandlers;\n      if (eventHandlers !== null && eventHandlers.pointerenter !== void 0) {\n        const enterEvent = new PointerEvent(\"pointerenter\", {\n          bubbles: false,\n          pointerId: event.pointerId,\n          pointerType: event.pointerType,\n          isPrimary: event.isPrimary,\n          button: event.button,\n          buttons: event.buttons,\n          altKey: event.altKey,\n          ctrlKey: event.ctrlKey,\n          metaKey: event.metaKey,\n          shiftKey: event.shiftKey,\n          clientX: event.clientX,\n          clientY: event.clientY,\n          screenX: event.screenX,\n          screenY: event.screenY,\n          movementX: event.movementX,\n          movementY: event.movementY,\n          tiltX: event.tiltX,\n          tiltY: event.tiltY,\n          twist: event.twist,\n          width: event.width,\n          height: event.height,\n          pressure: event.pressure,\n          tangentialPressure: event.tangentialPressure,\n          view: event.view,\n          detail: event.detail,\n          relatedTarget: event.relatedTarget,\n        }) as ViewPointerEvent;\n        enterEvent.targetView = this;\n        enterEvent.relatedTargetView = event.relatedTargetView;\n        this.handleEvent(enterEvent);\n      }\n    }\n  }\n\n  /** @internal */\n  protected onPointerOut(event: ViewPointerEvent): void {\n    const hoverSet = this.hoverSet;\n    if (hoverSet !== null) {\n      const id = \"\" + event.pointerId;\n      if (hoverSet[id] !== void 0) {\n        delete hoverSet[id];\n        const eventHandlers = this.eventHandlers;\n        if (eventHandlers !== null && eventHandlers.pointerleave !== void 0) {\n          const leaveEvent = new PointerEvent(\"pointerleave\", {\n            bubbles: false,\n            pointerId: event.pointerId,\n            pointerType: event.pointerType,\n            isPrimary: event.isPrimary,\n            button: event.button,\n            buttons: event.buttons,\n            altKey: event.altKey,\n            ctrlKey: event.ctrlKey,\n            metaKey: event.metaKey,\n            shiftKey: event.shiftKey,\n            clientX: event.clientX,\n            clientY: event.clientY,\n            screenX: event.screenX,\n            screenY: event.screenY,\n            movementX: event.movementX,\n            movementY: event.movementY,\n            tiltX: event.tiltX,\n            tiltY: event.tiltY,\n            twist: event.twist,\n            width: event.width,\n            height: event.height,\n            pressure: event.pressure,\n            tangentialPressure: event.tangentialPressure,\n            view: event.view,\n            detail: event.detail,\n            relatedTarget: event.relatedTarget,\n          }) as ViewPointerEvent;\n          leaveEvent.targetView = this;\n          leaveEvent.relatedTargetView = event.relatedTargetView;\n          this.handleEvent(leaveEvent);\n        }\n      }\n    }\n  }\n\n  override init(init: GraphicsViewInit): void {\n    super.init(init);\n    if (init.hidden !== void 0) {\n      this.setHidden(init.hidden);\n    }\n  }\n\n  static override readonly UncullFlags: ViewFlags = View.UncullFlags | View.NeedsRender;\n  static override readonly UnhideFlags: ViewFlags = View.UnhideFlags | View.NeedsRender;\n  static override readonly InsertChildFlags: ViewFlags = View.InsertChildFlags | View.NeedsRender;\n  static override readonly RemoveChildFlags: ViewFlags = View.RemoveChildFlags | View.NeedsRender;\n}\nObject.defineProperty(GraphicsView.prototype, \"renderer\", {\n  get(this: GraphicsView): GraphicsRenderer | null {\n    const parent = this.parent;\n    if (parent instanceof GraphicsView || parent instanceof CanvasView) {\n      return parent.renderer;\n    } else {\n      return null;\n    }\n  },\n  configurable: true,\n});\nObject.defineProperty(GraphicsView.prototype, \"viewBounds\", {\n  get(this: GraphicsView): R2Box {\n    return this.viewFrame;\n  },\n  configurable: true,\n});\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Transform} from \"@swim/math\";\nimport {GraphicsRenderer} from \"../graphics/GraphicsRenderer\";\nimport type {DrawingContext} from \"./DrawingContext\";\n\n/** @public */\nexport abstract class DrawingRenderer extends GraphicsRenderer {\n  abstract readonly context: DrawingContext;\n\n  abstract readonly transform: Transform;\n\n  abstract readonly pixelRatio: number;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport {Format} from \"@swim/codec\";\nimport type {DrawingContext} from \"../drawing/DrawingContext\";\n\n/** @public */\nexport class PathContext implements DrawingContext {\n  constructor() {\n    this.precision = -1;\n    this.x0 = NaN;\n    this.y0 = NaN;\n    this.x1 = NaN;\n    this.y1 = NaN;\n    this.d = \"\";\n  }\n\n  readonly precision!: number;\n\n  setPrecision(precision: number): void {\n    (this as Mutable<this>).precision = precision;\n  }\n\n  /** @internal */\n  get anglePrecision(): number {\n    const precision = this.precision;\n    return precision > 0 ? Math.max(5, precision) : precision;\n  }\n\n  /** @internal */\n  x0: number;\n  /** @internal */\n  y0: number;\n  /** @internal */\n  x1: number;\n  /** @internal */\n  y1: number;\n  /** @internal */\n  d: string;\n\n  moveTo(x: number, y: number): void {\n    this.d += \"M\" + Format.decimal(x, this.precision)\n            + \",\" + Format.decimal(y, this.precision);\n    this.x0 = x;\n    this.y0 = y;\n    this.x1 = x;\n    this.y1 = y;\n  }\n\n  lineTo(x: number, y: number): void {\n    this.d += \"L\" + Format.decimal(x, this.precision)\n            + \",\" + Format.decimal(y, this.precision);\n    this.x1 = x;\n    this.y1 = y;\n  }\n\n  quadraticCurveTo(x1: number, y1: number, x: number, y: number): void {\n    this.d += \"Q\" + Format.decimal(x1, this.precision)\n            + \",\" + Format.decimal(y1, this.precision)\n            + \",\" + Format.decimal(x, this.precision)\n            + \",\" + Format.decimal(y, this.precision);\n    this.x1 = x;\n    this.y1 = y;\n  }\n\n  bezierCurveTo(x1: number, y1: number, x2: number, y2: number, x: number, y: number): void {\n    this.d += \"C\" + Format.decimal(x1, this.precision)\n            + \",\" + Format.decimal(y1, this.precision)\n            + \",\" + Format.decimal(x2, this.precision)\n            + \",\" + Format.decimal(y2, this.precision)\n            + \",\" + Format.decimal(x, this.precision)\n            + \",\" + Format.decimal(y, this.precision);\n    this.x1 = x;\n    this.y1 = y;\n  }\n\n  arcTo(x1: number, y1: number, x2: number, y2: number, r: number): void {\n    const x0 = this.x1;\n    const y0 = this.y1;\n    const x21 = x2 - x1;\n    const y21 = y2 - y1;\n    const x01 = x0 - x1;\n    const y01 = y0 - y1;\n    const l01_2 = x01 * x01 + y01 * y01;\n\n    if (r < 0) {\n      throw new Error(\"negative radius: \" + r);\n    } else if (isNaN(this.x1)) {\n      // empty path\n      this.d += \"M\" + Format.decimal(x1, this.precision)\n              + \",\" + Format.decimal(y1, this.precision);\n      this.x1 = x1;\n      this.y1 = y1;\n    } else if (!(l01_2 > PathContext.Epsilon)) {\n      // coincident endpoints\n    } else if (!(Math.abs(y01 * x21 - y21 * x01) > PathContext.Epsilon) || r === 0) {\n      // colinear control points\n      this.d += \"L\" + Format.decimal(x1, this.precision)\n              + \",\" + Format.decimal(y1, this.precision);\n      this.x1 = x1;\n      this.y1 = y1;\n    } else {\n      const x20 = x2 - x0;\n      const y20 = y2 - y0;\n      const l21_2 = x21 * x21 + y21 * y21;\n      const l20_2 = x20 * x20 + y20 * y20;\n      const l21 = Math.sqrt(l21_2);\n      const l01 = Math.sqrt(l01_2);\n      const l = r * Math.tan((Math.PI - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2);\n      const t01 = l / l01;\n      const t21 = l / l21;\n      if (Math.abs(t01 - 1) > PathContext.Epsilon) {\n        // line to start tangent\n        this.d += \"L\" + Format.decimal(x1 + t01 * x01, this.precision)\n                + \",\" + Format.decimal(y1 + t01 * y01, this.precision);\n      }\n      x1 = x1 + t21 * x21;\n      y1 = y1 + t21 * y21;\n      const rs = Format.decimal(r, this.precision);\n      this.d += \"A\" + rs\n              + \",\" + rs\n              + \",0\"\n              + \",0\"\n              + \",\" + (y01 * x20 > x01 * y20 ? \"1\" : \"0\")\n              + \",\" + Format.decimal(x1, this.precision)\n              + \",\" + Format.decimal(y1, this.precision);\n      this.x1 = x1;\n      this.y1 = y1;\n    }\n  }\n\n  arc(cx: number, cy: number, r: number, a0: number, a1: number, ccw: boolean = false): void {\n    const dx = r * Math.cos(a0);\n    const dy = r * Math.sin(a0);\n    const x0 = cx + dx;\n    const y0 = cy + dy;\n    const cw = 1 ^ +ccw;\n    let da = ccw ? a0 - a1 : a1 - a0;\n\n    if (r < 0) {\n      throw new Error(\"negative radius: \" + r);\n    } else if (isNaN(this.x1)) {\n      // empty path\n      this.d += \"M\" + Format.decimal(x0, this.precision)\n              + \",\" + Format.decimal(y0, this.precision);\n    } else if (Math.abs(this.x1 - x0) > PathContext.Epsilon || Math.abs(this.y1 - y0) > PathContext.Epsilon) {\n      // line to start point\n      this.d += \"L\" + Format.decimal(x0, this.precision)\n              + \",\" + Format.decimal(y0, this.precision);\n    }\n\n    if (r === 0) {\n      return;\n    } else if (da < 0) {\n      // reverse direction\n      da = da % (2 * Math.PI) + 2 * Math.PI;\n    }\n\n    const rs = Format.decimal(r, this.precision);\n    if (da > 2 * Math.PI - PathContext.Epsilon) {\n      // complete circle\n      this.d += \"A\" + rs\n              + \",\" + rs\n              + \",0\"\n              + \",1\"\n              + \",\" + (cw ? \"1\" : \"0\")\n              + \",\" + Format.decimal(x0, this.precision)\n              + \",\" + Format.decimal(y0, this.precision);\n      this.x1 = x0;\n      this.y1 = y0;\n    } else if (da > PathContext.Epsilon) {\n      // non-zero arc angle\n      const x1 = cx + r * Math.cos(a1);\n      const y1 = cy + r * Math.sin(a1);\n      this.d += \"A\" + rs\n              + \",\" + rs\n              + \",0\"\n              + \",\" + (da >= Math.PI ? \"1\" : \"0\")\n              + \",\" + (cw ? \"1\" : \"0\")\n              + \",\" + Format.decimal(x1, this.precision)\n              + \",\" + Format.decimal(y1, this.precision);\n      this.x1 = x1;\n      this.y1 = y1;\n    }\n  }\n\n  rect(x: number, y: number, w: number, h: number): void {\n    this.d += \"M\" + Format.decimal(x, this.precision)\n            + \",\" + Format.decimal(y, this.precision)\n            + \"h\" + Format.decimal(w, this.precision)\n            + \"v\" + Format.decimal(h, this.precision)\n            + \"h\" + Format.decimal(-w, this.precision)\n            + \"Z\";\n    this.x0 = x;\n    this.y0 = y;\n    this.x1 = x;\n    this.y1 = y;\n  }\n\n  ellipse(cx: number, cy: number, rx: number, ry: number, phi: number, a0: number, a1: number, ccw: boolean = false): void {\n    const cosPhi = Math.cos(phi);\n    const sinPhi = Math.sin(phi);\n    const cosA1 = Math.cos(a1);\n    const sinA1 = Math.sin(a1);\n    const x1 = cosPhi * rx * cosA1 - sinPhi * ry * sinA1 + cx;\n    const y1 = sinPhi * rx * cosA1 + cosPhi * ry * sinA1 + cy;\n    const da = a1 - a0;\n    const large = Math.abs(da) > Math.PI;\n    const sweep = !ccw;\n    this.d += \"A\" + Format.decimal(rx, this.precision)\n            + \",\" + Format.decimal(ry, this.precision)\n            + \",\" + Format.decimal(phi, this.anglePrecision)\n            + \",\" + (large ? \"1\" : \"0\")\n            + \",\" + (sweep ? \"1\" : \"0\")\n            + \",\" + Format.decimal(x1, this.precision)\n            + \",\" + Format.decimal(y1, this.precision);\n    this.x1 = x1;\n    this.y1 = y1;\n  }\n\n  closePath(): void {\n    if (!isNaN(this.x1)) {\n      this.d += \"Z\";\n      this.x1 = this.x0;\n      this.y1 = this.y0;\n    }\n  }\n\n  toString(): string {\n    return this.d;\n  }\n\n  /** @internal */\n  static Epsilon: number = 1e-6;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Transform} from \"@swim/math\";\nimport {DrawingRenderer} from \"../drawing/DrawingRenderer\";\nimport type {PathContext} from \"./PathContext\";\n\n/** @public */\nexport class PathRenderer extends DrawingRenderer {\n  constructor(context: PathContext) {\n    super();\n    this.context = context;\n  }\n\n  readonly context: PathContext;\n\n  override get transform(): Transform {\n    return Transform.identity();\n  }\n\n  override get pixelRatio(): number {\n    return 1;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {DrawingRenderer} from \"../drawing/DrawingRenderer\";\nimport type {PaintingContext} from \"./PaintingContext\";\n\n/** @public */\nexport abstract class PaintingRenderer extends DrawingRenderer {\n  abstract override readonly context: PaintingContext;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport {Affinity, Property} from \"@swim/component\";\nimport {ViewNode, SvgView} from \"@swim/dom\";\nimport {PathContext} from \"../path/PathContext\";\nimport type {PaintingFillRule, PaintingContext} from \"../painting/PaintingContext\";\n\n/** @public */\nexport class SvgContext implements PaintingContext {\n  constructor(view: SvgView) {\n    this.view = view;\n    this.precision = -1;\n    this.pathContext = null;\n    this.pathView = null;\n    this.pathFlags = 0;\n    this.fillStyle = \"\";\n    this.strokeStyle = \"\";\n    this.lineWidth = 1;\n    this.lineCap = \"butt\";\n    this.lineJoin = \"miter\";\n    this.miterLimit = 10;\n    this.lineDashOffset = 0;\n    this.lineDash = [];\n  }\n\n  readonly view: SvgView;\n\n  readonly precision: number;\n\n  setPrecision(precision: number): void {\n    (this as Mutable<this>).precision = precision;\n  }\n\n  /** @internal */\n  readonly pathContext: PathContext | null;\n\n  protected getPathContext(): PathContext {\n    const pathContext = this.pathContext;\n    if (pathContext == null) {\n      throw new Error(\"no path\");\n    }\n    return pathContext;\n  }\n\n  protected getOrCreatePathContext(): PathContext {\n    let pathContext = this.pathContext;\n    if (pathContext === null) {\n      pathContext = this.createPathContext();\n      (this as Mutable<this>).pathContext = pathContext;\n      if (this.pathView === null || this.pathFlags !== 0) {\n        this.finalizePath();\n        const pathView = this.nextPathView();\n        this.setPathView(pathView);\n      }\n      this.setPathFlags(0);\n    }\n    return pathContext;\n  }\n\n  protected createPathContext(): PathContext {\n    const pathContext = new PathContext();\n    pathContext.setPrecision(this.precision);\n    return pathContext;\n  }\n\n  /** @internal */\n  readonly pathView: SvgView | null;\n\n  /** @internal */\n  setPathView(pathView: SvgView | null): void {\n    (this as Mutable<this>).pathView = pathView;\n  }\n\n  /** @internal */\n  nextPathView(): SvgView | null {\n    let pathView = this.pathView;\n    if (pathView !== null) {\n      let nextNode = pathView.node.nextSibling;\n      pathView = null;\n      while (nextNode !== null) {\n        if (nextNode instanceof SVGPathElement) {\n          pathView = SvgView.fromNode(nextNode);\n          break;\n        }\n        nextNode = nextNode.nextSibling;\n      }\n    }\n    return pathView;\n  }\n\n  /** @internal */\n  finalizePath(): void {\n    const pathView = this.pathView;\n    if (pathView !== null) {\n      const pathFlags = this.pathFlags;\n      if ((pathFlags & SvgContext.FillFlag) === 0) {\n        const fill = pathView.getFastener(\"fill\", Property);\n        if (fill !== null) {\n          fill.setValue(null, Affinity.Intrinsic);\n        }\n      }\n      if ((pathFlags & SvgContext.FillRuleFlag) === 0) {\n        const fillRule = pathView.getFastener(\"fillRule\", Property);\n        if (fillRule !== null) {\n          fillRule.setValue(void 0, Affinity.Intrinsic);\n        }\n      }\n      if ((pathFlags & SvgContext.StrokeFlag) === 0) {\n        const stroke = pathView.getFastener(\"stroke\", Property);\n        if (stroke !== null) {\n          stroke.setValue(null, Affinity.Intrinsic);\n        }\n      }\n      if ((pathFlags & SvgContext.PathFlag) === 0) {\n        const d = pathView.getFastener(\"d\", Property);\n        if (d !== null) {\n          d.setValue(void 0, Affinity.Intrinsic);\n        }\n      }\n    }\n  }\n\n  /** @internal */\n  readonly pathFlags: number;\n\n  /** @internal */\n  setPathFlags(pathFlags: number): void {\n    (this as Mutable<this>).pathFlags = pathFlags;\n  }\n\n  fillStyle: string | CanvasGradient | CanvasPattern;\n\n  strokeStyle: string | CanvasGradient | CanvasPattern;\n\n  lineWidth: number;\n\n  lineCap: CanvasLineCap;\n\n  lineJoin: CanvasLineJoin;\n\n  miterLimit: number;\n\n  lineDashOffset: number;\n\n  /** @internal */\n  lineDash: number[];\n\n  getLineDash(): number[] {\n    return this.lineDash;\n  }\n\n  setLineDash(segments: number[]): void {\n    this.lineDash = segments;\n  }\n\n  beginPath(): void {\n    (this as Mutable<this>).pathContext = null;\n  }\n\n  moveTo(x: number, y: number): void {\n    this.getOrCreatePathContext().moveTo(x, y);\n  }\n\n  lineTo(x: number, y: number): void {\n    this.getPathContext().lineTo(x, y);\n  }\n\n  quadraticCurveTo(x1: number, y1: number, x: number, y: number): void {\n    this.getPathContext().quadraticCurveTo(x1, y1, x, y);\n  }\n\n  bezierCurveTo(x1: number, y1: number, x2: number, y2: number, x: number, y: number): void {\n    this.getPathContext().bezierCurveTo(x1, y1, x2, y2, x, y);\n  }\n\n  arcTo(x1: number, y1: number, x2: number, y2: number, r: number): void {\n    this.getPathContext().arcTo(x1, y1, x2, y2, r);\n  }\n\n  arc(cx: number, cy: number, r: number, a0: number, a1: number, ccw?: boolean): void {\n    this.getOrCreatePathContext().arc(cx, cy, r, a0, a1, ccw);\n  }\n\n  ellipse(cx: number, cy: number, rx: number, ry: number, phi: number, a0: number, a1: number, ccw?: boolean): void {\n    this.getOrCreatePathContext().ellipse(cx, cy, rx, ry, phi, a0, a1, ccw);\n  }\n\n  rect(x: number, y: number, w: number, h: number): void {\n    this.getOrCreatePathContext().rect(x, y, w, h);\n  }\n\n  closePath(): void {\n    const pathContext = this.pathContext;\n    if (pathContext !== null) {\n      pathContext.closePath();\n    }\n  }\n\n  fill(fillRule?: PaintingFillRule): void {\n    const fillStyle = this.fillStyle;\n    if (typeof fillStyle === \"string\") {\n      let pathView = this.pathView;\n      if (pathView !== null && (this.pathFlags & SvgContext.FillFlag) !== 0) {\n        this.finalizePath();\n        pathView = this.nextPathView();\n        this.setPathView(pathView);\n      }\n      let created = false;\n      if (pathView === null) {\n        pathView = SvgView.fromTag(\"path\");\n        this.setPathView(pathView);\n        created = true;\n      }\n      pathView.fill.setState(fillStyle, Affinity.Intrinsic);\n      this.setPathFlags(this.pathFlags | SvgContext.FillFlag);\n      if (fillRule !== void 0) {\n        pathView.fillRule.setState(fillRule, Affinity.Intrinsic);\n        this.setPathFlags(this.pathFlags | SvgContext.FillRuleFlag);\n      }\n      if ((this.pathFlags & SvgContext.PathFlag) === 0) {\n        const pathString = this.getPathContext().toString();\n        pathView.d.setState(pathString, Affinity.Intrinsic);\n        this.setPathFlags(this.pathFlags | SvgContext.PathFlag);\n      }\n      if (created) {\n        this.view.appendChild(pathView);\n      }\n    } else {\n      throw new Error(\"unsupported fill style: \" + fillStyle);\n    }\n  }\n\n  stroke(): void {\n    const strokeStyle = this.strokeStyle;\n    const lineWidth = this.lineWidth;\n    if (typeof strokeStyle === \"string\" && lineWidth !== 0 && isFinite(lineWidth)) {\n      let pathView = this.pathView;\n      if (pathView !== null && (this.pathFlags & SvgContext.StrokeFlag) !== 0) {\n        this.finalizePath();\n        pathView = this.nextPathView();\n        this.setPathView(pathView);\n      }\n      let created = false;\n      if (pathView === null) {\n        pathView = SvgView.fromTag(\"path\");\n        this.setPathView(pathView);\n        created = true;\n      }\n      pathView.stroke.setState(strokeStyle, Affinity.Intrinsic);\n      pathView.strokeWidth.setState(lineWidth, Affinity.Intrinsic);\n      pathView.strokeLinecap.setState(this.lineCap, Affinity.Intrinsic);\n      pathView.strokeLinejoin.setState(this.lineJoin, Affinity.Intrinsic);\n      if (this.lineJoin === \"miter\") {\n        pathView.strokeMiterlimit.setState(this.miterLimit, Affinity.Intrinsic);\n      } else {\n        pathView.strokeMiterlimit.setState(void 0, Affinity.Intrinsic);\n      }\n      if (this.lineDash.length !== 0) {\n        let dash = \"\";\n        for (let i = 0; i < this.lineDash.length; i += 1) {\n          if (i !== 0) {\n            dash += \" \";\n          }\n          dash += this.lineDash[i];\n        }\n        pathView.strokeDasharray.setState(dash, Affinity.Intrinsic);\n        if (this.lineDashOffset !== 0) {\n          pathView.strokeDashoffset.setState(this.lineDashOffset, Affinity.Intrinsic);\n        } else {\n          pathView.strokeDashoffset.setState(void 0, Affinity.Intrinsic);\n        }\n      } else {\n        pathView.strokeDasharray.setState(void 0, Affinity.Intrinsic);\n        pathView.strokeDashoffset.setState(void 0, Affinity.Intrinsic);\n      }\n      this.setPathFlags(this.pathFlags | SvgContext.StrokeFlag);\n      if ((this.pathFlags & SvgContext.PathFlag) === 0) {\n        const pathString = this.getPathContext().toString();\n        pathView.d.setState(pathString, Affinity.Intrinsic);\n        this.setPathFlags(this.pathFlags | SvgContext.PathFlag);\n      }\n      if (created) {\n        this.view.appendChild(pathView);\n      }\n    } else {\n      throw new Error(\"unsupported stroke style: \" + strokeStyle);\n    }\n  }\n\n  beginSvg(): void {\n    let pathView: SvgView | null = null;\n    let nextNode = this.view.node.firstChild;\n    while (nextNode !== null) {\n      if (nextNode instanceof SVGPathElement) {\n        pathView = SvgView.fromNode(nextNode);\n        break;\n      }\n      nextNode = nextNode.nextSibling;\n    }\n    this.setPathView(pathView);\n    this.setPathFlags(0);\n  }\n\n  finalizeSvg(): void {\n    let pathView = this.pathView;\n    if (pathView !== null) {\n      let nextNode = pathView.node.nextSibling;\n      if (pathView.fill.state === null && pathView.stroke.state === null) {\n        (this as Mutable<this>).pathView = null;\n        pathView.remove();\n      }\n      pathView = null;\n      while (nextNode !== null) {\n        const nextView = (nextNode as ViewNode).view;\n        nextNode = nextNode.nextSibling;\n        if (nextView !== void 0) {\n          nextView.remove();\n        }\n      }\n    }\n  }\n\n  /** @internal */\n  static readonly FillFlag: number = 1 << 0;\n  /** @internal */\n  static readonly FillRuleFlag: number = 1 << 1;\n  /** @internal */\n  static readonly StrokeFlag: number = 1 << 2;\n  /** @internal */\n  static readonly PathFlag: number = 1 << 3;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Transform} from \"@swim/math\";\nimport {PaintingRenderer} from \"../painting/PaintingRenderer\";\nimport type {SvgContext} from \"./SvgContext\";\n\n/** @public */\nexport class SvgRenderer extends PaintingRenderer {\n  constructor(context: SvgContext) {\n    super();\n    this.context = context;\n  }\n\n  override readonly context: SvgContext;\n\n  override get transform(): Transform {\n    return Transform.identity();\n  }\n\n  override get pixelRatio(): number {\n    return 1;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {Transform} from \"@swim/math\";\nimport {PaintingRenderer} from \"../painting/PaintingRenderer\";\nimport type {CanvasContext} from \"./CanvasContext\";\n\n/** @public */\nexport class CanvasRenderer extends PaintingRenderer {\n  constructor(context: CanvasContext, transform: Transform, pixelRatio: number) {\n    super();\n    this.context = context;\n    this.transform = transform;\n    this.pixelRatio = pixelRatio;\n  }\n\n  override readonly context: CanvasContext;\n\n  override readonly transform: Transform;\n\n  setTransform(transform: Transform): void {\n    (this as Mutable<this>).transform = transform;\n  }\n\n  override readonly pixelRatio: number;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {GraphicsRenderer} from \"../graphics/GraphicsRenderer\";\nimport type {WebGLContext} from \"./WebGLContext\";\n\n/** @public */\nexport class WebGLRenderer extends GraphicsRenderer {\n  constructor(context: WebGLContext, pixelRatio?: number) {\n    super();\n    this.context = context;\n    this.pixelRatio = pixelRatio !== void 0 ? pixelRatio : window.devicePixelRatio || 1;\n  }\n\n  readonly context: WebGLContext;\n\n  readonly pixelRatio: number;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, Arrays, ObserverType} from \"@swim/util\";\nimport {Affinity, Provider} from \"@swim/component\";\nimport {R2Box, Transform} from \"@swim/math\";\nimport {\n  ViewContextType,\n  ViewContext,\n  ViewFlags,\n  View,\n  ViewWillRender,\n  ViewDidRender,\n  ViewWillRasterize,\n  ViewDidRasterize,\n  ViewWillComposite,\n  ViewDidComposite,\n  ViewEvent,\n  ViewMouseEventInit,\n  ViewMouseEvent,\n  ViewPointerEventInit,\n  ViewPointerEvent,\n  ViewTouchInit,\n  ViewTouch,\n  ViewTouchEvent,\n} from \"@swim/view\";\nimport {HtmlViewInit, HtmlView} from \"@swim/dom\";\nimport {SpriteService} from \"../sprite/SpriteService\";\nimport type {AnyGraphicsRenderer, GraphicsRendererType, GraphicsRenderer} from \"../graphics/GraphicsRenderer\";\nimport type {GraphicsViewContext} from \"../graphics/GraphicsViewContext\";\nimport {GraphicsView} from \"../graphics/GraphicsView\";\nimport {WebGLRenderer} from \"../webgl/WebGLRenderer\";\nimport {CanvasRenderer} from \"./CanvasRenderer\";\nimport type {CanvasViewObserver} from \"./CanvasViewObserver\";\n\n/** @internal */\nexport type CanvasFlags = number;\n\n/** @public */\nexport interface CanvasViewInit extends HtmlViewInit {\n  renderer?: AnyGraphicsRenderer;\n  clickEventsEnabled?: boolean;\n  wheelEventsEnabled?: boolean;\n  mouseEventsEnabled?: boolean;\n  pointerEventsEnabled?: boolean;\n  touchEventsEnabled?: boolean;\n}\n\n/** @public */\nexport class CanvasView extends HtmlView {\n  constructor(node: HTMLCanvasElement) {\n    super(node);\n    Object.defineProperty(this, \"renderer\", { // override getter\n      value: this.createRenderer(),\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n    this.viewFrame = R2Box.undefined();\n    this.canvasFlags = CanvasView.ClickEventsFlag;\n    this.eventNode = node;\n    this.mouse = null;\n    this.pointers = null;\n    this.touches = null;\n\n    this.onClick = this.onClick.bind(this);\n    this.onDblClick = this.onDblClick.bind(this);\n    this.onContextMenu = this.onContextMenu.bind(this);\n\n    this.onWheel = this.onWheel.bind(this);\n\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n\n    this.onPointerEnter = this.onPointerEnter.bind(this);\n    this.onPointerLeave = this.onPointerLeave.bind(this);\n    this.onPointerDown = this.onPointerDown.bind(this);\n    this.onPointerMove = this.onPointerMove.bind(this);\n    this.onPointerUp = this.onPointerUp.bind(this);\n    this.onPointerCancel = this.onPointerCancel.bind(this);\n\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchMove = this.onTouchMove.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.onTouchCancel = this.onTouchCancel.bind(this);\n\n    this.initCanvas();\n  }\n\n  override readonly observerType?: Class<CanvasViewObserver>;\n\n  override readonly contextType?: Class<GraphicsViewContext>;\n\n  override readonly node!: HTMLCanvasElement;\n\n  protected initCanvas(): void {\n    this.position.setState(\"absolute\", Affinity.Intrinsic);\n  }\n\n  protected override onMount(): void {\n    super.onMount();\n    this.attachEvents(this.eventNode);\n  }\n\n  protected override onUnmount(): void {\n    this.detachEvents(this.eventNode);\n    super.onUnmount();\n  }\n\n  protected override needsUpdate(updateFlags: ViewFlags, immediate: boolean): ViewFlags {\n    updateFlags = super.needsUpdate(updateFlags, immediate);\n    updateFlags |= View.NeedsRender | View.NeedsComposite;\n    this.setFlags(this.flags | (View.NeedsRender | View.NeedsComposite));\n    return updateFlags;\n  }\n\n  protected override needsProcess(processFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    if ((processFlags & View.ProcessMask) !== 0) {\n      this.requireUpdate(View.NeedsRender | View.NeedsComposite);\n    }\n    return processFlags;\n  }\n\n  protected override onResize(viewContext: ViewContextType<this>): void {\n    super.onResize(viewContext);\n    this.resizeCanvas(this.node);\n    this.resetRenderer();\n    this.requireUpdate(View.NeedsLayout | View.NeedsRender | View.NeedsComposite);\n  }\n\n  protected override onScroll(viewContext: ViewContextType<this>): void {\n    super.onScroll(viewContext);\n    this.setCulled(!this.intersectsViewport());\n  }\n\n  protected override didDisplay(displayFlags: ViewFlags, viewContext: ViewContextType<this>): void {\n    this.detectHitTargets();\n    super.didDisplay(displayFlags, viewContext);\n  }\n\n  protected override onRender(viewContext: ViewContextType<this>): void {\n    this.clearCanvas();\n  }\n\n  protected override needsDisplay(displayFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    displayFlags |= View.NeedsRender | View.NeedsComposite;\n    return displayFlags;\n  }\n\n  @Provider({\n    type: SpriteService,\n    observes: false,\n    service: SpriteService.global(),\n  })\n  readonly spriteProvider!: Provider<this, SpriteService>;\n\n  get pixelRatio(): number {\n    return window.devicePixelRatio || 1;\n  }\n\n  readonly renderer!: GraphicsRenderer | null;\n\n  setRenderer(renderer: AnyGraphicsRenderer | null): void {\n    if (typeof renderer === \"string\") {\n      renderer = this.createRenderer(renderer as GraphicsRendererType);\n    }\n    (this as Mutable<this>).renderer = renderer;\n    this.resetRenderer();\n  }\n\n  protected createRenderer(rendererType: GraphicsRendererType = \"canvas\"): GraphicsRenderer | null {\n    if (rendererType === \"canvas\") {\n      const context = this.node.getContext(\"2d\");\n      if (context !== null) {\n        const pixelRatio = this.pixelRatio;\n        const transform = Transform.affine(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return new CanvasRenderer(context, transform, pixelRatio);\n      } else {\n        throw new Error(\"Failed to create canvas rendering context\");\n      }\n    } else if (rendererType === \"webgl\") {\n      const context = this.node.getContext(\"webgl\");\n      if (context !== null) {\n        return new WebGLRenderer(context, this.pixelRatio);\n      } else {\n        throw new Error(\"Failed to create webgl rendering context\");\n      }\n    } else {\n      throw new Error(\"Failed to create \" + rendererType + \" renderer\");\n    }\n  }\n\n  /** @internal */\n  readonly canvasFlags: CanvasFlags;\n\n  /** @internal */\n  setCanvasFlags(canvasFlags: CanvasFlags): void {\n    (this as Mutable<this>).canvasFlags = canvasFlags;\n  }\n\n  override extendViewContext(viewContext: ViewContext): ViewContextType<this> {\n    const canvasViewContext = Object.create(viewContext);\n    canvasViewContext.viewFrame = this.viewFrame;\n    canvasViewContext.renderer = this.renderer;\n    return canvasViewContext;\n  }\n\n  /** @internal */\n  readonly viewFrame: R2Box;\n\n  setViewFrame(viewFrame: R2Box | null): void {\n    // nop\n  }\n\n  get viewBounds(): R2Box {\n    return this.viewFrame;\n  }\n\n  get hitBounds(): R2Box {\n    return this.viewFrame;\n  }\n\n  cascadeHitTest(x: number, y: number, baseViewContext?: ViewContext): GraphicsView | null {\n    if (!this.hidden && !this.culled && !this.intangible) {\n      const hitBounds = this.hitBounds;\n      if (hitBounds.contains(x, y)) {\n        if (baseViewContext === void 0) {\n          baseViewContext = this.superViewContext;\n        }\n        const viewContext = this.extendViewContext(baseViewContext);\n        let hit = this.hitTestChildren(x, y, viewContext);\n        if (hit === null) {\n          const outerViewContext = ViewContext.current;\n          try {\n            ViewContext.current = viewContext;\n            this.setFlags(this.flags | View.ContextualFlag);\n            hit = this.hitTest(x, y, viewContext);\n          } finally {\n            this.setFlags(this.flags & ~View.ContextualFlag);\n            ViewContext.current = outerViewContext;\n          }\n        }\n        return hit;\n      }\n    }\n    return null;\n  }\n\n  protected hitTest(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    return null;\n  }\n\n  protected hitTestChildren(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    let child = this.firstChild;\n    while (child !== null) {\n      if (child instanceof GraphicsView) {\n        const hit = this.hitTestChild(child, x, y, viewContext);\n        if (hit !== null) {\n          return hit;\n        }\n      }\n      child = child.nextSibling;\n    }\n    return null;\n  }\n\n  protected hitTestChild(childView: GraphicsView, x: number, y: number,\n                         viewContext: ViewContextType<this>): GraphicsView | null {\n    return childView.cascadeHitTest(x, y, viewContext);\n  }\n\n  /** @internal */\n  protected detectHitTargets(clientBounds?: R2Box): void {\n    if ((this.canvasFlags & CanvasView.MouseEventsFlag) !== 0) {\n      const mouse = this.mouse;\n      if (mouse !== null) {\n        if (clientBounds === void 0) {\n          clientBounds = this.clientBounds;\n        }\n        this.detectMouseTarget(mouse, this.clientBounds);\n      }\n    }\n    if ((this.canvasFlags & CanvasView.PointerEventsFlag) !== 0) {\n      const pointers = this.pointers;\n      for (const id in pointers) {\n        const pointer = pointers[id]!;\n        if (clientBounds === void 0) {\n          clientBounds = this.clientBounds;\n        }\n        this.detectPointerTarget(pointer, clientBounds);\n      }\n    }\n  }\n\n  readonly eventNode: HTMLElement;\n\n  setEventNode(newEventNode: HTMLElement | null): void {\n    if (newEventNode === null) {\n      newEventNode = this.node;\n    }\n    const oldEventNode = this.eventNode;\n    if (oldEventNode !== newEventNode) {\n      this.detachEvents(oldEventNode);\n      (this as Mutable<this>).eventNode = newEventNode;\n      this.attachEvents(newEventNode);\n    }\n  }\n\n  clickEventsEnabled(): boolean;\n  clickEventsEnabled(clickEvents: boolean): this;\n  clickEventsEnabled(newClickEvents?: boolean): boolean | this {\n    const oldClickEvents = (this.canvasFlags & CanvasView.ClickEventsFlag) !== 0;\n    if (newClickEvents === void 0) {\n      return oldClickEvents;\n    } else {\n      if (newClickEvents && !oldClickEvents) {\n        this.setCanvasFlags(this.canvasFlags | CanvasView.ClickEventsFlag);\n        this.attachClickEvents(this.eventNode);\n      } else if (!newClickEvents && oldClickEvents) {\n        this.setCanvasFlags(this.canvasFlags & ~CanvasView.ClickEventsFlag);\n        this.detachClickEvents(this.eventNode);\n      }\n      return this;\n    }\n  }\n\n  wheelEventsEnabled(): boolean;\n  wheelEventsEnabled(wheelEvents: boolean): this;\n  wheelEventsEnabled(newWheelEvents?: boolean): boolean | this {\n    const oldWheelEvents = (this.canvasFlags & CanvasView.WheelEventsFlag) !== 0;\n    if (newWheelEvents === void 0) {\n      return oldWheelEvents;\n    } else {\n      if (newWheelEvents && !oldWheelEvents) {\n        this.setCanvasFlags(this.canvasFlags | CanvasView.WheelEventsFlag);\n        this.attachWheelEvents(this.eventNode);\n      } else if (!newWheelEvents && oldWheelEvents) {\n        this.setCanvasFlags(this.canvasFlags & ~CanvasView.WheelEventsFlag);\n        this.detachWheelEvents(this.eventNode);\n      }\n      return this;\n    }\n  }\n\n  mouseEventsEnabled(): boolean;\n  mouseEventsEnabled(mouseEvents: boolean): this;\n  mouseEventsEnabled(newMouseEvents?: boolean): boolean | this {\n    const oldMouseEvents = (this.canvasFlags & CanvasView.MouseEventsFlag) !== 0;\n    if (newMouseEvents === void 0) {\n      return oldMouseEvents;\n    } else {\n      if (newMouseEvents && !oldMouseEvents) {\n        this.setCanvasFlags(this.canvasFlags | CanvasView.MouseEventsFlag);\n        this.attachPassiveMouseEvents(this.eventNode);\n      } else if (!newMouseEvents && oldMouseEvents) {\n        this.setCanvasFlags(this.canvasFlags & ~CanvasView.MouseEventsFlag);\n        this.detachPassiveMouseEvents(this.eventNode);\n      }\n      return this;\n    }\n  }\n\n  pointerEventsEnabled(): boolean;\n  pointerEventsEnabled(pointerEvents: boolean): this;\n  pointerEventsEnabled(newPointerEvents?: boolean): boolean | this {\n    const oldPointerEvents = (this.canvasFlags & CanvasView.PointerEventsFlag) !== 0;\n    if (newPointerEvents === void 0) {\n      return oldPointerEvents;\n    } else {\n      if (newPointerEvents && !oldPointerEvents) {\n        this.setCanvasFlags(this.canvasFlags | CanvasView.PointerEventsFlag);\n        this.attachPassivePointerEvents(this.eventNode);\n      } else if (!newPointerEvents && oldPointerEvents) {\n        this.setCanvasFlags(this.canvasFlags & ~CanvasView.PointerEventsFlag);\n        this.detachPassivePointerEvents(this.eventNode);\n      }\n      return this;\n    }\n  }\n\n  touchEventsEnabled(): boolean;\n  touchEventsEnabled(touchEvents: boolean): this;\n  touchEventsEnabled(newTouchEvents?: boolean): boolean | this {\n    const oldTouchEvents = (this.canvasFlags & CanvasView.TouchEventsFlag) !== 0;\n    if (newTouchEvents === void 0) {\n      return oldTouchEvents;\n    } else {\n      if (newTouchEvents && !oldTouchEvents) {\n        this.setCanvasFlags(this.canvasFlags | CanvasView.TouchEventsFlag);\n        this.attachPassiveTouchEvents(this.eventNode);\n      } else if (!newTouchEvents && oldTouchEvents) {\n        this.setCanvasFlags(this.canvasFlags & ~CanvasView.TouchEventsFlag);\n        this.detachPassiveTouchEvents(this.eventNode);\n      }\n      return this;\n    }\n  }\n\n  /** @internal */\n  handleEvent(event: ViewEvent): void {\n    // nop\n  }\n\n  /** @internal */\n  bubbleEvent(event: ViewEvent): View | null {\n    this.handleEvent(event);\n    return this;\n  }\n\n  /** @internal */\n  protected attachEvents(eventNode: HTMLElement): void {\n    if ((this.canvasFlags & CanvasView.ClickEventsFlag) !== 0) {\n      this.attachClickEvents(eventNode);\n    }\n    if ((this.canvasFlags & CanvasView.WheelEventsFlag) !== 0) {\n      this.attachWheelEvents(eventNode);\n    }\n    if ((this.canvasFlags & CanvasView.MouseEventsFlag) !== 0) {\n      this.attachPassiveMouseEvents(eventNode);\n    }\n    if ((this.canvasFlags & CanvasView.PointerEventsFlag) !== 0) {\n      this.attachPassivePointerEvents(eventNode);\n    }\n    if ((this.canvasFlags & CanvasView.TouchEventsFlag) !== 0) {\n      this.attachPassiveTouchEvents(eventNode);\n    }\n  }\n\n  /** @internal */\n  protected detachEvents(eventNode: HTMLElement): void {\n    this.detachClickEvents(eventNode);\n\n    this.detachWheelEvents(eventNode);\n\n    this.detachPassiveMouseEvents(eventNode);\n    this.detachActiveMouseEvents(eventNode);\n\n    this.detachPassivePointerEvents(eventNode);\n    this.detachActivePointerEvents(eventNode);\n\n    this.detachPassiveTouchEvents(eventNode);\n    this.detachActiveTouchEvents(eventNode);\n  }\n\n  /** @internal */\n  fireEvent(event: ViewEvent, clientX: number, clientY: number): GraphicsView | null {\n    const clientBounds = this.clientBounds;\n    if (clientBounds.contains(clientX, clientY)) {\n      const x = clientX - clientBounds.x;\n      const y = clientY - clientBounds.y;\n      const hit = this.cascadeHitTest(x, y);\n      if (hit !== null) {\n        event.targetView = hit;\n        hit.bubbleEvent(event);\n        return hit;\n      }\n    }\n    return null;\n  }\n\n  /** @internal */\n  protected attachClickEvents(eventNode: HTMLElement): void {\n    eventNode.addEventListener(\"click\", this.onClick);\n    eventNode.addEventListener(\"dblclick\", this.onDblClick);\n    eventNode.addEventListener(\"contextmenu\", this.onContextMenu);\n  }\n\n  /** @internal */\n  protected detachClickEvents(eventNode: HTMLElement): void {\n    eventNode.removeEventListener(\"click\", this.onClick);\n    eventNode.removeEventListener(\"dblclick\", this.onDblClick);\n    eventNode.removeEventListener(\"contextmenu\", this.onContextMenu);\n  }\n\n  /** @internal */\n  protected attachWheelEvents(eventNode: HTMLElement): void {\n    eventNode.addEventListener(\"wheel\", this.onWheel);\n  }\n\n  /** @internal */\n  protected detachWheelEvents(eventNode: HTMLElement): void {\n    eventNode.removeEventListener(\"wheel\", this.onWheel);\n  }\n\n  /** @internal */\n  protected attachPassiveMouseEvents(eventNode: HTMLElement): void {\n    eventNode.addEventListener(\"mouseenter\", this.onMouseEnter);\n    eventNode.addEventListener(\"mouseleave\", this.onMouseLeave);\n    eventNode.addEventListener(\"mousedown\", this.onMouseDown);\n  }\n\n  /** @internal */\n  protected detachPassiveMouseEvents(eventNode: HTMLElement): void {\n    eventNode.removeEventListener(\"mouseenter\", this.onMouseEnter);\n    eventNode.removeEventListener(\"mouseleave\", this.onMouseLeave);\n    eventNode.removeEventListener(\"mousedown\", this.onMouseDown);\n  }\n\n  /** @internal */\n  protected attachActiveMouseEvents(eventNode: HTMLElement): void {\n    document.body.addEventListener(\"mousemove\", this.onMouseMove);\n    document.body.addEventListener(\"mouseup\", this.onMouseUp);\n  }\n\n  /** @internal */\n  protected detachActiveMouseEvents(eventNode: HTMLElement): void {\n    document.body.removeEventListener(\"mousemove\", this.onMouseMove);\n    document.body.removeEventListener(\"mouseup\", this.onMouseUp);\n  }\n\n  /** @internal */\n  readonly mouse: ViewMouseEventInit | null;\n\n  /** @internal */\n  protected updateMouse(mouse: ViewMouseEventInit, event: MouseEvent): void {\n    mouse.button = event.button;\n    mouse.buttons = event.buttons;\n    mouse.altKey = event.altKey;\n    mouse.ctrlKey = event.ctrlKey;\n    mouse.metaKey = event.metaKey;\n    mouse.shiftKey = event.shiftKey;\n\n    mouse.clientX = event.clientX;\n    mouse.clientY = event.clientY;\n    mouse.screenX = event.screenX;\n    mouse.screenY = event.screenY;\n    mouse.movementX = event.movementX;\n    mouse.movementY = event.movementY;\n\n    mouse.view = event.view;\n    mouse.detail = event.detail;\n    mouse.relatedTarget = event.relatedTarget;\n  }\n\n  /** @internal */\n  protected fireMouseEvent(event: MouseEvent): GraphicsView | null {\n    return this.fireEvent(event, event.clientX, event.clientY);\n  }\n\n  /** @internal */\n  protected onClick(event: MouseEvent): void {\n    const mouse = this.mouse;\n    if (mouse !== null) {\n      this.updateMouse(mouse, event);\n    }\n    this.fireMouseEvent(event);\n  }\n\n  /** @internal */\n  protected onDblClick(event: MouseEvent): void {\n    const mouse = this.mouse;\n    if (mouse !== null) {\n      this.updateMouse(mouse, event);\n    }\n    this.fireMouseEvent(event);\n  }\n\n  /** @internal */\n  protected onContextMenu(event: MouseEvent): void {\n    const mouse = this.mouse;\n    if (mouse !== null) {\n      this.updateMouse(mouse, event);\n    }\n    this.fireMouseEvent(event);\n  }\n\n  /** @internal */\n  protected onWheel(event: WheelEvent): void {\n    const mouse = this.mouse;\n    if (mouse !== null) {\n      this.updateMouse(mouse, event);\n    }\n    this.fireMouseEvent(event);\n  }\n\n  /** @internal */\n  protected onMouseEnter(event: MouseEvent): void {\n    let mouse = this.mouse;\n    if (mouse === null) {\n      this.attachActiveMouseEvents(this.eventNode);\n      mouse = {};\n      (this as Mutable<this>).mouse = mouse;\n    }\n    this.updateMouse(mouse, event);\n  }\n\n  /** @internal */\n  protected onMouseLeave(event: MouseEvent): void {\n    const mouse = this.mouse;\n    if (mouse !== null) {\n      (this as Mutable<this>).mouse = null;\n      this.detachActiveMouseEvents(this.eventNode);\n    }\n  }\n\n  /** @internal */\n  protected onMouseDown(event: MouseEvent): void {\n    let mouse = this.mouse;\n    if (mouse === null) {\n      this.attachActiveMouseEvents(this.eventNode);\n      mouse = {};\n      (this as Mutable<this>).mouse = mouse;\n    }\n    this.updateMouse(mouse, event);\n    this.fireMouseEvent(event);\n  }\n\n  /** @internal */\n  protected onMouseMove(event: MouseEvent): void {\n    let mouse = this.mouse;\n    if (mouse === null) {\n      mouse = {};\n      (this as Mutable<this>).mouse = mouse;\n    }\n    this.updateMouse(mouse, event);\n    const oldTargetView = mouse.targetView as GraphicsView | undefined;\n    let newTargetView: GraphicsView | null | undefined = this.fireMouseEvent(event);\n    if (newTargetView === null) {\n      newTargetView = void 0;\n    }\n    if (newTargetView !== oldTargetView) {\n      this.onMouseTargetChange(mouse, newTargetView, oldTargetView);\n    }\n  }\n\n  /** @internal */\n  protected onMouseUp(event: MouseEvent): void {\n    const mouse = this.mouse;\n    if (mouse !== null) {\n      this.updateMouse(mouse, event);\n    }\n    this.fireMouseEvent(event);\n  }\n\n  /** @internal */\n  protected onMouseTargetChange(mouse: ViewMouseEventInit, newTargetView: GraphicsView | undefined,\n                                oldTargetView: GraphicsView | undefined): void {\n    mouse.bubbles = true;\n    if (oldTargetView !== void 0) {\n      const outEvent = new MouseEvent(\"mouseout\", mouse) as ViewMouseEvent;\n      outEvent.targetView = oldTargetView;\n      outEvent.relatedTargetView = newTargetView;\n      oldTargetView.bubbleEvent(outEvent);\n    }\n    mouse.targetView = newTargetView;\n    if (newTargetView !== void 0) {\n      const overEvent = new MouseEvent(\"mouseover\", mouse) as ViewMouseEvent;\n      overEvent.targetView = newTargetView;\n      overEvent.relatedTargetView = oldTargetView;\n      newTargetView.bubbleEvent(overEvent);\n    }\n  }\n\n  /** @internal */\n  protected detectMouseTarget(mouse: ViewMouseEventInit, clientBounds: R2Box): void {\n    const clientX = mouse.clientX!;\n    const clientY = mouse.clientY!;\n    if (clientBounds.contains(clientX, clientY)) {\n      const x = clientX - clientBounds.x;\n      const y = clientY - clientBounds.y;\n      const oldTargetView = mouse.targetView as GraphicsView | undefined;\n      let newTargetView: GraphicsView | null | undefined = this.cascadeHitTest(x, y);\n      if (newTargetView === null) {\n        newTargetView = void 0;\n      }\n      if (newTargetView !== oldTargetView) {\n        this.onMouseTargetChange(mouse, newTargetView, oldTargetView);\n      }\n    }\n  }\n\n  /** @internal */\n  protected attachPassivePointerEvents(eventNode: HTMLElement): void {\n    eventNode.addEventListener(\"pointerenter\", this.onPointerEnter);\n    eventNode.addEventListener(\"pointerleave\", this.onPointerLeave);\n    eventNode.addEventListener(\"pointerdown\", this.onPointerDown);\n  }\n\n  /** @internal */\n  protected detachPassivePointerEvents(eventNode: HTMLElement): void {\n    eventNode.removeEventListener(\"pointerenter\", this.onPointerEnter);\n    eventNode.removeEventListener(\"pointerleave\", this.onPointerLeave);\n    eventNode.removeEventListener(\"pointerdown\", this.onPointerDown);\n  }\n\n  /** @internal */\n  protected attachActivePointerEvents(eventNode: HTMLElement): void {\n    document.body.addEventListener(\"pointermove\", this.onPointerMove);\n    document.body.addEventListener(\"pointerup\", this.onPointerUp);\n    document.body.addEventListener(\"pointercancel\", this.onPointerCancel);\n  }\n\n  /** @internal */\n  protected detachActivePointerEvents(eventNode: HTMLElement): void {\n    document.body.removeEventListener(\"pointermove\", this.onPointerMove);\n    document.body.removeEventListener(\"pointerup\", this.onPointerUp);\n    document.body.removeEventListener(\"pointercancel\", this.onPointerCancel);\n  }\n\n  /** @internal */\n  readonly pointers: {[id: string]: ViewPointerEventInit | undefined} | null;\n\n  /** @internal */\n  protected updatePointer(pointer: ViewPointerEventInit, event: PointerEvent): void {\n    pointer.pointerId = event.pointerId;\n    pointer.pointerType = event.pointerType;\n    pointer.isPrimary = event.isPrimary;\n\n    pointer.button = event.button;\n    pointer.buttons = event.buttons;\n    pointer.altKey = event.altKey;\n    pointer.ctrlKey = event.ctrlKey;\n    pointer.metaKey = event.metaKey;\n    pointer.shiftKey = event.shiftKey;\n\n    pointer.clientX = event.clientX;\n    pointer.clientY = event.clientY;\n    pointer.screenX = event.screenX;\n    pointer.screenY = event.screenY;\n    pointer.movementX = event.movementX;\n    pointer.movementY = event.movementY;\n\n    pointer.width = event.width;\n    pointer.height = event.height;\n    pointer.tiltX = event.tiltX;\n    pointer.tiltY = event.tiltY;\n    pointer.twist = event.twist;\n    pointer.pressure = event.pressure;\n    pointer.tangentialPressure = event.tangentialPressure;\n\n    pointer.view = event.view;\n    pointer.detail = event.detail;\n    pointer.relatedTarget = event.relatedTarget;\n  }\n\n  /** @internal */\n  protected firePointerEvent(event: PointerEvent): GraphicsView | null {\n    return this.fireEvent(event, event.clientX, event.clientY);\n  }\n\n  /** @internal */\n  protected onPointerEnter(event: PointerEvent): void {\n    const id = \"\" + event.pointerId;\n    let pointers = this.pointers;\n    if (pointers === null) {\n      pointers = {};\n      (this as Mutable<this>).pointers = pointers;\n    }\n    let pointer = pointers[id];\n    if (pointer === void 0) {\n      if (Object.keys(pointers).length === 0) {\n        this.attachActivePointerEvents(this.eventNode);\n      }\n      pointer = {};\n      pointers[id] = pointer;\n    }\n    this.updatePointer(pointer, event);\n  }\n\n  /** @internal */\n  protected onPointerLeave(event: PointerEvent): void {\n    const id = \"\" + event.pointerId;\n    let pointers = this.pointers;\n    if (pointers === null) {\n      pointers = {};\n      (this as Mutable<this>).pointers = pointers;\n    }\n    const pointer = pointers[id];\n    if (pointer !== void 0) {\n      if (pointer.targetView !== void 0) {\n        this.onPointerTargetChange(pointer, void 0, pointer.targetView as GraphicsView);\n      }\n      delete pointers[id];\n      if (Object.keys(pointers).length === 0) {\n        this.detachActivePointerEvents(this.eventNode);\n      }\n    }\n  }\n\n  /** @internal */\n  protected onPointerDown(event: PointerEvent): void {\n    const id = \"\" + event.pointerId;\n    let pointers = this.pointers;\n    if (pointers === null) {\n      pointers = {};\n      (this as Mutable<this>).pointers = pointers;\n    }\n    let pointer = pointers[id];\n    if (pointer === void 0) {\n      if (Object.keys(pointers).length === 0) {\n        this.attachActivePointerEvents(this.eventNode);\n      }\n      pointer = {};\n      pointers[id] = pointer;\n    }\n    this.updatePointer(pointer, event);\n    this.firePointerEvent(event);\n  }\n\n  /** @internal */\n  protected onPointerMove(event: PointerEvent): void {\n    const id = \"\" + event.pointerId;\n    let pointers = this.pointers;\n    if (pointers === null) {\n      pointers = {};\n      (this as Mutable<this>).pointers = pointers;\n    }\n    let pointer = pointers[id];\n    if (pointer === void 0) {\n      if (Object.keys(pointers).length === 0) {\n        this.attachActivePointerEvents(this.eventNode);\n      }\n      pointer = {};\n      pointers[id] = pointer;\n    }\n    this.updatePointer(pointer, event);\n    const oldTargetView = pointer.targetView as GraphicsView | undefined;\n    let newTargetView: GraphicsView | null | undefined = this.firePointerEvent(event);\n    if (newTargetView === null) {\n      newTargetView = void 0;\n    }\n    if (newTargetView !== oldTargetView) {\n      this.onPointerTargetChange(pointer, newTargetView, oldTargetView);\n    }\n  }\n\n  /** @internal */\n  protected onPointerUp(event: PointerEvent): void {\n    const id = \"\" + event.pointerId;\n    let pointers = this.pointers;\n    if (pointers === null) {\n      pointers = {};\n      (this as Mutable<this>).pointers = pointers;\n    }\n    const pointer = pointers[id];\n    if (pointer !== void 0) {\n      this.updatePointer(pointer, event);\n    }\n    this.firePointerEvent(event);\n    if (pointer !== void 0 && event.pointerType !== \"mouse\") {\n      if (pointer.targetView !== void 0) {\n        this.onPointerTargetChange(pointer, void 0, pointer.targetView as GraphicsView);\n      }\n      delete pointers[id];\n      if (Object.keys(pointers).length === 0) {\n        this.detachActivePointerEvents(this.eventNode);\n      }\n    }\n  }\n\n  /** @internal */\n  protected onPointerCancel(event: PointerEvent): void {\n    const id = \"\" + event.pointerId;\n    let pointers = this.pointers;\n    if (pointers === null) {\n      pointers = {};\n      (this as Mutable<this>).pointers = pointers;\n    }\n    const pointer = pointers[id];\n    if (pointer !== void 0) {\n      this.updatePointer(pointer, event);\n    }\n    this.firePointerEvent(event);\n    if (pointer !== void 0 && event.pointerType !== \"mouse\") {\n      if (pointer.targetView !== void 0) {\n        this.onPointerTargetChange(pointer, void 0, pointer.targetView as GraphicsView);\n      }\n      delete pointers[id];\n      if (Object.keys(pointers).length === 0) {\n        this.detachActivePointerEvents(this.eventNode);\n      }\n    }\n  }\n\n  /** @internal */\n  protected onPointerTargetChange(pointer: ViewPointerEventInit, newTargetView: GraphicsView | undefined,\n                                  oldTargetView: GraphicsView | undefined): void {\n    pointer.bubbles = true;\n    if (oldTargetView !== void 0) {\n      const outEvent = new PointerEvent(\"pointerout\", pointer) as ViewPointerEvent;\n      outEvent.targetView = oldTargetView;\n      outEvent.relatedTargetView = newTargetView;\n      oldTargetView.bubbleEvent(outEvent);\n    }\n    pointer.targetView = newTargetView;\n    if (newTargetView !== void 0) {\n      const overEvent = new PointerEvent(\"pointerover\", pointer) as ViewPointerEvent;\n      overEvent.targetView = newTargetView;\n      overEvent.relatedTargetView = oldTargetView;\n      newTargetView.bubbleEvent(overEvent);\n    }\n  }\n\n  /** @internal */\n  protected detectPointerTarget(pointer: ViewPointerEventInit, clientBounds: R2Box): void {\n    const clientX = pointer.clientX!;\n    const clientY = pointer.clientY!;\n    if (clientBounds.contains(clientX, clientY)) {\n      const x = clientX - clientBounds.x;\n      const y = clientY - clientBounds.y;\n      const oldTargetView = pointer.targetView as GraphicsView | undefined;\n      let newTargetView: GraphicsView | null | undefined = this.cascadeHitTest(x, y);\n      if (newTargetView === null) {\n        newTargetView = void 0;\n      }\n      if (newTargetView !== oldTargetView) {\n        this.onPointerTargetChange(pointer, newTargetView, oldTargetView);\n      }\n    }\n  }\n\n  /** @internal */\n  protected attachPassiveTouchEvents(eventNode: HTMLElement): void {\n    eventNode.addEventListener(\"touchstart\", this.onTouchStart);\n  }\n\n  /** @internal */\n  protected detachPassiveTouchEvents(eventNode: HTMLElement): void {\n    eventNode.removeEventListener(\"touchstart\", this.onTouchStart);\n  }\n\n  /** @internal */\n  protected attachActiveTouchEvents(eventNode: HTMLElement): void {\n    eventNode.addEventListener(\"touchmove\", this.onTouchMove);\n    eventNode.addEventListener(\"touchend\", this.onTouchEnd);\n    eventNode.addEventListener(\"touchcancel\", this.onTouchCancel);\n  }\n\n  /** @internal */\n  protected detachActiveTouchEvents(eventNode: HTMLElement): void {\n    eventNode.removeEventListener(\"touchmove\", this.onTouchMove);\n    eventNode.removeEventListener(\"touchend\", this.onTouchEnd);\n    eventNode.removeEventListener(\"touchcancel\", this.onTouchCancel);\n  }\n\n  /** @internal */\n  readonly touches: {[id: string]: ViewTouchInit | undefined} | null;\n\n  /** @internal */\n  protected updateTouch(touch: ViewTouchInit, event: Touch): void {\n    touch.clientX = event.clientX;\n    touch.clientY = event.clientY;\n    touch.screenX = event.screenX;\n    touch.screenY = event.screenY;\n    touch.pageX = event.pageX;\n    touch.pageY = event.pageY;\n\n    touch.radiusX = event.radiusX;\n    touch.radiusY = event.radiusY;\n    touch.rotationAngle = event.rotationAngle;\n    touch.force = event.force;\n  }\n\n  /** @internal */\n  protected fireTouchEvent(type: string, originalEvent: TouchEvent): void {\n    const changedTouches = originalEvent.changedTouches;\n    const dispatched: GraphicsView[] = [];\n    for (let i = 0, n = changedTouches.length; i < n; i += 1) {\n      const changedTouch = changedTouches[i]! as ViewTouch;\n      const targetView = changedTouch.targetView as GraphicsView | undefined;\n      if (targetView !== void 0 && dispatched.indexOf(targetView) < 0) {\n        const startEvent: ViewTouchEvent = new TouchEvent(type, {\n          changedTouches: changedTouches as unknown as Touch[],\n          targetTouches: originalEvent.targetTouches as unknown as Touch[],\n          touches: originalEvent.touches as unknown as Touch[],\n          bubbles: true,\n        });\n        startEvent.targetView = targetView;\n        const targetViewTouches: Touch[] = [changedTouch];\n        for (let j = i + 1; j < n; j += 1) {\n          const nextTouch = changedTouches[j]! as ViewTouch;\n          if (nextTouch.targetView === targetView) {\n            targetViewTouches.push(nextTouch);\n          }\n        }\n        if (document.createTouchList !== void 0) {\n          startEvent.targetViewTouches = document.createTouchList(...targetViewTouches);\n        } else {\n          (targetViewTouches as unknown as TouchList).item = function (index: number): Touch {\n            return targetViewTouches[index]!;\n          };\n          startEvent.targetViewTouches = targetViewTouches as unknown as TouchList;\n        }\n        targetView.bubbleEvent(startEvent);\n        dispatched.push(targetView);\n      }\n    }\n  }\n\n  /** @internal */\n  protected onTouchStart(event: TouchEvent): void {\n    let clientBounds: R2Box | undefined;\n    let touches = this.touches;\n    if (touches === null) {\n      touches = {};\n      (this as Mutable<this>).touches = touches;\n    }\n    const changedTouches = event.changedTouches;\n    for (let i = 0, n = changedTouches.length; i < n; i += 1) {\n      const changedTouch = changedTouches[i] as ViewTouch;\n      const id = \"\" + changedTouch.identifier;\n      let touch = touches[id];\n      if (touch === void 0) {\n        if (Object.keys(touches).length === 0) {\n          this.attachActiveTouchEvents(this.eventNode);\n        }\n        touch = {\n          identifier: changedTouch.identifier,\n          target: changedTouch.target,\n        };\n        touches[id] = touch;\n      }\n      this.updateTouch(touch, changedTouch);\n      const clientX = touch.clientX!;\n      const clientY = touch.clientY!;\n      if (clientBounds === void 0) {\n        clientBounds = this.clientBounds;\n      }\n      if (clientBounds.contains(clientX, clientY)) {\n        const x = clientX - clientBounds.x;\n        const y = clientY - clientBounds.y;\n        const hit = this.cascadeHitTest(x, y);\n        if (hit !== null) {\n          touch.targetView = hit;\n          changedTouch.targetView = hit;\n        }\n      }\n    }\n    this.fireTouchEvent(\"touchstart\", event);\n  }\n\n  /** @internal */\n  protected onTouchMove(event: TouchEvent): void {\n    let touches = this.touches;\n    if (touches === null) {\n      touches = {};\n      (this as Mutable<this>).touches = touches;\n    }\n    const changedTouches = event.changedTouches;\n    for (let i = 0, n = changedTouches.length; i < n; i += 1) {\n      const changedTouch = changedTouches[i] as ViewTouch;\n      const id = \"\" + changedTouch.identifier;\n      let touch = touches[id];\n      if (touch === void 0) {\n        touch = {\n          identifier: changedTouch.identifier,\n          target: changedTouch.target,\n        };\n        touches[id] = touch;\n      }\n      this.updateTouch(touch, changedTouch);\n      changedTouch.targetView = touch.targetView;\n    }\n    this.fireTouchEvent(\"touchmove\", event);\n  }\n\n  /** @internal */\n  protected onTouchEnd(event: TouchEvent): void {\n    let touches = this.touches;\n    if (touches === null) {\n      touches = {};\n      (this as Mutable<this>).touches = touches;\n    }\n    const changedTouches = event.changedTouches;\n    const n = changedTouches.length;\n    for (let i = 0; i < n; i += 1) {\n      const changedTouch = changedTouches[i] as ViewTouch;\n      const id = \"\" + changedTouch.identifier;\n      let touch = touches[id];\n      if (touch === void 0) {\n        touch = {\n          identifier: changedTouch.identifier,\n          target: changedTouch.target,\n        };\n        touches[id] = touch;\n      }\n      this.updateTouch(touch, changedTouch);\n      changedTouch.targetView = touch.targetView;\n    }\n    this.fireTouchEvent(\"touchend\", event);\n    for (let i = 0; i < n; i += 1) {\n      const changedTouch = changedTouches[i] as ViewTouch;\n      const id = \"\" + changedTouch.identifier;\n      delete touches[id];\n      if (Object.keys(touches).length === 0) {\n        this.detachActiveTouchEvents(this.eventNode);\n      }\n    }\n  }\n\n  /** @internal */\n  protected onTouchCancel(event: TouchEvent): void {\n    let touches = this.touches;\n    if (touches === null) {\n      touches = {};\n      (this as Mutable<this>).touches = touches;\n    }\n    const changedTouches = event.changedTouches;\n    const n = changedTouches.length;\n    for (let i = 0; i < n; i += 1) {\n      const changedTouch = changedTouches[i] as ViewTouch;\n      const id = \"\" + changedTouch.identifier;\n      let touch = touches[id];\n      if (touch === void 0) {\n        touch = {\n          identifier: changedTouch.identifier,\n          target: changedTouch.target,\n        };\n        touches[id] = touch;\n      }\n      this.updateTouch(touch, changedTouch);\n      changedTouch.targetView = touch.targetView;\n    }\n    this.fireTouchEvent(\"touchcancel\", event);\n    for (let i = 0; i < n; i += 1) {\n      const changedTouch = changedTouches[i] as ViewTouch;\n      const id = \"\" + changedTouch.identifier;\n      delete touches[id];\n      if (Object.keys(touches).length === 0) {\n        this.detachActiveTouchEvents(this.eventNode);\n      }\n    }\n  }\n\n  protected resizeCanvas(canvas: HTMLCanvasElement): void {\n    let width: number;\n    let height: number;\n    let pixelRatio: number;\n    let parentNode = canvas.parentNode;\n    if (parentNode instanceof HTMLElement) {\n      do {\n        width = Math.floor(parentNode.offsetWidth);\n        height = Math.floor(parentNode.offsetHeight);\n        if (width !== 0 && height !== 0) {\n          break;\n        } else if ((width === 0 || height === 0) && HtmlView.isPositioned(parentNode)) {\n          this.requireUpdate(View.NeedsResize); // view might not yet have been laid out\n        }\n        parentNode = parentNode.parentNode;\n      } while (parentNode instanceof HTMLElement);\n      pixelRatio = this.pixelRatio;\n      canvas.width = width * pixelRatio;\n      canvas.height = height * pixelRatio;\n      canvas.style.width = width + \"px\";\n      canvas.style.height = height + \"px\";\n    } else {\n      width = Math.floor(canvas.width);\n      height = Math.floor(canvas.height);\n      pixelRatio = 1;\n    }\n    (this as Mutable<this>).viewFrame = new R2Box(0, 0, width, height);\n  }\n\n  clearCanvas(): void {\n    const renderer = this.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const frame = this.viewFrame;\n      renderer.context.clearRect(0, 0, frame.width, frame.height);\n    } else if (renderer instanceof WebGLRenderer) {\n      const context = renderer.context;\n      context.clear(context.COLOR_BUFFER_BIT | context.DEPTH_BUFFER_BIT);\n    }\n  }\n\n  resetRenderer(): void {\n    const renderer = this.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const pixelRatio = this.pixelRatio;\n      renderer.context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    } else if (renderer instanceof WebGLRenderer) {\n      const frame = this.viewFrame;\n      renderer.context.viewport(0, 0, frame.width, frame.height);\n    }\n  }\n\n  protected override onObserve(observer: ObserverType<this>): void {\n    super.onObserve(observer);\n    if (observer.viewWillRender !== void 0) {\n      this.observerCache.viewWillRenderObservers = Arrays.inserted(observer as ViewWillRender, this.observerCache.viewWillRenderObservers);\n    }\n    if (observer.viewDidRender !== void 0) {\n      this.observerCache.viewDidRenderObservers = Arrays.inserted(observer as ViewDidRender, this.observerCache.viewDidRenderObservers);\n    }\n    if (observer.viewWillRasterize !== void 0) {\n      this.observerCache.viewWillRasterizeObservers = Arrays.inserted(observer as ViewWillRasterize, this.observerCache.viewWillRasterizeObservers);\n    }\n    if (observer.viewDidRasterize !== void 0) {\n      this.observerCache.viewDidRasterizeObservers = Arrays.inserted(observer as ViewDidRasterize, this.observerCache.viewDidRasterizeObservers);\n    }\n    if (observer.viewWillComposite !== void 0) {\n      this.observerCache.viewWillCompositeObservers = Arrays.inserted(observer as ViewWillComposite, this.observerCache.viewWillCompositeObservers);\n    }\n    if (observer.viewDidComposite !== void 0) {\n      this.observerCache.viewDidCompositeObservers = Arrays.inserted(observer as ViewDidComposite, this.observerCache.viewDidCompositeObservers);\n    }\n  }\n\n  protected override onUnobserve(observer: ObserverType<this>): void {\n    super.onUnobserve(observer);\n    if (observer.viewWillRender !== void 0) {\n      this.observerCache.viewWillRenderObservers = Arrays.removed(observer as ViewWillRender, this.observerCache.viewWillRenderObservers);\n    }\n    if (observer.viewDidRender !== void 0) {\n      this.observerCache.viewDidRenderObservers = Arrays.removed(observer as ViewDidRender, this.observerCache.viewDidRenderObservers);\n    }\n    if (observer.viewWillRasterize !== void 0) {\n      this.observerCache.viewWillRasterizeObservers = Arrays.removed(observer as ViewWillRasterize, this.observerCache.viewWillRasterizeObservers);\n    }\n    if (observer.viewDidRasterize !== void 0) {\n      this.observerCache.viewDidRasterizeObservers = Arrays.removed(observer as ViewDidRasterize, this.observerCache.viewDidRasterizeObservers);\n    }\n    if (observer.viewWillComposite !== void 0) {\n      this.observerCache.viewWillCompositeObservers = Arrays.removed(observer as ViewWillComposite, this.observerCache.viewWillCompositeObservers);\n    }\n    if (observer.viewDidComposite !== void 0) {\n      this.observerCache.viewDidCompositeObservers = Arrays.removed(observer as ViewDidComposite, this.observerCache.viewDidCompositeObservers);\n    }\n  }\n\n  override init(init: CanvasViewInit): void {\n    super.init(init);\n    if (init.renderer !== void 0) {\n      this.setRenderer(init.renderer);\n    }\n    if (init.clickEventsEnabled !== void 0) {\n      this.clickEventsEnabled(init.clickEventsEnabled);\n    }\n    if (init.wheelEventsEnabled !== void 0) {\n      this.wheelEventsEnabled(init.wheelEventsEnabled);\n    }\n    if (init.mouseEventsEnabled !== void 0) {\n      this.mouseEventsEnabled(init.mouseEventsEnabled);\n    }\n    if (init.pointerEventsEnabled !== void 0) {\n      this.pointerEventsEnabled(init.pointerEventsEnabled);\n    }\n    if (init.touchEventsEnabled !== void 0) {\n      this.touchEventsEnabled(init.touchEventsEnabled);\n    }\n  }\n\n  /** @internal */\n  static override readonly tag: string = \"canvas\";\n\n  /** @internal */\n  static readonly ClickEventsFlag: CanvasFlags = 1 << 0;\n  /** @internal */\n  static readonly WheelEventsFlag: CanvasFlags = 1 << 1;\n  /** @internal */\n  static readonly MouseEventsFlag: CanvasFlags = 1 << 2;\n  /** @internal */\n  static readonly PointerEventsFlag: CanvasFlags = 1 << 3;\n  /** @internal */\n  static readonly TouchEventsFlag: CanvasFlags = 1 << 4;\n  /** @internal */\n  static readonly EventsMask: CanvasFlags = CanvasView.ClickEventsFlag\n                                          | CanvasView.WheelEventsFlag\n                                          | CanvasView.MouseEventsFlag\n                                          | CanvasView.PointerEventsFlag\n                                          | CanvasView.TouchEventsFlag;\n\n  static override readonly UncullFlags: ViewFlags = HtmlView.UncullFlags | View.NeedsRender | View.NeedsComposite;\n  static override readonly UnhideFlags: ViewFlags = HtmlView.UnhideFlags | View.NeedsRender | View.NeedsComposite;\n}\n\ndeclare global {\n  interface Document {\n    createTouchList?(...touches: Touch[]): TouchList;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {R2Box, Transform} from \"@swim/math\";\nimport {ThemeConstraintAnimator} from \"@swim/theme\";\nimport {ViewContextType, ViewFlags, View} from \"@swim/view\";\nimport type {AnyGraphicsRenderer, GraphicsRendererType, GraphicsRenderer} from \"../graphics/GraphicsRenderer\";\nimport type {GraphicsViewContext} from \"../graphics/GraphicsViewContext\";\nimport {GraphicsViewInit, GraphicsView} from \"../graphics/GraphicsView\";\nimport {WebGLRenderer} from \"../webgl/WebGLRenderer\";\nimport type {CanvasCompositeOperation} from \"../canvas/CanvasContext\";\nimport {CanvasRenderer} from \"../canvas/CanvasRenderer\";\nimport {CanvasView} from \"../canvas/CanvasView\";\nimport type {RasterViewContext} from \"./RasterViewContext\";\n\n/** @public */\nexport interface RasterViewInit extends GraphicsViewInit {\n  opacity?: number;\n  compositeOperation?: CanvasCompositeOperation;\n}\n\n/** @public */\nexport class RasterView extends GraphicsView {\n  constructor() {\n    super();\n    this.canvas = this.createCanvas();\n    Object.defineProperty(this, \"renderer\", {\n      value: this.createRenderer(),\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n    this.ownRasterFrame = null;\n  }\n\n  override readonly contextType?: Class<RasterViewContext>;\n\n  @ThemeConstraintAnimator({type: Number, value: 1, updateFlags: View.NeedsComposite})\n  readonly opacity!: ThemeConstraintAnimator<this, number>;\n\n  @Property({type: String, value: \"source-over\", updateFlags: View.NeedsComposite})\n  readonly compositeOperation!: Property<this, CanvasCompositeOperation>;\n\n  get pixelRatio(): number {\n    return window.devicePixelRatio || 1;\n  }\n\n  /** @internal */\n  readonly canvas: HTMLCanvasElement;\n\n  get compositor(): GraphicsRenderer | null {\n    const parent = this.parent;\n    if (parent instanceof GraphicsView || parent instanceof CanvasView) {\n      return parent.renderer;\n    } else {\n      return null;\n    }\n  }\n\n  override readonly renderer!: GraphicsRenderer | null;\n\n  setRenderer(renderer: AnyGraphicsRenderer | null): void {\n    if (typeof renderer === \"string\") {\n      renderer = this.createRenderer(renderer as GraphicsRendererType);\n    }\n    (this as Mutable<this>).renderer = renderer;\n    this.requireUpdate(View.NeedsRender | View.NeedsComposite);\n  }\n\n  protected createRenderer(rendererType: GraphicsRendererType = \"canvas\"): GraphicsRenderer | null {\n    if (rendererType === \"canvas\") {\n      const context = this.canvas.getContext(\"2d\");\n      if (context !== null) {\n        return new CanvasRenderer(context, Transform.identity(), this.pixelRatio);\n      } else {\n        throw new Error(\"Failed to create canvas rendering context\");\n      }\n    } else if (rendererType === \"webgl\") {\n      const context = this.canvas.getContext(\"webgl\");\n      if (context !== null) {\n        return new WebGLRenderer(context, this.pixelRatio);\n      } else {\n        throw new Error(\"Failed to create webgl rendering context\");\n      }\n    } else {\n      throw new Error(\"Failed to create \" + rendererType + \" renderer\");\n    }\n  }\n\n  protected override needsUpdate(updateFlags: ViewFlags, immediate: boolean): ViewFlags {\n    updateFlags = super.needsUpdate(updateFlags, immediate);\n    const rasterFlags = updateFlags & (View.NeedsRender | View.NeedsComposite);\n    if (rasterFlags !== 0) {\n      updateFlags |= View.NeedsComposite;\n      this.setFlags(this.flags | View.NeedsDisplay | View.NeedsComposite | rasterFlags);\n    }\n    return updateFlags;\n  }\n\n  protected override needsProcess(processFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    if ((this.flags & View.ProcessMask) === 0 && (processFlags & View.NeedsResize) === 0) {\n      processFlags = 0;\n    }\n    return processFlags;\n  }\n\n  protected override onResize(viewContext: ViewContextType<this>): void {\n    super.onResize(viewContext);\n    this.requireUpdate(View.NeedsRender | View.NeedsComposite);\n  }\n\n  protected override needsDisplay(displayFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    if ((this.flags & View.DisplayMask) !== 0) {\n      displayFlags |= View.NeedsComposite;\n    } else if ((displayFlags & View.NeedsComposite) !== 0) {\n      displayFlags = View.NeedsDisplay | View.NeedsComposite;\n    } else {\n      displayFlags = 0;\n    }\n    return displayFlags;\n  }\n\n  protected override onRender(viewContext: ViewContextType<this>): void {\n    const rasterFrame = this.rasterFrame;\n    this.resizeCanvas(this.canvas, rasterFrame);\n    this.resetRenderer(rasterFrame);\n    this.clearCanvas(rasterFrame);\n    super.onRender(viewContext);\n  }\n\n  protected override didComposite(viewContext: ViewContextType<this>): void {\n    this.compositeImage(viewContext);\n    super.didComposite(viewContext);\n  }\n\n  override extendViewContext(viewContext: GraphicsViewContext): ViewContextType<this> {\n    const rasterViewContext = Object.create(viewContext);\n    rasterViewContext.compositor = viewContext.renderer;\n    rasterViewContext.renderer = this.renderer;\n    return rasterViewContext;\n  }\n\n  declare readonly viewBounds: R2Box; // getter defined below to work around useDefineForClassFields lunacy\n\n  /** @internal */\n  readonly ownRasterFrame: R2Box | null;\n\n  get rasterFrame(): R2Box {\n    let rasterFrame = this.ownRasterFrame;\n    if (rasterFrame === null) {\n      rasterFrame = this.deriveRasterFrame();\n    }\n    return rasterFrame;\n  }\n\n  /** @internal */\n  setRasterFrame(rasterFrame: R2Box | null): void {\n    (this as Mutable<this>).ownRasterFrame = rasterFrame;\n  }\n\n  protected deriveRasterFrame(): R2Box {\n    return this.viewBounds;\n  }\n\n  protected createCanvas(): HTMLCanvasElement {\n    return document.createElement(\"canvas\");\n  }\n\n  protected resizeCanvas(canvas: HTMLCanvasElement, rasterFrame: R2Box): void {\n    const pixelRatio = this.pixelRatio;\n    const newWidth = rasterFrame.width;\n    const newHeight = rasterFrame.height;\n    const newCanvasWidth = newWidth * pixelRatio;\n    const newCanvasHeight = newHeight * pixelRatio;\n    const oldCanvasWidth = canvas.width;\n    const oldCanvasHeight = canvas.height;\n    if (newCanvasWidth !== oldCanvasWidth || newCanvasHeight !== oldCanvasHeight) {\n      canvas.width = newCanvasWidth;\n      canvas.height = newCanvasHeight;\n      canvas.style.width = newWidth + \"px\";\n      canvas.style.height = newHeight + \"px\";\n    }\n  }\n\n  protected clearCanvas(rasterFrame: R2Box): void {\n    const renderer = this.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      renderer.context.clearRect(0, 0, rasterFrame.xMax, rasterFrame.yMax);\n    } else if (renderer instanceof WebGLRenderer) {\n      const context = renderer.context;\n      context.clear(context.COLOR_BUFFER_BIT | context.DEPTH_BUFFER_BIT);\n    }\n  }\n\n  protected resetRenderer(rasterFrame: R2Box): void {\n    const renderer = this.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const pixelRatio = this.pixelRatio;\n      const dx = rasterFrame.xMin * pixelRatio;\n      const dy = rasterFrame.yMin * pixelRatio;\n      renderer.context.setTransform(pixelRatio, 0, 0, pixelRatio, -dx, -dy);\n      renderer.setTransform(Transform.affine(pixelRatio, 0, 0, pixelRatio, -dx, -dy));\n    } else if (renderer instanceof WebGLRenderer) {\n      renderer.context.viewport(rasterFrame.x, rasterFrame.y, rasterFrame.xMax, rasterFrame.yMax);\n    }\n  }\n\n  protected compositeImage(viewContext: ViewContextType<this>): void {\n    const compositor = viewContext.compositor;\n    if (compositor instanceof CanvasRenderer) {\n      const context = compositor.context;\n      const rasterFrame = this.rasterFrame;\n      const canvas = this.canvas;\n      if (rasterFrame.isDefined() && rasterFrame.width !== 0 && rasterFrame.height !== 0 &&\n          canvas.width !== 0 && canvas.height !== 0) {\n        const globalAlpha = context.globalAlpha;\n        const globalCompositeOperation = context.globalCompositeOperation;\n        context.globalAlpha = this.opacity.getValue();\n        context.globalCompositeOperation = this.compositeOperation.getValue();\n        context.drawImage(canvas, rasterFrame.x, rasterFrame.y, rasterFrame.width, rasterFrame.height);\n        context.globalAlpha = globalAlpha;\n        context.globalCompositeOperation = globalCompositeOperation;\n      }\n    }\n  }\n\n  override init(init: RasterViewInit): void {\n    super.init(init);\n    if (init.opacity !== void 0) {\n      this.opacity(init.opacity);\n    }\n    if (init.compositeOperation !== void 0) {\n      this.compositeOperation(init.compositeOperation);\n    }\n  }\n\n  static override readonly MountFlags: ViewFlags = GraphicsView.MountFlags | View.NeedsComposite;\n  static override readonly UncullFlags: ViewFlags = GraphicsView.UncullFlags | View.NeedsComposite;\n  static override readonly UnhideFlags: ViewFlags = GraphicsView.UnhideFlags | View.NeedsComposite;\n}\nObject.defineProperty(RasterView.prototype, \"viewBounds\", {\n  get(this: RasterView): R2Box {\n    return this.deriveViewBounds();\n  },\n  configurable: true,\n});\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {AnyColor, Color} from \"@swim/style\";\nimport type {ThemeAnimator} from \"@swim/theme\";\nimport {GraphicsViewInit, GraphicsView} from \"../graphics/GraphicsView\";\n\n/** @public */\nexport interface FillViewInit extends GraphicsViewInit {\n  fill?: AnyColor;\n}\n\n/** @public */\nexport interface FillView extends GraphicsView {\n  readonly fill: ThemeAnimator<this, Color | null, AnyColor | null>;\n}\n\n/** @public */\nexport const FillView = (function () {\n  const FillView = {} as {\n    init(view: FillView, init: FillViewInit): void;\n\n    is(object: unknown): object is FillView;\n  };\n\n  FillView.init = function (view: FillView, init: FillViewInit): void {\n    if (init.fill !== void 0) {\n      view.fill(init.fill);\n    }\n  };\n\n  FillView.is = function (object: unknown): object is FillView {\n    if (typeof object === \"object\" && object !== null) {\n      const view = object as FillView;\n      return view instanceof GraphicsView\n          && \"fill\" in view;\n    }\n    return false;\n  };\n\n  return FillView;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {AnyLength, Length} from \"@swim/math\";\nimport type {AnyColor, Color} from \"@swim/style\";\nimport type {ThemeAnimator} from \"@swim/theme\";\nimport {GraphicsViewInit, GraphicsView} from \"../graphics/GraphicsView\";\n\n/** @public */\nexport interface StrokeViewInit extends GraphicsViewInit {\n  stroke?: AnyColor;\n  strokeWidth?: AnyLength;\n}\n\n/** @public */\nexport interface StrokeView extends GraphicsView {\n  readonly stroke: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  readonly strokeWidth: ThemeAnimator<this, Length | null, AnyLength | null>;\n}\n\n/** @public */\nexport const StrokeView = (function () {\n  const StrokeView = {} as {\n    init(view: StrokeView, init: StrokeViewInit): void;\n\n    is(object: unknown): object is StrokeView;\n  };\n\n  StrokeView.init = function (view: StrokeView, init: StrokeViewInit): void {\n    if (init.stroke !== void 0) {\n      view.stroke(init.stroke);\n    }\n    if (init.strokeWidth !== void 0) {\n      view.strokeWidth(init.strokeWidth);\n    }\n  };\n\n  StrokeView.is = function (object: unknown): object is StrokeView {\n    if (typeof object === \"object\" && object !== null) {\n      const view = object as StrokeView;\n      return view instanceof GraphicsView\n          && \"stroke\" in view\n          && \"strokeWidth\" in view;\n    }\n    return false;\n  };\n\n  return StrokeView;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Equals} from \"@swim/util\";\nimport {Output, Debug, Format} from \"@swim/codec\";\nimport {AnyLength, Length, R2Box} from \"@swim/math\";\nimport type {Graphics} from \"../graphics/Graphics\";\nimport type {GraphicsRenderer} from \"../graphics/GraphicsRenderer\";\nimport type {DrawingContext} from \"../drawing/DrawingContext\";\nimport {PathContext} from \"../path/PathContext\";\nimport {PathRenderer} from \"../path/PathRenderer\";\n\n/** @public */\nexport type AnyRect = Rect | RectInit;\n\n/** @public */\nexport interface RectInit {\n  x: AnyLength;\n  y: AnyLength;\n  width: AnyLength;\n  height: AnyLength;\n}\n\n/** @public */\nexport class Rect implements Graphics, Equals, Debug {\n  constructor(x: Length, y: Length, width: Length, height: Length) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  readonly x: Length;\n\n  withX(x: AnyLength): Rect {\n    x = Length.fromAny(x);\n    if (this.x.equals(x)) {\n      return this;\n    } else {\n      return this.copy(x, this.y, this.width, this.height);\n    }\n  }\n\n  readonly y: Length;\n\n  withY(y: AnyLength): Rect {\n    y = Length.fromAny(y);\n    if (this.y.equals(y)) {\n      return this;\n    } else {\n      return this.copy(this.x, y, this.width, this.height);\n    }\n  }\n\n  readonly width: Length;\n\n  withWidth(width: AnyLength): Rect {\n    width = Length.fromAny(width);\n    if (this.width.equals(width)) {\n      return this;\n    } else {\n      return this.copy(this.x, this.y, width, this.height);\n    }\n  }\n\n  readonly height: Length;\n\n  withHeight(height: AnyLength): Rect {\n    height = Length.fromAny(height);\n    if (this.height.equals(height)) {\n      return this;\n    } else {\n      return this.copy(this.x, this.y, this.width, height);\n    }\n  }\n\n  render(): string;\n  render(renderer: GraphicsRenderer, frame?: R2Box): void;\n  render(renderer?: GraphicsRenderer, frame?: R2Box): string | void {\n    if (renderer === void 0) {\n      const context = new PathContext();\n      context.setPrecision(3);\n      this.draw(context, frame);\n      return context.toString();\n    } else if (renderer instanceof PathRenderer) {\n      this.draw(renderer.context, frame);\n    }\n  }\n\n  draw(context: DrawingContext, frame: R2Box | null = null): void {\n    this.renderRect(context, frame);\n  }\n\n  protected renderRect(context: DrawingContext, frame: R2Box | null): void {\n    context.rect(this.x.pxValue(), this.y.pxValue(),\n                 this.width.pxValue(), this.height.pxValue());\n  }\n\n  protected copy(x: Length, y: Length, width: Length, height: Length): Rect {\n    return new Rect(x, y, width, height);\n  }\n\n  toAny(): RectInit {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n    };\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Rect) {\n      return this.x.equals(that.x) && this.y.equals(that.y)\n          && this.width.equals(that.width) && this.height.equals(that.height);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"Rect\").write(46/*'.'*/).write(\"create\").write(40/*'('*/)\n                   .debug(this.x).write(\", \").debug(this.y).write(\", \")\n                   .debug(this.width).write(\", \").debug(this.height).write(41/*')'*/);\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  static create(x: AnyLength, y: AnyLength, width: AnyLength, height: AnyLength): Rect {\n    x = Length.fromAny(x);\n    y = Length.fromAny(y);\n    width = Length.fromAny(width);\n    height = Length.fromAny(height);\n    return new Rect(x, y, width, height);\n  }\n\n  static fromAny(value: AnyRect): Rect {\n    if (value instanceof Rect) {\n      return value;\n    } else if (typeof value === \"object\" && value !== null) {\n      return Rect.create(value.x, value.y, value.width, value.height);\n    }\n    throw new TypeError(\"\" + value);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {AnyTiming} from \"@swim/util\";\nimport {AnyLength, Length, R2Box} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, View} from \"@swim/view\";\nimport {GraphicsView} from \"../graphics/GraphicsView\";\nimport type {PaintingContext} from \"../painting/PaintingContext\";\nimport {PaintingRenderer} from \"../painting/PaintingRenderer\";\nimport type {CanvasContext} from \"../canvas/CanvasContext\";\nimport {CanvasRenderer} from \"../canvas/CanvasRenderer\";\nimport type {FillViewInit, FillView} from \"./FillView\";\nimport type {StrokeViewInit, StrokeView} from \"./StrokeView\";\nimport {Rect} from \"./Rect\";\n\n/** @public */\nexport type AnyRectView = RectView | Rect | RectViewInit;\n\n/** @public */\nexport interface RectViewInit extends FillViewInit, StrokeViewInit {\n  x?: AnyLength;\n  y?: AnyLength;\n  width?: AnyLength;\n  height?: AnyLength;\n}\n\n/** @public */\nexport class RectView extends GraphicsView implements FillView, StrokeView {\n  @ThemeAnimator({type: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly x!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly y!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly width!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly height!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly fill!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly stroke!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Length, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly strokeWidth!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  get value(): Rect {\n    return new Rect(this.x.getValue(), this.y.getValue(), this.width.getValue(), this.height.getValue());\n  }\n\n  get state(): Rect {\n    return new Rect(this.x.getState(), this.y.getState(), this.width.getState(), this.height.getState());\n  }\n\n  setState(rect: Rect | RectViewInit, timing?: AnyTiming | boolean): void {\n    if (rect instanceof Rect) {\n      rect = rect.toAny();\n    }\n    if (rect.x !== void 0) {\n      this.x(rect.x, timing);\n    }\n    if (rect.y !== void 0) {\n      this.y(rect.y, timing);\n    }\n    if (rect.width !== void 0) {\n      this.width(rect.width, timing);\n    }\n    if (rect.height !== void 0) {\n      this.height(rect.height, timing);\n    }\n    if (rect.fill !== void 0) {\n      this.fill(rect.fill, timing);\n    }\n    if (rect.stroke !== void 0) {\n      this.stroke(rect.stroke, timing);\n    }\n    if (rect.strokeWidth !== void 0) {\n      this.strokeWidth(rect.strokeWidth, timing);\n    }\n  }\n\n  protected override onRender(viewContext: ViewContextType<this>): void {\n    super.onRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      this.renderRect(renderer.context, this.viewFrame);\n    }\n  }\n\n  protected renderRect(context: PaintingContext, frame: R2Box): void {\n    const x = this.x.getValue().pxValue(frame.width);\n    const y = this.y.getValue().pxValue(frame.height);\n    const width = this.width.getValue().pxValue(frame.width);\n    const height = this.height.getValue().pxValue(frame.height);\n\n    // save\n    const contextFillStyle = context.fillStyle;\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    context.beginPath();\n    context.rect(x, y, width, height);\n\n    const fill = this.fill.value;\n    if (fill !== null) {\n      context.fillStyle = fill.toString();\n      context.fill();\n    }\n\n    const stroke = this.stroke.value;\n    if (stroke !== null) {\n      const strokeWidth = this.strokeWidth.value;\n      if (strokeWidth !== null) {\n        const size = Math.min(frame.width, frame.height);\n        context.lineWidth = strokeWidth.pxValue(size);\n      }\n      context.strokeStyle = stroke.toString();\n      context.stroke();\n    }\n\n    // restore\n    context.fillStyle = contextFillStyle;\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n\n  declare readonly viewBounds: R2Box; // getter defined below to work around useDefineForClassFields lunacy\n\n  protected override hitTest(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const p = renderer.transform.transform(x, y);\n      return this.hitTestRect(p.x, p.y, renderer.context, this.viewFrame);\n    }\n    return null;\n  }\n\n  protected hitTestRect(hx: number, hy: number, context: CanvasContext, frame: R2Box): GraphicsView | null {\n    const x = this.x.getValue().pxValue(frame.width);\n    const y = this.y.getValue().pxValue(frame.height);\n    const width = this.width.getValue().pxValue(frame.width);\n    const height = this.height.getValue().pxValue(frame.height);\n    context.beginPath();\n    context.rect(x, y, width, height);\n    if (this.fill.value !== null && context.isPointInPath(hx, hy)) {\n      return this;\n    } else if (this.stroke.value !== null) {\n      const strokeWidth = this.strokeWidth.value;\n      if (strokeWidth !== null) {\n        // save\n        const contextLineWidth = context.lineWidth;\n\n        const size = Math.min(frame.width, frame.height);\n        context.lineWidth = strokeWidth.pxValue(size);\n        const pointInStroke = context.isPointInStroke(hx, hy);\n\n        // restore\n        context.lineWidth = contextLineWidth;\n\n        if (pointInStroke) {\n          return this;\n        }\n      }\n    }\n    return null;\n  }\n\n  override init(init: Rect | RectViewInit): void {\n    if (!(init instanceof Rect)) {\n      super.init(init);\n    }\n    this.setState(init);\n  }\n}\nObject.defineProperty(RectView.prototype, \"viewBounds\", {\n  get(this: RectView): R2Box {\n    const frame = this.viewFrame;\n    const x = this.x.getValue().pxValue(frame.width);\n    const y = this.y.getValue().pxValue(frame.height);\n    const width = this.width.getValue().pxValue(frame.width);\n    const height = this.height.getValue().pxValue(frame.height);\n    return new R2Box(x, y, x + width, y + height);\n  },\n  configurable: true,\n});\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals} from \"@swim/util\";\nimport {Output, Debug, Format} from \"@swim/codec\";\nimport {AnyLength, Length, AnyAngle, Angle, AnyR2Point, R2Point, R2Box} from \"@swim/math\";\nimport type {GraphicsRenderer} from \"../graphics/GraphicsRenderer\";\nimport type {Graphics} from \"../graphics/Graphics\";\nimport type {DrawingContext} from \"../drawing/DrawingContext\";\nimport {PathContext} from \"../path/PathContext\";\nimport {PathRenderer} from \"../path/PathRenderer\";\n\n/** @public */\nexport type AnyArc = Arc | ArcInit;\n\n/** @public */\nexport interface ArcInit {\n  center?: R2Point;\n  innerRadius?: AnyLength;\n  outerRadius?: AnyLength;\n  startAngle?: AnyAngle;\n  sweepAngle?: AnyAngle;\n  padAngle?: AnyAngle;\n  padRadius?: AnyLength | null;\n  cornerRadius?: AnyLength;\n}\n\n/** @public */\nexport class Arc implements Graphics, Equals, Debug {\n  constructor(center: R2Point, innerRadius: Length, outerRadius: Length, startAngle: Angle,\n              sweepAngle: Angle, padAngle: Angle, padRadius: Length | null, cornerRadius: Length) {\n    this.center = center;\n    this.innerRadius = innerRadius;\n    this.outerRadius = outerRadius;\n    this.startAngle = startAngle;\n    this.sweepAngle = sweepAngle;\n    this.padAngle = padAngle;\n    this.padRadius = padRadius;\n    this.cornerRadius = cornerRadius;\n  }\n\n  readonly center: R2Point;\n\n  withCenter(center: AnyR2Point): Arc {\n    center = R2Point.fromAny(center);\n    if (this.center.equals(center)) {\n      return this;\n    } else {\n      return this.copy(center as R2Point, this.innerRadius, this.outerRadius, this.startAngle,\n                       this.sweepAngle, this.padAngle, this.padRadius, this.cornerRadius);\n    }\n  }\n\n  readonly innerRadius: Length;\n\n  withInnerRadius(innerRadius: AnyLength): Arc {\n    innerRadius = Length.fromAny(innerRadius);\n    if (this.innerRadius.equals(innerRadius)) {\n      return this;\n    } else {\n      return this.copy(this.center, innerRadius, this.outerRadius, this.startAngle,\n                       this.sweepAngle, this.padAngle, this.padRadius, this.cornerRadius);\n    }\n  }\n\n  readonly outerRadius: Length;\n\n  withOuterRadius(outerRadius: AnyLength): Arc {\n    outerRadius = Length.fromAny(outerRadius);\n    if (this.outerRadius.equals(outerRadius)) {\n      return this;\n    } else {\n      return this.copy(this.center, this.innerRadius, outerRadius, this.startAngle,\n                       this.sweepAngle, this.padAngle, this.padRadius, this.cornerRadius);\n    }\n  }\n\n  readonly startAngle: Angle;\n\n  withStartAngle(startAngle: AnyAngle): Arc {\n    startAngle = Angle.fromAny(startAngle);\n    if (this.startAngle.equals(startAngle)) {\n      return this;\n    } else {\n      return this.copy(this.center, this.innerRadius, this.outerRadius, startAngle,\n                       this.sweepAngle, this.padAngle, this.padRadius, this.cornerRadius);\n    }\n  }\n\n  readonly sweepAngle: Angle;\n\n  withSweepAngle(sweepAngle: AnyAngle): Arc {\n    sweepAngle = Angle.fromAny(sweepAngle);\n    if (this.sweepAngle.equals(sweepAngle)) {\n      return this;\n    } else {\n      return this.copy(this.center, this.innerRadius, this.outerRadius, this.startAngle,\n                       sweepAngle, this.padAngle, this.padRadius, this.cornerRadius);\n    }\n  }\n\n  readonly padAngle: Angle;\n\n  withPadAngle(padAngle: AnyAngle): Arc {\n    padAngle = Angle.fromAny(padAngle);\n    if (this.padAngle.equals(padAngle)) {\n      return this;\n    } else {\n      return this.copy(this.center, this.innerRadius, this.outerRadius, this.startAngle,\n                       this.sweepAngle, padAngle, this.padRadius, this.cornerRadius);\n    }\n  }\n\n  readonly padRadius: Length | null;\n\n  withPadRadius(padRadius: AnyLength | null): Arc {\n    if (padRadius !== null) {\n      padRadius = Length.fromAny(padRadius);\n    }\n    if (Equals(this.padRadius, padRadius)) {\n      return this;\n    } else {\n      return this.copy(this.center, this.innerRadius, this.outerRadius, this.startAngle,\n                       this.sweepAngle, this.padAngle, padRadius, this.cornerRadius);\n    }\n  }\n\n  readonly cornerRadius: Length;\n\n  withCornerRadius(cornerRadius: AnyLength): Arc {\n    cornerRadius = Length.fromAny(cornerRadius);\n    if (this.cornerRadius.equals(cornerRadius)) {\n      return this;\n    } else {\n      return this.copy(this.center, this.innerRadius, this.outerRadius, this.startAngle,\n                       this.sweepAngle, this.padAngle, this.padRadius, cornerRadius);\n    }\n  }\n\n  render(): string;\n  render(renderer: GraphicsRenderer, frame?: R2Box): void;\n  render(renderer?: GraphicsRenderer, frame?: R2Box): string | void {\n    if (renderer === void 0) {\n      const context = new PathContext();\n      context.setPrecision(3);\n      this.draw(context, frame);\n      return context.toString();\n    } else if (renderer instanceof PathRenderer) {\n      this.draw(renderer.context, frame);\n    }\n  }\n\n  draw(context: DrawingContext, frame?: R2Box): void {\n    this.renderArc(context, frame);\n  }\n\n  protected renderArc(context: DrawingContext, frame: R2Box | undefined): void {\n    let size: number | undefined;\n    if (frame !== void 0) {\n      size = Math.min(frame.width, frame.height);\n    }\n\n    const center = this.center;\n    const cx = center.x;\n    const cy = center.y;\n    let r0 = this.innerRadius.pxValue(size);\n    let r1 = this.outerRadius.pxValue(size);\n    const a0 = this.startAngle.radValue();\n    const da = this.sweepAngle.radValue();\n    const a1 = a0 + da;\n    const cw = da >= 0;\n\n    if (r1 < r0) {\n      // swap inner and outer radii\n      const r = r1;\n      r1 = r0;\n      r0 = r;\n    }\n\n    if (!(r1 > Arc.Epsilon)) {\n      // degenerate point\n      context.moveTo(cx, cy);\n    } else if (da > 2 * Math.PI - Arc.Epsilon) {\n      // full circle or annulus\n      context.moveTo(cx + r1 * Math.cos(a0), cy + r1 * Math.sin(a0));\n      context.arc(cx, cy, r1, a0, a1, !cw);\n      if (r0 > Arc.Epsilon) {\n        context.moveTo(cx + r0 * Math.cos(a1), cy + r0 * Math.sin(a1));\n        context.arc(cx, cy, r0, a1, a0, cw);\n      }\n    } else {\n      // circular or annular sector\n      let a01 = a0;\n      let a11 = a1;\n      let a00 = a0;\n      let a10 = a1;\n      let da0 = da;\n      let da1 = da;\n      const ap = (this.padAngle.radValue()) / 2;\n      const rp = +(ap > Arc.Epsilon) && (this.padRadius !== null ? this.padRadius.pxValue(size) : Math.sqrt(r0 * r0 + r1 * r1));\n      const rc = Math.min(Math.abs(r1 - r0) / 2, this.cornerRadius.pxValue(size));\n      let rc0 = rc;\n      let rc1 = rc;\n\n      if (rp > Arc.Epsilon) {\n        // apply padding\n        let p0 = Math.asin(rp / r0 * Math.sin(ap));\n        let p1 = Math.asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > Arc.Epsilon) {\n          p0 *= cw ? 1 : -1;\n          a00 += p0;\n          a10 -= p0;\n        } else {\n          da0 = 0;\n          a00 = a10 = (a0 + a1) / 2;\n        }\n        if ((da1 -= p1 * 2) > Arc.Epsilon) {\n          p1 *= cw ? 1 : -1;\n          a01 += p1;\n          a11 -= p1;\n        } else {\n          da1 = 0;\n          a01 = a11 = (a0 + a1) / 2;\n        }\n      }\n\n      let x00: number | undefined;\n      let y00: number | undefined;\n      const x01 = r1 * Math.cos(a01);\n      const y01 = r1 * Math.sin(a01);\n      const x10 = r0 * Math.cos(a10);\n      const y10 = r0 * Math.sin(a10);\n      let x11: number | undefined;\n      let y11: number | undefined;\n\n      if (rc > Arc.Epsilon) {\n        // rounded corners\n        x11 = r1 * Math.cos(a11);\n        y11 = r1 * Math.sin(a11);\n        x00 = r0 * Math.cos(a00);\n        y00 = r0 * Math.sin(a00);\n\n        if (da < Math.PI) {\n          // limit corner radius to sector angle\n          const oc = da0 > Arc.Epsilon ? Arc.intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10];\n          const ax = x01 - oc[0]!;\n          const ay = y01 - oc[1]!;\n          const bx = x11 - oc[0]!;\n          const by = y11 - oc[1]!;\n          const kc = 1 / Math.sin(0.5 * Math.acos((ax * bx + ay * by) /\n                                                  (Math.sqrt(ax * ax + ay * ay) *\n                                                   Math.sqrt(bx * bx + by * by))));\n          const lc = Math.sqrt(oc[0]! * oc[0]! + oc[1]! * oc[1]!);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      if (!(da1 > Arc.Epsilon)) {\n        // collapsed sector\n        context.moveTo(cx + x01, cy + y01);\n      } else if (rc1 > Arc.Epsilon) {\n        // rounded outer corners\n        const t0 = Arc.cornerTangents(x00!, y00!, x01, y01, r1, rc1, cw);\n        const t1 = Arc.cornerTangents(x11!, y11!, x10, y10, r1, rc1, cw);\n\n        context.moveTo(cx + t0.cx + t0.x01, cy + t0.cy + t0.y01);\n\n        if (rc1 < rc) {\n          // draw merged outer corners\n          context.arc(cx + t0.cx, cy + t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n        } else {\n          // draw outer corners and arc\n          context.arc(cx + t0.cx, cy + t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(cx, cy, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11),\n                      Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(cx + t1.cx, cy + t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      } else {\n        // draw outer circular arc\n        context.moveTo(cx + x01, cy + y01);\n        context.arc(cx, cy, r1, a01, a11, !cw);\n      }\n\n      if (!(r0 > Arc.Epsilon) || !(da0 > Arc.Epsilon)) {\n        // collapsed sector\n        context.lineTo(cx + x10, cy + y10);\n      } else if (rc0 > Arc.Epsilon) {\n        // rounded inner corners\n        const t0 = Arc.cornerTangents(x10, y10, x11!, y11!, r0, -rc0, cw);\n        const t1 = Arc.cornerTangents(x01, y01, x00!, y00!, r0, -rc0, cw);\n\n        context.lineTo(cx + t0.cx + t0.x01, cy + t0.cy + t0.y01);\n\n        if (rc0 < rc) {\n          // draw merged inner corners\n          context.arc(cx + t0.cx, cy + t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n        } else {\n          // draw inner corners and arc\n          context.arc(cx + t0.cx, cy + t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(cx, cy, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11),\n                      Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(cx + t1.cx, cy + t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      } else {\n        // draw inner circular arc\n        context.arc(cx, cy, r0, a10, a00, cw);\n      }\n    }\n\n    context.closePath();\n  }\n\n  protected copy(center: R2Point, innerRadius: Length, outerRadius: Length, startAngle: Angle,\n                 sweepAngle: Angle, padAngle: Angle, padRadius: Length | null, cornerRadius: Length): Arc {\n    return new Arc(center, innerRadius, outerRadius, startAngle, sweepAngle, padAngle, padRadius, cornerRadius);\n  }\n\n  toAny(): ArcInit {\n    return {\n      center: this.center,\n      innerRadius: this.innerRadius,\n      outerRadius: this.outerRadius,\n      startAngle: this.startAngle,\n      sweepAngle: this.sweepAngle,\n      padAngle: this.padAngle,\n      padRadius: this.padRadius,\n      cornerRadius: this.cornerRadius,\n    };\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Arc) {\n      return this.center.equals(that.center)\n          && this.innerRadius.equals(that.innerRadius)\n          && this.outerRadius.equals(that.outerRadius)\n          && this.startAngle.equals(that.startAngle)\n          && this.sweepAngle.equals(that.sweepAngle)\n          && this.padAngle.equals(that.padAngle)\n          && Equals(this.padRadius, that.padRadius)\n          && this.cornerRadius.equals(that.cornerRadius);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"Arc\").write(46/*'.'*/).write(\"create\").write(40/*'('*/).write(41/*')'*/);\n    if (this.center.isDefined()) {\n      output = output.write(46/*'.'*/).write(\"center\").write(40/*'('*/).debug(this.center).write(41/*')'*/);\n    }\n    if (this.innerRadius.isDefined()) {\n      output = output.write(46/*'.'*/).write(\"innerRadius\").write(40/*'('*/).debug(this.innerRadius).write(41/*')'*/);\n    }\n    if (this.outerRadius.isDefined()) {\n      output = output.write(46/*'.'*/).write(\"outerRadius\").write(40/*'('*/).debug(this.outerRadius).write(41/*')'*/);\n    }\n    if (this.startAngle.isDefined()) {\n      output = output.write(46/*'.'*/).write(\"startAngle\").write(40/*'('*/).debug(this.startAngle).write(41/*')'*/);\n    }\n    if (this.sweepAngle.isDefined()) {\n      output = output.write(46/*'.'*/).write(\"sweepAngle\").write(40/*'('*/).debug(this.sweepAngle).write(41/*')'*/);\n    }\n    if (this.padAngle.isDefined()) {\n      output = output.write(46/*'.'*/).write(\"padAngle\").write(40/*'('*/).debug(this.padAngle).write(41/*')'*/);\n    }\n    if (this.padRadius !== null) {\n      output = output.write(46/*'.'*/).write(\"padRadius\").write(40/*'('*/).debug(this.padRadius).write(41/*')'*/);\n    }\n    if (this.cornerRadius.isDefined()) {\n      output = output.write(46/*'.'*/).write(\"cornerRadius\").write(40/*'('*/).debug(this.cornerRadius).write(41/*')'*/);\n    }\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  static create(center: AnyR2Point = R2Point.origin(),\n                innerRadius: AnyLength = Length.zero(),\n                outerRadius: AnyLength = Length.zero(),\n                startAngle: AnyAngle = Angle.zero(),\n                sweepAngle: AnyAngle = Angle.zero(),\n                padAngle: AnyAngle = Angle.zero(),\n                padRadius: AnyLength | null = null,\n                cornerRadius: AnyLength = Length.zero()): Arc {\n    center = R2Point.fromAny(center);\n    innerRadius = Length.fromAny(innerRadius);\n    outerRadius = Length.fromAny(outerRadius);\n    startAngle = Angle.fromAny(startAngle);\n    sweepAngle = Angle.fromAny(sweepAngle);\n    padAngle = Angle.fromAny(padAngle);\n    padRadius = padRadius !== null ? Length.fromAny(padRadius) : null;\n    cornerRadius = Length.fromAny(cornerRadius);\n    return new Arc(center as R2Point, innerRadius, outerRadius, startAngle,\n                   sweepAngle, padAngle, padRadius, cornerRadius);\n  }\n\n  static fromAny(value: AnyArc): Arc {\n    if (value instanceof Arc) {\n      return value;\n    } else if (typeof value === \"object\" && value !== null) {\n      return Arc.create(value.center, value.innerRadius, value.outerRadius, value.startAngle,\n                        value.sweepAngle, value.padAngle, value.padRadius, value.cornerRadius);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  private static intersect(x0: number, y0: number, x1: number, y1: number, x2: number, y2: number,\n                           x3: number, y3: number): [number, number] {\n    const x10 = x1 - x0;\n    const y10 = y1 - y0;\n    const x32 = x3 - x2;\n    const y32 = y3 - y2;\n    const t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n    return [x0 + t * x10, y0 + t * y10];\n  }\n\n  private static cornerTangents(x0: number, y0: number, x1: number, y1: number, r1: number, rc: number, cw: boolean)\n                             : {cx: number, cy: number, x01: number, y01: number, x11: number, y11: number} {\n    // http://mathworld.wolfram.com/Circle-LineIntersection.html\n    const x01 = x0 - x1;\n    const y01 = y0 - y1;\n    const lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01);\n    const ox = lo * y01;\n    const oy = -lo * x01;\n    const x11 = x0 + ox;\n    const y11 = y0 + oy;\n    const x10 = x1 + ox;\n    const y10 = y1 + oy;\n    const x00 = (x11 + x10) / 2;\n    const y00 = (y11 + y10) / 2;\n    const dx = x10 - x11;\n    const dy = y10 - y11;\n    const d2 = dx * dx + dy * dy;\n    const r = r1 - rc;\n    const D = x11 * y10 - x10 * y11;\n    const d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D));\n    let cx0 = (D * dy - dx * d) / d2;\n    let cy0 = (-D * dx - dy * d) / d2;\n    const cx1 = (D * dy + dx * d) / d2;\n    const cy1 = (-D * dx + dy * d) / d2;\n    const dx0 = cx0 - x00;\n    const dy0 = cy0 - y00;\n    const dx1 = cx1 - x00;\n    const dy1 = cy1 - y00;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) {\n      // pick closest intersection\n      cx0 = cx1;\n      cy0 = cy1;\n    }\n    return {\n      cx: cx0,\n      cy: cy0,\n      x01: -ox,\n      y01: -oy,\n      x11: cx0 * (r1 / r - 1),\n      y11: cy0 * (r1 / r - 1),\n    };\n  }\n\n  /** @internal */\n  static Epsilon: number = 1e-12;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {AnyTiming} from \"@swim/util\";\nimport {Affinity, Animator} from \"@swim/component\";\nimport {AnyLength, Length, AnyAngle, Angle, AnyR2Point, R2Point, R2Box} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, View} from \"@swim/view\";\nimport {GraphicsView} from \"../graphics/GraphicsView\";\nimport type {PaintingContext} from \"../painting/PaintingContext\";\nimport {PaintingRenderer} from \"../painting/PaintingRenderer\";\nimport type {CanvasContext} from \"../canvas/CanvasContext\";\nimport {CanvasRenderer} from \"../canvas/CanvasRenderer\";\nimport type {FillViewInit, FillView} from \"./FillView\";\nimport type {StrokeViewInit, StrokeView} from \"./StrokeView\";\nimport {ArcInit, Arc} from \"./Arc\";\n\n/** @public */\nexport type AnyArcView = ArcView | Arc | ArcViewInit;\n\n/** @public */\nexport interface ArcViewInit extends FillViewInit, StrokeViewInit, ArcInit {\n}\n\n/** @public */\nexport class ArcView extends GraphicsView implements FillView, StrokeView {\n  @Animator({type: Number, value: 0.5, updateFlags: View.NeedsRender})\n  readonly xAlign!: Animator<this, number>;\n\n  @Animator({type: Number, value: 0.5, updateFlags: View.NeedsRender})\n  readonly yAlign!: Animator<this, number>;\n\n  @Animator({type: R2Point, value: R2Point.origin(), updateFlags: View.NeedsRender})\n  readonly center!: Animator<this, R2Point, AnyR2Point>;\n\n  @ThemeAnimator({type: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly innerRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly outerRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Angle, value: Angle.zero(), updateFlags: View.NeedsRender})\n  readonly startAngle!: ThemeAnimator<this, Angle, AnyAngle>;\n\n  @ThemeAnimator({type: Angle, value: Angle.zero(), updateFlags: View.NeedsRender})\n  readonly sweepAngle!: ThemeAnimator<this, Angle, AnyAngle>;\n\n  @ThemeAnimator({type: Angle, value: Angle.zero(), updateFlags: View.NeedsRender})\n  readonly padAngle!: ThemeAnimator<this, Angle, AnyAngle>;\n\n  @ThemeAnimator({type: Length, value: null, updateFlags: View.NeedsRender})\n  readonly padRadius!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator({type: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly cornerRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly fill!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly stroke!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Length, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly strokeWidth!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  get value(): Arc {\n    return new Arc(this.center.value, this.innerRadius.value, this.outerRadius.value,\n                   this.startAngle.value, this.sweepAngle.value, this.padAngle.value,\n                   this.padRadius.value, this.cornerRadius.value);\n  }\n\n  get state(): Arc {\n    return new Arc(this.center.state, this.innerRadius.state, this.outerRadius.state,\n                   this.startAngle.state, this.sweepAngle.state, this.padAngle.state,\n                   this.padRadius.state, this.cornerRadius.state);\n  }\n\n  setState(arc: Arc | ArcViewInit, timing?: AnyTiming | boolean): void {\n    if (arc instanceof Arc) {\n      arc = arc.toAny();\n    }\n    if (arc.center !== void 0) {\n      this.center(arc.center, timing);\n    }\n    if (arc.innerRadius !== void 0) {\n      this.innerRadius(arc.innerRadius, timing);\n    }\n    if (arc.outerRadius !== void 0) {\n      this.outerRadius(arc.outerRadius, timing);\n    }\n    if (arc.startAngle !== void 0) {\n      this.startAngle(arc.startAngle, timing);\n    }\n    if (arc.sweepAngle !== void 0) {\n      this.sweepAngle(arc.sweepAngle, timing);\n    }\n    if (arc.padAngle !== void 0) {\n      this.padAngle(arc.padAngle, timing);\n    }\n    if (arc.padRadius !== void 0) {\n      this.padRadius(arc.padRadius, timing);\n    }\n    if (arc.cornerRadius !== void 0) {\n      this.cornerRadius(arc.cornerRadius, timing);\n    }\n    if (arc.fill !== void 0) {\n      this.fill(arc.fill, timing);\n    }\n    if (arc.stroke !== void 0) {\n      this.stroke(arc.stroke, timing);\n    }\n    if (arc.strokeWidth !== void 0) {\n      this.strokeWidth(arc.strokeWidth, timing);\n    }\n  }\n\n  protected layoutArc(): void {\n    if (this.center.hasAffinity(Affinity.Intrinsic)) {\n      const viewFrame = this.viewFrame;\n      const cx = viewFrame.xMin + viewFrame.width * this.xAlign.getValue();\n      const cy = viewFrame.yMin + viewFrame.height * this.yAlign.getValue();\n      this.center.setState(new R2Point(cx, cy), Affinity.Intrinsic);\n    }\n  }\n\n  protected override onRender(viewContext: ViewContextType<this>): void {\n    super.onRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      this.layoutArc();\n      this.renderArc(renderer.context, this.viewFrame);\n    }\n  }\n\n  protected renderArc(context: PaintingContext, frame: R2Box): void {\n    // save\n    const contextFillStyle = context.fillStyle;\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    const arc = this.value;\n    context.beginPath();\n    arc.draw(context, frame);\n\n    const fill = this.fill.value;\n    if (fill !== null) {\n      context.fillStyle = fill.toString();\n      context.fill();\n    }\n\n    const stroke = this.stroke.value;\n    if (stroke !== null) {\n      const strokeWidth = this.strokeWidth.value;\n      if (strokeWidth !== null) {\n        const size = Math.min(frame.width, frame.height);\n        context.lineWidth = strokeWidth.pxValue(size);\n      }\n      context.strokeStyle = stroke.toString();\n      context.stroke();\n    }\n\n    // restore\n    context.fillStyle = contextFillStyle;\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n\n  override get popoverFrame(): R2Box {\n    const frame = this.viewFrame;\n    const size = Math.min(frame.width, frame.height);\n    const inversePageTransform = this.pageTransform.inverse();\n    const center = this.center.getValue();\n    const px = inversePageTransform.transformX(center.x, center.y);\n    const py = inversePageTransform.transformY(center.x, center.y);\n    const r = (this.innerRadius.getValue().pxValue(size) + this.outerRadius.getValue().pxValue(size)) / 2;\n    const a = this.startAngle.getValue().radValue() + this.sweepAngle.getValue().radValue() / 2;\n    const x = px + r * Math.cos(a);\n    const y = py + r * Math.sin(a);\n    return new R2Box(x, y, x, y);\n  }\n\n  declare readonly viewBounds: R2Box; // getter defined below to work around useDefineForClassFields lunacy\n\n  protected override hitTest(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const p = renderer.transform.transform(x, y);\n      this.layoutArc();\n      return this.hitTestArc(p.x, p.y, renderer.context, this.viewFrame);\n    }\n    return null;\n  }\n\n  protected hitTestArc(x: number, y: number, context: CanvasContext, frame: R2Box): GraphicsView | null {\n    const arc = this.value;\n    context.beginPath();\n    arc.draw(context, frame);\n    if (this.fill.value !== null && context.isPointInPath(x, y)) {\n      return this;\n    } else if (this.stroke.value !== null) {\n      const strokeWidth = this.strokeWidth.value;\n      if (strokeWidth !== null) {\n        // save\n        const contextLineWidth = context.lineWidth;\n\n        const size = Math.min(frame.width, frame.height);\n        context.lineWidth = strokeWidth.pxValue(size);\n        const pointInStroke = context.isPointInStroke(x, y);\n\n        // restore\n        context.lineWidth = contextLineWidth;\n\n        if (pointInStroke) {\n          return this;\n        }\n      }\n    }\n    return null;\n  }\n\n  override init(init: Arc | ArcViewInit): void {\n    if (!(init instanceof Arc)) {\n      super.init(init);\n    }\n    this.setState(init);\n  }\n\n  static fromArc(arc: Arc): ArcView {\n    const view = new ArcView();\n    view.setState(arc);\n    return view;\n  }\n}\nObject.defineProperty(ArcView.prototype, \"viewBounds\", {\n  get(this: ArcView): R2Box {\n    const frame = this.viewFrame;\n    const size = Math.min(frame.width, frame.height);\n    const center = this.center.getValue();\n    const radius = this.outerRadius.getValue().pxValue(size);\n    return new R2Box(center.x - radius, center.y - radius,\n                     center.x + radius, center.y + radius);\n  },\n  configurable: true,\n});\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {AnyR2Point, R2Point} from \"@swim/math\";\nimport type {AnyFont, Font, AnyColor, Color} from \"@swim/style\";\nimport type {ThemeAnimator} from \"@swim/theme\";\nimport {GraphicsViewInit, GraphicsView} from \"../graphics/GraphicsView\";\n\n/** @public */\nexport interface TypesetViewInit extends GraphicsViewInit {\n  font?: AnyFont;\n  textAlign?: CanvasTextAlign;\n  textBaseline?: CanvasTextBaseline;\n  textOrigin?: AnyR2Point;\n  textColor?: AnyColor;\n}\n\n/** @public */\nexport interface TypesetView extends GraphicsView {\n  readonly font: ThemeAnimator<this, Font | null, AnyFont | null>;\n\n  readonly textAlign: ThemeAnimator<this, CanvasTextAlign | undefined>;\n\n  readonly textBaseline: ThemeAnimator<this, CanvasTextBaseline | undefined>;\n\n  readonly textOrigin: ThemeAnimator<this, R2Point | null, AnyR2Point | null>;\n\n  readonly textColor: ThemeAnimator<this, Color | null, AnyColor | null>;\n}\n\n/** @public */\nexport const TypesetView = (function () {\n  const TypesetView = {} as {\n    init(view: TypesetView, init: TypesetViewInit): void;\n \n    is(object: unknown): object is TypesetView;\n };\n\n  TypesetView.init = function (view: TypesetView, init: TypesetViewInit): void {\n    if (init.font !== void 0) {\n      view.font(init.font);\n    }\n    if (init.textAlign !== void 0) {\n      view.textAlign(init.textAlign);\n    }\n    if (init.textBaseline !== void 0) {\n      view.textBaseline(init.textBaseline);\n    }\n    if (init.textOrigin !== void 0) {\n      view.textOrigin(init.textOrigin);\n    }\n    if (init.textColor !== void 0) {\n      view.textColor(init.textColor);\n    }\n  };\n\n  TypesetView.is = function (object: unknown): object is TypesetView {\n    if (typeof object === \"object\" && object !== null) {\n      const view = object as TypesetView;\n      return view instanceof GraphicsView\n          && \"font\" in view\n          && \"textAlign\" in view\n          && \"textBaseline\" in view\n          && \"textOrigin\" in view\n          && \"textColor\" in view;\n    }\n    return false;\n  };\n\n  return TypesetView;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals} from \"@swim/util\";\nimport {Output, Debug, Format} from \"@swim/codec\";\nimport {AnyR2Point, R2Point, R2Box} from \"@swim/math\";\nimport {AnyFont, Font, AnyColor, Color} from \"@swim/style\";\nimport type {GraphicsRenderer} from \"../graphics/GraphicsRenderer\";\nimport type {Graphics} from \"../graphics/Graphics\";\nimport type {CanvasContext} from \"../canvas/CanvasContext\";\nimport {CanvasRenderer} from \"../canvas/CanvasRenderer\";\n\n/** @public */\nexport type AnyTextRun = TextRun | TextRunInit | string;\n\n/** @public */\nexport interface TextRunInit {\n  text: string;\n  font?: AnyFont;\n  textAlign?: CanvasTextAlign;\n  textBaseline?: CanvasTextBaseline;\n  textOrigin?: AnyR2Point;\n  textColor?: AnyColor;\n}\n\n/** @public */\nexport class TextRun implements Graphics, Equals, Debug {\n  constructor(text: string, font: Font | null, textAlign: CanvasTextAlign | null,\n              textBaseline: CanvasTextBaseline | null, textOrigin: R2Point | null,\n              textColor: Color | null) {\n    this.text = text;\n    this.font = font;\n    this.textAlign = textAlign;\n    this.textBaseline = textBaseline;\n    this.textOrigin = textOrigin;\n    this.textColor = textColor;\n  }\n\n  readonly text: string;\n\n  withText(text: string): TextRun {\n    if (this.text === text) {\n      return this;\n    } else {\n      return this.copy(text, this.font, this.textAlign,\n                       this.textBaseline, this.textOrigin, this.textColor);\n    }\n  }\n\n  readonly font: Font | null;\n\n  withFont(font: AnyFont | null): TextRun {\n    if (font !== null) {\n      font = Font.fromAny(font);\n    }\n    if (this.font === font) {\n      return this;\n    } else {\n      return this.copy(this.text, font, this.textAlign,\n                       this.textBaseline, this.textOrigin, this.textColor);\n    }\n  }\n\n  readonly textAlign: CanvasTextAlign | null;\n\n  withTextAlign(textAlign: CanvasTextAlign | null): TextRun {\n    if (this.textAlign === textAlign) {\n      return this;\n    } else {\n      return this.copy(this.text, this.font, textAlign,\n                       this.textBaseline, this.textOrigin, this.textColor);\n    }\n  }\n\n  readonly textBaseline: CanvasTextBaseline | null;\n\n  withTextBaseline(textBaseline: CanvasTextBaseline | null): TextRun {\n    if (this.textBaseline === textBaseline) {\n      return this;\n    } else {\n      return this.copy(this.text, this.font, this.textAlign,\n                       textBaseline, this.textOrigin, this.textColor);\n    }\n  }\n\n  readonly textOrigin: R2Point | null;\n\n  withTextOrigin(textOrigin: AnyR2Point | null): TextRun | null {\n    if (textOrigin !== null) {\n      textOrigin = R2Point.fromAny(textOrigin);\n    }\n    if (Equals(this.textOrigin, textOrigin)) {\n      return this;\n    } else {\n      return this.copy(this.text, this.font, this.textAlign,\n                       this.textBaseline, textOrigin as R2Point, this.textColor);\n    }\n  }\n\n  readonly textColor: Color | null;\n\n  withTextColor(textColor: AnyColor | null): TextRun {\n    if (textColor !== null) {\n      textColor = Color.fromAny(textColor);\n    }\n    if (Equals(this.textColor, textColor)) {\n      return this;\n    } else {\n      return this.copy(this.text, this.font, this.textAlign,\n                       this.textBaseline, this.textOrigin, textColor);\n    }\n  }\n\n  render(renderer: GraphicsRenderer, frame: R2Box): void {\n    if (renderer instanceof CanvasRenderer) {\n      this.draw(renderer.context, frame);\n    }\n  }\n\n  draw(context: CanvasContext, frame: R2Box): void {\n    this.renderText(context, frame);\n  }\n\n  protected renderText(context: CanvasContext, frame: R2Box): void {\n    // save\n    const contextFont = context.font;\n    const contextTextAlign = context.textAlign;\n    const contextTextBaseline = context.textBaseline;\n    const contextFillStyle = context.fillStyle;\n\n    if (this.font !== null) {\n      context.font = this.font.toString();\n    }\n    if (this.textAlign !== null) {\n      context.textAlign = this.textAlign;\n    }\n    if (this.textBaseline !== null) {\n      context.textBaseline = this.textBaseline;\n    }\n    if (this.textColor !== null) {\n      context.fillStyle = this.textColor.toString();\n    }\n    let textOrigin = this.textOrigin;\n    if (textOrigin === null) {\n      textOrigin = R2Point.origin();\n    }\n    context.fillText(this.text, textOrigin.x, textOrigin.y);\n\n    // restore\n    context.font = contextFont;\n    context.textAlign = contextTextAlign;\n    context.textBaseline = contextTextBaseline;\n    context.fillStyle = contextFillStyle;\n  }\n\n  protected copy(text: string, font: Font | null, textAlign: CanvasTextAlign | null,\n                 textBaseline: CanvasTextBaseline | null, textOrigin: R2Point | null,\n                 textColor: Color | null): TextRun {\n    return new TextRun(text, font, textAlign, textBaseline, textOrigin, textColor);\n  }\n\n  toAny(): TextRunInit {\n    const init: TextRunInit = {text: this.text};\n    init.text = this.text;\n    if (this.font !== null) {\n      init.font = this.font;\n    }\n    if (this.font !== null) {\n      init.font = this.font;\n    }\n    if (this.textAlign !== null) {\n      init.textAlign = this.textAlign;\n    }\n    if (this.textBaseline !== null) {\n      init.textBaseline = this.textBaseline;\n    }\n    if (this.textOrigin !== null) {\n      init.textOrigin = this.textOrigin;\n    }\n    if (this.textColor !== null) {\n      init.textColor = this.textColor;\n    }\n    return init;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof TextRun) {\n      return this.text === that.text\n          && Equals(this.font, that.font)\n          && this.textAlign === that.textAlign\n          && this.textBaseline === that.textBaseline\n          && Equals(this.textOrigin, that.textOrigin)\n          && Equals(this.textColor, that.textColor);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"TextRun\").write(46/*'.'*/).write(\"create\").write(40/*'('*/)\n                   .debug(this.text).write(41/*')'*/);\n    if (this.font !== null) {\n      output = output.write(46/*'.'*/).write(\"font\").write(40/*'('*/).debug(this.font).write(41/*')'*/);\n    }\n    if (this.textAlign !== null) {\n      output = output.write(46/*'.'*/).write(\"textAlign\").write(40/*'('*/).debug(this.textAlign).write(41/*')'*/);\n    }\n    if (this.textBaseline !== null) {\n      output = output.write(46/*'.'*/).write(\"textBaseline\").write(40/*'('*/).debug(this.textBaseline).write(41/*')'*/);\n    }\n    if (this.textOrigin !== null) {\n      output = output.write(46/*'.'*/).write(\"textOrigin\").write(40/*'('*/).debug(this.textOrigin).write(41/*')'*/);\n    }\n    if (this.textColor !== null) {\n      output = output.write(46/*'.'*/).write(\"textColor\").write(40/*'('*/).debug(this.textColor).write(41/*')'*/);\n    }\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  static create(text: string,\n                font: AnyFont | null = null,\n                textAlign: CanvasTextAlign | null = null,\n                textBaseline: CanvasTextBaseline | null = null,\n                textOrigin: AnyR2Point | null = null,\n                textColor: AnyColor | null = null): TextRun {\n    if (font !== null) {\n      font = Font.fromAny(font);\n    }\n    if (textOrigin !== null) {\n      textOrigin = R2Point.fromAny(textOrigin);\n    }\n    if (textColor !== null) {\n      textColor = Color.fromAny(textColor);\n    }\n    return new TextRun(text, font, textAlign, textBaseline, textOrigin as R2Point, textColor);\n  }\n\n  static fromAny(value: AnyTextRun): TextRun {\n    if (value instanceof TextRun) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return TextRun.create(value);\n    } else if (typeof value === \"object\" && value !== null) {\n      return TextRun.create(value.text, value.font, value.textAlign, value.textBaseline,\n                            value.textOrigin, value.textColor);\n    }\n    throw new TypeError(\"\" + value);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {AnyTiming} from \"@swim/util\";\nimport {AnyR2Point, R2Point} from \"@swim/math\";\nimport {AnyFont, Font, AnyColor, Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, View} from \"@swim/view\";\nimport {GraphicsView} from \"../graphics/GraphicsView\";\nimport type {CanvasContext} from \"../canvas/CanvasContext\";\nimport {CanvasRenderer} from \"../canvas/CanvasRenderer\";\nimport type {TypesetViewInit, TypesetView} from \"./TypesetView\";\nimport {TextRun} from \"./TextRun\";\n\n/** @public */\nexport type AnyTextRunView = TextRunView | TextRun | TextRunViewInit | string;\n\n/** @public */\nexport interface TextRunViewInit extends TypesetViewInit {\n  text?: string;\n}\n\n/** @public */\nexport class TextRunView extends GraphicsView implements TypesetView {\n  @ThemeAnimator({type: String, value: \"\", updateFlags: View.NeedsRender})\n  readonly text!: ThemeAnimator<this, string>;\n\n  @ThemeAnimator({type: Font, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly font!: ThemeAnimator<this, Font | null, AnyFont | null>;\n\n  @ThemeAnimator({type: String, inherits: true, updateFlags: View.NeedsRender})\n  readonly textAlign!: ThemeAnimator<this, CanvasTextAlign | undefined>;\n\n  @ThemeAnimator({type: String, inherits: true, updateFlags: View.NeedsRender})\n  readonly textBaseline!: ThemeAnimator<this, CanvasTextBaseline | undefined>;\n\n  @ThemeAnimator({type: R2Point, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly textOrigin!: ThemeAnimator<this, R2Point | null, AnyR2Point | null>;\n\n  @ThemeAnimator({type: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly textColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  get value(): TextRun {\n    return new TextRun(this.text.getValue(), this.font.getValue(), this.textAlign.getValue(),\n                       this.textBaseline.getValue(), this.textOrigin.getValue(), this.textColor.getValue());\n  }\n\n  get state(): TextRun {\n    return new TextRun(this.text.getState(), this.font.getState(), this.textAlign.getState(),\n                       this.textBaseline.getState(), this.textOrigin.getState(), this.textColor.getState());\n  }\n\n  setState(run: TextRun | TextRunViewInit | string, timing?: AnyTiming | boolean): void {\n    if (typeof run === \"string\") {\n      this.text(run, timing);\n    } else {\n      if (run instanceof TextRun) {\n        run = run.toAny();\n      }\n      if (run.text !== void 0) {\n        this.text(run.text, timing);\n      }\n      if (run.font !== void 0) {\n        this.font(run.font, timing);\n      }\n      if (run.textAlign !== void 0) {\n        this.textAlign(run.textAlign, timing);\n      }\n      if (run.textBaseline !== void 0) {\n        this.textBaseline(run.textBaseline, timing);\n      }\n      if (run.textOrigin !== void 0) {\n        this.textOrigin(run.textOrigin, timing);\n      }\n      if (run.textColor !== void 0) {\n        this.textColor(run.textColor, timing);\n      }\n    }\n  }\n\n  protected override onRender(viewContext: ViewContextType<this>): void {\n    super.onRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer && !this.hidden && !this.culled) {\n      this.renderText(renderer.context);\n    }\n  }\n\n  protected renderText(context: CanvasContext): void {\n    // save\n    const contextFont = context.font;\n    const contextTextAlign = context.textAlign;\n    const contextTextBaseline = context.textBaseline;\n    const contextFillStyle = context.fillStyle;\n\n    const font = this.font.value;\n    if (font !== null) {\n      context.font = font.toString();\n    }\n    const textAlign = this.textAlign.value;\n    if (textAlign !== void 0) {\n      context.textAlign = textAlign;\n    }\n    const textBaseline = this.textBaseline.value;\n    if (textBaseline !== void 0) {\n      context.textBaseline = textBaseline;\n    }\n    const textColor = this.textColor.value;\n    if (textColor !== null) {\n      context.fillStyle = textColor.toString();\n    }\n    let textOrigin = this.textOrigin.value;\n    if (textOrigin === null) {\n      textOrigin = R2Point.origin();\n    }\n    context.fillText(this.text.getValue(), textOrigin.x, textOrigin.y);\n\n    // restore\n    context.font = contextFont;\n    context.textAlign = contextTextAlign;\n    context.textBaseline = contextTextBaseline;\n    context.fillStyle = contextFillStyle;\n  }\n\n  override init(init: TextRun | TextRunViewInit | string): void {\n    if (typeof init !== \"string\") {\n      if (!(init instanceof TextRun)) {\n        super.init(init);\n      }\n      this.setState(init);\n    } else {\n      this.text(init);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyLength, Length} from \"@swim/math\";\n\n/** @public */\nexport type AnyIconLayout = IconLayout | IconLayoutInit;\n\n/** @public */\nexport interface IconLayoutInit {\n  iconWidth: AnyLength;\n  iconHeight: AnyLength;\n  xAlign?: number;\n  yAlign?: number;\n}\n\n/** @public */\nexport interface IconLayout {\n  readonly iconWidth: Length;\n  readonly iconHeight: Length;\n  readonly xAlign: number | undefined;\n  readonly yAlign: number | undefined;\n}\n\n/** @public */\nexport const IconLayout = (function () {\n  const IconLayout = {} as {\n    fromAny(value: AnyIconLayout): IconLayout;\n\n    is(object: unknown): object is IconLayout;\n  };\n\n  IconLayout.fromAny = function (value: AnyIconLayout): IconLayout {\n    if (value === void 0 || value === null) {\n      return value;\n    } else {\n      const iconWidth = Length.fromAny(value.iconWidth);\n      const iconHeight = Length.fromAny(value.iconHeight);\n      const xAlign = value.xAlign;\n      const yAlign = value.yAlign;\n      return {iconWidth, iconHeight, xAlign, yAlign};\n    }\n  };\n\n  IconLayout.is = function (object: unknown): object is IconLayout {\n    if (typeof object === \"object\" && object !== null || typeof object === \"function\") {\n      const viewport = object as IconLayout;\n      return \"iconWidth\" in viewport\n          && \"iconHeight\" in viewport;\n    }\n    return false;\n  };\n\n  return IconLayout;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {R2Box} from \"@swim/math\";\nimport type {Feel, MoodVectorUpdates, MoodVector, MoodMatrix, ThemeMatrix} from \"@swim/theme\";\nimport type {GraphicsRenderer} from \"../graphics/GraphicsRenderer\";\nimport type {Graphics} from \"../graphics/Graphics\";\nimport type {DrawingContext} from \"../drawing/DrawingContext\";\nimport type {PaintingContext} from \"../painting/PaintingContext\";\n\n/** @public */\nexport abstract class Icon implements Graphics {\n  abstract readonly moodModifier: MoodMatrix | null;\n\n  abstract withMoodModifier(moodModifier: MoodMatrix | null): Icon;\n\n  abstract modifyMood(feel: Feel, updates: MoodVectorUpdates<Feel>): Icon;\n\n  abstract isThemed(): boolean;\n\n  abstract withTheme(theme: ThemeMatrix, mood: MoodVector): Icon;\n\n  abstract render(renderer: GraphicsRenderer, frame: R2Box): void;\n\n  abstract paint(context: PaintingContext, frame: R2Box): void;\n\n  abstract draw(context: DrawingContext, frame: R2Box): void;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Color} from \"@swim/style\";\nimport type {Look, Feel, MoodVectorUpdates, MoodVector, MoodMatrix, ThemeMatrix} from \"@swim/theme\";\nimport {Icon} from \"./Icon\";\n\n/** @public */\nexport abstract class FilledIcon extends Icon {\n  abstract readonly fillColor: Color | null;\n\n  abstract withFillColor(fillColor: Color | null): FilledIcon;\n\n  abstract readonly fillLook: Look<Color> | null;\n\n  abstract withFillLook(fillLook: Look<Color> | null): FilledIcon;\n\n  abstract override withMoodModifier(moodModifier: MoodMatrix | null): FilledIcon;\n\n  abstract override modifyMood(feel: Feel, updates: MoodVectorUpdates<Feel>): FilledIcon;\n\n  abstract override withTheme(theme: ThemeMatrix, mood: MoodVector): FilledIcon;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals, Equivalent, Interpolate, Interpolator} from \"@swim/util\";\nimport {Output, Debug, Format} from \"@swim/codec\";\nimport {AnyR2Path, R2Path, R2Box, Transform} from \"@swim/math\";\nimport type {Color} from \"@swim/style\";\nimport {Look, Feel, MoodVectorUpdates, MoodVector, MoodMatrix, ThemeMatrix} from \"@swim/theme\";\nimport type {GraphicsRenderer} from \"../graphics/GraphicsRenderer\";\nimport type {DrawingContext} from \"../drawing/DrawingContext\";\nimport {DrawingRenderer} from \"../drawing/DrawingRenderer\";\nimport type {PaintingFillRule, PaintingContext} from \"../painting/PaintingContext\";\nimport {PaintingRenderer} from \"../painting/PaintingRenderer\";\nimport {FilledIcon} from \"./FilledIcon\";\nimport {VectorIconInterpolator} from \"../\"; // forward import\n\n/** @public */\nexport class VectorIcon extends FilledIcon implements Interpolate<VectorIcon>, Equals, Equivalent, Debug {\n  constructor(path: R2Path, fillRule: PaintingFillRule, fillColor: Color | null,\n              fillLook: Look<Color> | null, moodModifier: MoodMatrix | null) {\n    super();\n    this.path = path;\n    this.fillRule = fillRule;\n    this.fillColor = fillColor;\n    this.fillLook = fillLook;\n    this.moodModifier = moodModifier;\n  }\n\n  readonly path: R2Path;\n\n  readonly fillRule: PaintingFillRule;\n\n  withFillRule(fillRule: PaintingFillRule): VectorIcon {\n    if (Equals(this.fillRule, fillRule)) {\n      return this;\n    } else {\n      return this.copy(this.path, fillRule, this.fillColor,\n                       this.fillLook, this.moodModifier);\n    }\n  }\n\n  override readonly fillColor: Color | null;\n\n  override withFillColor(fillColor: Color | null): VectorIcon {\n    if (Equals(this.fillColor, fillColor)) {\n      return this;\n    } else {\n      return this.copy(this.path, this.fillRule, fillColor,\n                       this.fillLook, this.moodModifier);\n    }\n  }\n\n  override readonly fillLook: Look<Color> | null;\n\n  override withFillLook(fillLook: Look<Color> | null): VectorIcon {\n    if (this.fillLook === fillLook) {\n      return this;\n    } else {\n      return this.copy(this.path, this.fillRule, this.fillColor,\n                       fillLook, this.moodModifier);\n    }\n  }\n\n  override readonly moodModifier: MoodMatrix | null;\n\n  override withMoodModifier(moodModifier: MoodMatrix | null): VectorIcon {\n    if (Equals(this.moodModifier, moodModifier)) {\n      return this;\n    } else {\n      return this.copy(this.path, this.fillRule, this.fillColor,\n                       this.fillLook, moodModifier);\n    }\n  }\n\n  override modifyMood(feel: Feel, updates: MoodVectorUpdates<Feel>): VectorIcon {\n    let oldMoodModifier = this.moodModifier;\n    if (oldMoodModifier === null) {\n      oldMoodModifier = MoodMatrix.empty();\n    }\n    const newMoodModifier = oldMoodModifier.updatedCol(feel, updates, true);\n    if (!newMoodModifier.equals(oldMoodModifier)) {\n      return this.withMoodModifier(newMoodModifier);\n    } else {\n      return this;\n    }\n  }\n\n  override isThemed(): boolean {\n    return this.fillColor !== null;\n  }\n\n  override withTheme(theme: ThemeMatrix, mood: MoodVector): VectorIcon {\n    const fillLook = this.fillLook;\n    if (fillLook !== null) {\n      const moodModifier = this.moodModifier;\n      if (moodModifier !== null) {\n        mood = moodModifier.timesCol(mood, true);\n      }\n      return this.withFillColor(theme.getOr(fillLook, mood, null));\n    } else {\n      return this;\n    }\n  }\n\n  override render(renderer: GraphicsRenderer, frame: R2Box): void {\n    if (renderer instanceof PaintingRenderer) {\n      this.paint(renderer.context, frame);\n    } else if (renderer instanceof DrawingRenderer) {\n      this.draw(renderer.context, frame);\n    }\n  }\n\n  override paint(context: PaintingContext, frame: R2Box): void {\n    // save\n    const contextFillStyle = context.fillStyle;\n\n    context.beginPath();\n    this.draw(context, frame);\n    if (this.fillColor !== null) {\n      context.fillStyle = this.fillColor.toString();\n    }\n    context.fill(this.fillRule);\n\n    // restore\n    context.fillStyle = contextFillStyle;\n  }\n\n  override draw(context: DrawingContext, frame: R2Box): void {\n    const transform = Transform.scale(frame.width, frame.height).translate(frame.x, frame.y);\n    this.path.transformDraw(context, transform);\n  }\n\n  protected copy(path: R2Path, fillRule: PaintingFillRule, fillColor: Color | null,\n                 fillLook: Look<Color> | null, moodModifier: MoodMatrix | null): VectorIcon {\n    return new VectorIcon(path, fillRule, fillColor, fillLook, moodModifier);\n  }\n\n  interpolateTo(that: VectorIcon): Interpolator<VectorIcon>;\n  interpolateTo(that: unknown): Interpolator<VectorIcon> | null;\n  interpolateTo(that: unknown): Interpolator<VectorIcon> | null {\n    if (that instanceof VectorIcon) {\n      return VectorIconInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof VectorIcon) {\n      return this.path.equivalentTo(that.path, epsilon)\n          && this.fillRule === that.fillRule\n          && Equivalent(this.fillColor, that.fillColor, epsilon)\n          && this.fillLook === that.fillLook\n          && Equivalent(this.moodModifier, that.moodModifier, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof VectorIcon) {\n      return this.path.equals(that.path)\n          && this.fillRule === that.fillRule\n          && Equals(this.fillColor, that.fillColor)\n          && this.fillLook === that.fillLook\n          && Equals(this.moodModifier, that.moodModifier);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"new\").write(32/*' '*/).write(\"VectorIcon\").write(40/*'('*/)\n                   .debug(this.path).write(\", \")\n                   .debug(this.fillRule).write(\", \")\n                   .debug(this.fillColor).write(\", \")\n                   .debug(this.fillLook).write(\", \")\n                   .debug(this.moodModifier).write(41/*')'*/);\n    return output;\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  static create(width: number, height: number, path: AnyR2Path,\n                fillRule?: PaintingFillRule): VectorIcon {\n    path = R2Path.fromAny(path);\n    if (width !== 1 || height !== 1) {\n      path = path.transform(Transform.scale(1 / width, 1 / height));\n    }\n    if (fillRule === void 0) {\n      fillRule = \"nonzero\";\n    }\n    return new VectorIcon(path, fillRule, null, Look.iconColor, null);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals, Mutable, Interpolator} from \"@swim/util\";\nimport type {R2Path} from \"@swim/math\";\nimport type {Color} from \"@swim/style\";\nimport type {Look, MoodMatrix} from \"@swim/theme\";\nimport type {PaintingFillRule} from \"../painting/PaintingContext\";\nimport {VectorIcon} from \"./VectorIcon\";\n\n/** @internal */\nexport interface VectorIconInterpolator extends Interpolator<VectorIcon> {\n  /** @internal */\n  readonly path: R2Path;\n\n  /** @internal */\n  readonly fillRule: PaintingFillRule;\n\n  /** @internal */\n  readonly fillColorInterpolator: Interpolator<Color | null>;\n\n  /** @internal */\n  readonly fillLook: Look<Color> | null;\n\n  /** @internal */\n  readonly moodModifier: MoodMatrix | null;\n\n  readonly 0: VectorIcon;\n\n  readonly 1: VectorIcon;\n\n  equals(that: unknown): boolean;\n}\n\n/** @internal */\nexport const VectorIconInterpolator = (function (_super: typeof Interpolator) {\n  const VectorIconInterpolator = function (i0: VectorIcon, i1: VectorIcon): VectorIconInterpolator {\n    const interpolator = function (u: number): VectorIcon {\n      const path = interpolator.path;\n      const fillRule = interpolator.fillRule;\n      const fillColor = interpolator.fillColorInterpolator(u);\n      const fillLook = interpolator.fillLook;\n      const moodModifier = interpolator.moodModifier;\n      return new VectorIcon(path, fillRule, fillColor, fillLook, moodModifier);\n    } as VectorIconInterpolator;\n    Object.setPrototypeOf(interpolator, VectorIconInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>).path = i1.path;\n    (interpolator as Mutable<typeof interpolator>).fillRule = i1.fillRule;\n    (interpolator as Mutable<typeof interpolator>).fillColorInterpolator = Interpolator(i0.fillColor, i1.fillColor);\n    (interpolator as Mutable<typeof interpolator>).fillLook = i1.fillLook;\n    (interpolator as Mutable<typeof interpolator>).moodModifier = i1.moodModifier;\n    return interpolator;\n  } as {\n    (i0: VectorIcon, i1: VectorIcon): VectorIconInterpolator;\n\n    /** @internal */\n    prototype: VectorIconInterpolator;\n  };\n\n  VectorIconInterpolator.prototype = Object.create(_super.prototype);\n  VectorIconInterpolator.prototype.constructor = VectorIconInterpolator;\n\n  Object.defineProperty(VectorIconInterpolator.prototype, 0, {\n    get(this: VectorIconInterpolator): VectorIcon {\n      const path = this.path;\n      const fillRule = this.fillRule;\n      const fillColor = this.fillColorInterpolator[0];\n      const fillLook = this.fillLook;\n      const moodModifier = this.moodModifier;\n      return new VectorIcon(path, fillRule, fillColor, fillLook, moodModifier);\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(VectorIconInterpolator.prototype, 1, {\n    get(this: VectorIconInterpolator): VectorIcon {\n      const path = this.path;\n      const fillRule = this.fillRule;\n      const fillColor = this.fillColorInterpolator[1];\n      const fillLook = this.fillLook;\n      const moodModifier = this.moodModifier;\n      return new VectorIcon(path, fillRule, fillColor, fillLook, moodModifier);\n    },\n    configurable: true,\n  });\n\n  VectorIconInterpolator.prototype.equals = function (that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof VectorIconInterpolator) {\n      return this.path.equals(that.path)\n          && this.fillRule === that.fillRule\n          && this.fillColorInterpolator.equals(that.fillColorInterpolator)\n          && this.fillLook === that.fillLook\n          && Equals(this.moodModifier, that.moodModifier);\n    }\n    return false;\n  };\n\n  return VectorIconInterpolator;\n})(Interpolator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Equals, Equivalent, Interpolate, Interpolator} from \"@swim/util\";\nimport {Output, Debug, Format} from \"@swim/codec\";\nimport type {R2Box} from \"@swim/math\";\nimport type {Color} from \"@swim/style\";\nimport {Look, Feel, MoodVectorUpdates, MoodVector, MoodMatrix, ThemeMatrix} from \"@swim/theme\";\nimport type {GraphicsRenderer} from \"../graphics/GraphicsRenderer\";\nimport type {DrawingContext} from \"../drawing/DrawingContext\";\nimport {DrawingRenderer} from \"../drawing/DrawingRenderer\";\nimport type {PaintingContext} from \"../painting/PaintingContext\";\nimport {PaintingRenderer} from \"../painting/PaintingRenderer\";\nimport {FilledIcon} from \"./FilledIcon\";\nimport {CircleIconInterpolator} from \"../\"; // forward import\n\n/** @public */\nexport class CircleIcon extends FilledIcon implements Interpolate<CircleIcon>, Equals, Equivalent, Debug {\n  constructor(fillColor: Color | null, fillLook: Look<Color> | null, moodModifier: MoodMatrix | null) {\n    super();\n    this.fillColor = fillColor;\n    this.fillLook = fillLook;\n    this.moodModifier = moodModifier;\n  }\n\n  override readonly fillColor: Color | null;\n\n  override withFillColor(fillColor: Color | null): CircleIcon {\n    if (Equals(this.fillColor, fillColor)) {\n      return this;\n    } else {\n      return this.copy(fillColor, this.fillLook, this.moodModifier);\n    }\n  }\n\n  override readonly fillLook: Look<Color> | null;\n\n  override withFillLook(fillLook: Look<Color> | null): CircleIcon {\n    if (this.fillLook === fillLook) {\n      return this;\n    } else {\n      return this.copy(this.fillColor, fillLook, this.moodModifier);\n    }\n  }\n\n  override readonly moodModifier: MoodMatrix | null;\n\n  override withMoodModifier(moodModifier: MoodMatrix | null): CircleIcon {\n    if (Equals(this.moodModifier, moodModifier)) {\n      return this;\n    } else {\n      return this.copy(this.fillColor, this.fillLook, moodModifier);\n    }\n  }\n\n  override modifyMood(feel: Feel, updates: MoodVectorUpdates<Feel>): CircleIcon {\n    let oldMoodModifier = this.moodModifier;\n    if (oldMoodModifier === null) {\n      oldMoodModifier = MoodMatrix.empty();\n    }\n    const newMoodModifier = oldMoodModifier.updatedCol(feel, updates, true);\n    if (!newMoodModifier.equals(oldMoodModifier)) {\n      return this.withMoodModifier(newMoodModifier);\n    } else {\n      return this;\n    }\n  }\n\n  override isThemed(): boolean {\n    return this.fillColor !== null;\n  }\n\n  override withTheme(theme: ThemeMatrix, mood: MoodVector): CircleIcon {\n    const fillLook = this.fillLook;\n    if (fillLook !== null) {\n      const moodModifier = this.moodModifier;\n      if (moodModifier !== null) {\n        mood = moodModifier.timesCol(mood, true);\n      }\n      return this.withFillColor(theme.getOr(fillLook, mood, null));\n    } else {\n      return this;\n    }\n  }\n\n  override render(renderer: GraphicsRenderer, frame: R2Box): void {\n    if (renderer instanceof PaintingRenderer) {\n      this.paint(renderer.context, frame);\n    } else if (renderer instanceof DrawingRenderer) {\n      this.draw(renderer.context, frame);\n    }\n  }\n\n  override paint(context: PaintingContext, frame: R2Box): void {\n    // save\n    const contextFillStyle = context.fillStyle;\n\n    context.beginPath();\n    this.draw(context, frame);\n    if (this.fillColor !== null) {\n      context.fillStyle = this.fillColor.toString();\n    }\n    context.fill();\n\n    // restore\n    context.fillStyle = contextFillStyle;\n  }\n\n  override draw(context: DrawingContext, frame: R2Box): void {\n    const centerX = (frame.xMin + frame.xMax) / 2;\n    const centerY = (frame.yMin + frame.yMax) / 2;\n    const width = frame.width;\n    const height = frame.height;\n    const radius = Math.min(width, height) / 2;\n    context.arc(centerX, centerY, radius, 0, 2 * Math.PI);\n    context.closePath();\n  }\n\n  protected copy(fillColor: Color | null, fillLook: Look<Color> | null,\n                 moodModifier: MoodMatrix | null): CircleIcon {\n    return new CircleIcon(fillColor, fillLook, moodModifier);\n  }\n\n  interpolateTo(that: CircleIcon): Interpolator<CircleIcon>;\n  interpolateTo(that: unknown): Interpolator<CircleIcon> | null;\n  interpolateTo(that: unknown): Interpolator<CircleIcon> | null {\n    if (that instanceof CircleIcon) {\n      return CircleIconInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof CircleIcon) {\n      return Equivalent(this.fillColor, that.fillColor, epsilon)\n          && this.fillLook === that.fillLook\n          && Equivalent(this.moodModifier, that.moodModifier, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof CircleIcon) {\n      return Equals(this.fillColor, that.fillColor)\n          && this.fillLook === that.fillLook\n          && Equals(this.moodModifier, that.moodModifier);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"new\").write(32/*' '*/).write(\"CircleIcon\").write(40/*'('*/)\n                   .debug(this.fillColor).write(\", \")\n                   .debug(this.fillLook).write(\", \")\n                   .debug(this.moodModifier).write(41/*')'*/);\n    return output;\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  @Lazy\n  static create(): CircleIcon {\n    return new CircleIcon(null, Look.accentColor, null);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals, Mutable, Interpolator} from \"@swim/util\";\nimport type {Color} from \"@swim/style\";\nimport type {Look, MoodMatrix} from \"@swim/theme\";\nimport {CircleIcon} from \"./CircleIcon\";\n\n/** @internal */\nexport interface CircleIconInterpolator extends Interpolator<CircleIcon> {\n  /** @internal */\n  readonly fillColorInterpolator: Interpolator<Color | null>;\n\n  /** @internal */\n  readonly fillLook: Look<Color> | null;\n\n  /** @internal */\n  readonly moodModifier: MoodMatrix | null;\n\n  readonly 0: CircleIcon;\n\n  readonly 1: CircleIcon;\n\n  equals(that: unknown): boolean;\n}\n\n/** @internal */\nexport const CircleIconInterpolator = (function (_super: typeof Interpolator) {\n  const CircleIconInterpolator = function (i0: CircleIcon, i1: CircleIcon): CircleIconInterpolator {\n    const interpolator = function (u: number): CircleIcon {\n      const fillColor = interpolator.fillColorInterpolator(u);\n      const fillLook = interpolator.fillLook;\n      const moodModifier = interpolator.moodModifier;\n      return new CircleIcon(fillColor, fillLook, moodModifier);\n    } as CircleIconInterpolator;\n    Object.setPrototypeOf(interpolator, CircleIconInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>).fillColorInterpolator = Interpolator(i0.fillColor, i1.fillColor);\n    (interpolator as Mutable<typeof interpolator>).fillLook = i1.fillLook;\n    (interpolator as Mutable<typeof interpolator>).moodModifier = i1.moodModifier;\n    return interpolator;\n  } as {\n    (i0: CircleIcon, i1: CircleIcon): CircleIconInterpolator;\n\n    /** @internal */\n    prototype: CircleIconInterpolator;\n  };\n\n  CircleIconInterpolator.prototype = Object.create(_super.prototype);\n  CircleIconInterpolator.prototype.constructor = CircleIconInterpolator;\n\n  Object.defineProperty(CircleIconInterpolator.prototype, 0, {\n    get(this: CircleIconInterpolator): CircleIcon {\n      const fillColor = this.fillColorInterpolator[0];\n      const fillLook = this.fillLook;\n      const moodModifier = this.moodModifier;\n      return new CircleIcon(fillColor, fillLook, moodModifier);\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(CircleIconInterpolator.prototype, 1, {\n    get(this: CircleIconInterpolator): CircleIcon {\n      const fillColor = this.fillColorInterpolator[1];\n      const fillLook = this.fillLook;\n      const moodModifier = this.moodModifier;\n      return new CircleIcon(fillColor, fillLook, moodModifier);\n    },\n    configurable: true,\n  });\n\n  CircleIconInterpolator.prototype.equals = function (that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof CircleIconInterpolator) {\n      return this.fillColorInterpolator.equals(that.fillColorInterpolator)\n          && this.fillLook === that.fillLook\n          && Equals(this.moodModifier, that.moodModifier);\n    }\n    return false;\n  };\n\n  return CircleIconInterpolator;\n})(Interpolator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals, Equivalent, Interpolate, Interpolator} from \"@swim/util\";\nimport {Output, Debug, Format} from \"@swim/codec\";\nimport {AnyAngle, Angle, R2Box} from \"@swim/math\";\nimport type {Color} from \"@swim/style\";\nimport {Look, Feel, MoodVectorUpdates, MoodVector, MoodMatrix, ThemeMatrix} from \"@swim/theme\";\nimport type {GraphicsRenderer} from \"../graphics/GraphicsRenderer\";\nimport type {DrawingContext} from \"../drawing/DrawingContext\";\nimport {DrawingRenderer} from \"../drawing/DrawingRenderer\";\nimport type {PaintingContext} from \"../painting/PaintingContext\";\nimport {PaintingRenderer} from \"../painting/PaintingRenderer\";\nimport {FilledIcon} from \"./FilledIcon\";\nimport {PolygonIconInterpolator} from \"../\"; // forward import\n\n/** @public */\nexport class PolygonIcon extends FilledIcon implements Interpolate<PolygonIcon>, Equals, Equivalent, Debug {\n  constructor(sides: number, rotation: Angle, fillColor: Color | null,\n              fillLook: Look<Color> | null, moodModifier: MoodMatrix | null) {\n    super();\n    this.sides = sides;\n    this.rotation = rotation;\n    this.fillColor = fillColor;\n    this.fillLook = fillLook;\n    this.moodModifier = moodModifier;\n  }\n\n  readonly sides: number;\n\n  readonly rotation: Angle;\n\n  override readonly fillColor: Color | null;\n\n  override withFillColor(fillColor: Color | null): PolygonIcon {\n    if (Equals(this.fillColor, fillColor)) {\n      return this;\n    } else {\n      return this.copy(this.sides, this.rotation, fillColor,\n                       this.fillLook, this.moodModifier);\n    }\n  }\n\n  override readonly fillLook: Look<Color> | null;\n\n  override withFillLook(fillLook: Look<Color> | null): PolygonIcon {\n    if (this.fillLook === fillLook) {\n      return this;\n    } else {\n      return this.copy(this.sides, this.rotation, this.fillColor,\n                       fillLook, this.moodModifier);\n    }\n  }\n\n  override readonly moodModifier: MoodMatrix | null;\n\n  override withMoodModifier(moodModifier: MoodMatrix | null): PolygonIcon {\n    if (Equals(this.moodModifier, moodModifier)) {\n      return this;\n    } else {\n      return this.copy(this.sides, this.rotation, this.fillColor,\n                       this.fillLook, moodModifier);\n    }\n  }\n\n  override modifyMood(feel: Feel, updates: MoodVectorUpdates<Feel>): PolygonIcon {\n    let oldMoodModifier = this.moodModifier;\n    if (oldMoodModifier === null) {\n      oldMoodModifier = MoodMatrix.empty();\n    }\n    const newMoodModifier = oldMoodModifier.updatedCol(feel, updates, true);\n    if (!newMoodModifier.equals(oldMoodModifier)) {\n      return this.withMoodModifier(newMoodModifier);\n    } else {\n      return this;\n    }\n  }\n\n  override isThemed(): boolean {\n    return this.fillColor !== null;\n  }\n\n  override withTheme(theme: ThemeMatrix, mood: MoodVector): PolygonIcon {\n    const fillLook = this.fillLook;\n    if (fillLook !== null) {\n      const moodModifier = this.moodModifier;\n      if (moodModifier !== null) {\n        mood = moodModifier.timesCol(mood, true);\n      }\n      return this.withFillColor(theme.getOr(fillLook, mood, null));\n    } else {\n      return this;\n    }\n  }\n\n  override render(renderer: GraphicsRenderer, frame: R2Box): void {\n    if (renderer instanceof PaintingRenderer) {\n      this.paint(renderer.context, frame);\n    } else if (renderer instanceof DrawingRenderer) {\n      this.draw(renderer.context, frame);\n    }\n  }\n\n  override paint(context: PaintingContext, frame: R2Box): void {\n    // save\n    const contextFillStyle = context.fillStyle;\n\n    context.beginPath();\n    this.draw(context, frame);\n    if (this.fillColor !== null) {\n      context.fillStyle = this.fillColor.toString();\n    }\n    context.fill();\n\n    // restore\n    context.fillStyle = contextFillStyle;\n  }\n\n  override draw(context: DrawingContext, frame: R2Box): void {\n    const sides = this.sides;\n    if (sides >= 3) {\n      const centerX = (frame.xMin + frame.xMax) / 2;\n      const centerY = (frame.yMin + frame.yMax) / 2;\n      const width = frame.width;\n      const height = frame.height;\n      const radius = Math.min(width, height) / 2;\n      const sector = 2 * Math.PI / sides;\n      let angle = this.rotation.radValue();\n      context.moveTo(centerX + radius * Math.cos(angle),\n                     centerY + radius * Math.sin(angle));\n      angle += sector;\n      for (let i = 1; i < sides; i += 1) {\n        context.lineTo(centerX + radius * Math.cos(angle),\n                       centerY + radius * Math.sin(angle));\n        angle += sector;\n      }\n      context.closePath();\n    }\n  }\n\n  protected copy(sides: number, rotation: Angle, fillColor: Color | null,\n                 fillLook: Look<Color> | null, moodModifier: MoodMatrix | null): PolygonIcon {\n    return new PolygonIcon(sides, rotation, fillColor, fillLook, moodModifier);\n  }\n\n  interpolateTo(that: PolygonIcon): Interpolator<PolygonIcon>;\n  interpolateTo(that: unknown): Interpolator<PolygonIcon> | null;\n  interpolateTo(that: unknown): Interpolator<PolygonIcon> | null {\n    if (that instanceof PolygonIcon) {\n      return PolygonIconInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof PolygonIcon) {\n      return this.sides === that.sides\n          && this.rotation.equivalentTo(that.rotation, epsilon)\n          && Equivalent(this.fillColor, that.fillColor, epsilon)\n          && this.fillLook === that.fillLook\n          && Equivalent(this.moodModifier, that.moodModifier, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof PolygonIcon) {\n      return this.sides === that.sides\n          && this.rotation.equals(that.rotation)\n          && Equals(this.fillColor, that.fillColor)\n          && this.fillLook === that.fillLook\n          && Equals(this.moodModifier, that.moodModifier);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"new\").write(32/*' '*/).write(\"PolygonIcon\").write(40/*'('*/)\n                   .debug(this.sides).write(\", \")\n                   .debug(this.rotation).write(\", \")\n                   .debug(this.fillColor).write(\", \")\n                   .debug(this.fillLook).write(\", \")\n                   .debug(this.moodModifier).write(41/*')'*/);\n    return output;\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  static create(sides: number, rotation?: AnyAngle): PolygonIcon {\n    if (rotation !== void 0) {\n      rotation = Angle.fromAny(rotation);\n    } else {\n      rotation = Angle.zero();\n    }\n    return new PolygonIcon(sides, rotation, null, Look.accentColor, null);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals, Mutable, Interpolator} from \"@swim/util\";\nimport type {Angle} from \"@swim/math\";\nimport type {Color} from \"@swim/style\";\nimport type {Look, MoodMatrix} from \"@swim/theme\";\nimport {PolygonIcon} from \"./PolygonIcon\";\n\n/** @internal */\nexport interface PolygonIconInterpolator extends Interpolator<PolygonIcon> {\n  /** @internal */\n  readonly sides: number;\n\n  /** @internal */\n  readonly rotationInterpolator: Interpolator<Angle>;\n\n  /** @internal */\n  readonly fillColorInterpolator: Interpolator<Color | null>;\n\n  /** @internal */\n  readonly fillLook: Look<Color> | null;\n\n  /** @internal */\n  readonly moodModifier: MoodMatrix | null;\n\n  readonly 0: PolygonIcon;\n\n  readonly 1: PolygonIcon;\n\n  equals(that: unknown): boolean;\n}\n\n/** @internal */\nexport const PolygonIconInterpolator = (function (_super: typeof Interpolator) {\n  const PolygonIconInterpolator = function (i0: PolygonIcon, i1: PolygonIcon): PolygonIconInterpolator {\n    const interpolator = function (u: number): PolygonIcon {\n      const sides = interpolator.sides;\n      const rotation = interpolator.rotationInterpolator(u);\n      const fillColor = interpolator.fillColorInterpolator(u);\n      const fillLook = interpolator.fillLook;\n      const moodModifier = interpolator.moodModifier;\n      return new PolygonIcon(sides, rotation, fillColor, fillLook, moodModifier);\n    } as PolygonIconInterpolator;\n    Object.setPrototypeOf(interpolator, PolygonIconInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>).sides = i1.sides;\n    (interpolator as Mutable<typeof interpolator>).rotationInterpolator = i0.rotation.interpolateTo(i1.rotation);\n    (interpolator as Mutable<typeof interpolator>).fillColorInterpolator = Interpolator(i0.fillColor, i1.fillColor);\n    (interpolator as Mutable<typeof interpolator>).fillLook = i1.fillLook;\n    (interpolator as Mutable<typeof interpolator>).moodModifier = i1.moodModifier;\n    return interpolator;\n  } as {\n    (i0: PolygonIcon, i1: PolygonIcon): PolygonIconInterpolator;\n\n    /** @internal */\n    prototype: PolygonIconInterpolator;\n  };\n\n  PolygonIconInterpolator.prototype = Object.create(_super.prototype);\n  PolygonIconInterpolator.prototype.constructor = PolygonIconInterpolator;\n\n  Object.defineProperty(PolygonIconInterpolator.prototype, 0, {\n    get(this: PolygonIconInterpolator): PolygonIcon {\n      const sides = this.sides;\n      const rotation = this.rotationInterpolator[0];\n      const fillColor = this.fillColorInterpolator[0];\n      const fillLook = this.fillLook;\n      const moodModifier = this.moodModifier;\n      return new PolygonIcon(sides, rotation, fillColor, fillLook, moodModifier);\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(PolygonIconInterpolator.prototype, 1, {\n    get(this: PolygonIconInterpolator): PolygonIcon {\n      const sides = this.sides;\n      const rotation = this.rotationInterpolator[1];\n      const fillColor = this.fillColorInterpolator[1];\n      const fillLook = this.fillLook;\n      const moodModifier = this.moodModifier;\n      return new PolygonIcon(sides, rotation, fillColor, fillLook, moodModifier);\n    },\n    configurable: true,\n  });\n\n  PolygonIconInterpolator.prototype.equals = function (that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof PolygonIconInterpolator) {\n      return this.sides === that.sides\n          && this.rotationInterpolator.equals(that.rotationInterpolator)\n          && this.fillColorInterpolator.equals(that.fillColorInterpolator)\n          && this.fillLook === that.fillLook\n          && Equals(this.moodModifier, that.moodModifier);\n    }\n    return false;\n  };\n\n  return PolygonIconInterpolator;\n})(Interpolator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Equals, Equivalent, Interpolate, Interpolator} from \"@swim/util\";\nimport {Output, Debug, Format} from \"@swim/codec\";\nimport {R2Box} from \"@swim/math\";\nimport {Feel, MoodVectorUpdates, MoodVector, MoodMatrix, ThemeMatrix} from \"@swim/theme\";\nimport type {GraphicsRenderer} from \"../graphics/GraphicsRenderer\";\nimport type {DrawingContext} from \"../drawing/DrawingContext\";\nimport {DrawingRenderer} from \"../drawing/DrawingRenderer\";\nimport type {PaintingContext} from \"../painting/PaintingContext\";\nimport {PaintingRenderer} from \"../painting/PaintingRenderer\";\nimport {Icon} from \"./Icon\";\nimport {EnclosedIconInterpolator} from \"../\"; // forward import\n\n/** @public */\nexport class EnclosedIcon extends Icon implements Interpolate<EnclosedIcon>, Equals, Equivalent, Debug {\n  constructor(outer: Icon | null, inner: Icon | null, innerScale: number, moodModifier: MoodMatrix | null,\n              outerMoodModifier: MoodMatrix | null, innerMoodModifier: MoodMatrix | null) {\n    super();\n    this.outer = outer;\n    this.inner = inner;\n    this.innerScale = innerScale;\n    this.moodModifier = moodModifier;\n    this.outerMoodModifier = outerMoodModifier;\n    this.innerMoodModifier = innerMoodModifier;\n  }\n\n  readonly outer: Icon | null;\n\n  withOuter(outer: Icon | null): EnclosedIcon {\n    if (this.outer === outer) {\n      return this;\n    } else {\n      return this.copy(outer, this.inner, this.innerScale, this.moodModifier,\n                       this.outerMoodModifier, this.innerMoodModifier);\n    }\n  }\n\n  readonly inner: Icon | null;\n\n  withInner(inner: Icon | null): EnclosedIcon {\n    if (this.inner === inner) {\n      return this;\n    } else {\n      return this.copy(this.outer, inner, this.innerScale, this.moodModifier,\n                       this.outerMoodModifier, this.innerMoodModifier);\n    }\n  }\n\n  readonly innerScale: number;\n\n  withInnerScale(innerScale: number): EnclosedIcon {\n    if (this.innerScale === innerScale) {\n      return this;\n    } else {\n      return this.copy(this.outer, this.inner, innerScale, this.moodModifier,\n                       this.outerMoodModifier, this.innerMoodModifier);\n    }\n  }\n\n  override readonly moodModifier: MoodMatrix | null;\n\n  override withMoodModifier(moodModifier: MoodMatrix | null): EnclosedIcon {\n    if (Equals(this.moodModifier, moodModifier)) {\n      return this;\n    } else {\n      return this.copy(this.outer, this.inner, this.innerScale, moodModifier,\n                       this.outerMoodModifier, this.innerMoodModifier);\n    }\n  }\n\n  override modifyMood(feel: Feel, updates: MoodVectorUpdates<Feel>): EnclosedIcon {\n    let oldMoodModifier = this.moodModifier;\n    if (oldMoodModifier === null) {\n      oldMoodModifier = MoodMatrix.empty();\n    }\n    const newMoodModifier = oldMoodModifier.updatedCol(feel, updates, true);\n    if (!newMoodModifier.equals(oldMoodModifier)) {\n      return this.withMoodModifier(newMoodModifier);\n    } else {\n      return this;\n    }\n  }\n\n  /** @internal */\n  readonly outerMoodModifier: MoodMatrix | null;\n\n  withOuterMoodModifier(outerMoodModifier: MoodMatrix | null): EnclosedIcon {\n    if (Equals(this.outerMoodModifier, outerMoodModifier)) {\n      return this;\n    } else {\n      return this.copy(this.outer, this.inner, this.innerScale, this.moodModifier,\n                       outerMoodModifier, this.innerMoodModifier);\n    }\n  }\n\n  modifyOuterMood(feel: Feel, updates: MoodVectorUpdates<Feel>): EnclosedIcon {\n    let oldOuterMoodModifier = this.outerMoodModifier;\n    if (oldOuterMoodModifier === null) {\n      oldOuterMoodModifier = MoodMatrix.empty();\n    }\n    const newOuterMoodModifier = oldOuterMoodModifier.updatedCol(feel, updates, true);\n    if (!newOuterMoodModifier.equals(oldOuterMoodModifier)) {\n      return this.withOuterMoodModifier(newOuterMoodModifier);\n    } else {\n      return this;\n    }\n  }\n\n  /** @internal */\n  readonly innerMoodModifier: MoodMatrix | null;\n\n  withInnerMoodModifier(innerMoodModifier: MoodMatrix | null): EnclosedIcon {\n    if (Equals(this.innerMoodModifier, innerMoodModifier)) {\n      return this;\n    } else {\n      return this.copy(this.outer, this.inner, this.innerScale, this.moodModifier,\n                       this.outerMoodModifier, innerMoodModifier);\n    }\n  }\n\n  modifyInnerMood(feel: Feel, updates: MoodVectorUpdates<Feel>): EnclosedIcon {\n    let oldInnerMoodModifier = this.innerMoodModifier;\n    if (oldInnerMoodModifier === null) {\n      oldInnerMoodModifier = MoodMatrix.empty();\n    }\n    const newInnerMoodModifier = oldInnerMoodModifier.updatedCol(feel, updates, true);\n    if (!newInnerMoodModifier.equals(oldInnerMoodModifier)) {\n      return this.withInnerMoodModifier(newInnerMoodModifier);\n    } else {\n      return this;\n    }\n  }\n\n  override isThemed(): boolean {\n    const outer = this.outer;\n    const inner = this.inner;\n    return (outer === null || outer.isThemed())\n        && (inner === null || inner.isThemed());\n  }\n\n  override withTheme(theme: ThemeMatrix, mood: MoodVector): EnclosedIcon {\n    const moodModifier = this.moodModifier;\n    const outerMoodModifier = this.outerMoodModifier;\n    const innerMoodModifier = this.innerMoodModifier;\n\n    let modifiedMood = mood;\n    if (moodModifier !== null) {\n      modifiedMood = moodModifier.timesCol(modifiedMood, true);\n    }\n\n    const oldOuter = this.outer;\n    let newOuter: Icon | null;\n    if (oldOuter !== null) {\n      let outerMood = modifiedMood;\n      if (outerMoodModifier !== null) {\n        outerMood = outerMoodModifier.timesCol(outerMood, true);\n      }\n      newOuter = oldOuter.withTheme(theme, outerMood);\n    } else {\n      newOuter = null;\n    }\n\n    const oldInner = this.inner;\n    let newInner: Icon | null;\n    if (oldInner !== null) {\n      let innerMood = modifiedMood;\n      if (innerMoodModifier !== null) {\n        innerMood = innerMoodModifier.timesCol(innerMood, true);\n      }\n      newInner = oldInner.withTheme(theme, innerMood);\n    } else {\n      newInner = null;\n    }\n\n    if (oldOuter !== newOuter || oldInner !== newInner) {\n      return this.copy(newOuter, newInner, this.innerScale, moodModifier,\n                       outerMoodModifier, innerMoodModifier);\n    } else {\n      return this;\n    }\n  }\n\n  override render(renderer: GraphicsRenderer, frame: R2Box): void {\n    if (renderer instanceof PaintingRenderer) {\n      this.paint(renderer.context, frame);\n    } else if (renderer instanceof DrawingRenderer) {\n      this.draw(renderer.context, frame);\n    }\n  }\n\n  override paint(context: PaintingContext, frame: R2Box): void {\n    const outer = this.outer;\n    if (outer !== null) {\n      outer.paint(context, this.outerFrame(frame));\n    }\n    const inner = this.inner;\n    if (inner !== null) {\n      inner.paint(context, this.innerFrame(frame));\n    }\n  }\n\n  override draw(context: DrawingContext, frame: R2Box): void {\n    const outer = this.outer;\n    if (outer !== null) {\n      outer.draw(context, this.outerFrame(frame));\n    }\n    const inner = this.inner;\n    if (inner !== null) {\n      inner.draw(context, this.innerFrame(frame));\n    }\n  }\n\n  outerFrame(frame: R2Box): R2Box {\n    return frame;\n  }\n\n  innerFrame(frame: R2Box): R2Box {\n    let {xMin, xMax, yMin, yMax} = frame;\n    let width = xMax - xMin;\n    let height = yMax - yMin;\n    const innerScale = this.innerScale;\n    if (innerScale !== 1) {\n      const cx = (xMin + xMax) / 2;\n      const cy = (yMin + yMax) / 2;\n      width = width * innerScale;\n      height = height * innerScale;\n      xMin = cx - width / 2;\n      yMin = cy - height / 2;\n      xMax = cx + width / 2;\n      yMax = cy + height / 2;\n    }\n    if (width > height) {\n      const ex = (width - height) / 2;\n      xMin += ex;\n      xMax -= ex;\n    } else if (width < height) {\n      const ey = (height - width) / 2;\n      yMin += ey;\n      yMax -= ey;\n    }\n    if (width !== height || innerScale !== 1) {\n      return new R2Box(xMin, yMin, xMax, yMax);\n    } else {\n      return frame;\n    }\n  }\n\n  protected copy(outer: Icon | null, inner: Icon | null, innerScale: number, moodModifier: MoodMatrix | null,\n                 outerMoodModifier: MoodMatrix | null, innerMoodModifier: MoodMatrix | null): EnclosedIcon {\n    return new EnclosedIcon(outer, inner, innerScale, moodModifier, outerMoodModifier, innerMoodModifier);\n  }\n\n  interpolateTo(that: EnclosedIcon): Interpolator<EnclosedIcon>;\n  interpolateTo(that: unknown): Interpolator<EnclosedIcon> | null;\n  interpolateTo(that: unknown): Interpolator<EnclosedIcon> | null {\n    if (that instanceof EnclosedIcon) {\n      return EnclosedIconInterpolator(this, that);\n    } else {\n      return null;\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof EnclosedIcon) {\n      return Equivalent(this.outer, that.outer, epsilon)\n          && Equivalent(this.inner, that.inner, epsilon)\n          && Equivalent(this.innerScale, that.innerScale, epsilon)\n          && Equivalent(this.moodModifier, that.moodModifier, epsilon)\n          && Equivalent(this.outerMoodModifier, that.outerMoodModifier, epsilon)\n          && Equivalent(this.innerMoodModifier, that.innerMoodModifier, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof EnclosedIcon) {\n      return Equals(this.outer, that.outer)\n          && Equals(this.inner, that.inner)\n          && Equals(this.innerScale, that.innerScale)\n          && Equals(this.moodModifier, that.moodModifier)\n          && Equals(this.outerMoodModifier, that.outerMoodModifier)\n          && Equals(this.innerMoodModifier, that.innerMoodModifier);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"new\").write(32/*' '*/).write(\"EnclosedIcon\").write(40/*'('*/)\n                   .debug(this.outer).write(\", \")\n                   .debug(this.inner).write(\", \")\n                   .debug(this.innerScale).write(\", \")\n                   .debug(this.moodModifier).write(\", \")\n                   .debug(this.outerMoodModifier).write(\", \")\n                   .debug(this.innerMoodModifier).write(41/*')'*/);\n    return output;\n  }\n\n  override toString(): string {\n    return Format.debug(this);\n  }\n\n  static create(outer: Icon | null, inner: Icon | null): EnclosedIcon {\n    return new EnclosedIcon(outer, inner, 1, null, null, null);\n  }\n\n  static embossed(outer: Icon | null, inner: Icon | null): EnclosedIcon {\n    return new EnclosedIcon(outer, inner, 1, null, null, EnclosedIcon.embossedMoodModifier);\n  }\n\n  @Lazy\n  static get embossedMoodModifier(): MoodMatrix {\n    return MoodMatrix.empty().updatedCol(Feel.default, [[Feel.embossed, 1]], true);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals, Mutable, Interpolator} from \"@swim/util\";\nimport type {MoodMatrix} from \"@swim/theme\";\nimport type {Icon} from \"./Icon\";\nimport {EnclosedIcon} from \"./EnclosedIcon\";\n\n/** @internal */\nexport interface EnclosedIconInterpolator extends Interpolator<EnclosedIcon> {\n  /** @internal */\n  readonly outerInterpolator: Interpolator<Icon | null>;\n\n  /** @internal */\n  readonly innerInterpolator: Interpolator<Icon | null>;\n\n  /** @internal */\n  readonly innerScaleInterpolator: Interpolator<number>;\n\n  /** @internal */\n  readonly moodModifier: MoodMatrix | null;\n\n  /** @internal */\n  readonly outerMoodModifier: MoodMatrix | null;\n\n  /** @internal */\n  readonly innerMoodModifier: MoodMatrix | null;\n\n  readonly 0: EnclosedIcon;\n\n  readonly 1: EnclosedIcon;\n\n  equals(that: unknown): boolean;\n}\n\n/** @internal */\nexport const EnclosedIconInterpolator = (function (_super: typeof Interpolator) {\n  const EnclosedIconInterpolator = function (i0: EnclosedIcon, i1: EnclosedIcon): EnclosedIconInterpolator {\n    const interpolator = function (u: number): EnclosedIcon {\n      const outer = interpolator.outerInterpolator(u);\n      const inner = interpolator.innerInterpolator(u);\n      const innerScale = interpolator.innerScaleInterpolator(u);\n      const moodModifier = interpolator.moodModifier;\n      const outerMoodModifier = interpolator.outerMoodModifier;\n      const innerMoodModifier = interpolator.innerMoodModifier;\n      return new EnclosedIcon(outer, inner, innerScale, moodModifier,\n                              outerMoodModifier, innerMoodModifier);\n    } as EnclosedIconInterpolator;\n    Object.setPrototypeOf(interpolator, EnclosedIconInterpolator.prototype);\n    (interpolator as Mutable<typeof interpolator>).outerInterpolator = Interpolator(i0.outer, i1.outer);\n    (interpolator as Mutable<typeof interpolator>).innerInterpolator = Interpolator(i0.inner, i1.inner);\n    (interpolator as Mutable<typeof interpolator>).innerScaleInterpolator = Interpolator(i0.innerScale, i1.innerScale);\n    (interpolator as Mutable<typeof interpolator>).moodModifier = i1.moodModifier;\n    (interpolator as Mutable<typeof interpolator>).outerMoodModifier = i1.outerMoodModifier;\n    (interpolator as Mutable<typeof interpolator>).innerMoodModifier = i1.innerMoodModifier;\n    return interpolator;\n  } as {\n    (i0: EnclosedIcon, i1: EnclosedIcon): EnclosedIconInterpolator;\n\n    /** @internal */\n    prototype: EnclosedIconInterpolator;\n  };\n\n  EnclosedIconInterpolator.prototype = Object.create(_super.prototype);\n  EnclosedIconInterpolator.prototype.constructor = EnclosedIconInterpolator;\n\n  Object.defineProperty(EnclosedIconInterpolator.prototype, 0, {\n    get(this: EnclosedIconInterpolator): EnclosedIcon {\n      const outer = this.outerInterpolator[0];\n      const inner = this.innerInterpolator[0];\n      const innerScale = this.innerScaleInterpolator[0];\n      const moodModifier = this.moodModifier;\n      const outerMoodModifier = this.outerMoodModifier;\n      const innerMoodModifier = this.innerMoodModifier;\n      return new EnclosedIcon(outer, inner, innerScale, moodModifier,\n                              outerMoodModifier, innerMoodModifier);\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(EnclosedIconInterpolator.prototype, 1, {\n    get(this: EnclosedIconInterpolator): EnclosedIcon {\n      const outer = this.outerInterpolator[1];\n      const inner = this.innerInterpolator[1];\n      const innerScale = this.innerScaleInterpolator[1];\n      const moodModifier = this.moodModifier;\n      const outerMoodModifier = this.outerMoodModifier;\n      const innerMoodModifier = this.innerMoodModifier;\n      return new EnclosedIcon(outer, inner, innerScale, moodModifier,\n                              outerMoodModifier, innerMoodModifier);\n    },\n    configurable: true,\n  });\n\n  EnclosedIconInterpolator.prototype.equals = function (that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof EnclosedIconInterpolator) {\n      return this.outerInterpolator.equals(that.outerInterpolator)\n          && this.innerInterpolator.equals(that.innerInterpolator)\n          && this.innerScaleInterpolator.equals(that.innerScaleInterpolator)\n          && Equals(this.moodModifier, that.moodModifier)\n          && Equals(this.outerMoodModifier, that.outerMoodModifier)\n          && Equals(this.innerMoodModifier, that.innerMoodModifier);\n    }\n    return false;\n  };\n\n  return EnclosedIconInterpolator;\n})(Interpolator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Animator} from \"@swim/component\";\nimport type {AnyLength, Length} from \"@swim/math\";\nimport type {AnyColor, Color} from \"@swim/style\";\nimport type {ThemeAnimator} from \"@swim/theme\";\nimport {ViewInit, View} from \"@swim/view\";\nimport type {Graphics} from \"../graphics/Graphics\";\nimport {GraphicsIconView} from \"../\"; // forward import\nimport {SvgIconView} from \"../\"; // forward import\nimport {HtmlIconView} from \"../\"; // forward import\n\n/** @public */\nexport interface IconViewInit extends ViewInit {\n  xAlign?: number;\n  yAlign?: number;\n  iconWidth?: AnyLength;\n  iconHeight?: AnyLength;\n  iconColor?: AnyColor;\n  graphics?: Graphics;\n}\n\n/** @public */\nexport interface IconView extends View {\n  readonly xAlign: Animator<this, number>;\n\n  readonly yAlign: Animator<this, number>;\n\n  readonly iconWidth: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  readonly iconHeight: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  readonly iconColor: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  readonly graphics: ThemeAnimator<this, Graphics | null>;\n}\n\n/** @public */\nexport const IconView = (function () {\n  const IconView = {} as {\n    is(object: unknown): object is IconView;\n\n    init(view: IconView, init: IconViewInit): void;\n  };\n\n  IconView.is = function (object: unknown): object is IconView {\n    if (typeof object === \"object\" && object !== null) {\n      const view = object as IconView;\n      return view instanceof GraphicsIconView\n          || view instanceof SvgIconView\n          || view instanceof HtmlIconView\n          || view instanceof View\n          && \"xAlign\" in view\n          && \"yAlign\" in view\n          && \"iconWidth\" in view\n          && \"iconHeight\" in view\n          && \"iconColor\" in view\n          && \"graphics\" in view;\n    }\n    return false;\n  };\n\n  IconView.init = function (view: IconView, init: IconViewInit): void {\n    if (init.xAlign !== void 0) {\n      view.xAlign(init.xAlign);\n    }\n    if (init.yAlign !== void 0) {\n      view.yAlign(init.yAlign);\n    }\n    if (init.iconWidth !== void 0) {\n      view.iconWidth(init.iconWidth);\n    }\n    if (init.iconHeight !== void 0) {\n      view.iconHeight(init.iconHeight);\n    }\n    if (init.iconColor !== void 0) {\n      view.iconColor(init.iconColor);\n    }\n    if (init.graphics !== void 0) {\n      view.graphics(init.graphics);\n    }\n  };\n\n  return IconView;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ThemeAnimatorClass, ThemeAnimator} from \"@swim/theme\";\nimport type {Graphics} from \"../graphics/Graphics\";\nimport {Icon} from \"./Icon\";\nimport {FilledIcon} from \"./FilledIcon\";\nimport {IconView} from \"./\"; // forward import\n\n/** @internal */\nexport const IconGraphicsAnimator = (function (_super: typeof ThemeAnimator) {\n  const IconGraphicsAnimator = _super.extend(\"IconGraphicsAnimator\") as ThemeAnimatorClass<ThemeAnimator<any, Graphics | null | undefined, Graphics | null | undefined>>;\n\n  IconGraphicsAnimator.prototype.transformState = function (this: ThemeAnimator<unknown, Graphics | null>, icon: Graphics | null): Graphics | null {\n    const iconView = this.owner;\n    if (IconView.is(iconView) && icon instanceof Icon) {\n      const iconColor = iconView.iconColor.state;\n      if (iconColor !== null && icon instanceof FilledIcon) {\n        icon = icon.withFillColor(iconColor);\n      } else {\n        const theme = iconView.theme.value;\n        const mood = iconView.mood.value;\n        if (theme !== null && mood !== null) {\n          icon = icon.withTheme(theme, mood);\n        }\n      }\n    }\n    return icon;\n  };\n\n  return IconGraphicsAnimator;\n})(ThemeAnimator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Timing} from \"@swim/util\";\nimport {Affinity, Animator} from \"@swim/component\";\nimport {AnyLength, Length, R2Box} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport type {MoodVector, ThemeMatrix} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, View} from \"@swim/view\";\nimport type {Graphics} from \"../graphics/Graphics\";\nimport {GraphicsViewInit, GraphicsView} from \"../graphics/GraphicsView\";\nimport {PaintingRenderer} from \"../painting/PaintingRenderer\";\nimport {CanvasRenderer} from \"../canvas/CanvasRenderer\";\nimport {Icon} from \"./Icon\";\nimport {FilledIcon} from \"./FilledIcon\";\nimport {IconViewInit, IconView} from \"./IconView\";\nimport {IconGraphicsAnimator} from \"./IconGraphicsAnimator\";\n\n/** @public */\nexport interface GraphicsIconViewInit extends GraphicsViewInit, IconViewInit {\n}\n\n/** @public */\nexport class GraphicsIconView extends GraphicsView implements IconView {\n  @Animator({type: Number, value: 0.5, updateFlags: View.NeedsRender})\n  readonly xAlign!: Animator<this, number>;\n\n  @Animator({type: Number, value: 0.5, updateFlags: View.NeedsRender})\n  readonly yAlign!: Animator<this, number>;\n\n  @ThemeAnimator({type: Length, value: null, updateFlags: View.NeedsRender})\n  readonly iconWidth!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator({type: Length, value: null, updateFlags: View.NeedsRender})\n  readonly iconHeight!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator<GraphicsIconView, Color | null, AnyColor | null>({\n    type: Color,\n    value: null,\n    updateFlags: View.NeedsRender,\n    didSetValue(newIconColor: Color | null, oldIconColor: Color | null): void {\n      if (newIconColor !== null) {\n        const oldGraphics = this.owner.graphics.value;\n        if (oldGraphics instanceof FilledIcon) {\n          const newGraphics = oldGraphics.withFillColor(newIconColor);\n          this.owner.graphics.setState(newGraphics, Affinity.Reflexive);\n        }\n      }\n    },\n  })\n  readonly iconColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({extends: IconGraphicsAnimator, type: Object, value: null, updateFlags: View.NeedsRender})\n  readonly graphics!: ThemeAnimator<this, Graphics | null>;\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    if (!this.graphics.inherited) {\n      const oldGraphics = this.graphics.value;\n      if (oldGraphics instanceof Icon) {\n        const newGraphics = oldGraphics.withTheme(theme, mood);\n        this.graphics.setState(newGraphics, oldGraphics.isThemed() ? timing : false, Affinity.Reflexive);\n      }\n    }\n  }\n\n  protected override onRender(viewContext: ViewContextType<this>): void {\n    super.onRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      this.renderIcon(renderer, this.viewBounds);\n    }\n  }\n\n  protected renderIcon(renderer: PaintingRenderer, frame: R2Box): void {\n    const graphics = this.graphics.value;\n    if (graphics !== null) {\n      const context = renderer.context;\n      context.beginPath();\n      graphics.render(renderer, frame);\n    }\n  }\n\n  declare readonly viewBounds: R2Box; // getter defined below to work around useDefineForClassFields lunacy\n\n  protected override hitTest(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      return this.hitTestIcon(x, y, renderer, this.viewBounds);\n    }\n    return null;\n  }\n\n  protected hitTestIcon(x: number, y: number, renderer: CanvasRenderer, frame: R2Box): GraphicsView | null {\n    // TODO: icon hit test mode\n    if (this.hitBounds.contains(x, y)) {\n      return this;\n    }\n    //const graphics = this.graphics.value;\n    //if (graphics !== null) {\n    //  const context = renderer.context;\n    //  graphics.render(renderer, frame);\n    //  const p = renderer.transform.transform(x, y);\n    //  if (context.isPointInPath(p.x, p.y)) {\n    //    return this;\n    //  }\n    //}\n    return null;\n  }\n\n  override init(init: GraphicsIconViewInit): void {\n    super.init(init);\n    IconView.init(this, init);\n  }\n}\nObject.defineProperty(GraphicsIconView.prototype, \"viewBounds\", {\n  get(this: GraphicsIconView): R2Box {\n    const viewFrame = this.viewFrame;\n    const viewWidth = viewFrame.width;\n    const viewHeight = viewFrame.height;\n    const viewSize = Math.min(viewWidth, viewHeight);\n    let iconWidth: Length | number | null = this.iconWidth.value;\n    iconWidth = iconWidth instanceof Length ? iconWidth.pxValue(viewSize) : viewSize;\n    let iconHeight: Length | number | null = this.iconHeight.value;\n    iconHeight = iconHeight instanceof Length ? iconHeight.pxValue(viewSize) : viewSize;\n    const x = viewFrame.x + (viewWidth - iconWidth) * this.xAlign.getValue();\n    const y = viewFrame.y + (viewHeight - iconHeight) * this.yAlign.getValue();\n    return new R2Box(x, y, x + iconWidth, y + iconHeight);\n  },\n  configurable: true,\n});\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Timing} from \"@swim/util\";\nimport {Affinity, Animator} from \"@swim/component\";\nimport {AnyLength, Length, R2Box} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport type {MoodVector, ThemeMatrix} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, ViewFlags, View} from \"@swim/view\";\nimport {SvgViewInit, SvgView} from \"@swim/dom\";\nimport type {Graphics} from \"../graphics/Graphics\";\nimport {SvgContext} from \"../svg/SvgContext\";\nimport {SvgRenderer} from \"../svg/SvgRenderer\";\nimport {Icon} from \"./Icon\";\nimport {FilledIcon} from \"./FilledIcon\";\nimport {IconViewInit, IconView} from \"./IconView\";\nimport {IconGraphicsAnimator} from \"./IconGraphicsAnimator\";\n\n/** @public */\nexport interface SvgIconViewInit extends SvgViewInit, IconViewInit {\n}\n\n/** @public */\nexport class SvgIconView extends SvgView implements IconView {\n  constructor(node: SVGElement) {\n    super(node);\n  }\n\n  @Animator({type: Number, value: 0.5, updateFlags: View.NeedsLayout})\n  readonly xAlign!: Animator<this, number>;\n\n  @Animator({type: Number, value: 0.5, updateFlags: View.NeedsLayout})\n  readonly yAlign!: Animator<this, number>;\n\n  @ThemeAnimator({type: Length, value: null, updateFlags: View.NeedsLayout})\n  readonly iconWidth!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator({type: Length, value: null, updateFlags: View.NeedsLayout})\n  readonly iconHeight!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator<SvgIconView, Color | null, AnyColor | null>({\n    type: Color,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    didSetValue(newIconColor: Color | null, oldIconColor: Color | null): void {\n      if (newIconColor !== null) {\n        const oldGraphics = this.owner.graphics.value;\n        if (oldGraphics instanceof FilledIcon) {\n          const newGraphics = oldGraphics.withFillColor(newIconColor);\n          this.owner.graphics.setState(newGraphics, Affinity.Reflexive);\n        }\n      }\n    },\n  })\n  readonly iconColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({extends: IconGraphicsAnimator, type: Object, value: null, updateFlags: View.NeedsLayout})\n  readonly graphics!: ThemeAnimator<this, Graphics | null>;\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    if (!this.graphics.inherited) {\n      const oldGraphics = this.graphics.value;\n      if (oldGraphics instanceof Icon) {\n        const newGraphics = oldGraphics.withTheme(theme, mood);\n        this.graphics.setState(newGraphics, oldGraphics.isThemed() ? timing : false, Affinity.Reflexive);\n      }\n    }\n  }\n\n  protected override onResize(viewContext: ViewContextType<this>): void {\n    super.onResize(viewContext);\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected override needsDisplay(displayFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    if ((this.flags & View.NeedsLayout) === 0) {\n      displayFlags &= ~View.NeedsLayout;\n    }\n    return displayFlags;\n  }\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.renderIcon();\n  }\n\n  protected renderIcon(): void {\n    const context = new SvgContext(this);\n    context.setPrecision(3);\n    context.beginSvg();\n    const graphics = this.graphics.value;\n    if (graphics !== null) {\n      const frame = this.iconBounds;\n      if (frame.isDefined() && frame.width > 0 && frame.height > 0) {\n        context.beginPath();\n        const renderer = new SvgRenderer(context);\n        graphics.render(renderer, frame);\n      }\n    }\n    context.finalizeSvg();\n  }\n\n  get iconBounds(): R2Box {\n    let viewportElement = this.node.viewportElement;\n    if (viewportElement === null) {\n      viewportElement = this.node;\n    }\n    if (viewportElement instanceof SVGSVGElement) {\n      const viewBox = viewportElement.viewBox.animVal;\n      const viewWidth = viewBox.width;\n      const viewHeight = viewBox.height;\n      const viewSize = Math.min(viewWidth, viewHeight);\n      let iconWidth: Length | number | null = this.iconWidth.value;\n      iconWidth = iconWidth instanceof Length ? iconWidth.pxValue(viewSize) : viewSize;\n      let iconHeight: Length | number | null = this.iconHeight.value;\n      iconHeight = iconHeight instanceof Length ? iconHeight.pxValue(viewSize) : viewSize;\n      const x = viewBox.x + (viewWidth - iconWidth) * this.xAlign.getValue();\n      const y = viewBox.y + (viewHeight - iconHeight) * this.yAlign.getValue();\n      return new R2Box(x, y, x + iconWidth, y + iconHeight);\n    } else {\n      return R2Box.undefined();\n    }\n  }\n\n  override init(init: SvgIconViewInit): void {\n    super.init(init);\n    IconView.init(this, init);\n  }\n\n  static override readonly MountFlags: ViewFlags = SvgView.MountFlags | View.NeedsAnimate;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Timing} from \"@swim/util\";\nimport {Affinity, Animator} from \"@swim/component\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport type {MoodVector, ThemeMatrix} from \"@swim/theme\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, ViewFlags, View} from \"@swim/view\";\nimport {HtmlViewInit, HtmlView} from \"@swim/dom\";\nimport type {Graphics} from \"../graphics/Graphics\";\nimport {Icon} from \"./Icon\";\nimport {FilledIcon} from \"./FilledIcon\";\nimport {IconViewInit, IconView} from \"./IconView\";\nimport {IconGraphicsAnimator} from \"./IconGraphicsAnimator\";\nimport {SvgIconView} from \"./SvgIconView\";\n\n/** @public */\nexport interface HtmlIconViewInit extends HtmlViewInit, IconViewInit {\n}\n\n/** @public */\nexport class HtmlIconView extends HtmlView implements IconView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initIcon();\n  }\n\n  protected initIcon(): void {\n    this.position.setState(\"relative\", Affinity.Intrinsic);\n    const svgView = this.createSvgView();\n    if (svgView !== null) {\n      this.setChild(\"svg\", svgView);\n    }\n  }\n\n  protected createSvgView(): SvgIconView | null {\n    return SvgIconView.create();\n  }\n\n  get svgView(): SvgIconView | null {\n    const svgView = this.getChild(\"svg\");\n    return svgView instanceof SvgIconView ? svgView : null;\n  }\n\n  @Animator({type: Number, value: 0.5, updateFlags: View.NeedsLayout})\n  readonly xAlign!: Animator<this, number>;\n\n  @Animator({type: Number, value: 0.5, updateFlags: View.NeedsLayout})\n  readonly yAlign!: Animator<this, number>;\n\n  @ThemeAnimator({type: Length, value: null, updateFlags: View.NeedsLayout})\n  readonly iconWidth!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator({type: Length, value: null, updateFlags: View.NeedsLayout})\n  readonly iconHeight!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator<HtmlIconView, Color | null, AnyColor | null>({\n    type: Color,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    didSetValue(newIconColor: Color | null, oldIconColor: Color | null): void {\n      if (newIconColor !== null) {\n        const oldGraphics = this.owner.graphics.value;\n        if (oldGraphics instanceof FilledIcon) {\n          const newGraphics = oldGraphics.withFillColor(newIconColor);\n          this.owner.graphics.setState(newGraphics, Affinity.Reflexive);\n        }\n      }\n    },\n  })\n  readonly iconColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({extends: IconGraphicsAnimator, type: Object, value: null, updateFlags: View.NeedsLayout})\n  readonly graphics!: ThemeAnimator<this, Graphics | null>;\n\n  protected override onInsertChild(child: View, target: View | null): void {\n    super.onInsertChild(child, target);\n    if (child.key === \"svg\" && child instanceof SvgIconView) {\n      this.onInsertSvg(child);\n    }\n  }\n\n  protected onInsertSvg(svgView: SvgIconView): void {\n    svgView.xAlign.setInherits(true);\n    svgView.yAlign.setInherits(true);\n    svgView.iconWidth.setInherits(true);\n    svgView.iconHeight.setInherits(true);\n    svgView.iconColor.setInherits(true);\n    svgView.graphics.setInherits(true);\n    svgView.setStyle(\"position\", \"absolute\");\n  }\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    if (!this.graphics.inherited) {\n      const oldGraphics = this.graphics.value;\n      if (oldGraphics instanceof Icon) {\n        const newGraphics = oldGraphics.withTheme(theme, mood);\n        this.graphics.setState(newGraphics, oldGraphics.isThemed() ? timing : false, Affinity.Reflexive);\n      }\n    }\n  }\n\n  protected override onResize(viewContext: ViewContextType<this>): void {\n    super.onResize(viewContext);\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected override needsDisplay(displayFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    if ((this.flags & View.NeedsLayout) === 0) {\n      displayFlags &= ~View.NeedsLayout;\n    }\n    return displayFlags;\n  }\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.layoutIcon();\n  }\n\n  protected layoutIcon(): void {\n    const svgView = this.svgView;\n    if (svgView !== null && (svgView.width.hasAffinity(Affinity.Intrinsic)\n                          || svgView.height.hasAffinity(Affinity.Intrinsic)\n                          || svgView.viewBox.hasAffinity(Affinity.Intrinsic))) {\n      let viewWidth: Length | number | null = this.width.value;\n      viewWidth = viewWidth instanceof Length ? viewWidth.pxValue() : this.node.offsetWidth;\n      let viewHeight: Length | number | null = this.height.value;\n      viewHeight = viewHeight instanceof Length ? viewHeight.pxValue() : this.node.offsetHeight;\n      svgView.width.setState(viewWidth, Affinity.Intrinsic);\n      svgView.height.setState(viewHeight, Affinity.Intrinsic);\n      svgView.viewBox.setState(\"0 0 \" + viewWidth + \" \" + viewHeight, Affinity.Intrinsic);\n    }\n  }\n\n  override init(init: HtmlIconViewInit): void {\n    super.init(init);\n    IconView.init(this, init);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/** @public */\nexport interface ControllerContext {\n  readonly updateTime: number;\n}\n\n/** @public */\nexport const ControllerContext = (function () {\n  const ControllerContext = {} as {\n    current: ControllerContext | null;\n    create(): ControllerContext;\n  };\n\n  ControllerContext.current = null;\n\n  ControllerContext.create = function (): ControllerContext {\n    return {\n      updateTime: performance.now(),\n    };\n  };\n\n  return ControllerContext;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, Lazy} from \"@swim/util\";\nimport {Service} from \"@swim/component\";\nimport type {ExecuteServiceObserver} from \"./ExecuteServiceObserver\";\nimport {ControllerContext} from \"../controller/ControllerContext\";\nimport {ControllerFlags, Controller} from \"../\"; // forward import\n\n/** @public */\nexport class ExecuteService<C extends Controller = Controller> extends Service<C> {\n  constructor() {\n    super();\n    this.flags = 0;\n    this.controllerContext = ControllerContext.create();\n    this.updateDelay = ExecuteService.MinUpdateDelay;\n    this.compileTimer = 0;\n    this.executeTimer = 0;\n\n    this.runCompilePass = this.runCompilePass.bind(this);\n    this.runExecutePass = this.runExecutePass.bind(this);\n    this.onVisibilityChange = this.onVisibilityChange.bind(this);\n  }\n\n  override readonly observerType?: Class<ExecuteServiceObserver<C>>;\n\n  readonly flags: ControllerFlags;\n\n  /** @internal */\n  setFlags(flags: ControllerFlags): void {\n    (this as Mutable<this>).flags = flags;\n  }\n\n  readonly controllerContext: ControllerContext;\n\n  updatedControllerContext(): ControllerContext {\n    const controllerContext = this.controllerContext;\n    (controllerContext as Mutable<ControllerContext>).updateTime = performance.now();\n    return controllerContext;\n  }\n\n  /** @internal */\n  updateDelay: number;\n\n  protected needsUpdate(updateFlags: ControllerFlags, immediate: boolean): ControllerFlags {\n    return updateFlags;\n  }\n\n  requestUpdate(targetController: Controller, updateFlags: ControllerFlags, immediate: boolean): void {\n    updateFlags = this.needsUpdate(updateFlags, immediate);\n    let deltaUpdateFlags = this.flags & ~updateFlags & Controller.UpdateMask;\n    if ((updateFlags & Controller.CompileMask) !== 0) {\n      deltaUpdateFlags |= Controller.NeedsCompile;\n    }\n    if ((updateFlags & Controller.ExecuteMask) !== 0) {\n      deltaUpdateFlags |= Controller.NeedsExecute;\n    }\n    this.setFlags(this.flags | deltaUpdateFlags);\n    if (immediate && (this.flags & (Controller.CompilingFlag | Controller.ExecutingFlag)) === 0 && this.updateDelay <= ExecuteService.MaxCompileInterval) {\n      this.runImmediatePass();\n    } else {\n      this.scheduleUpdate();\n    }\n  }\n\n  protected scheduleUpdate(): void {\n    const flags = this.flags;\n    if ((flags & Controller.CompilingFlag) === 0 && (flags & Controller.CompileMask) !== 0) {\n      this.scheduleCompilePass(this.updateDelay);\n    } else if ((flags & Controller.ExecutingFlag) === 0 && (flags & Controller.ExecuteMask) !== 0) {\n      this.scheduleExecutePass(ExecuteService.MinExecuteInterval);\n    }\n  }\n\n  protected cancelUpdate(): void {\n    this.cancelCompilePass();\n    this.cancelExecutePass();\n  }\n\n  protected runImmediatePass(): void {\n    if ((this.flags & Controller.CompileMask) !== 0) {\n      this.cancelUpdate();\n      this.runCompilePass(true);\n    }\n    if ((this.flags & Controller.ExecuteMask) !== 0 && this.updateDelay <= ExecuteService.MaxCompileInterval) {\n      this.cancelUpdate();\n      this.runExecutePass(true);\n    }\n  }\n\n  /** @internal */\n  compileTimer: number;\n\n  protected scheduleCompilePass(updateDelay: number): void {\n    if (this.compileTimer === 0) {\n      this.compileTimer = setTimeout(this.runCompilePass, updateDelay) as any;\n    }\n  }\n\n  protected cancelCompilePass(): void {\n    if (this.compileTimer !== 0) {\n      clearTimeout(this.compileTimer);\n      this.compileTimer = 0;\n    }\n  }\n\n  protected runCompilePass(immediate: boolean = false): void {\n    this.setFlags(this.flags & ~Controller.CompileMask | Controller.CompilingFlag);\n    try {\n      const t0 = performance.now();\n      const roots = this.roots;\n      const controllerContext = this.controllerContext;\n      (controllerContext as Mutable<ControllerContext>).updateTime = t0;\n      for (let i = 0; i < roots.length; i += 1) {\n        const root = roots[i]!;\n        if ((root.flags & Controller.CompileMask) !== 0) {\n          root.cascadeCompile(0, controllerContext);\n        }\n      }\n\n      const t1 = performance.now();\n      let compileDelay = Math.max(ExecuteService.MinCompileInterval, this.updateDelay);\n      if (t1 - t0 > compileDelay) {\n        this.updateDelay = Math.min(Math.max(2, this.updateDelay * 2), ExecuteService.MaxUpdateDelay);\n      } else {\n        this.updateDelay = Math.min(ExecuteService.MinUpdateDelay, this.updateDelay / 2);\n      }\n\n      this.cancelCompilePass();\n      if ((this.flags & Controller.ExecuteMask) !== 0) {\n        this.scheduleExecutePass(ExecuteService.MinExecuteInterval);\n      } else if ((this.flags & Controller.CompileMask) !== 0) {\n        if (immediate) {\n          compileDelay = Math.max(ExecuteService.MaxCompileInterval, compileDelay);\n        }\n        this.cancelExecutePass();\n        this.scheduleCompilePass(compileDelay);\n      }\n    } finally {\n      this.setFlags(this.flags & ~Controller.CompilingFlag);\n    }\n  }\n\n  /** @internal */\n  executeTimer: number;\n\n  protected scheduleExecutePass(updateDelay: number): void {\n    if (this.executeTimer === 0) {\n      this.executeTimer = setTimeout(this.runExecutePass, updateDelay) as any;\n    }\n  }\n\n  protected cancelExecutePass(): void {\n    if (this.executeTimer !== 0) {\n      clearTimeout(this.executeTimer);\n      this.executeTimer = 0;\n    }\n  }\n\n  protected runExecutePass(immediate: boolean = false): void {\n    this.setFlags(this.flags & ~Controller.ExecuteMask | Controller.ExecutingFlag);\n    try {\n      const time = performance.now();\n      const controllerContext = this.controllerContext;\n      (controllerContext as Mutable<ControllerContext>).updateTime = time;\n      const roots = this.roots;\n      for (let i = 0; i < roots.length; i += 1) {\n        const root = roots[i]!;\n        if ((root.flags & Controller.ExecuteMask) !== 0) {\n          root.cascadeExecute(0, controllerContext);\n        }\n      }\n\n      this.cancelExecutePass();\n      if ((this.flags & Controller.CompileMask) !== 0) {\n        let compileDelay = this.updateDelay;\n        if (immediate) {\n          compileDelay = Math.max(ExecuteService.MaxCompileInterval, compileDelay);\n        }\n        this.scheduleCompilePass(compileDelay);\n      } else if ((this.flags & Controller.ExecuteMask) !== 0) {\n        this.cancelCompilePass();\n        this.scheduleExecutePass(ExecuteService.MaxExecuteInterval);\n      }\n    } finally {\n      this.setFlags(this.flags & ~Controller.ExecutingFlag);\n    }\n  }\n\n  get powerFlags(): ControllerFlags {\n    return 0;\n  }\n\n  power(): void {\n    const roots = this.roots;\n    for (let i = 0, n = roots.length; i < n; i += 1) {\n      const root = roots[i]!;\n      root.requireUpdate(this.powerFlags);\n    }\n  }\n\n  unpower(): void {\n    this.cancelUpdate();\n    this.updateDelay = ExecuteService.MinUpdateDelay;\n  }\n\n  protected override onAttachRoot(root: C): void {\n    super.onAttachRoot(root);\n    this.requestUpdate(root, root.flags & Controller.UpdateMask, false);\n  }\n\n  protected override onAttach(): void {\n    super.onAttach();\n    this.attachEvents();\n  }\n\n  protected override onDetach(): void {\n    this.detachEvents();\n    super.onDetach();\n  }\n\n  protected attachEvents(): void {\n    if (typeof document !== \"undefined\") {\n      document.addEventListener(\"visibilitychange\", this.onVisibilityChange);\n    }\n  }\n\n  protected detachEvents(): void {\n    if (typeof document !== \"undefined\") {\n      document.removeEventListener(\"visibilitychange\", this.onVisibilityChange);\n    }\n  }\n\n  /** @internal */\n  protected onVisibilityChange(): void {\n    if (document.visibilityState === \"visible\") {\n      this.power();\n    } else {\n      this.unpower();\n    }\n  }\n\n  @Lazy\n  static global<C extends Controller>(): ExecuteService<C> {\n    return new ExecuteService();\n  }\n\n  /** @internal */\n  static MinUpdateDelay: number = 0;\n  /** @internal */\n  static MaxUpdateDelay: number = 167;\n  /** @internal */\n  static MinCompileInterval: number = 12;\n  /** @internal */\n  static MaxCompileInterval: number = 33;\n  /** @internal */\n  static MinExecuteInterval: number = 4;\n  /** @internal */\n  static MaxExecuteInterval: number = 16;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ProviderClass, Provider} from \"@swim/component\";\nimport {ExecuteService} from \"./ExecuteService\";\nimport type {ControllerContext} from \"../controller/ControllerContext\";\nimport type {ControllerFlags, Controller} from \"../controller/Controller\";\n\n/** @public */\nexport interface ExecuteProvider<C extends Controller, S extends ExecuteService<C> | null | undefined = ExecuteService<C>> extends Provider<C, S> {\n  get controllerContext(): ControllerContext;\n\n  updatedControllerContext(): ControllerContext;\n\n  requestUpdate(target: Controller, updateFlags: ControllerFlags, immediate: boolean): void;\n\n  createService(): S;\n}\n\n/** @public */\nexport const ExecuteProvider = (function (_super: typeof Provider) {\n  const ExecuteProvider = _super.extend(\"ExecuteProvider\") as ProviderClass<ExecuteProvider<any, any>>;\n\n  Object.defineProperty(ExecuteProvider.prototype, \"controllerContext\", {\n    get<C extends Controller, S extends ExecuteService<C> | null | undefined>(this: ExecuteProvider<C, S>): ControllerContext {\n      let service: ExecuteService<C> | null | undefined = this.service;\n      if (service === void 0 || service === null) {\n        service = ExecuteService.global();\n      }\n      return service.controllerContext;\n    },\n    configurable: true,\n  });\n\n  ExecuteProvider.prototype.updatedControllerContext = function <C extends Controller, S extends ExecuteService<C> | null | undefined>(this: ExecuteProvider<C, S>): ControllerContext {\n    let service: ExecuteService<C> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = ExecuteService.global();\n    }\n    return service.updatedControllerContext();\n  };\n\n  ExecuteProvider.prototype.requestUpdate = function <C extends Controller, S extends ExecuteService<C> | null | undefined>(this: ExecuteProvider<C, S>, target: Controller, updateFlags: ControllerFlags, immediate: boolean): void {\n    let service: ExecuteService<C> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = ExecuteService.global();\n    }\n    service.requestUpdate(target, updateFlags, immediate);\n  };\n\n  ExecuteProvider.prototype.createService = function <C extends Controller, S extends ExecuteService<C> | null | undefined>(this: ExecuteProvider<C, S>): S {\n    return ExecuteService.global() as S;\n  };\n\n  return ExecuteProvider;\n})(Provider);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyUri, Uri, UriQuery, AnyUriFragment, UriFragment} from \"@swim/uri\";\n\n/** @internal */\nexport interface MutableHistoryState {\n  fragment: string | undefined;\n\n  permanent: {[key: string]: string | undefined};\n\n  ephemeral: {[key: string]: string | undefined};\n}\n\n/** @public */\nexport interface HistoryStateInit {\n  fragment?: string;\n\n  permanent?: {[key: string]: string | undefined};\n\n  ephemeral?: {[key: string]: string | undefined};\n}\n\n/** @public */\nexport interface HistoryState {\n  readonly fragment: string | undefined;\n\n  readonly permanent: {readonly [key: string]: string | undefined};\n\n  readonly ephemeral: {readonly [key: string]: string | undefined};\n}\n\n/** @public */\nexport const HistoryState = (function () {\n  const HistoryState = {} as {\n    /** @internal */\n    empty(): HistoryState;\n\n    /** @internal */\n    current(): MutableHistoryState;\n\n    /** @internal */\n    updated(delta: HistoryStateInit, state?: MutableHistoryState): MutableHistoryState;\n\n    /** @internal */\n    cloned(state: HistoryState): MutableHistoryState;\n\n    /** @internal */\n    fromUri(uri: AnyUri): HistoryState;\n\n    /** @internal */\n    fromUriFragment(fragment: AnyUriFragment): HistoryState;\n\n    /** @internal */\n    toUri(state: HistoryState): Uri;\n  };\n\n  HistoryState.empty = function (): HistoryState {\n    return {\n      fragment: void 0,\n      permanent: {},\n      ephemeral: {},\n    };\n  };\n\n  HistoryState.current = function (): MutableHistoryState {\n    try {\n      return HistoryState.fromUri(window.location.href);\n    } catch (e) {\n      console.error(e);\n      return {\n        fragment: void 0,\n        permanent: {},\n        ephemeral: {},\n      };\n    }\n  };\n\n  HistoryState.updated = function (delta: HistoryStateInit, state?: MutableHistoryState): MutableHistoryState {\n    if (state === void 0) {\n      state = HistoryState.current();\n    }\n    if (\"fragment\" in delta) {\n      state.fragment = delta.fragment;\n    }\n    for (const key in delta.permanent) {\n      const value = delta.permanent[key];\n      if (value !== void 0) {\n        state.permanent[key] = value;\n      } else {\n        delete state.permanent[key];\n      }\n    }\n    for (const key in delta.ephemeral) {\n      const value = delta.ephemeral[key];\n      if (value !== void 0) {\n        state.ephemeral[key] = value;\n      } else {\n        delete state.ephemeral[key];\n      }\n    }\n    return state;\n  };\n\n  HistoryState.cloned = function (oldState: HistoryState): MutableHistoryState {\n    const newState: MutableHistoryState = {\n      fragment: oldState.fragment,\n      permanent: {},\n      ephemeral: {},\n    };\n    for (const key in oldState.permanent) {\n      newState.permanent[key] = oldState.permanent[key];\n    }\n    for (const key in oldState.ephemeral) {\n      newState.ephemeral[key] = oldState.ephemeral[key];\n    }\n    return newState;\n  };\n\n  HistoryState.fromUri = function (uri: AnyUri): HistoryState {\n    uri = Uri.fromAny(uri);\n    const fragment = uri.fragment;\n    if (fragment.isDefined()) {\n      return HistoryState.fromUriFragment(fragment);\n    } else {\n      return HistoryState.empty();\n    }\n  };\n\n  HistoryState.fromUriFragment = function (fragment: AnyUriFragment): HistoryState {\n    fragment = UriFragment.fromAny(fragment);\n    let query = fragment.identifier !== void 0\n              ? UriQuery.parse(fragment.identifier)\n              : UriQuery.undefined();\n    const state: MutableHistoryState = {\n      fragment: void 0,\n      permanent: {},\n      ephemeral: {},\n    };\n    while (!query.isEmpty()) {\n      const key = query.key;\n      const value = query.value;\n      if (key !== void 0) {\n        state.permanent[key] = value;\n      } else {\n        state.fragment = value;\n      }\n      query = query.tail();\n    }\n    return state;\n  };\n\n  HistoryState.toUri = function (state: HistoryState): Uri {\n    const queryBuilder = UriQuery.builder();\n    if (state.fragment !== void 0) {\n      queryBuilder.add(void 0, state.fragment);\n    }\n    for (const key in state.permanent) {\n      const value = state.permanent[key]!;\n      queryBuilder.add(key, value);\n    }\n    return Uri.fragment(UriFragment.create(queryBuilder.bind().toString()));\n  };\n\n  return HistoryState;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, Lazy, Objects} from \"@swim/util\";\nimport {Service} from \"@swim/component\";\nimport type {Uri} from \"@swim/uri\";\nimport {HistoryStateInit, HistoryState} from \"./HistoryState\";\nimport type {HistoryServiceObserver} from \"./HistoryServiceObserver\";\nimport {Controller} from \"../\"; // forward import\n\n/** @public */\nexport class HistoryService<C extends Controller = Controller> extends Service<C> {\n  constructor() {\n    super();\n    this.historyState = HistoryState.current();\n    this.popHistory = this.popHistory.bind(this);\n  }\n\n  override readonly observerType?: Class<HistoryServiceObserver<C>>;\n\n  /** @internal */\n  readonly historyState: HistoryState;\n\n  get historyUri(): Uri {\n    return HistoryState.toUri(this.historyState);\n  }\n\n  pushHistory(deltaState: HistoryStateInit): void {\n    const oldState = this.historyState;\n    const newState = HistoryState.updated(deltaState, HistoryState.cloned(oldState));\n    const newUri = HistoryState.toUri(newState);\n    this.willPushHistory(newState, oldState);\n    (this as Mutable<this>).historyState = newState;\n    window.history.pushState(newState.ephemeral, \"\", newUri.toString());\n    this.onPushHistory(newState, oldState);\n    this.didPushHistory(newState, oldState);\n  }\n\n  protected willPushHistory(newState: HistoryState, oldState: HistoryState): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceWillPushHistory !== void 0) {\n        observer.serviceWillPushHistory(newState, oldState, this);\n      }\n    }\n  }\n\n  protected onPushHistory(newState: HistoryState, oldState: HistoryState): void {\n    const roots = this.roots;\n    for (let i = 0, n = roots.length; i < n; i += 1) {\n      roots[i]!.requireUpdate(Controller.NeedsRevise);\n    }\n  }\n\n  protected didPushHistory(newState: HistoryState, oldState: HistoryState): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceDidPushHistory !== void 0) {\n        observer.serviceDidPushHistory(newState, oldState, this);\n      }\n    }\n  }\n\n  replaceHistory(deltaState: HistoryStateInit): void {\n    const oldState = this.historyState;\n    const newState = HistoryState.updated(deltaState, HistoryState.cloned(oldState));\n    if (!Objects.equal(oldState, newState)) {\n      const newUri = HistoryState.toUri(newState);\n      this.willReplaceHistory(newState, oldState);\n      (this as Mutable<this>).historyState = newState;\n      window.history.replaceState(newState.ephemeral, \"\", newUri.toString());\n      this.onReplaceHistory(newState, oldState);\n      this.didReplaceHistory(newState, oldState);\n    }\n  }\n\n  protected willReplaceHistory(newState: HistoryState, oldState: HistoryState): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceWillReplaceHistory !== void 0) {\n        observer.serviceWillReplaceHistory(newState, oldState, this);\n      }\n    }\n  }\n\n  protected onReplaceHistory(newState: HistoryState, oldState: HistoryState): void {\n    const roots = this.roots;\n    for (let i = 0, n = roots.length; i < n; i += 1) {\n      roots[i]!.requireUpdate(Controller.NeedsRevise);\n    }\n  }\n\n  protected didReplaceHistory(newState: HistoryState, oldState: HistoryState): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceDidReplaceHistory !== void 0) {\n        observer.serviceDidReplaceHistory(newState, oldState, this);\n      }\n    }\n  }\n\n  /** @internal */\n  popHistory(event: PopStateEvent): void {\n    const deltaState: HistoryStateInit = {};\n    if (typeof event.state === \"object\" && event.state !== null) {\n      deltaState.ephemeral = event.state;\n    }\n    const oldState = HistoryState.current();\n    const newState = HistoryState.updated(deltaState, oldState);\n    this.willPopHistory(newState, oldState);\n    (this as Mutable<this>).historyState = newState;\n    this.onPopHistory(newState, oldState);\n    this.didPopHistory(newState, oldState);\n  }\n\n  protected willPopHistory(newState: HistoryState, oldState: HistoryState): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceWillPopHistory !== void 0) {\n        observer.serviceWillPopHistory(newState, oldState, this);\n      }\n    }\n  }\n\n  protected onPopHistory(newState: HistoryState, oldState: HistoryState): void {\n    const roots = this.roots;\n    for (let i = 0, n = roots.length; i < n; i += 1) {\n      roots[i]!.requireUpdate(Controller.NeedsRevise);\n    }\n  }\n\n  protected didPopHistory(newState: HistoryState, oldState: HistoryState): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceDidPopHistory !== void 0) {\n        observer.serviceDidPopHistory(newState, oldState, this);\n      }\n    }\n  }\n\n  protected override onAttach(): void {\n    super.onAttach();\n    this.attachEvents();\n  }\n\n  protected override onDetach(): void {\n    this.detachEvents();\n    super.onDetach();\n  }\n\n  protected attachEvents(): void {\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"popstate\", this.popHistory);\n    }\n  }\n\n  protected detachEvents(): void {\n    if (typeof window !== \"undefined\") {\n      window.removeEventListener(\"popstate\", this.popHistory);\n    }\n  }\n\n  @Lazy\n  static global<C extends Controller>(): HistoryService<C> {\n    return new HistoryService();\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ProviderClass, Provider} from \"@swim/component\";\nimport type {HistoryStateInit, HistoryState} from \"./HistoryState\";\nimport {HistoryService} from \"./HistoryService\";\nimport type {Controller} from \"../controller/Controller\";\n\n/** @public */\nexport interface HistoryProvider<C extends Controller, S extends HistoryService<C> | null | undefined = HistoryService<C>> extends Provider<C, S> {\n  get historyState(): HistoryState;\n\n  pushHistory(deltaState: HistoryStateInit): void;\n\n  replaceHistory(deltaState: HistoryStateInit): void;\n\n  createService(): S;\n}\n\n/** @public */\nexport const HistoryProvider = (function (_super: typeof Provider) {\n  const HistoryProvider = _super.extend(\"HistoryProvider\") as ProviderClass<HistoryProvider<any, any>>;\n\n  Object.defineProperty(HistoryProvider.prototype, \"historyState\", {\n    get<C extends Controller, S extends HistoryService<C> | null | undefined>(this: HistoryProvider<C, S>): HistoryState {\n      let service: HistoryService<C> | null | undefined = this.service;\n      if (service === void 0 || service === null) {\n        service = HistoryService.global();\n      }\n      return service.historyState;\n    },\n    configurable: true,\n  });\n\n  HistoryProvider.prototype.pushHistory = function <C extends Controller, S extends HistoryService<C> | null | undefined>(this: HistoryProvider<C, S>, deltaState: HistoryStateInit): void {\n    let service: HistoryService<C> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = HistoryService.global();\n    }\n    service.pushHistory(deltaState);\n  };\n\n  HistoryProvider.prototype.replaceHistory = function <C extends Controller, S extends HistoryService<C> | null | undefined>(this: HistoryProvider<C, S>, deltaState: HistoryStateInit): void {\n    let service: HistoryService<C> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = HistoryService.global();\n    }\n    service.replaceHistory(deltaState);\n  };\n\n  HistoryProvider.prototype.createService = function <C extends Controller, S extends HistoryService<C> | null | undefined>(this: HistoryProvider<C, S>): S {\n    return HistoryService.global() as S;\n  };\n\n  return HistoryProvider;\n})(Provider);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, Lazy} from \"@swim/util\";\nimport {Service} from \"@swim/component\";\nimport type {StorageServiceObserver} from \"./StorageServiceObserver\";\nimport {WebStorageService} from \"../\"; // forward import\nimport {EphemeralStorageService} from \"../\"; // forward import\nimport {Controller} from \"../\"; // forward import\n\n/** @public */\nexport abstract class StorageService<C extends Controller = Controller> extends Service<C> {\n  override readonly observerType?: Class<StorageServiceObserver<C>>;\n\n  abstract get(key: string): string | undefined;\n\n  abstract set(key: string, newValue: string | undefined): string | undefined;\n\n  protected willSet(key: string, newValue: string | undefined, oldValue: string | undefined): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceWillStore !== void 0) {\n        observer.serviceWillStore(key, newValue, oldValue, this);\n      }\n    }\n  }\n\n  protected onSet(key: string, newValue: string | undefined, oldValue: string | undefined): void {\n    const roots = this.roots;\n    for (let i = 0, n = roots.length; i < n; i += 1) {\n      roots[i]!.requireUpdate(Controller.NeedsRevise);\n    }\n  }\n\n  protected didSet(key: string, newValue: string | undefined, oldValue: string | undefined): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceDidStore!== void 0) {\n        observer.serviceDidStore(key, newValue, oldValue, this);\n      }\n    }\n  }\n\n  abstract clear(): void;\n\n  protected willClear(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceWillClear !== void 0) {\n        observer.serviceWillClear(this);\n      }\n    }\n  }\n\n  protected onClear(): void {\n    const roots = this.roots;\n    for (let i = 0, n = roots.length; i < n; i += 1) {\n      roots[i]!.requireUpdate(Controller.NeedsRevise);\n    }\n  }\n\n  protected didClear(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.serviceDidClear !== void 0) {\n        observer.serviceDidClear(this);\n      }\n    }\n  }\n\n  @Lazy\n  static global<C extends Controller>(): StorageService<C> {\n    let service: StorageService<C> | null = WebStorageService.local();\n    if (service === null) {\n      service = new EphemeralStorageService();\n    }\n    return service;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy} from \"@swim/util\";\nimport {StorageService} from \"./StorageService\";\nimport type {Controller} from \"../controller/Controller\";\n\n/** @public */\nexport class WebStorageService<C extends Controller = Controller> extends StorageService<C> {\n  constructor(storage: Storage) {\n    super();\n    this.storage = storage;\n    this.onStorage = this.onStorage.bind(this);\n  }\n\n  readonly storage: Storage;\n\n  override get(key: string): string | undefined {\n    const value = this.storage.getItem(key);\n    return value !== null ? value : void 0;\n  }\n\n  override set(key: string, newValue: string | undefined): string | undefined {\n    let oldValue: string | null | undefined = this.storage.getItem(key);\n    if (oldValue === null) {\n      oldValue = void 0;\n    }\n    if (newValue !== oldValue) {\n      this.willSet(key, newValue, oldValue);\n      if (newValue !== void 0) {\n        this.storage.setItem(key, newValue);\n      } else {\n        this.storage.removeItem(key);\n      }\n      this.onSet(key, newValue, oldValue);\n      this.didSet(key, newValue, oldValue);\n    }\n    return oldValue;\n  }\n\n  override clear(): void {\n    this.willClear();\n    this.storage.clear();\n    this.onClear();\n    this.didClear();\n  }\n\n  /** @internal */\n  onStorage(event: StorageEvent): void {\n    if (event.storageArea === this.storage) {\n      const key = event.key;\n      if (key !== null) {\n        let newValue: string | null | undefined = event.newValue;\n        if (newValue === null) {\n          newValue = void 0;\n        }\n        let oldValue: string | null | undefined = event.oldValue;\n        if (oldValue === null) {\n          oldValue = void 0;\n        }\n        if (newValue !== oldValue) {\n          this.willSet(key, newValue, oldValue);\n          this.onSet(key, newValue, oldValue);\n          this.didSet(key, newValue, oldValue);\n        }\n      } else {\n        this.willClear();\n        this.onClear();\n        this.didClear();\n      }\n    }\n  }\n\n  protected override onAttach(): void {\n    super.onAttach();\n    this.attachEvents();\n  }\n\n  protected override onDetach(): void {\n    this.detachEvents();\n    super.onDetach();\n  }\n\n  protected attachEvents(): void {\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"storage\", this.onStorage);\n    }\n  }\n\n  protected detachEvents(): void {\n    if (typeof window !== \"undefined\") {\n      window.removeEventListener(\"storage\", this.onStorage);\n    }\n  }\n\n  @Lazy\n  static local<C extends Controller>(): WebStorageService<C> | null {\n    try {\n      return new WebStorageService(window.localStorage);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  @Lazy\n  static session<C extends Controller>(): WebStorageService<C> | null {\n    try {\n      return new WebStorageService(window.sessionStorage);\n    } catch (e) {\n      return null;\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Dictionary, MutableDictionary} from \"@swim/util\";\nimport {StorageService} from \"./StorageService\";\nimport type {Controller} from \"../controller/Controller\";\n\n/** @public */\nexport class EphemeralStorageService<C extends Controller = Controller> extends StorageService<C> {\n  constructor(storage?: Dictionary<string>) {\n    super();\n    if (storage === void 0) {\n      storage = {};\n    }\n    this.storage = storage;\n  }\n\n  readonly storage: Dictionary<string>;\n\n  override get(key: string): string | undefined {\n    return this.storage[key];\n  }\n\n  override set(key: string, newValue: string | undefined): string | undefined {\n    const storage = this.storage as MutableDictionary<string>;\n    const oldValue = storage[key];\n    if (newValue !== oldValue) {\n      this.willSet(key, newValue, oldValue);\n      if (newValue !== void 0) {\n        storage[key] = newValue;\n      } else {\n        delete storage[key];\n      }\n      this.onSet(key, newValue, oldValue);\n      this.didSet(key, newValue, oldValue);\n    }\n    return oldValue;\n  }\n\n  override clear(): void {\n    this.willClear();\n    (this as Mutable<this>).storage = {};\n    this.onClear();\n    this.didClear();\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ProviderClass, Provider} from \"@swim/component\";\nimport {StorageService} from \"./StorageService\";\nimport type {Controller} from \"../controller/Controller\";\n\n/** @public */\nexport interface StorageProvider<C extends Controller, S extends StorageService<C> | null | undefined = StorageService<C>> extends Provider<C, S> {\n  get(key: string): string | undefined;\n\n  set(key: string, newValue: string | undefined): string | undefined;\n\n  clear(): void;\n\n  createService(): S;\n}\n\n/** @public */\nexport const StorageProvider = (function (_super: typeof Provider) {\n  const StorageProvider = _super.extend(\"StorageProvider\") as ProviderClass<StorageProvider<any, any>>;\n\n  StorageProvider.prototype.get = function <C extends Controller, S extends StorageService<C> | null | undefined>(key: string): string | undefined {\n    let service: StorageService<C> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = StorageService.global();\n    }\n    return service.get(key);\n  };\n\n  StorageProvider.prototype.set = function <C extends Controller, S extends StorageService<C> | null | undefined>(key: string, newValue: string | undefined): string | undefined {\n    let service: StorageService<C> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = StorageService.global();\n    }\n    return service.set(key, newValue);\n  };\n\n  StorageProvider.prototype.clear = function <C extends Controller, S extends StorageService<C> | null | undefined>(): void {\n    let service: StorageService<C> | null | undefined = this.service;\n    if (service === void 0 || service === null) {\n      service = StorageService.global();\n    }\n    service.clear();\n  };\n\n  StorageProvider.prototype.createService = function <C extends Controller, S extends StorageService<C> | null | undefined>(this: StorageProvider<C, S>): S {\n    return StorageService.global() as S;\n  };\n\n  return StorageProvider;\n})(Provider);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, FromAny, Creatable, InitType, Initable} from \"@swim/util\";\nimport {Fastener, Provider, ComponentFlags, ComponentInit, Component} from \"@swim/component\";\nimport {ExecuteService} from \"../execute/ExecuteService\";\nimport {ExecuteProvider} from \"../execute/ExecuteProvider\";\nimport {HistoryService} from \"../history/HistoryService\";\nimport {HistoryProvider} from \"../history/HistoryProvider\";\nimport {StorageService} from \"../storage/StorageService\";\nimport {StorageProvider} from \"../storage/StorageProvider\";\nimport {ControllerContext} from \"./ControllerContext\";\nimport type {ControllerObserver} from \"./ControllerObserver\";\nimport {ControllerRelation} from \"./\"; // forward import\n\n/** @public */\nexport type ControllerContextType<C extends Controller> =\n  C extends {readonly contextType?: Class<infer T>} ? T : never;\n\n/** @public */\nexport type ControllerFlags = ComponentFlags;\n\n/** @public */\nexport type AnyController<C extends Controller = Controller> = C | ControllerFactory<C> | InitType<C>;\n\n/** @public */\nexport interface ControllerInit extends ComponentInit {\n  /** @internal */\n  uid?: never, // force type ambiguity between Controller and ControllerInit\n  type?: Creatable<Controller>;\n  key?: string;\n  children?: AnyController[];\n}\n\n/** @public */\nexport interface ControllerFactory<C extends Controller = Controller, U = AnyController<C>> extends Creatable<C>, FromAny<C, U> {\n  fromInit(init: InitType<C>): C;\n}\n\n/** @public */\nexport interface ControllerClass<C extends Controller = Controller, U = AnyController<C>> extends Function, ControllerFactory<C, U> {\n  readonly prototype: C;\n}\n\n/** @public */\nexport interface ControllerConstructor<C extends Controller = Controller, U = AnyController<C>> extends ControllerClass<C, U> {\n  new(): C;\n}\n\n/** @public */\nexport type ControllerCreator<F extends (abstract new (...args: any) => C) & Creatable<InstanceType<F>>, C extends Controller = Controller> =\n  (abstract new (...args: any) => InstanceType<F>) & Creatable<InstanceType<F>>;\n\n/** @public */\nexport class Controller extends Component<Controller> implements Initable<ControllerInit> {\n  override get componentType(): Class<Controller> {\n    return Controller;\n  }\n\n  override readonly observerType?: Class<ControllerObserver>;\n\n  readonly contextType?: Class<ControllerContext>;\n\n  protected override willAttachParent(parent: Controller): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerWillAttachParent !== void 0) {\n        observer.controllerWillAttachParent(parent, this);\n      }\n    }\n  }\n\n  protected override onAttachParent(parent: Controller): void {\n    // hook\n  }\n\n  protected override didAttachParent(parent: Controller): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerDidAttachParent !== void 0) {\n        observer.controllerDidAttachParent(parent, this);\n      }\n    }\n  }\n\n  protected override willDetachParent(parent: Controller): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerWillDetachParent !== void 0) {\n        observer.controllerWillDetachParent(parent, this);\n      }\n    }\n  }\n\n  protected override onDetachParent(parent: Controller): void {\n    // hook\n  }\n\n  protected override didDetachParent(parent: Controller): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerDidDetachParent !== void 0) {\n        observer.controllerDidDetachParent(parent, this);\n      }\n    }\n  }\n\n  override setChild<C extends Controller>(key: string, newChild: C): Controller | null;\n  override setChild<F extends ControllerCreator<F>>(key: string, factory: F): Controller | null;\n  override setChild(key: string, newChild: AnyController | null): Controller | null;\n  override setChild(key: string, newChild: AnyController | null): Controller | null {\n    if (newChild !== null) {\n      newChild = Controller.fromAny(newChild);\n    }\n    return super.setChild(key, newChild) as Controller | null;\n  }\n\n  override appendChild<C extends Controller>(child: C, key?: string): C;\n  override appendChild<F extends ControllerCreator<F>>(factory: F, key?: string): InstanceType<F>;\n  override appendChild(child: AnyController, key?: string): Controller;\n  override appendChild(child: AnyController, key?: string): Controller {\n    child = Controller.fromAny(child);\n    return super.appendChild(child, key);\n  }\n\n  override prependChild<C extends Controller>(child: C, key?: string): C;\n  override prependChild<F extends ControllerCreator<F>>(factory: F, key?: string): InstanceType<F>;\n  override prependChild(child: AnyController, key?: string): Controller;\n  override prependChild(child: AnyController, key?: string): Controller {\n    child = Controller.fromAny(child);\n    return super.prependChild(child, key);\n  }\n\n  override insertChild<C extends Controller>(child: C, target: Controller | null, key?: string): C;\n  override insertChild<F extends ControllerCreator<F>>(factory: F, target: Controller | null, key?: string): InstanceType<F>;\n  override insertChild(child: AnyController, target: Controller | null, key?: string): Controller;\n  override insertChild(child: AnyController, target: Controller | null, key?: string): Controller {\n    child = Controller.fromAny(child);\n    return super.insertChild(child, target, key);\n  }\n\n  override replaceChild<C extends Controller>(newChild: Controller, oldChild: C): C;\n  override replaceChild<C extends Controller>(newChild: AnyController, oldChild: C): C;\n  override replaceChild(newChild: AnyController, oldChild: Controller): Controller {\n    newChild = Controller.fromAny(newChild);\n    return super.replaceChild(newChild, oldChild);\n  }\n\n  protected override willInsertChild(child: Controller, target: Controller | null): void {\n    super.willInsertChild(child, target);\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerWillInsertChild !== void 0) {\n        observer.controllerWillInsertChild(child, target, this);\n      }\n    }\n  }\n\n  protected override onInsertChild(child: Controller, target: Controller | null): void {\n    super.onInsertChild(child, target);\n  }\n\n  protected override didInsertChild(child: Controller, target: Controller | null): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerDidInsertChild !== void 0) {\n        observer.controllerDidInsertChild(child, target, this);\n      }\n    }\n    super.didInsertChild(child, target);\n  }\n\n  /** @internal */\n  override cascadeInsert(updateFlags?: ControllerFlags, controllerContext?: ControllerContext): void {\n    if ((this.flags & Controller.MountedFlag) !== 0) {\n      if (updateFlags === void 0) {\n        updateFlags = 0;\n      }\n      updateFlags |= this.flags & Controller.UpdateMask;\n      if ((updateFlags & Controller.CompileMask) !== 0) {\n        if (controllerContext === void 0) {\n          controllerContext = this.superControllerContext;\n        }\n        this.cascadeCompile(updateFlags, controllerContext);\n      }\n    }\n  }\n\n  protected override willRemoveChild(child: Controller): void {\n    super.willRemoveChild(child);\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerWillRemoveChild !== void 0) {\n        observer.controllerWillRemoveChild(child, this);\n      }\n    }\n  }\n\n  protected override onRemoveChild(child: Controller): void {\n    super.onRemoveChild(child);\n  }\n\n  protected override didRemoveChild(child: Controller): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerDidRemoveChild !== void 0) {\n        observer.controllerDidRemoveChild(child, this);\n      }\n    }\n    super.didRemoveChild(child);\n  }\n\n  protected override willMount(): void {\n    super.willMount();\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerWillMount !== void 0) {\n        observer.controllerWillMount(this);\n      }\n    }\n  }\n\n  protected override onMount(): void {\n    // subsume super\n    this.requestUpdate(this, this.flags & Controller.UpdateMask, false);\n    this.requireUpdate(this.mountFlags);\n\n    if (this.decoherent !== null && this.decoherent.length !== 0) {\n      this.requireUpdate(Controller.NeedsRevise);\n    }\n\n    this.mountFasteners();\n  }\n\n  protected override didMount(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerDidMount !== void 0) {\n        observer.controllerDidMount(this);\n      }\n    }\n    super.didMount();\n  }\n\n  protected override willUnmount(): void {\n    super.willUnmount();\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerWillUnmount !== void 0) {\n        observer.controllerWillUnmount(this);\n      }\n    }\n  }\n\n  protected override didUnmount(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerDidUnmount !== void 0) {\n        observer.controllerDidUnmount(this);\n      }\n    }\n    super.didUnmount();\n  }\n\n  override requireUpdate(updateFlags: ControllerFlags, immediate: boolean = false): void {\n    const flags = this.flags;\n    const deltaUpdateFlags = updateFlags & ~flags & Controller.UpdateMask;\n    if (deltaUpdateFlags !== 0) {\n      this.setFlags(flags | deltaUpdateFlags);\n      this.requestUpdate(this, deltaUpdateFlags, immediate);\n    }\n  }\n\n  protected needsUpdate(updateFlags: ControllerFlags, immediate: boolean): ControllerFlags {\n    return updateFlags;\n  }\n\n  requestUpdate(target: Controller, updateFlags: ControllerFlags, immediate: boolean): void {\n    updateFlags = this.needsUpdate(updateFlags, immediate);\n    let deltaUpdateFlags = this.flags & ~updateFlags & Controller.UpdateMask;\n    if ((updateFlags & Controller.CompileMask) !== 0) {\n      deltaUpdateFlags |= Controller.NeedsCompile;\n    }\n    if ((updateFlags & Controller.ExecuteMask) !== 0) {\n      deltaUpdateFlags |= Controller.NeedsExecute;\n    }\n    if (deltaUpdateFlags !== 0 || immediate) {\n      this.setFlags(this.flags | deltaUpdateFlags);\n      const parent = this.parent;\n      if (parent !== null) {\n        parent.requestUpdate(target, updateFlags, immediate);\n      } else if (this.mounted) {\n        const executeService = this.executeProvider.service;\n        if (executeService !== void 0 && executeService !== null) {\n          executeService.requestUpdate(target, updateFlags, immediate);\n        }\n      }\n    }\n  }\n\n  get updating(): boolean {\n    return (this.flags & Controller.UpdatingMask) !== 0;\n  }\n\n  get compiling(): boolean {\n    return (this.flags & Controller.CompilingFlag) !== 0;\n  }\n\n  protected needsCompile(compileFlags: ControllerFlags, controllerContext: ControllerContextType<this>): ControllerFlags {\n    return compileFlags;\n  }\n\n  cascadeCompile(compileFlags: ControllerFlags, baseControllerContext: ControllerContext): void {\n    const controllerContext = this.extendControllerContext(baseControllerContext);\n    const outerControllerContext = ControllerContext.current;\n    try {\n      ControllerContext.current = controllerContext;\n      compileFlags &= ~Controller.NeedsCompile;\n      compileFlags |= this.flags & Controller.UpdateMask;\n      compileFlags = this.needsCompile(compileFlags, controllerContext);\n      if ((compileFlags & Controller.CompileMask) !== 0) {\n        let cascadeFlags = compileFlags;\n        this.setFlags(this.flags & ~Controller.NeedsCompile | (Controller.CompilingFlag | Controller.ContextualFlag));\n        this.willCompile(cascadeFlags, controllerContext);\n        if (((this.flags | compileFlags) & Controller.NeedsResolve) !== 0) {\n          cascadeFlags |= Controller.NeedsResolve;\n          this.setFlags(this.flags & ~Controller.NeedsResolve);\n          this.willResolve(controllerContext);\n        }\n        if (((this.flags | compileFlags) & Controller.NeedsGenerate) !== 0) {\n          cascadeFlags |= Controller.NeedsGenerate;\n          this.setFlags(this.flags & ~Controller.NeedsGenerate);\n          this.willGenerate(controllerContext);\n        }\n        if (((this.flags | compileFlags) & Controller.NeedsAssemble) !== 0) {\n          cascadeFlags |= Controller.NeedsAssemble;\n          this.setFlags(this.flags & ~Controller.NeedsAssemble);\n          this.willAssemble(controllerContext);\n        }\n\n        this.onCompile(cascadeFlags, controllerContext);\n        if ((cascadeFlags & Controller.NeedsResolve) !== 0) {\n          this.onResolve(controllerContext);\n        }\n        if ((cascadeFlags & Controller.NeedsGenerate) !== 0) {\n          this.onGenerate(controllerContext);\n        }\n        if ((cascadeFlags & Controller.NeedsAssemble) !== 0) {\n          this.onAssemble(controllerContext);\n        }\n\n        if ((cascadeFlags & Controller.CompileMask) !== 0) {\n          this.setFlags(this.flags & ~Controller.ContextualFlag);\n          this.compileChildren(cascadeFlags, controllerContext, this.compileChild);\n          this.setFlags(this.flags | Controller.ContextualFlag);\n        }\n\n        if ((cascadeFlags & Controller.NeedsAssemble) !== 0) {\n          this.didAssemble(controllerContext);\n        }\n        if ((cascadeFlags & Controller.NeedsGenerate) !== 0) {\n          this.didGenerate(controllerContext);\n        }\n        if ((cascadeFlags & Controller.NeedsResolve) !== 0) {\n          this.didResolve(controllerContext);\n        }\n        this.didCompile(cascadeFlags, controllerContext);\n      }\n    } finally {\n      this.setFlags(this.flags & ~(Controller.CompilingFlag | Controller.ContextualFlag));\n      ControllerContext.current = outerControllerContext;\n    }\n  }\n\n  protected willCompile(compileFlags: ControllerFlags, controllerContext: ControllerContextType<this>): void {\n    // hook\n  }\n\n  protected onCompile(compileFlags: ControllerFlags, controllerContext: ControllerContextType<this>): void {\n    // hook\n  }\n\n  protected didCompile(compileFlags: ControllerFlags, controllerContext: ControllerContextType<this>): void {\n    // hook\n  }\n\n  protected willResolve(controllerContext: ControllerContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerWillResolve !== void 0) {\n        observer.controllerWillResolve(controllerContext, this);\n      }\n    }\n  }\n\n  protected onResolve(controllerContext: ControllerContextType<this>): void {\n    // hook\n  }\n\n  protected didResolve(controllerContext: ControllerContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerDidResolve !== void 0) {\n        observer.controllerDidResolve(controllerContext, this);\n      }\n    }\n  }\n\n  protected willGenerate(controllerContext: ControllerContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerWillGenerate !== void 0) {\n        observer.controllerWillGenerate(controllerContext, this);\n      }\n    }\n  }\n\n  protected onGenerate(controllerContext: ControllerContextType<this>): void {\n    // hook\n  }\n\n  protected didGenerate(controllerContext: ControllerContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerDidGenerate !== void 0) {\n        observer.controllerDidGenerate(controllerContext, this);\n      }\n    }\n  }\n\n  protected willAssemble(controllerContext: ControllerContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerWillAssemble !== void 0) {\n        observer.controllerWillAssemble(controllerContext, this);\n      }\n    }\n  }\n\n  protected onAssemble(controllerContext: ControllerContextType<this>): void {\n    // hook\n  }\n\n  protected didAssemble(controllerContext: ControllerContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerDidAssemble !== void 0) {\n        observer.controllerDidAssemble(controllerContext, this);\n      }\n    }\n  }\n\n  protected compileChildren(compileFlags: ControllerFlags, controllerContext: ControllerContextType<this>,\n                            compileChild: (this: this, child: Controller, compileFlags: ControllerFlags,\n                                           controllerContext: ControllerContextType<this>) => void): void {\n    let child = this.firstChild;\n    while (child !== null) {\n      const next = child.nextSibling;\n      compileChild.call(this, child, compileFlags, controllerContext);\n      if (next !== null && next.parent !== this) {\n        throw new Error(\"inconsistent compile pass\");\n      }\n      child = next;\n    }\n  }\n\n  protected compileChild(child: Controller, compileFlags: ControllerFlags, controllerContext: ControllerContextType<this>): void {\n    child.cascadeCompile(compileFlags, controllerContext);\n  }\n\n  get executing(): boolean {\n    return (this.flags & Controller.ExecutingFlag) !== 0;\n  }\n\n  protected needsExecute(executeFlags: ControllerFlags, controllerContext: ControllerContextType<this>): ControllerFlags {\n    return executeFlags;\n  }\n\n  cascadeExecute(executeFlags: ControllerFlags, baseControllerContext: ControllerContext): void {\n    const controllerContext = this.extendControllerContext(baseControllerContext);\n    const outerControllerContext = ControllerContext.current;\n    try {\n      ControllerContext.current = controllerContext;\n      executeFlags &= ~Controller.NeedsExecute;\n      executeFlags |= this.flags & Controller.UpdateMask;\n      executeFlags = this.needsExecute(executeFlags, controllerContext);\n      if ((executeFlags & Controller.ExecuteMask) !== 0) {\n        let cascadeFlags = executeFlags;\n        this.setFlags(this.flags & ~Controller.NeedsExecute | (Controller.ExecutingFlag | Controller.ContextualFlag));\n        this.willExecute(cascadeFlags, controllerContext);\n        if (((this.flags | executeFlags) & Controller.NeedsRevise) !== 0) {\n          cascadeFlags |= Controller.NeedsRevise;\n          this.setFlags(this.flags & ~Controller.NeedsRevise);\n          this.willRevise(controllerContext);\n        }\n        if (((this.flags | executeFlags) & Controller.NeedsCompute) !== 0) {\n          cascadeFlags |= Controller.NeedsCompute;\n          this.setFlags(this.flags & ~Controller.NeedsCompute);\n          this.willCompute(controllerContext);\n        }\n\n        this.onExecute(cascadeFlags, controllerContext);\n        if ((cascadeFlags & Controller.NeedsRevise) !== 0) {\n          this.onRevise(controllerContext);\n        }\n        if ((cascadeFlags & Controller.NeedsCompute) !== 0) {\n          this.onCompute(controllerContext);\n        }\n\n        if ((cascadeFlags & Controller.ExecuteMask) !== 0) {\n          this.setFlags(this.flags & ~Controller.ContextualFlag);\n          this.executeChildren(cascadeFlags, controllerContext, this.executeChild);\n          this.setFlags(this.flags | Controller.ContextualFlag);\n        }\n\n        if ((cascadeFlags & Controller.NeedsCompute) !== 0) {\n          this.didCompute(controllerContext);\n        }\n        if ((cascadeFlags & Controller.NeedsRevise) !== 0) {\n          this.didRevise(controllerContext);\n        }\n        this.didExecute(cascadeFlags, controllerContext);\n      }\n    } finally {\n      this.setFlags(this.flags & ~(Controller.ExecutingFlag | Controller.ContextualFlag));\n      ControllerContext.current = outerControllerContext;\n    }\n  }\n\n  protected willExecute(executeFlags: ControllerFlags, controllerContext: ControllerContextType<this>): void {\n    // hook\n  }\n\n  protected onExecute(executeFlags: ControllerFlags, controllerContext: ControllerContextType<this>): void {\n    // hook\n  }\n\n  protected didExecute(executeFlags: ControllerFlags, controllerContext: ControllerContextType<this>): void {\n    // hook\n  }\n\n  protected willRevise(controllerContext: ControllerContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerWillRevise !== void 0) {\n        observer.controllerWillRevise(controllerContext, this);\n      }\n    }\n  }\n\n  protected onRevise(controllerContext: ControllerContextType<this>): void {\n    this.recohereFasteners(controllerContext.updateTime);\n  }\n\n  protected didRevise(controllerContext: ControllerContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerDidRevise !== void 0) {\n        observer.controllerDidRevise(controllerContext, this);\n      }\n    }\n  }\n\n  protected willCompute(controllerContext: ControllerContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerWillCompute !== void 0) {\n        observer.controllerWillCompute(controllerContext, this);\n      }\n    }\n  }\n\n  protected onCompute(controllerContext: ControllerContextType<this>): void {\n    // hook\n  }\n\n  protected didCompute(controllerContext: ControllerContextType<this>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerDidCompute !== void 0) {\n        observer.controllerDidCompute(controllerContext, this);\n      }\n    }\n  }\n\n  protected executeChildren(executeFlags: ControllerFlags, controllerContext: ControllerContextType<this>,\n                            executeChild: (this: this, child: Controller, executeFlags: ControllerFlags,\n                                           controllerContext: ControllerContextType<this>) => void): void {\n    let child = this.firstChild;\n    while (child !== null) {\n      const next = child.nextSibling;\n      executeChild.call(this, child, executeFlags, controllerContext);\n      if (next !== null && next.parent !== this) {\n        throw new Error(\"inconsistent execute pass\");\n      }\n      child = next;\n    }\n  }\n\n  /** @internal */\n  protected executeChild(child: Controller, executeFlags: ControllerFlags, controllerContext: ControllerContextType<this>): void {\n    child.cascadeExecute(executeFlags, controllerContext);\n  }\n\n  /** @internal */\n  protected override bindChildFastener(fastener: Fastener, child: Controller, target: Controller | null): void {\n    super.bindChildFastener(fastener, child, target);\n    if (fastener instanceof ControllerRelation) {\n      fastener.bindController(child, target);\n    }\n  }\n\n  /** @internal */\n  protected override unbindChildFastener(fastener: Fastener, child: Controller): void {\n    if (fastener instanceof ControllerRelation) {\n      fastener.unbindController(child);\n    }\n    super.unbindChildFastener(fastener, child);\n  }\n\n  /** @internal @override */\n  override decohereFastener(fastener: Fastener): void {\n    super.decohereFastener(fastener);\n    this.requireUpdate(Controller.NeedsRevise);\n  }\n\n  @Provider({\n    extends: ExecuteProvider,\n    type: ExecuteService,\n    observes: false,\n    service: ExecuteService.global(),\n  })\n  readonly executeProvider!: ExecuteProvider<this>;\n\n  @Provider({\n    extends: HistoryProvider,\n    type: HistoryService,\n    observes: false,\n    service: HistoryService.global(),\n  })\n  readonly historyProvider!: HistoryProvider<this>;\n\n  @Provider({\n    extends: StorageProvider,\n    type: StorageService,\n    observes: false,\n    service: StorageService.global(),\n  })\n  readonly storageProvider!: StorageProvider<this>;\n\n  /** @internal */\n  get superControllerContext(): ControllerContext {\n    const parent = this.parent;\n    if (parent !== null) {\n      return parent.controllerContext;\n    } else {\n      return this.executeProvider.updatedControllerContext();\n    }\n  }\n\n  /** @internal */\n  extendControllerContext(controllerContext: ControllerContext): ControllerContextType<this> {\n    return controllerContext as ControllerContextType<this>;\n  }\n\n  get controllerContext(): ControllerContextType<this> {\n    if ((this.flags & Controller.ContextualFlag) !== 0) {\n      return ControllerContext.current as ControllerContextType<this>;\n    } else {\n      return this.extendControllerContext(this.superControllerContext);\n    }\n  }\n\n  /** @override */\n  override init(init: ControllerInit): void {\n    // hook\n  }\n\n  static override create<S extends new () => InstanceType<S>>(this: S): InstanceType<S> {\n    return new this();\n  }\n\n  static override fromInit<S extends abstract new (...args: any) => InstanceType<S>>(this: S, init: InitType<InstanceType<S>>): InstanceType<S> {\n    let type: Creatable<Controller>;\n    if ((typeof init === \"object\" && init !== null || typeof init === \"function\") && Creatable.is((init as ControllerInit).type)) {\n      type = (init as ControllerInit).type!;\n    } else {\n      type = this as unknown as Creatable<Controller>;\n    }\n    const controller = type.create();\n    controller.init(init as ControllerInit);\n    return controller as InstanceType<S>;\n  }\n\n  static override fromAny<S extends abstract new (...args: any) => InstanceType<S>>(this: S, value: AnyController<InstanceType<S>>): InstanceType<S> {\n    if (value === void 0 || value === null) {\n      return value as InstanceType<S>;\n    } else if (value instanceof Controller) {\n      if (value instanceof this) {\n        return value;\n      } else {\n        throw new TypeError(value + \" not an instance of \" + this);\n      }\n    } else if (Creatable.is(value)) {\n      return (value as Creatable<InstanceType<S>>).create();\n    } else {\n      return (this as unknown as ControllerFactory<InstanceType<S>>).fromInit(value);\n    }\n  }\n\n  /** @internal */\n  static override uid: () => number = (function () {\n    let nextId = 1;\n    return function uid(): number {\n      const id = ~~nextId;\n      nextId += 1;\n      return id;\n    }\n  })();\n\n  /** @internal */\n  static override readonly MountedFlag: ControllerFlags = Component.MountedFlag;\n  /** @internal */\n  static override readonly RemovingFlag: ControllerFlags = Component.RemovingFlag;\n  /** @internal */\n  static readonly CompilingFlag: ControllerFlags = 1 << (Component.FlagShift + 0);\n  /** @internal */\n  static readonly ExecutingFlag: ControllerFlags = 1 << (Component.FlagShift + 1);\n  /** @internal */\n  static readonly ContextualFlag: ControllerFlags = 1 << (Component.FlagShift + 2);\n  /** @internal */\n  static readonly UpdatingMask: ControllerFlags = Controller.CompilingFlag\n                                                | Controller.ExecutingFlag;\n  /** @internal */\n  static readonly StatusMask: ControllerFlags = Controller.MountedFlag\n                                              | Controller.RemovingFlag\n                                              | Controller.CompilingFlag\n                                              | Controller.ExecutingFlag\n                                              | Controller.ContextualFlag;\n\n  static readonly NeedsCompile: ControllerFlags = 1 << (Component.FlagShift + 3);\n  static readonly NeedsResolve: ControllerFlags = 1 << (Component.FlagShift + 4);\n  static readonly NeedsGenerate: ControllerFlags = 1 << (Component.FlagShift + 5);\n  static readonly NeedsAssemble: ControllerFlags = 1 << (Component.FlagShift + 6);\n  /** @internal */\n  static readonly CompileMask: ControllerFlags = Controller.NeedsCompile\n                                               | Controller.NeedsResolve\n                                               | Controller.NeedsGenerate\n                                               | Controller.NeedsAssemble;\n\n  static readonly NeedsExecute: ControllerFlags = 1 << (Component.FlagShift + 7);\n  static readonly NeedsRevise: ControllerFlags = 1 << (Component.FlagShift + 8);\n  static readonly NeedsCompute: ControllerFlags = 1 << (Component.FlagShift + 9);\n  /** @internal */\n  static readonly ExecuteMask: ControllerFlags = Controller.NeedsExecute\n                                               | Controller.NeedsRevise\n                                               | Controller.NeedsCompute;\n\n  /** @internal */\n  static readonly UpdateMask: ControllerFlags = Controller.CompileMask\n                                              | Controller.ExecuteMask;\n\n  /** @internal */\n  static override readonly FlagShift: number = Component.FlagShift + 10;\n  /** @internal */\n  static override readonly FlagMask: ControllerFlags = (1 << Controller.FlagShift) - 1;\n\n  static override readonly MountFlags: ControllerFlags = 0;\n  static override readonly InsertChildFlags: ControllerFlags = 0;\n  static override readonly RemoveChildFlags: ControllerFlags = 0;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Proto, ObserverType} from \"@swim/util\";\nimport {FastenerOwner, FastenerInit, FastenerClass, Fastener} from \"@swim/component\";\nimport {AnyController, ControllerFactory, Controller} from \"./Controller\";\n\n/** @internal */\nexport type ControllerRelationType<F extends ControllerRelation<any, any>> =\n  F extends ControllerRelation<any, infer C> ? C : never;\n\n/** @public */\nexport interface ControllerRelationInit<C extends Controller = Controller> extends FastenerInit {\n  extends?: {prototype: ControllerRelation<any, any>} | string | boolean | null;\n  type?: ControllerFactory<C>;\n  binds?: boolean;\n  observes?: boolean;\n\n  initController?(controller: C): void;\n  willAttachController?(controller: C, target: Controller | null): void;\n  didAttachController?(controller: C, target: Controller | null): void;\n\n  deinitController?(controller: C): void;\n  willDetachController?(controller: C): void;\n  didDetachController?(controller: C): void;\n\n  parentController?: Controller | null;\n  insertChild?(parent: Controller, child: C, target: Controller | null, key: string | undefined): void;\n\n  detectController?(controller: Controller): C | null;\n  createController?(): C;\n  fromAny?(value: AnyController<C>): C;\n}\n\n/** @public */\nexport type ControllerRelationDescriptor<O = unknown, C extends Controller = Controller, I = {}> = ThisType<ControllerRelation<O, C> & I> & ControllerRelationInit<C> & Partial<I>;\n\n/** @public */\nexport interface ControllerRelationClass<F extends ControllerRelation<any, any> = ControllerRelation<any, any>> extends FastenerClass<F> {\n}\n\n/** @public */\nexport interface ControllerRelationFactory<F extends ControllerRelation<any, any> = ControllerRelation<any, any>> extends ControllerRelationClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): ControllerRelationFactory<F> & I;\n\n  define<O, C extends Controller = Controller>(className: string, descriptor: ControllerRelationDescriptor<O, C>): ControllerRelationFactory<ControllerRelation<any, C>>;\n  define<O, C extends Controller = Controller>(className: string, descriptor: {observes: boolean} & ControllerRelationDescriptor<O, C, ObserverType<C>>): ControllerRelationFactory<ControllerRelation<any, C>>;\n  define<O, C extends Controller = Controller, I = {}>(className: string, descriptor: {implements: unknown} & ControllerRelationDescriptor<O, C, I>): ControllerRelationFactory<ControllerRelation<any, C> & I>;\n  define<O, C extends Controller = Controller, I = {}>(className: string, descriptor: {implements: unknown; observes: boolean} & ControllerRelationDescriptor<O, C, I & ObserverType<C>>): ControllerRelationFactory<ControllerRelation<any, C> & I>;\n\n  <O, C extends Controller = Controller>(descriptor: ControllerRelationDescriptor<O, C>): PropertyDecorator;\n  <O, C extends Controller = Controller>(descriptor: {observes: boolean} & ControllerRelationDescriptor<O, C, ObserverType<C>>): PropertyDecorator;\n  <O, C extends Controller = Controller, I = {}>(descriptor: {implements: unknown} & ControllerRelationDescriptor<O, C, I>): PropertyDecorator;\n  <O, C extends Controller = Controller, I = {}>(descriptor: {implements: unknown; observes: boolean} & ControllerRelationDescriptor<O, C, I & ObserverType<C>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface ControllerRelation<O = unknown, C extends Controller = Controller> extends Fastener<O> {\n  /** @override */\n  get fastenerType(): Proto<ControllerRelation<any, any>>;\n\n  /** @protected */\n  initController(controller: C): void;\n\n  /** @protected */\n  willAttachController(controller: C, target: Controller | null): void;\n\n  /** @protected */\n  onAttachController(controller: C, target: Controller | null): void;\n\n  /** @protected */\n  didAttachController(controller: C, target: Controller | null): void;\n\n  /** @protected */\n  deinitController(controller: C): void;\n\n  /** @protected */\n  willDetachController(controller: C): void;\n\n  /** @protected */\n  onDetachController(controller: C): void;\n\n  /** @protected */\n  didDetachController(controller: C): void;\n\n  /** @internal @protected */\n  get parentController(): Controller | null;\n\n  /** @internal @protected */\n  insertChild(parent: Controller, child: C, target: Controller | null, key: string | undefined): void;\n\n  /** @internal */\n  bindController(controller: Controller, target: Controller | null): void;\n\n  /** @internal */\n  unbindController(controller: Controller): void;\n\n  detectController(controller: Controller): C | null;\n\n  createController(): C;\n\n  /** @internal @protected */\n  fromAny(value: AnyController<C>): C;\n\n  /** @internal @protected */\n  get type(): ControllerFactory<C> | undefined; // optional prototype property\n\n  /** @internal @protected */\n  get binds(): boolean | undefined; // optional prototype property\n\n  /** @internal @protected */\n  get observes(): boolean | undefined; // optional prototype property\n\n  /** @internal @override */\n  get lazy(): boolean; // prototype property\n\n  /** @internal @override */\n  get static(): string | boolean; // prototype property\n}\n\n/** @public */\nexport const ControllerRelation = (function (_super: typeof Fastener) {\n  const ControllerRelation: ControllerRelationFactory = _super.extend(\"ControllerRelation\");\n\n  Object.defineProperty(ControllerRelation.prototype, \"fastenerType\", {\n    get: function (this: ControllerRelation): Proto<ControllerRelation<any, any>> {\n      return ControllerRelation;\n    },\n    configurable: true,\n  });\n\n  ControllerRelation.prototype.initController = function <C extends Controller>(this: ControllerRelation<unknown, C>, controller: C): void {\n    // hook\n  };\n\n  ControllerRelation.prototype.willAttachController = function <C extends Controller>(this: ControllerRelation<unknown, C>, controller: C, target: Controller | null): void {\n    // hook\n  };\n\n  ControllerRelation.prototype.onAttachController = function <C extends Controller>(this: ControllerRelation<unknown, C>, controller: C, target: Controller | null): void {\n    if (this.observes === true) {\n      controller.observe(this as ObserverType<C>);\n    }\n  };\n\n  ControllerRelation.prototype.didAttachController = function <C extends Controller>(this: ControllerRelation<unknown, C>, controller: C, target: Controller | null): void {\n    // hook\n  };\n\n  ControllerRelation.prototype.deinitController = function <C extends Controller>(this: ControllerRelation<unknown, C>, controller: C): void {\n    // hook\n  };\n\n  ControllerRelation.prototype.willDetachController = function <C extends Controller>(this: ControllerRelation<unknown, C>, controller: C): void {\n    // hook\n  };\n\n  ControllerRelation.prototype.onDetachController = function <C extends Controller>(this: ControllerRelation<unknown, C>, controller: C): void {\n    if (this.observes === true) {\n      controller.unobserve(this as ObserverType<C>);\n    }\n  };\n\n  ControllerRelation.prototype.didDetachController = function <C extends Controller>(this: ControllerRelation<unknown, C>, controller: C): void {\n    // hook\n  };\n\n  Object.defineProperty(ControllerRelation.prototype, \"parentController\", {\n    get(this: ControllerRelation): Controller | null {\n      const owner = this.owner;\n      return owner instanceof Controller ? owner : null;\n    },\n    configurable: true,\n  });\n\n  ControllerRelation.prototype.insertChild = function <C extends Controller>(this: ControllerRelation<unknown, C>, parent: Controller, child: C, target: Controller | null, key: string | undefined): void {\n    parent.insertChild(child, target, key);\n  };\n\n  ControllerRelation.prototype.bindController = function <C extends Controller>(this: ControllerRelation<unknown, C>, controller: Controller, target: Controller | null): void {\n    // hook\n  };\n\n  ControllerRelation.prototype.unbindController = function <C extends Controller>(this: ControllerRelation<unknown, C>, controller: Controller): void {\n    // hook\n  };\n\n  ControllerRelation.prototype.detectController = function <C extends Controller>(this: ControllerRelation<unknown, C>, controller: Controller): C | null {\n    return null;\n  };\n\n  ControllerRelation.prototype.createController = function <C extends Controller>(this: ControllerRelation<unknown, C>): C {\n    let controller: C | undefined;\n    const type = this.type;\n    if (type !== void 0) {\n      controller = type.create();\n    }\n    if (controller === void 0 || controller === null) {\n      let message = \"Unable to create \";\n      if (this.name.length !== 0) {\n        message += this.name + \" \";\n      }\n      message += \"controller\";\n      throw new Error(message);\n    }\n    return controller;\n  };\n\n  ControllerRelation.prototype.fromAny = function <C extends Controller>(this: ControllerRelation<unknown, C>, value: AnyController<C>): C {\n    const type = this.type;\n    if (type !== void 0) {\n      return type.fromAny(value);\n    } else {\n      return Controller.fromAny(value) as C;\n    }\n  };\n\n  Object.defineProperty(ControllerRelation.prototype, \"lazy\", {\n    get: function (this: ControllerRelation): boolean {\n      return false;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(ControllerRelation.prototype, \"static\", {\n    get: function (this: ControllerRelation): string | boolean {\n      return true;\n    },\n    configurable: true,\n  });\n\n  ControllerRelation.construct = function <F extends ControllerRelation<any, any>>(fastenerClass: {prototype: F}, fastener: F | null, owner: FastenerOwner<F>): F {\n    fastener = _super.construct(fastenerClass, fastener, owner) as F;\n    return fastener;\n  };\n\n  ControllerRelation.define = function <O, C extends Controller>(className: string, descriptor: ControllerRelationDescriptor<O, C>): ControllerRelationFactory<ControllerRelation<any, C>> {\n    let superClass = descriptor.extends as ControllerRelationFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const fastenerClass = superClass.extend(className, descriptor);\n\n    fastenerClass.construct = function (fastenerClass: {prototype: ControllerRelation<any, any>}, fastener: ControllerRelation<O, C> | null, owner: O): ControllerRelation<O, C> {\n      fastener = superClass!.construct(fastenerClass, fastener, owner);\n      if (affinity !== void 0) {\n        fastener.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        fastener.initInherits(inherits);\n      }\n      return fastener;\n    };\n\n    return fastenerClass;\n  };\n\n  return ControllerRelation;\n})(Fastener);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Proto, ObserverType} from \"@swim/util\";\nimport type {FastenerOwner, Fastener} from \"@swim/component\";\nimport type {AnyController, Controller} from \"./Controller\";\nimport {ControllerRelationInit, ControllerRelationClass, ControllerRelation} from \"./ControllerRelation\";\n\n/** @internal */\nexport type ControllerRefType<F extends ControllerRef<any, any>> =\n  F extends ControllerRef<any, infer C> ? C : never;\n\n/** @public */\nexport interface ControllerRefInit<C extends Controller = Controller> extends ControllerRelationInit<C> {\n  extends?: {prototype: ControllerRef<any, any>} | string | boolean | null;\n  key?: string | boolean;\n}\n\n/** @public */\nexport type ControllerRefDescriptor<O = unknown, C extends Controller = Controller, I = {}> = ThisType<ControllerRef<O, C> & I> & ControllerRefInit<C> & Partial<I>;\n\n/** @public */\nexport interface ControllerRefClass<F extends ControllerRef<any, any> = ControllerRef<any, any>> extends ControllerRelationClass<F> {\n}\n\n/** @public */\nexport interface ControllerRefFactory<F extends ControllerRef<any, any> = ControllerRef<any, any>> extends ControllerRefClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): ControllerRefFactory<F> & I;\n\n  define<O, C extends Controller = Controller>(className: string, descriptor: ControllerRefDescriptor<O, C>): ControllerRefFactory<ControllerRef<any, C>>;\n  define<O, C extends Controller = Controller>(className: string, descriptor: {observes: boolean} & ControllerRefDescriptor<O, C, ObserverType<C>>): ControllerRefFactory<ControllerRef<any, C>>;\n  define<O, C extends Controller = Controller, I = {}>(className: string, descriptor: {implements: unknown} & ControllerRefDescriptor<O, C, I>): ControllerRefFactory<ControllerRef<any, C> & I>;\n  define<O, C extends Controller = Controller, I = {}>(className: string, descriptor: {implements: unknown; observes: boolean} & ControllerRefDescriptor<O, C, I & ObserverType<C>>): ControllerRefFactory<ControllerRef<any, C> & I>;\n\n  <O, C extends Controller = Controller>(descriptor: ControllerRefDescriptor<O, C>): PropertyDecorator;\n  <O, C extends Controller = Controller>(descriptor: {observes: boolean} & ControllerRefDescriptor<O, C, ObserverType<C>>): PropertyDecorator;\n  <O, C extends Controller = Controller, I = {}>(descriptor: {implements: unknown} & ControllerRefDescriptor<O, C, I>): PropertyDecorator;\n  <O, C extends Controller = Controller, I = {}>(descriptor: {implements: unknown; observes: boolean} & ControllerRefDescriptor<O, C, I & ObserverType<C>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface ControllerRef<O = unknown, C extends Controller = Controller> extends ControllerRelation<O, C> {\n  (): C | null;\n  (controller: AnyController<C> | null, target?: Controller | null, key?: string): O;\n\n  /** @override */\n  get fastenerType(): Proto<ControllerRef<any, any>>;\n\n  /** @protected @override */\n  onInherit(superFastener: Fastener): void;\n\n  readonly controller: C | null;\n\n  getController(): C;\n\n  setController(controller: AnyController<C> | null, target?: Controller | null, key?: string): C | null;\n\n  attachController(controller?: AnyController<C>, target?: Controller | null): C;\n\n  detachController(): C | null;\n\n  insertController(parent?: Controller, controller?: AnyController<C>, target?: Controller | null, key?: string): C;\n\n  removeController(): C | null;\n\n  deleteController(): C | null;\n\n  /** @internal @override */\n  bindController(controller: Controller, target: Controller | null): void;\n\n  /** @internal @override */\n  unbindController(controller: Controller): void;\n\n  /** @override */\n  detectController(controller: Controller): C | null;\n\n  /** @internal */\n  get key(): string | undefined; // optional prototype field\n}\n\n/** @public */\nexport const ControllerRef = (function (_super: typeof ControllerRelation) {\n  const ControllerRef: ControllerRefFactory = _super.extend(\"ControllerRef\");\n\n  Object.defineProperty(ControllerRef.prototype, \"fastenerType\", {\n    get: function (this: ControllerRef): Proto<ControllerRef<any, any>> {\n      return ControllerRef;\n    },\n    configurable: true,\n  });\n\n  ControllerRef.prototype.onInherit = function (this: ControllerRef, superFastener: ControllerRef): void {\n    this.setController(superFastener.controller);\n  };\n\n  ControllerRef.prototype.getController = function <C extends Controller>(this: ControllerRef<unknown, C>): C {\n    const controller = this.controller;\n    if (controller === null) {\n      let message = controller + \" \";\n      if (this.name.length !== 0) {\n        message += this.name + \" \";\n      }\n      message += \"controller\";\n      throw new TypeError(message);\n    }\n    return controller;\n  };\n\n  ControllerRef.prototype.setController = function <C extends Controller>(this: ControllerRef<unknown, C>, newController: C  | null, target?: Controller | null, key?: string): C | null {\n    if (newController !== null) {\n      newController = this.fromAny(newController);\n    }\n    let oldController = this.controller;\n    if (oldController !== newController) {\n      if (target === void 0) {\n        target = null;\n      }\n      let parent: Controller | null;\n      if (this.binds && (parent = this.parentController, parent !== null)) {\n        if (oldController !== null && oldController.parent === parent) {\n          if (target === null) {\n            target = oldController.nextSibling;\n          }\n          oldController.remove();\n        }\n        if (newController !== null) {\n          if (key === void 0) {\n            key = this.key;\n          }\n          this.insertChild(parent, newController, target, key);\n        }\n        oldController = this.controller;\n      }\n      if (oldController !== newController) {\n        if (oldController !== null) {\n          this.willDetachController(oldController);\n          (this as Mutable<typeof this>).controller = null;\n          this.onDetachController(oldController);\n          this.deinitController(oldController);\n          this.didDetachController(oldController);\n        }\n        if (newController !== null) {\n          this.willAttachController(newController, target);\n          (this as Mutable<typeof this>).controller = newController;\n          this.onAttachController(newController, target);\n          this.initController(newController);\n          this.didAttachController(newController, target);\n        }\n      }\n    }\n    return oldController;\n  };\n\n  ControllerRef.prototype.attachController = function <C extends Controller>(this: ControllerRef<unknown, C>, newController?: AnyController<C>, target?: Controller | null): C {\n    const oldController = this.controller;\n    if (newController !== void 0 && newController !== null) {\n      newController = this.fromAny(newController);\n    } else if (oldController === null) {\n      newController = this.createController();\n    } else {\n      newController = oldController;\n    }\n    if (newController !== oldController) {\n      if (target === void 0) {\n        target = null;\n      }\n      if (oldController !== null) {\n        this.willDetachController(oldController);\n        (this as Mutable<typeof this>).controller = null;\n        this.onDetachController(oldController);\n        this.deinitController(oldController);\n        this.didDetachController(oldController);\n      }\n      this.willAttachController(newController, target);\n      (this as Mutable<typeof this>).controller = newController;\n      this.onAttachController(newController, target);\n      this.initController(newController);\n      this.didAttachController(newController, target);\n    }\n    return newController;\n  };\n\n  ControllerRef.prototype.detachController = function <C extends Controller>(this: ControllerRef<unknown, C>): C | null {\n    const oldController = this.controller;\n    if (oldController !== null) {\n      this.willDetachController(oldController);\n      (this as Mutable<typeof this>).controller = null;\n      this.onDetachController(oldController);\n      this.deinitController(oldController);\n      this.didDetachController(oldController);\n    }\n    return oldController;\n  };\n\n  ControllerRef.prototype.insertController = function <C extends Controller>(this: ControllerRef<unknown, C>, parent?: Controller | null, newController?: AnyController<C>, target?: Controller | null, key?: string): C {\n    if (newController !== void 0 && newController !== null) {\n      newController = this.fromAny(newController);\n    } else {\n      const oldController = this.controller;\n      if (oldController === null) {\n        newController = this.createController();\n      } else {\n        newController = oldController;\n      }\n    }\n    if (parent === void 0 || parent === null) {\n      parent = this.parentController;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (key === void 0) {\n      key = this.key;\n    }\n    if (parent !== null && (newController.parent !== parent || newController.key !== key)) {\n      this.insertChild(parent, newController, target, key);\n    }\n    const oldController = this.controller;\n    if (newController !== oldController) {\n      if (oldController !== null) {\n        this.willDetachController(oldController);\n        (this as Mutable<typeof this>).controller = null;\n        this.onDetachController(oldController);\n        this.deinitController(oldController);\n        this.didDetachController(oldController);\n        oldController.remove();\n      }\n      this.willAttachController(newController, target);\n      (this as Mutable<typeof this>).controller = newController;\n      this.onAttachController(newController, target);\n      this.initController(newController);\n      this.didAttachController(newController, target);\n    }\n    return newController;\n  };\n\n  ControllerRef.prototype.removeController = function <C extends Controller>(this: ControllerRef<unknown, C>): C | null {\n    const controller = this.controller;\n    if (controller !== null) {\n      controller.remove();\n    }\n    return controller;\n  };\n\n  ControllerRef.prototype.deleteController = function <C extends Controller>(this: ControllerRef<unknown, C>): C | null {\n    const controller = this.detachController();\n    if (controller !== null) {\n      controller.remove();\n    }\n    return controller;\n  };\n\n  ControllerRef.prototype.bindController = function <C extends Controller>(this: ControllerRef<unknown, C>, controller: Controller, target: Controller | null): void {\n    if (this.binds && this.controller === null) {\n      const newController = this.detectController(controller);\n      if (newController !== null) {\n        this.willAttachController(newController, target);\n        (this as Mutable<typeof this>).controller = newController;\n        this.onAttachController(newController, target);\n        this.initController(newController);\n        this.didAttachController(newController, target);\n      }\n    }\n  };\n\n  ControllerRef.prototype.unbindController = function <C extends Controller>(this: ControllerRef<unknown, C>, controller: Controller): void {\n    if (this.binds) {\n      const oldController = this.detectController(controller);\n      if (oldController !== null && this.controller === oldController) {\n        this.willDetachController(oldController);\n        (this as Mutable<typeof this>).controller = null;\n        this.onDetachController(oldController);\n        this.deinitController(oldController);\n        this.didDetachController(oldController);\n      }\n    }\n  };\n\n  ControllerRef.prototype.detectController = function <C extends Controller>(this: ControllerRef<unknown, C>, controller: Controller): C | null {\n    const key = this.key;\n    if (key !== void 0 && key === controller.key) {\n      return controller as C;\n    }\n    return null;\n  };\n\n  ControllerRef.construct = function <F extends ControllerRef<any, any>>(fastenerClass: {prototype: F}, fastener: F | null, owner: FastenerOwner<F>): F {\n    if (fastener === null) {\n      fastener = function (controller?: AnyController<ControllerRefType<F>> | null, target?: Controller | null, key?: string): ControllerRefType<F> | null | FastenerOwner<F> {\n        if (controller === void 0) {\n          return fastener!.controller;\n        } else {\n          fastener!.setController(controller, target, key);\n          return fastener!.owner;\n        }\n      } as F;\n      delete (fastener as Partial<Mutable<F>>).name; // don't clobber prototype name\n      Object.setPrototypeOf(fastener, fastenerClass.prototype);\n    }\n    fastener = _super.construct(fastenerClass, fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).key = void 0;\n    (fastener as Mutable<typeof fastener>).controller = null;\n    return fastener;\n  };\n\n  ControllerRef.define = function <O, C extends Controller>(className: string, descriptor: ControllerRefDescriptor<O, C>): ControllerRefFactory<ControllerRef<any, C>> {\n    let superClass = descriptor.extends as ControllerRefFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n\n    if (descriptor.key === true) {\n      Object.defineProperty(descriptor, \"key\", {\n        value: className,\n        configurable: true,\n      });\n    } else if (descriptor.key === false) {\n      Object.defineProperty(descriptor, \"key\", {\n        value: void 0,\n        configurable: true,\n      });\n    }\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const fastenerClass = superClass.extend(className, descriptor);\n\n    fastenerClass.construct = function (fastenerClass: {prototype: ControllerRef<any, any>}, fastener: ControllerRef<O, C> | null, owner: O): ControllerRef<O, C> {\n      fastener = superClass!.construct(fastenerClass, fastener, owner);\n      if (affinity !== void 0) {\n        fastener.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        fastener.initInherits(inherits);\n      }\n      return fastener;\n    };\n\n    return fastenerClass;\n  };\n\n  return ControllerRef;\n})(ControllerRelation);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Proto, ObserverType} from \"@swim/util\";\nimport type {FastenerOwner, FastenerFlags} from \"@swim/component\";\nimport type {AnyController, Controller} from \"./Controller\";\nimport {ControllerRelationInit, ControllerRelationClass, ControllerRelation} from \"./ControllerRelation\";\n\n/** @internal */\nexport type ControllerSetType<F extends ControllerSet<any, any>> =\n  F extends ControllerSet<any, infer C> ? C : never;\n\n/** @public */\nexport interface ControllerSetInit<C extends Controller = Controller> extends ControllerRelationInit<C> {\n  extends?: {prototype: ControllerSet<any, any>} | string | boolean | null;\n  key?(controller: C): string | undefined;\n  compare?(a: C, b: C): number;\n\n  sorted?: boolean;\n  willSort?(parent: Controller | null): void;\n  didSort?(parent: Controller | null): void;\n  sortChildren?(parent: Controller): void;\n  compareChildren?(a: Controller, b: Controller): number;\n}\n\n/** @public */\nexport type ControllerSetDescriptor<O = unknown, C extends Controller = Controller, I = {}> = ThisType<ControllerSet<O, C> & I> & ControllerSetInit<C> & Partial<I>;\n\n/** @public */\nexport interface ControllerSetClass<F extends ControllerSet<any, any> = ControllerSet<any, any>> extends ControllerRelationClass<F> {\n  /** @internal */\n  readonly SortedFlag: FastenerFlags;\n\n  /** @internal @override */\n  readonly FlagShift: number;\n  /** @internal @override */\n  readonly FlagMask: FastenerFlags;\n}\n\n/** @public */\nexport interface ControllerSetFactory<F extends ControllerSet<any, any> = ControllerSet<any, any>> extends ControllerSetClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): ControllerSetFactory<F> & I;\n\n  define<O, C extends Controller = Controller>(className: string, descriptor: ControllerSetDescriptor<O, C>): ControllerSetFactory<ControllerSet<any, C>>;\n  define<O, C extends Controller = Controller>(className: string, descriptor: {observes: boolean} & ControllerSetDescriptor<O, C, ObserverType<C>>): ControllerSetFactory<ControllerSet<any, C>>;\n  define<O, C extends Controller = Controller, I = {}>(className: string, descriptor: {implements: unknown} & ControllerSetDescriptor<O, C, I>): ControllerSetFactory<ControllerSet<any, C> & I>;\n  define<O, C extends Controller = Controller, I = {}>(className: string, descriptor: {implements: unknown; observes: boolean} & ControllerSetDescriptor<O, C, I & ObserverType<C>>): ControllerSetFactory<ControllerSet<any, C> & I>;\n\n  <O, C extends Controller = Controller>(descriptor: ControllerSetDescriptor<O, C>): PropertyDecorator;\n  <O, C extends Controller = Controller>(descriptor: {observes: boolean} & ControllerSetDescriptor<O, C, ObserverType<C>>): PropertyDecorator;\n  <O, C extends Controller = Controller, I = {}>(descriptor: {implements: unknown} & ControllerSetDescriptor<O, C, I>): PropertyDecorator;\n  <O, C extends Controller = Controller, I = {}>(descriptor: {implements: unknown; observes: boolean} & ControllerSetDescriptor<O, C, I & ObserverType<C>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface ControllerSet<O = unknown, C extends Controller = Controller> extends ControllerRelation<O, C> {\n  (controller: AnyController<C>): O;\n\n  /** @override */\n  get fastenerType(): Proto<ControllerSet<any, any>>;\n\n  /** @internal */\n  readonly controllers: {readonly [controllerId: number]: C | undefined};\n\n  readonly controllerCount: number;\n\n  hasController(controller: Controller): boolean;\n\n  addController(controller?: AnyController<C>, target?: Controller | null, key?: string): C;\n\n  attachController(controller?: AnyController<C>, target?: Controller | null): C;\n\n  detachController(controller: C): C | null;\n\n  insertController(parent?: Controller | null, controller?: AnyController<C>, target?: Controller | null, key?: string): C;\n\n  removeController(controller: C): C | null;\n\n  deleteController(controller: C): C | null;\n\n  /** @internal @override */\n  bindController(controller: Controller, target: Controller | null): void;\n\n  /** @internal @override */\n  unbindController(controller: Controller): void;\n\n  /** @override */\n  detectController(controller: Controller): C | null;\n\n  /** @internal @protected */\n  key(controller: C): string | undefined;\n\n  get sorted(): boolean;\n\n  /** @internal */\n  initSorted(sorted: boolean): void;\n\n  sort(sorted?: boolean): this;\n\n  /** @protected */\n  willSort(parent: Controller | null): void;\n\n  /** @protected */\n  onSort(parent: Controller | null): void;\n\n  /** @protected */\n  didSort(parent: Controller | null): void;\n\n  /** @internal @protected */\n  sortChildren(parent: Controller): void;\n\n  /** @internal */\n  compareChildren(a: Controller, b: Controller): number;\n\n  /** @internal @protected */\n  compare(a: C, b: C): number;\n}\n\n/** @public */\nexport const ControllerSet = (function (_super: typeof ControllerRelation) {\n  const ControllerSet: ControllerSetFactory = _super.extend(\"ControllerSet\");\n\n  Object.defineProperty(ControllerSet.prototype, \"fastenerType\", {\n    get: function (this: ControllerSet): Proto<ControllerSet<any, any>> {\n      return ControllerSet;\n    },\n    configurable: true,\n  });\n\n  ControllerSet.prototype.hasController = function (this: ControllerSet, controller: Controller): boolean {\n    return this.controllers[controller.uid] !== void 0;\n  };\n\n  ControllerSet.prototype.addController = function <C extends Controller>(this: ControllerSet<unknown, C>, newController?: AnyController<C>, target?: Controller | null, key?: string): C {\n    if (newController !== void 0 && newController !== null) {\n      newController = this.fromAny(newController);\n    } else {\n      newController = this.createController();\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    let parent: Controller | null;\n    if (this.binds && (parent = this.parentController, parent !== null)) {\n      if (key === void 0) {\n        key = this.key(newController);\n      }\n      this.insertChild(parent, newController, target, key);\n    }\n    const controllers = this.controllers as {[comtrollerId: number]: C | undefined};\n    if (controllers[newController.uid] === void 0) {\n      this.willAttachController(newController, target);\n      controllers[newController.uid] = newController;\n      (this as Mutable<typeof this>).controllerCount += 1;\n      this.onAttachController(newController, target);\n      this.initController(newController);\n      this.didAttachController(newController, target);\n    }\n    return newController;\n  };\n\n  ControllerSet.prototype.attachController = function <C extends Controller>(this: ControllerSet<unknown, C>, newController?: AnyController<C>, target?: Controller | null): C {\n    if (newController !== void 0 && newController !== null) {\n      newController = this.fromAny(newController);\n    } else {\n      newController = this.createController();\n    }\n    const controllers = this.controllers as {[comtrollerId: number]: C | undefined};\n    if (controllers[newController.uid] === void 0) {\n      if (target === void 0) {\n        target = null;\n      }\n      this.willAttachController(newController, target);\n      controllers[newController.uid] = newController;\n      (this as Mutable<typeof this>).controllerCount += 1;\n      this.onAttachController(newController, target);\n      this.initController(newController);\n      this.didAttachController(newController, target);\n    }\n    return newController;\n  };\n\n  ControllerSet.prototype.detachController = function <C extends Controller>(this: ControllerSet<unknown, C>, oldController: C): C | null {\n    const controllers = this.controllers as {[comtrollerId: number]: C | undefined};\n    if (controllers[oldController.uid] !== void 0) {\n      this.willDetachController(oldController);\n      (this as Mutable<typeof this>).controllerCount -= 1;\n      delete controllers[oldController.uid];\n      this.onDetachController(oldController);\n      this.deinitController(oldController);\n      this.didDetachController(oldController);\n      return oldController;\n    }\n    return null;\n  };\n\n  ControllerSet.prototype.insertController = function <C extends Controller>(this: ControllerSet<unknown, C>, parent?: Controller | null, newController?: AnyController<C>, target?: Controller | null, key?: string): C {\n    if (newController !== void 0 && newController !== null) {\n      newController = this.fromAny(newController);\n    } else {\n      newController = this.createController();\n    }\n    if (parent === void 0 || parent === null) {\n      parent = this.parentController;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (key === void 0) {\n      key = this.key(newController);\n    }\n    if (parent !== null && (newController.parent !== parent || newController.key !== key)) {\n      this.insertChild(parent, newController, target, key);\n    }\n    const controllers = this.controllers as {[comtrollerId: number]: C | undefined};\n    if (controllers[newController.uid] === void 0) {\n      this.willAttachController(newController, target);\n      controllers[newController.uid] = newController;\n      (this as Mutable<typeof this>).controllerCount += 1;\n      this.onAttachController(newController, target);\n      this.initController(newController);\n      this.didAttachController(newController, target);\n    }\n    return newController;\n  };\n\n  ControllerSet.prototype.removeController = function <C extends Controller>(this: ControllerSet<unknown, C>, controller: C): C | null {\n    if (this.hasController(controller)) {\n      controller.remove();\n      return controller;\n    }\n    return null;\n  };\n\n  ControllerSet.prototype.deleteController = function <C extends Controller>(this: ControllerSet<unknown, C>, controller: C): C | null {\n    const oldController = this.detachController(controller);\n    if (oldController !== null) {\n      oldController.remove();\n    }\n    return oldController;\n  };\n\n  ControllerSet.prototype.bindController = function <C extends Controller>(this: ControllerSet<unknown, C>, controller: Controller, target: Controller | null): void {\n    if (this.binds) {\n      const newController = this.detectController(controller);\n      const controllers = this.controllers as {[comtrollerId: number]: C | undefined};\n      if (newController !== null && controllers[newController.uid] === void 0) {\n        this.willAttachController(newController, target);\n        controllers[newController.uid] = newController;\n        (this as Mutable<typeof this>).controllerCount += 1;\n        this.onAttachController(newController, target);\n        this.initController(newController);\n        this.didAttachController(newController, target);\n      }\n    }\n  };\n\n  ControllerSet.prototype.unbindController = function <C extends Controller>(this: ControllerSet<unknown, C>, controller: Controller): void {\n    if (this.binds) {\n      const oldController = this.detectController(controller);\n      const controllers = this.controllers as {[comtrollerId: number]: C | undefined};\n      if (oldController !== null && controllers[oldController.uid] !== void 0) {\n        this.willDetachController(oldController);\n        (this as Mutable<typeof this>).controllerCount -= 1;\n        delete controllers[oldController.uid];\n        this.onDetachController(oldController);\n        this.deinitController(oldController);\n        this.didDetachController(oldController);\n      }\n    }\n  };\n\n  ControllerSet.prototype.detectController = function <C extends Controller>(this: ControllerSet<unknown, C>, controller: Controller): C | null {\n    if (typeof this.type === \"function\" && controller instanceof this.type) {\n      return controller as C;\n    }\n    return null;\n  };\n\n  ControllerSet.prototype.key = function <C extends Controller>(this: ControllerSet<unknown, C>, controller: C): string | undefined {\n    return void 0;\n  };\n\n  Object.defineProperty(ControllerSet.prototype, \"sorted\", {\n    get(this: ControllerSet): boolean {\n      return (this.flags & ControllerSet.SortedFlag) !== 0;\n    },\n    configurable: true,\n  });\n\n  ControllerSet.prototype.initInherits = function (this: ControllerSet, sorted: boolean): void {\n    if (sorted) {\n      (this as Mutable<typeof this>).flags = this.flags | ControllerSet.SortedFlag;\n    } else {\n      (this as Mutable<typeof this>).flags = this.flags & ~ControllerSet.SortedFlag;\n    }\n  };\n\n  ControllerSet.prototype.sort = function (this: ControllerSet, sorted?: boolean): typeof this {\n    if (sorted === void 0) {\n      sorted = true;\n    }\n    const flags = this.flags;\n    if (sorted && (flags & ControllerSet.SortedFlag) === 0) {\n      const parent = this.parentController;\n      this.willSort(parent);\n      this.setFlags(flags | ControllerSet.SortedFlag);\n      this.onSort(parent);\n      this.didSort(parent);\n    } else if (!sorted && (flags & ControllerSet.SortedFlag) !== 0) {\n      this.setFlags(flags & ~ControllerSet.SortedFlag);\n    }\n    return this;\n  };\n\n  ControllerSet.prototype.willSort = function (this: ControllerSet, parent: Controller | null): void {\n    // hook\n  };\n\n  ControllerSet.prototype.onSort = function (this: ControllerSet, parent: Controller | null): void {\n    if (parent !== null) {\n      this.sortChildren(parent);\n    }\n  };\n\n  ControllerSet.prototype.didSort = function (this: ControllerSet, parent: Controller | null): void {\n    // hook\n  };\n\n  ControllerSet.prototype.sortChildren = function <C extends Controller>(this: ControllerSet<unknown, C>, parent: Controller): void {\n    parent.sortChildren(this.compareChildren.bind(this));\n  };\n\n  ControllerSet.prototype.compareChildren = function <C extends Controller>(this: ControllerSet<unknown, C>, a: Controller, b: Controller): number {\n    const controllers = this.controllers;\n    const x = controllers[a.uid];\n    const y = controllers[b.uid];\n    if (x !== void 0 && y !== void 0) {\n      return this.compare(x, y);\n    } else {\n      return x !== void 0 ? 1 : y !== void 0 ? -1 : 0;\n    }\n  };\n\n  ControllerSet.prototype.compare = function <C extends Controller>(this: ControllerSet<unknown, C>, a: C, b: C): number {\n    return a.uid < b.uid ? -1 : a.uid > b.uid ? 1 : 0;\n  };\n\n  ControllerSet.construct = function <F extends ControllerSet<any, any>>(fastenerClass: {prototype: F}, fastener: F | null, owner: FastenerOwner<F>): F {\n    if (fastener === null) {\n      fastener = function (newController: AnyController<ControllerSetType<F>>): FastenerOwner<F> {\n        fastener!.addController(newController);\n        return fastener!.owner;\n      } as F;\n      delete (fastener as Partial<Mutable<F>>).name; // don't clobber prototype name\n      Object.setPrototypeOf(fastener, fastenerClass.prototype);\n    }\n    fastener = _super.construct(fastenerClass, fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).controllers = {};\n    (fastener as Mutable<typeof fastener>).controllerCount = 0;\n    return fastener;\n  };\n\n  ControllerSet.define = function <O, C extends Controller>(className: string, descriptor: ControllerSetDescriptor<O, C>): ControllerSetFactory<ControllerSet<any, C>> {\n    let superClass = descriptor.extends as ControllerSetFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    const sorted = descriptor.sorted;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n    delete descriptor.sorted;\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const fastenerClass = superClass.extend(className, descriptor);\n\n    fastenerClass.construct = function (fastenerClass: {prototype: ControllerSet<any, any>}, fastener: ControllerSet<O, C> | null, owner: O): ControllerSet<O, C> {\n      fastener = superClass!.construct(fastenerClass, fastener, owner);\n      if (affinity !== void 0) {\n        fastener.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        fastener.initInherits(inherits);\n      }\n      if (sorted !== void 0) {\n        fastener.initSorted(sorted);\n      }\n      return fastener;\n    };\n\n    return fastenerClass;\n  };\n\n  (ControllerSet as Mutable<typeof ControllerSet>).SortedFlag = 1 << (_super.FlagShift + 0);\n\n  (ControllerSet as Mutable<typeof ControllerSet>).FlagShift = _super.FlagShift + 1;\n  (ControllerSet as Mutable<typeof ControllerSet>).FlagMask = (1 << ControllerSet.FlagShift) - 1;\n\n  return ControllerSet;\n})(ControllerRelation);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Proto, ObserverType} from \"@swim/util\";\nimport {FastenerOwner, FastenerInit, FastenerClass, Fastener} from \"@swim/component\";\nimport {Model, AnyTrait, TraitFactory, Trait} from \"@swim/model\";\nimport {AnyView, ViewFactory, View} from \"@swim/view\";\n\n/** @internal */\nexport type TraitViewRefTraitType<F extends TraitViewRef<any, any, any>> =\n  F extends TraitViewRef<any, infer T, any> ? T : never;\n\n/** @internal */\nexport type TraitViewRefViewType<F extends TraitViewRef<any, any, any>> =\n  F extends TraitViewRef<any, any, infer V> ? V : never;\n\n/** @public */\nexport interface TraitViewRefInit<T extends Trait = Trait, V extends View = View> extends FastenerInit {\n  extends?: {prototype: TraitViewRef<any, any, any>} | string | boolean | null;\n\n  traitKey?: string | boolean;\n  traitType?: TraitFactory<T>;\n  bindsTrait?: boolean;\n  observesTrait?: boolean;\n  initTrait?(trait: T): void;\n  willAttachTrait?(trait: T, target: Trait | null): void;\n  didAttachTrait?(trait: T, target: Trait | null): void;\n  deinitTrait?(trait: T): void;\n  willDetachTrait?(trait: T): void;\n  didDetachTrait?(trait: T): void;\n  parentModel?: Model | null;\n  insertChildTrait?(model: Model, trait: T, target: Trait | null, key: string | undefined): void;\n  detectTrait?(trait: Trait): T | null;\n  createTrait?(): T;\n  fromAnyTrait?(value: AnyTrait<T>): T;\n\n  viewKey?: string | boolean;\n  viewType?: ViewFactory<V>;\n  bindsView?: boolean;\n  observesView?: boolean;\n  initView?(view: V): void;\n  willAttachView?(view: V, target: View | null): void;\n  didAttachView?(view: V, target: View | null): void;\n  deinitView?(view: V): void;\n  willDetachView?(view: V): void;\n  didDetachView?(view: V): void;\n  parentView?: View | null;\n  insertChildView?(parent: View, child: V, target: View | null, key: string | undefined): void;\n  detectView?(view: View): V | null;\n  createView?(): V;\n  fromAnyView?(value: AnyView<V>): V;\n}\n\n/** @public */\nexport type TraitViewRefDescriptor<O = unknown, T extends Trait = Trait, V extends View = View, I = {}> = ThisType<TraitViewRef<O, T, V> & I> & TraitViewRefInit<T, V> & Partial<I>;\n\n/** @public */\nexport interface TraitViewRefClass<F extends TraitViewRef<any, any, any> = TraitViewRef<any, any, any>> extends FastenerClass<F> {\n}\n\n/** @public */\nexport interface TraitViewRefFactory<F extends TraitViewRef<any, any, any> = TraitViewRef<any, any, any>> extends TraitViewRefClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): TraitViewRefFactory<F> & I;\n\n  define<O, T extends Trait = Trait, V extends View = View>(className: string, descriptor: TraitViewRefDescriptor<O, T, V>): TraitViewRefFactory<TraitViewRef<any, T, V>>;\n  define<O, T extends Trait = Trait, V extends View = View>(className: string, descriptor: {observesTrait: boolean} & TraitViewRefDescriptor<O, T, V, ObserverType<T>>): TraitViewRefFactory<TraitViewRef<any, T, V>>;\n  define<O, T extends Trait = Trait, V extends View = View>(className: string, descriptor: {observesView: boolean} & TraitViewRefDescriptor<O, T, V, ObserverType<V>>): TraitViewRefFactory<TraitViewRef<any, T, V>>;\n  define<O, T extends Trait = Trait, V extends View = View>(className: string, descriptor: {observesTrait: boolean, observesView: boolean} & TraitViewRefDescriptor<O, T, V, ObserverType<T> & ObserverType<V>>): TraitViewRefFactory<TraitViewRef<any, T, V>>;\n  define<O, T extends Trait = Trait, V extends View = View, I = {}>(className: string, descriptor: {implements: unknown} & TraitViewRefDescriptor<O, T, V, I>): TraitViewRefFactory<TraitViewRef<any, T, V> & I>;\n  define<O, T extends Trait = Trait, V extends View = View, I = {}>(className: string, descriptor: {implements: unknown; observesTrait: boolean} & TraitViewRefDescriptor<O, T, V, I & ObserverType<T>>): TraitViewRefFactory<TraitViewRef<any, T, V> & I>;\n  define<O, T extends Trait = Trait, V extends View = View, I = {}>(className: string, descriptor: {implements: unknown; observesView: boolean} & TraitViewRefDescriptor<O, T, V, I & ObserverType<V>>): TraitViewRefFactory<TraitViewRef<any, T, V> & I>;\n  define<O, T extends Trait = Trait, V extends View = View, I = {}>(className: string, descriptor: {implements: unknown; observesTrait: boolean, observesView: boolean} & TraitViewRefDescriptor<O, T, V, I & ObserverType<T> & ObserverType<V>>): TraitViewRefFactory<TraitViewRef<any, T, V> & I>;\n\n  <O, T extends Trait = Trait, V extends View = View>(descriptor: TraitViewRefDescriptor<O, T, V>): PropertyDecorator;\n  <O, T extends Trait = Trait, V extends View = View>(descriptor: {observesTrait: boolean} & TraitViewRefDescriptor<O, T, V, ObserverType<T>>): PropertyDecorator;\n  <O, T extends Trait = Trait, V extends View = View>(descriptor: {observesView: boolean} & TraitViewRefDescriptor<O, T, V, ObserverType<V>>): PropertyDecorator;\n  <O, T extends Trait = Trait, V extends View = View>(descriptor: {observesTrait: boolean, observesView: boolean} & TraitViewRefDescriptor<O, T, V, ObserverType<T> & ObserverType<V>>): PropertyDecorator;\n  <O, T extends Trait = Trait, V extends View = View, I = {}>(descriptor: {implements: unknown} & TraitViewRefDescriptor<O, T, V, I>): PropertyDecorator;\n  <O, T extends Trait = Trait, V extends View = View, I = {}>(descriptor: {implements: unknown; observesTrait: boolean} & TraitViewRefDescriptor<O, T, V, I & ObserverType<T>>): PropertyDecorator;\n  <O, T extends Trait = Trait, V extends View = View, I = {}>(descriptor: {implements: unknown; observesView: boolean} & TraitViewRefDescriptor<O, T, V, I & ObserverType<V>>): PropertyDecorator;\n  <O, T extends Trait = Trait, V extends View = View, I = {}>(descriptor: {implements: unknown; observesTrait: boolean, observesView: boolean} & TraitViewRefDescriptor<O, T, V, I & ObserverType<T> & ObserverType<V>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface TraitViewRef<O = unknown, T extends Trait = Trait, V extends View = View> extends Fastener<O> {\n  /** @override */\n  get fastenerType(): Proto<TraitViewRef<any, any, any>>;\n\n  /** @protected @override */\n  onInherit(superFastener: Fastener): void;\n\n  readonly trait: T | null;\n\n  getTrait(): T;\n\n  setTrait(trait: AnyTrait<T> | null, target?: Trait | null, key?: string): T | null;\n\n  attachTrait<T2 extends T>(trait: T2 | TraitFactory<T2>, target?: Trait | null): T2;\n  attachTrait(trait: AnyTrait<T>, target?: Trait | null): T;\n  attachTrait(trait?: AnyTrait<T> | null, target?: Trait | null): T | null;\n\n  detachTrait(): T | null;\n\n  /** @protected */\n  initTrait(trait: T): void;\n\n  /** @protected */\n  willAttachTrait(trait: T, target: Trait | null): void;\n\n  /** @protected */\n  onAttachTrait(trait: T, target: Trait | null): void;\n\n  /** @protected */\n  didAttachTrait(trait: T, target: Trait | null): void;\n\n  /** @protected */\n  deinitTrait(trait: T): void;\n\n  /** @protected */\n  willDetachTrait(trait: T): void;\n\n  /** @protected */\n  onDetachTrait(trait: T): void;\n\n  /** @protected */\n  didDetachTrait(trait: T): void;\n\n  insertTrait(model?: Model | null, trait?: AnyTrait<T> | null, target?: Trait | null, key?: string): T | null;\n\n  removeTrait(): T | null;\n\n  deleteTrait(): T | null;\n\n  /** @internal @protected */\n  get parentModel(): Model | null;\n\n  /** @internal @protected */\n  insertChildTrait(model: Model, trait: T, target: Trait | null, key: string | undefined): void;\n\n  /** @internal @override */\n  bindModel(model: Model, targetModel: Model | null): void;\n\n  /** @internal @override */\n  unbindModel(model: Model): void;\n\n  /** @override */\n  detectModel(model: Model): T | null;\n\n  /** @internal */\n  bindTrait(trait: Trait, target: Trait | null): void;\n\n  /** @internal */\n  unbindTrait(trait: Trait): void;\n\n  detectTrait(trait: Trait): T | null;\n\n  createTrait(): T;\n\n  /** @internal @protected */\n  fromAnyTrait(value: AnyTrait<T>): T;\n\n  /** @internal */\n  get traitKey(): string | undefined; // optional prototype field\n\n  /** @internal @protected */\n  get traitType(): TraitFactory<T> | undefined; // optional prototype property\n\n  /** @internal @protected */\n  get bindsTrait(): boolean | undefined; // optional prototype property\n\n  /** @internal @protected */\n  get observesTrait(): boolean | undefined; // optional prototype property\n\n  readonly view: V | null;\n\n  getView(): V;\n\n  setView(view: AnyView<V> | null, target?: View | null, key?: string): V | null;\n\n  attachView<V2 extends V>(view: V2 | ViewFactory<V2>, target?: View | null): V2;\n  attachView(view: AnyView<V>, target?: View | null): V;\n  attachView(view?: AnyView<V> | null, target?: View | null): V | null;\n\n  detachView(): V | null;\n\n  /** @protected */\n  initView(view: V): void;\n\n  /** @protected */\n  willAttachView(view: V, target: View | null): void;\n\n  /** @protected */\n  onAttachView(view: V, target: View | null): void;\n\n  /** @protected */\n  didAttachView(view: V, target: View | null): void;\n\n  /** @protected */\n  deinitView(view: V): void;\n\n  /** @protected */\n  willDetachView(view: V): void;\n\n  /** @protected */\n  onDetachView(view: V): void;\n\n  /** @protected */\n  didDetachView(view: V): void;\n\n  insertView(parent?: View | null, view?: AnyView<V> | null, target?: View | null, key?: string): V | null;\n\n  removeView(): V | null;\n\n  deleteView(): V | null;\n\n  /** @internal @protected */\n  get parentView(): View | null;\n\n  /** @internal @protected */\n  insertChildView(parent: View, child: V, target: View | null, key: string | undefined): void;\n\n  /** @internal */\n  bindView(view: View, target: View | null): void;\n\n  /** @internal */\n  unbindView(view: View): void;\n\n  detectView(view: View): V | null;\n\n  createView(): V;\n\n  /** @internal @protected */\n  fromAnyView(value: AnyView<V>): V;\n\n  /** @internal */\n  get viewKey(): string | undefined; // optional prototype field\n\n  /** @internal @protected */\n  get viewType(): ViewFactory<V> | undefined; // optional prototype property\n\n  /** @internal @protected */\n  get bindsView(): boolean | undefined; // optional prototype property\n\n  /** @internal @protected */\n  get observesView(): boolean | undefined; // optional prototype property\n\n  /** @internal @override */\n  get lazy(): boolean; // prototype property\n\n  /** @internal @override */\n  get static(): string | boolean; // prototype property\n}\n\n/** @public */\nexport const TraitViewRef = (function (_super: typeof Fastener) {\n  const TraitViewRef: TraitViewRefFactory = _super.extend(\"TraitViewRef\");\n\n  Object.defineProperty(TraitViewRef.prototype, \"fastenerType\", {\n    get: function (this: TraitViewRef): Proto<TraitViewRef<any, any, any>> {\n      return TraitViewRef;\n    },\n    configurable: true,\n  });\n\n  TraitViewRef.prototype.onInherit = function (this: TraitViewRef, superFastener: TraitViewRef): void {\n    this.setTrait(superFastener.trait);\n    this.setView(superFastener.view);\n  };\n\n  TraitViewRef.prototype.getTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>): T {\n    const trait = this.trait;\n    if (trait === null) {\n      let message = trait + \" \";\n      if (this.name.length !== 0) {\n        message += this.name + \" \";\n      }\n      message += \"trait\";\n      throw new TypeError(message);\n    }\n    return trait;\n  };\n\n  TraitViewRef.prototype.setTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>, newTrait: AnyTrait<T> | null, target?: Trait | null, key?: string): T | null {\n    if (newTrait !== null) {\n      newTrait = this.fromAnyTrait(newTrait);\n    }\n    let oldTrait = this.trait;\n    if (oldTrait !== newTrait) {\n      if (target === void 0) {\n        target = null;\n      }\n      let model: Model | null;\n      if (this.bindsTrait && (model = this.parentModel, model !== null)) {\n        if (oldTrait !== null && oldTrait.model === model) {\n          if (target === null) {\n            target = oldTrait.nextTrait;\n          }\n          oldTrait.remove();\n        }\n        if (newTrait !== null) {\n          if (key === void 0) {\n            key = this.traitKey;\n          }\n          this.insertChildTrait(model, newTrait, target, key);\n        }\n        oldTrait = this.trait;\n      }\n      if (oldTrait !== newTrait) {\n        if (oldTrait !== null) {\n          this.willDetachTrait(oldTrait);\n          (this as Mutable<typeof this>).trait = null;\n          this.onDetachTrait(oldTrait);\n          this.deinitTrait(oldTrait);\n          this.didDetachTrait(oldTrait);\n        }\n        if (newTrait !== null) {\n          this.willAttachTrait(newTrait, target);\n          (this as Mutable<typeof this>).trait = newTrait;\n          this.onAttachTrait(newTrait, target);\n          this.initTrait(newTrait);\n          this.didAttachTrait(newTrait, target);\n        }\n      }\n    }\n    return oldTrait;\n  };\n\n  TraitViewRef.prototype.attachTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>, newTrait?: AnyTrait<T> | null, target?: Trait | null): T | null {\n    const oldTrait = this.trait;\n    if (newTrait !== void 0 && newTrait !== null) {\n      newTrait = this.fromAnyTrait(newTrait);\n    } else if (oldTrait === null) {\n      newTrait = this.createTrait();\n    } else {\n      newTrait = oldTrait;\n    }\n    if (newTrait !== oldTrait) {\n      if (target === void 0) {\n        target = null;\n      }\n      if (oldTrait !== null) {\n        this.willDetachTrait(oldTrait);\n        (this as Mutable<typeof this>).trait = null;\n        this.onDetachTrait(oldTrait);\n        this.deinitTrait(oldTrait);\n        this.didDetachTrait(oldTrait);\n      }\n      this.willAttachTrait(newTrait, target);\n      (this as Mutable<typeof this>).trait = newTrait;\n      this.onAttachTrait(newTrait, target);\n      this.initTrait(newTrait);\n      this.didAttachTrait(newTrait, target);\n    }\n    return newTrait;\n  };\n\n  TraitViewRef.prototype.detachTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>): T | null {\n    const oldTrait = this.trait;\n    if (oldTrait !== null) {\n      this.willDetachTrait(oldTrait);\n      (this as Mutable<typeof this>).trait = null;\n      this.onDetachTrait(oldTrait);\n      this.deinitTrait(oldTrait);\n      this.didDetachTrait(oldTrait);\n    }\n    return oldTrait;\n  };\n\n  TraitViewRef.prototype.initTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>, trait: T): void {\n    // hook\n  };\n\n  TraitViewRef.prototype.willAttachTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>, trait: T, target: Trait | null): void {\n    // hook\n  };\n\n  TraitViewRef.prototype.onAttachTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>, trait: T, target: Trait | null): void {\n    if (this.observesTrait === true) {\n      trait.observe(this as ObserverType<T>);\n    }\n  };\n\n  TraitViewRef.prototype.didAttachTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>, trait: T, target: Trait | null): void {\n    // hook\n  };\n\n  TraitViewRef.prototype.deinitTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>, trait: T): void {\n    // hook\n  };\n\n  TraitViewRef.prototype.willDetachTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>, trait: T): void {\n    // hook\n  };\n\n  TraitViewRef.prototype.onDetachTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>, trait: T): void {\n    if (this.observesTrait === true) {\n      trait.unobserve(this as ObserverType<T>);\n    }\n  };\n\n  TraitViewRef.prototype.didDetachTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>, trait: T): void {\n    // hook\n  };\n\n  TraitViewRef.prototype.insertTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>, model?: Model | null, newTrait?: AnyTrait<T> | null, target?: Trait | null, key?: string): T | null {\n    if (newTrait !== void 0 && newTrait !== null) {\n      newTrait = this.fromAnyTrait(newTrait);\n    } else {\n      const oldTrait = this.trait;\n      if (oldTrait === null) {\n        newTrait = this.createTrait();\n      } else {\n        newTrait = oldTrait;\n      }\n    }\n    if (model === void 0 || model === null) {\n      model = this.parentModel;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (key === void 0) {\n      key = this.traitKey;\n    }\n    if (model !== null && (newTrait.parent !== model || newTrait.key !== key)) {\n      this.insertChildTrait(model, newTrait, target, key);\n    }\n    const oldTrait = this.trait;\n    if (newTrait !== oldTrait) {\n      if (oldTrait !== null) {\n        this.willDetachTrait(oldTrait);\n        (this as Mutable<typeof this>).trait = null;\n        this.onDetachTrait(oldTrait);\n        this.deinitTrait(oldTrait);\n        this.didDetachTrait(oldTrait);\n        oldTrait.remove();\n      }\n      this.willAttachTrait(newTrait, target);\n      (this as Mutable<typeof this>).trait = newTrait;\n      this.onAttachTrait(newTrait, target);\n      this.initTrait(newTrait);\n      this.didAttachTrait(newTrait, target);\n    }\n    return newTrait;\n  };\n\n  TraitViewRef.prototype.removeTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>): T | null {\n    const trait = this.trait;\n    if (trait !== null) {\n      trait.remove();\n    }\n    return trait;\n  };\n\n  TraitViewRef.prototype.deleteTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>): T | null {\n    const trait = this.detachTrait();\n    if (trait !== null) {\n      trait.remove();\n    }\n    return trait;\n  };\n\n  Object.defineProperty(TraitViewRef.prototype, \"parentModel\", {\n    get(this: TraitViewRef): Model | null {\n      const owner = this.owner;\n      if (owner instanceof Model) {\n        return owner;\n      } else if (owner instanceof Trait) {\n        return owner.model;\n      } else {\n        return null;\n      }\n    },\n    configurable: true,\n  });\n\n  TraitViewRef.prototype.insertChildTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>, model: Model, trait: T, target: Trait | null, key: string | undefined): void {\n    model.insertTrait(trait, target, key);\n  };\n\n  TraitViewRef.prototype.bindModel = function <T extends Trait>(this: TraitViewRef<unknown, T, View>, model: Model, targetModel: Model | null): void {\n    if (this.bindsTrait && this.trait === null) {\n      const newTrait = this.detectModel(model);\n      if (newTrait !== null) {\n        this.willAttachTrait(newTrait, null);\n        (this as Mutable<typeof this>).trait = newTrait;\n        this.onAttachTrait(newTrait, null);\n        this.initTrait(newTrait);\n        this.didAttachTrait(newTrait, null);\n      }\n    }\n  };\n\n  TraitViewRef.prototype.unbindModel = function <T extends Trait>(this: TraitViewRef<unknown, T, View>, model: Model): void {\n    if (this.bindsTrait) {\n      const oldTrait = this.detectModel(model);\n      if (oldTrait !== null && this.trait === oldTrait) {\n        this.willDetachTrait(oldTrait);\n        (this as Mutable<typeof this>).trait = null;\n        this.onDetachTrait(oldTrait);\n        this.deinitTrait(oldTrait);\n        this.didDetachTrait(oldTrait);\n      }\n    }\n  };\n\n  TraitViewRef.prototype.detectModel = function <T extends Trait>(this: TraitViewRef<unknown, T, View>, model: Model): T | null {\n    return null;\n  };\n\n  TraitViewRef.prototype.bindTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>, trait: Trait, target: Trait | null): void {\n    if (this.bindsTrait && this.trait === null) {\n      const newTrait = this.detectTrait(trait);\n      if (newTrait !== null) {\n        this.willAttachTrait(newTrait, target);\n        (this as Mutable<typeof this>).trait = newTrait;\n        this.onAttachTrait(newTrait, target);\n        this.initTrait(newTrait);\n        this.didAttachTrait(newTrait, target);\n      }\n    }\n  };\n\n  TraitViewRef.prototype.unbindTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>, trait: Trait): void {\n    if (this.bindsTrait) {\n      const oldTrait = this.detectTrait(trait);\n      if (oldTrait !== null && this.trait === oldTrait) {\n        this.willDetachTrait(oldTrait);\n        (this as Mutable<typeof this>).trait = null;\n        this.onDetachTrait(oldTrait);\n        this.deinitTrait(oldTrait);\n        this.didDetachTrait(oldTrait);\n      }\n    }\n  };\n\n  TraitViewRef.prototype.detectTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>, trait: Trait): T | null {\n    const key = this.traitKey;\n    if (key !== void 0 && key === trait.key) {\n      return trait as T;\n    }\n    return null;\n  };\n\n  TraitViewRef.prototype.createTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>): T {\n    let trait: T | undefined;\n    const type = this.traitType;\n    if (type !== void 0) {\n      trait = type.create();\n    }\n    if (trait === void 0 || trait === null) {\n      let message = \"Unable to create \";\n      if (this.name.length !== 0) {\n        message += this.name + \" \";\n      }\n      message += \"trait\";\n      throw new Error(message);\n    }\n    return trait;\n  };\n\n  TraitViewRef.prototype.fromAnyTrait = function <T extends Trait>(this: TraitViewRef<unknown, T, View>, value: AnyTrait<T>): T {\n    const type = this.traitType;\n    if (type !== void 0) {\n      return type.fromAny(value);\n    } else {\n      return Trait.fromAny(value) as T;\n    }\n  };\n\n  TraitViewRef.prototype.getView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>): V {\n    const view = this.view;\n    if (view === null) {\n      let message = view + \" \";\n      if (this.name.length !== 0) {\n        message += this.name + \" \";\n      }\n      message += \"view\";\n      throw new TypeError(message);\n    }\n    return view;\n  };\n\n  TraitViewRef.prototype.setView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>, newView: AnyView<V> | null, target?: View | null, key?: string): V | null {\n    if (newView !== null) {\n      newView = this.fromAnyView(newView);\n    }\n    let oldView = this.view;\n    if (oldView !== newView) {\n      if (target === void 0) {\n        target = null;\n      }\n      let parent: View | null;\n      if (this.bindsView && (parent = this.parentView, parent !== null)) {\n        if (oldView !== null && oldView.parent === parent) {\n          if (target === null) {\n            target = oldView.nextSibling;\n          }\n          oldView.remove();\n        }\n        if (newView !== null) {\n          if (key === void 0) {\n            key = this.viewKey;\n          }\n          this.insertChildView(parent, newView, target, key);\n        }\n        oldView = this.view;\n      }\n      if (oldView !== newView) {\n        if (oldView !== null) {\n          this.willDetachView(oldView);\n          (this as Mutable<typeof this>).view = null;\n          this.onDetachView(oldView);\n          this.deinitView(oldView);\n          this.didDetachView(oldView);\n        }\n        if (newView !== null) {\n          this.willAttachView(newView, target);\n          (this as Mutable<typeof this>).view = newView;\n          this.onAttachView(newView, target);\n          this.initView(newView);\n          this.didAttachView(newView, target);\n        }\n      }\n    }\n    return oldView;\n  };\n\n  TraitViewRef.prototype.attachView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>, newView?: AnyView<V> | null, target?: View | null): V | null {\n    const oldView = this.view;\n    if (newView !== void 0 && newView !== null) {\n      newView = this.fromAnyView(newView);\n    } else if (oldView === null) {\n      newView = this.createView();\n    } else {\n      newView = oldView;\n    }\n    if (newView !== oldView) {\n      if (target === void 0) {\n        target = null;\n      }\n      if (oldView !== null) {\n        this.willDetachView(oldView);\n        (this as Mutable<typeof this>).view = null;\n        this.onDetachView(oldView);\n        this.deinitView(oldView);\n        this.didDetachView(oldView);\n      }\n      this.willAttachView(newView, target);\n      (this as Mutable<typeof this>).view = newView;\n      this.onAttachView(newView, target);\n      this.initView(newView);\n      this.didAttachView(newView, target);\n    }\n    return newView;\n  };\n\n  TraitViewRef.prototype.detachView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>): V | null {\n    const oldView = this.view;\n    if (oldView !== null) {\n      this.willDetachView(oldView);\n      (this as Mutable<typeof this>).view = null;\n      this.onDetachView(oldView);\n      this.deinitView(oldView);\n      this.didDetachView(oldView);\n    }\n    return oldView;\n  };\n\n  TraitViewRef.prototype.initView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>, view: V): void {\n    // hook\n  };\n\n  TraitViewRef.prototype.willAttachView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>, view: V, target: View | null): void {\n    // hook\n  };\n\n  TraitViewRef.prototype.onAttachView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>, view: V, target: View | null): void {\n    if (this.observesView === true) {\n      view.observe(this as ObserverType<V>);\n    }\n  };\n\n  TraitViewRef.prototype.didAttachView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>, view: V, target: View | null): void {\n    // hook\n  };\n\n  TraitViewRef.prototype.deinitView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>, view: V): void {\n    // hook\n  };\n\n  TraitViewRef.prototype.willDetachView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>, view: V): void {\n    // hook\n  };\n\n  TraitViewRef.prototype.onDetachView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>, view: V): void {\n    if (this.observesView === true) {\n      view.unobserve(this as ObserverType<V>);\n    }\n  };\n\n  TraitViewRef.prototype.didDetachView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>, view: V): void {\n    // hook\n  };\n\n  TraitViewRef.prototype.insertView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>, parent?: View | null, newView?: AnyView<V> | null, target?: View | null, key?: string): V | null {\n    if (newView !== void 0 && newView !== null) {\n      newView = this.fromAnyView(newView);\n    } else {\n      const oldView = this.view;\n      if (oldView === null) {\n        newView = this.createView();\n      } else {\n        newView = oldView;\n      }\n    }\n    if (parent === void 0 || parent === null) {\n      parent = this.parentView;\n    }\n    if (target === void 0) {\n      target = null;\n    }\n    if (key === void 0) {\n      key = this.viewKey;\n    }\n    if (parent !== null && (newView.parent !== parent || newView.key !== key)) {\n      this.insertChildView(parent, newView, target, key);\n    }\n    const oldView = this.view;\n    if (newView !== oldView) {\n      if (oldView !== null) {\n        this.willDetachView(oldView);\n        (this as Mutable<typeof this>).view = null;\n        this.onDetachView(oldView);\n        this.deinitView(oldView);\n        this.didDetachView(oldView);\n        oldView.remove();\n      }\n      this.willAttachView(newView, target);\n      (this as Mutable<typeof this>).view = newView;\n      this.onAttachView(newView, target);\n      this.initView(newView);\n      this.didAttachView(newView, target);\n    }\n    return newView;\n  };\n\n  TraitViewRef.prototype.removeView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>): V | null {\n    const view = this.view;\n    if (view !== null) {\n      view.remove();\n    }\n    return view;\n  };\n\n  TraitViewRef.prototype.deleteView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>): V | null {\n    const view = this.detachView();\n    if (view !== null) {\n      view.remove();\n    }\n    return view;\n  };\n\n  Object.defineProperty(TraitViewRef.prototype, \"parentView\", {\n    get(this: TraitViewRef): View | null {\n      const owner = this.owner;\n      return owner instanceof View ? owner : null;\n    },\n    configurable: true,\n  });\n\n  TraitViewRef.prototype.insertChildView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>, parent: View, child: V, target: View | null, key: string | undefined): void {\n    parent.insertChild(child, target, key);\n  };\n\n  TraitViewRef.prototype.bindView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>, view: View, target: View | null): void {\n    if (this.bindsView && this.view === null) {\n      const newView = this.detectView(view);\n      if (newView !== null) {\n        this.willAttachView(newView, target);\n        (this as Mutable<typeof this>).view = newView;\n        this.onAttachView(newView, target);\n        this.initView(newView);\n        this.didAttachView(newView, target);\n      }\n    }\n  };\n\n  TraitViewRef.prototype.unbindView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>, view: View): void {\n    if (this.bindsView) {\n      const oldView = this.detectView(view);\n      if (oldView !== null && this.view === oldView) {\n        this.willDetachView(oldView);\n        (this as Mutable<typeof this>).view = null;\n        this.onDetachView(oldView);\n        this.deinitView(oldView);\n        this.didDetachView(oldView);\n      }\n    }\n  };\n\n  TraitViewRef.prototype.detectView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>, view: View): V | null {\n    const key = this.viewKey;\n    if (key !== void 0 && key === view.key) {\n      return view as V;\n    }\n    return null;\n  };\n\n  TraitViewRef.prototype.createView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>): V {\n    let view: V | undefined;\n    const type = this.viewType;\n    if (type !== void 0) {\n      view = type.create();\n    }\n    if (view === void 0 || view === null) {\n      let message = \"Unable to create \";\n      if (this.name.length !== 0) {\n        message += this.name + \" \";\n      }\n      message += \"view\";\n      throw new Error(message);\n    }\n    return view;\n  };\n\n  TraitViewRef.prototype.fromAnyView = function <V extends View>(this: TraitViewRef<unknown, Trait, V>, value: AnyView<V>): V {\n    const type = this.viewType;\n    if (type !== void 0) {\n      return type.fromAny(value);\n    } else {\n      return View.fromAny(value) as V;\n    }\n  };\n\n  Object.defineProperty(TraitViewRef.prototype, \"lazy\", {\n    get: function (this: TraitViewRef): boolean {\n      return false;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(TraitViewRef.prototype, \"static\", {\n    get: function (this: TraitViewRef): string | boolean {\n      return true;\n    },\n    configurable: true,\n  });\n\n  TraitViewRef.construct = function <F extends TraitViewRef<any, any, any>>(fastenerClass: {prototype: F}, fastener: F | null, owner: FastenerOwner<F>): F {\n    fastener = _super.construct(fastenerClass, fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).trait = null;\n    (fastener as Mutable<typeof fastener>).view = null;\n    return fastener;\n  };\n\n  TraitViewRef.define = function <O, T extends Trait, V extends View>(className: string, descriptor: TraitViewRefDescriptor<O, T, V>): TraitViewRefFactory<TraitViewRef<any, T, V>> {\n    let superClass = descriptor.extends as TraitViewRefFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n\n    if (descriptor.traitKey === true) {\n      Object.defineProperty(descriptor, \"traitKey\", {\n        value: className,\n        configurable: true,\n      });\n    } else if (descriptor.traitKey === false) {\n      Object.defineProperty(descriptor, \"traitKey\", {\n        value: void 0,\n        configurable: true,\n      });\n    }\n\n    if (descriptor.viewKey === true) {\n      Object.defineProperty(descriptor, \"viewKey\", {\n        value: className,\n        configurable: true,\n      });\n    } else if (descriptor.viewKey === false) {\n      Object.defineProperty(descriptor, \"viewKey\", {\n        value: void 0,\n        configurable: true,\n      });\n    }\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const fastenerClass = superClass.extend(className, descriptor);\n\n    fastenerClass.construct = function (fastenerClass: {prototype: TraitViewRef<any, any, any>}, fastener: TraitViewRef<O, T, V> | null, owner: O): TraitViewRef<O, T, V> {\n      fastener = superClass!.construct(fastenerClass, fastener, owner);\n      if (affinity !== void 0) {\n        fastener.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        fastener.initInherits(inherits);\n      }\n      return fastener;\n    };\n\n    return fastenerClass;\n  };\n\n  return TraitViewRef;\n})(Fastener);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Proto, ObserverType} from \"@swim/util\";\nimport type {FastenerOwner} from \"@swim/component\";\nimport type {Trait, TraitRef} from \"@swim/model\";\nimport type {Controller} from \"../controller/Controller\";\nimport {ControllerRefInit, ControllerRefClass, ControllerRef} from \"../controller/ControllerRef\";\n\n/** @internal */\nexport type TraitControllerRefType<F extends TraitControllerRef<any, any, any>> =\n  F extends TraitControllerRef<any, any, infer C> ? C : never;\n\n/** @public */\nexport interface TraitControllerRefInit<T extends Trait, C extends Controller = Controller> extends ControllerRefInit<C> {\n  extends?: {prototype: TraitControllerRef<any, any, any>} | string | boolean | null;\n  getTraitRef?(controller: C): TraitRef<any, T>;\n  createController?(trait?: T): C;\n}\n\n/** @public */\nexport type TraitControllerRefDescriptor<O = unknown, T extends Trait = Trait, C extends Controller = Controller, I = {}> = ThisType<TraitControllerRef<O, T, C> & I> & TraitControllerRefInit<T, C> & Partial<I>;\n\n/** @public */\nexport interface TraitControllerRefClass<F extends TraitControllerRef<any, any, any> = TraitControllerRef<any, any, any>> extends ControllerRefClass<F> {\n}\n\n/** @public */\nexport interface TraitControllerRefFactory<F extends TraitControllerRef<any, any, any> = TraitControllerRef<any, any, any>> extends TraitControllerRefClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): TraitControllerRefFactory<F> & I;\n\n  define<O, T extends Trait = Trait, C extends Controller = Controller>(className: string, descriptor: TraitControllerRefDescriptor<O, T, C>): TraitControllerRefFactory<TraitControllerRef<any, T, C>>;\n  define<O, T extends Trait = Trait, C extends Controller = Controller>(className: string, descriptor: {observes: boolean} & TraitControllerRefDescriptor<O, T, C, ObserverType<C>>): TraitControllerRefFactory<TraitControllerRef<any, T, C>>;\n  define<O, T extends Trait = Trait, C extends Controller = Controller, I = {}>(className: string, descriptor: {implements: unknown} & TraitControllerRefDescriptor<O, T, C, I>): TraitControllerRefFactory<TraitControllerRef<any, T, C> & I>;\n  define<O, T extends Trait = Trait, C extends Controller = Controller, I = {}>(className: string, descriptor: {implements: unknown; observes: boolean} & TraitControllerRefDescriptor<O, T, C, I & ObserverType<C>>): TraitControllerRefFactory<TraitControllerRef<any, T, C> & I>;\n\n  <O, T extends Trait = Trait, C extends Controller = Controller>(descriptor: TraitControllerRefDescriptor<O, T, C>): PropertyDecorator;\n  <O, T extends Trait = Trait, C extends Controller = Controller>(descriptor: {observes: boolean} & TraitControllerRefDescriptor<O, T, C, ObserverType<C>>): PropertyDecorator;\n  <O, T extends Trait = Trait, C extends Controller = Controller, I = {}>(descriptor: {implements: unknown} & TraitControllerRefDescriptor<O, T, C, I>): PropertyDecorator;\n  <O, T extends Trait = Trait, C extends Controller = Controller, I = {}>(descriptor: {implements: unknown; observes: boolean} & TraitControllerRefDescriptor<O, T, C, I & ObserverType<C>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface TraitControllerRef<O = unknown, T extends Trait = Trait, C extends Controller = Controller> extends ControllerRef<O, C> {\n  /** @override */\n  get fastenerType(): Proto<TraitControllerRef<any, any, any>>;\n\n  /** @internal */\n  getTraitRef(controller: C): TraitRef<unknown, T>;\n\n  get trait(): T | null;\n\n  setTrait(trait: T | null, targetTrait?: Trait | null, key?: string): C | null;\n\n  removeTrait(trait: T | null): C | null;\n\n  deleteTrait(trait: T | null): C | null;\n\n  createController(trait?: T): C;\n}\n\n/** @public */\nexport const TraitControllerRef = (function (_super: typeof ControllerRef) {\n  const TraitControllerRef: TraitControllerRefFactory = _super.extend(\"TraitControllerRef\");\n\n  Object.defineProperty(TraitControllerRef.prototype, \"fastenerType\", {\n    get: function (this: TraitControllerRef): Proto<TraitControllerRef<any, any, any>> {\n      return TraitControllerRef;\n    },\n    configurable: true,\n  });\n\n  TraitControllerRef.prototype.getTraitRef = function <T extends Trait, C extends Controller>(controller: C): TraitRef<unknown, T> {\n    throw new Error(\"abstract\");\n  };\n\n  Object.defineProperty(TraitControllerRef.prototype, \"trait\", {\n    get: function <T extends Trait>(this: TraitControllerRef<unknown, T, Controller>): T | null {\n      const controller = this.controller;\n      if (controller !== null) {\n        const traitRef = this.getTraitRef(controller);\n        return traitRef.trait;\n      }\n      return null;\n    },\n    configurable: true,\n  });\n\n  TraitControllerRef.prototype.setTrait = function <T extends Trait, C extends Controller>(this: TraitControllerRef<unknown, T, C>, trait: T | null, targetTrait?: Trait | null, key?: string): C | null {\n    let controller = this.controller;\n    if (trait !== null) {\n      if (controller === null) {\n        controller = this.createController(trait);\n      }\n      const traitRef = this.getTraitRef(controller);\n      traitRef.setTrait(trait, targetTrait, key);\n      this.setController(controller, null, key);\n    } else if (controller !== null) {\n      const traitRef = this.getTraitRef(controller);\n      traitRef.setTrait(null);\n    }\n    return controller;\n  };\n\n  TraitControllerRef.prototype.removeTrait = function <T extends Trait, C extends Controller>(this: TraitControllerRef<unknown, T, C>, trait: T | null): C | null {\n    const controller = this.controller;\n    if (controller !== null) {\n      const traitRef = this.getTraitRef(controller);\n      if (traitRef.trait === trait) {\n        controller.remove();\n        return controller;\n      }\n    }\n    return null;\n  };\n\n  TraitControllerRef.prototype.deleteTrait = function <T extends Trait, C extends Controller>(this: TraitControllerRef<unknown, T, C>, trait: T | null): C | null {\n    const controller = this.controller;\n    if (controller !== null) {\n      const traitRef = this.getTraitRef(controller);\n      if (traitRef.trait === trait) {\n        controller.remove();\n        this.setController(null);\n        return controller;\n      }\n    }\n    return null;\n  };\n\n  TraitControllerRef.construct = function <F extends TraitControllerRef<any, any, any>>(fastenerClass: {prototype: F}, fastener: F | null, owner: FastenerOwner<F>): F {\n    fastener = _super.construct(fastenerClass, fastener, owner) as F;\n    return fastener;\n  };\n\n  TraitControllerRef.define = function <O, T extends Trait, C extends Controller>(className: string, descriptor: TraitControllerRefDescriptor<O, T, C>): TraitControllerRefFactory<TraitControllerRef<any, T, C>> {\n    let superClass = descriptor.extends as TraitControllerRefFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n\n    if (descriptor.key === true) {\n      Object.defineProperty(descriptor, \"key\", {\n        value: className,\n        configurable: true,\n      });\n    } else if (descriptor.key === false) {\n      Object.defineProperty(descriptor, \"key\", {\n        value: void 0,\n        configurable: true,\n      });\n    }\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const fastenerClass = superClass.extend(className, descriptor);\n\n    fastenerClass.construct = function (fastenerClass: {prototype: TraitControllerRef<any, any, any>}, fastener: TraitControllerRef<O, T, C> | null, owner: O): TraitControllerRef<O, T, C> {\n      fastener = superClass!.construct(fastenerClass, fastener, owner);\n      if (affinity !== void 0) {\n        fastener.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        fastener.initInherits(inherits);\n      }\n      return fastener;\n    };\n\n    return fastenerClass;\n  };\n\n  return TraitControllerRef;\n})(ControllerRef);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, ObserverType} from \"@swim/util\";\nimport type {FastenerOwner} from \"@swim/component\";\nimport type {Trait, TraitRef} from \"@swim/model\";\nimport type {Controller} from \"../controller/Controller\";\nimport {ControllerSetInit, ControllerSetClass, ControllerSet} from \"../controller/ControllerSet\";\n\n/** @internal */\nexport type TraitControllerSetType<F extends TraitControllerSet<any, any, any>> =\n  F extends TraitControllerSet<any, any, infer C> ? C : never;\n\n/** @public */\nexport interface TraitControllerSetInit<T extends Trait = Trait, C extends Controller = Controller> extends ControllerSetInit<C> {\n  extends?: {prototype: TraitControllerSet<any, any, any>} | string | boolean | null;\n  getTraitRef?(controller: C): TraitRef<any, T>;\n  willAttachControllerTrait?(controller: C, trait: T, targetTrait: Trait | null): void;\n  didAttachControllerTrait?(controller: C, trait: T, targetTrait: Trait | null): void;\n  willDetachControllerTrait?(controller: C, trait: T): void;\n  didDetachControllerTrait?(controller: C, trait: T): void;\n  createController?(trait?: T): C;\n}\n\n/** @public */\nexport type TraitControllerSetDescriptor<O = unknown, T extends Trait = Trait, C extends Controller = Controller, I = {}> = ThisType<TraitControllerSet<O, T, C> & I> & TraitControllerSetInit<T, C> & Partial<I>;\n\n/** @public */\nexport interface TraitControllerSetClass<F extends TraitControllerSet<any, any, any> = TraitControllerSet<any, any, any>> extends ControllerSetClass<F> {\n}\n\n/** @public */\nexport interface TraitControllerSetFactory<F extends TraitControllerSet<any, any, any> = TraitControllerSet<any, any, any>> extends TraitControllerSetClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): TraitControllerSetFactory<F> & I;\n\n  define<O, T extends Trait = Trait, C extends Controller = Controller>(className: string, descriptor: TraitControllerSetDescriptor<O, T, C>): TraitControllerSetFactory<TraitControllerSet<any, T, C>>;\n  define<O, T extends Trait = Trait, C extends Controller = Controller>(className: string, descriptor: {observes: boolean} & TraitControllerSetDescriptor<O, T, C, ObserverType<C>>): TraitControllerSetFactory<TraitControllerSet<any, T, C>>;\n  define<O, T extends Trait = Trait, C extends Controller = Controller, I = {}>(className: string, descriptor: {implements: unknown} & TraitControllerSetDescriptor<O, T, C, I>): TraitControllerSetFactory<TraitControllerSet<any, T, C> & I>;\n  define<O, T extends Trait = Trait, C extends Controller = Controller, I = {}>(className: string, descriptor: {implements: unknown; observes: boolean} & TraitControllerSetDescriptor<O, T, C, I & ObserverType<C>>): TraitControllerSetFactory<TraitControllerSet<any, T, C> & I>;\n\n  <O, T extends Trait = Trait, C extends Controller = Controller>(descriptor: TraitControllerSetDescriptor<O, T, C>): PropertyDecorator;\n  <O, T extends Trait = Trait, C extends Controller = Controller>(descriptor: {observes: boolean} & TraitControllerSetDescriptor<O, T, C, ObserverType<C>>): PropertyDecorator;\n  <O, T extends Trait = Trait, C extends Controller = Controller, I = {}>(descriptor: {implements: unknown} & TraitControllerSetDescriptor<O, T, C, I>): PropertyDecorator;\n  <O, T extends Trait = Trait, C extends Controller = Controller, I = {}>(descriptor: {implements: unknown; observes: boolean} & TraitControllerSetDescriptor<O, T, C, I & ObserverType<C>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface TraitControllerSet<O = unknown, T extends Trait = Trait, C extends Controller = Controller> extends ControllerSet<O, C> {\n  /** @internal */\n  readonly traitControllers: {readonly [traitId: number]: C | undefined};\n\n  /** @internal */\n  getTraitRef(controller: C): TraitRef<unknown, T>;\n\n  hasTraitController(trait: Trait): boolean;\n\n  addTraitController(trait: T, targetTrait?: Trait | null, key?: string): C;\n\n  removeTraitController(trait: T): C | null;\n\n  deleteTraitController(trait: T): C | null;\n\n  attachControllerTrait(controller: C, trait: T, targetTrait?: Trait | null): C;\n\n  /** @protected */\n  initControllerTrait(controller: C, trait: T): void;\n\n  /** @protected */\n  willAttachControllerTrait(controller: C, trait: T, targetTrait: Trait | null): void;\n\n  /** @protected */\n  onAttachControllerTrait(controller: C, trait: T, targetTrait: Trait | null): void;\n\n  /** @protected */\n  didAttachControllerTrait(controller: C, trait: T, targetTrait: Trait | null): void;\n\n  detachControllerTrait(controller: C, trait: T): C | null;\n\n  /** @protected */\n  deinitControllerTrait(controller: C, trait: T): void;\n\n  /** @protected */\n  willDetachControllerTrait(controller: C, trait: T): void;\n\n  /** @protected */\n  onDetachControllerTrait(controller: C, trait: T): void;\n\n  /** @protected */\n  didDetachControllerTrait(controller: C, trait: T): void;\n\n  /** @protected @override */\n  onAttachController(controller: C, targetController: Controller | null): void;\n\n  /** @protected @override */\n  onDetachController(controller: C): void;\n\n  createController(trait?: T): C;\n}\n\n/** @public */\nexport const TraitControllerSet = (function (_super: typeof ControllerSet) {\n  const TraitControllerSet: TraitControllerSetFactory = _super.extend(\"TraitControllerSet\");\n\n  TraitControllerSet.prototype.getTraitRef = function <T extends Trait, C extends Controller>(controller: C): TraitRef<unknown, T> {\n    throw new Error(\"missing implementation\");\n  };\n\n  TraitControllerSet.prototype.hasTraitController = function (this: TraitControllerSet, trait: Trait): boolean {\n    return this.traitControllers[trait.uid] !== void 0;\n  };\n\n  TraitControllerSet.prototype.addTraitController = function <T extends Trait, C extends Controller>(this: TraitControllerSet<unknown, T, C>, trait: T, targetTrait?: Trait | null, key?: string): C {\n    const traitControllers = this.traitControllers as {[traitId: number]: C | undefined};\n    let controller = traitControllers[trait.uid];\n    if (controller === void 0) {\n      controller = this.createController(trait);\n      const traitRef = this.getTraitRef(controller);\n      traitRef.setTrait(trait, targetTrait, key);\n      const targetController = targetTrait !== void 0 && targetTrait !== null ? traitControllers[targetTrait.uid] : void 0;\n      this.addController(controller, targetController, key);\n    }\n    return controller;\n  };\n\n  TraitControllerSet.prototype.removeTraitController = function <T extends Trait, C extends Controller>(this: TraitControllerSet<unknown, T, C>, trait: T): C | null {\n    const controllers = this.controllers;\n    for (const controllerId in controllers) {\n      const controller = controllers[controllerId]!;\n      const traitRef = this.getTraitRef(controller);\n      if (traitRef.trait === trait) {\n        this.removeController(controller);\n        return controller;\n      }\n    }\n    return null;\n  };\n\n  TraitControllerSet.prototype.deleteTraitController = function <T extends Trait, C extends Controller>(this: TraitControllerSet<unknown, T, C>, trait: T): C | null {\n    const controllers = this.controllers;\n    for (const controllerId in controllers) {\n      const controller = controllers[controllerId]!;\n      const traitRef = this.getTraitRef(controller);\n      if (traitRef.trait === trait) {\n        this.deleteController(controller);\n        return controller;\n      }\n    }\n    return null;\n  };\n\n  TraitControllerSet.prototype.attachControllerTrait = function <T extends Trait, C extends Controller>(this: TraitControllerSet<unknown, T, C>, controller: C, trait: T, targetTrait?: Trait | null): C {\n    const traitControllers = this.traitControllers as {[traitId: number]: C | undefined};\n    let traitController = traitControllers[trait.uid];\n    if (traitController === void 0) {\n      traitController = controller;\n      if (targetTrait === void 0) {\n        targetTrait = null;\n      }\n      this.willAttachControllerTrait(traitController, trait, targetTrait);\n      traitControllers[trait.uid] = traitController;\n      (this as Mutable<typeof this>).controllerCount += 1;\n      this.onAttachControllerTrait(traitController, trait, targetTrait);\n      this.initControllerTrait(traitController, trait);\n      this.didAttachControllerTrait(traitController, trait, targetTrait);\n    }\n    return traitController;\n  };\n\n  TraitControllerSet.prototype.detachControllerTrait = function <T extends Trait, C extends Controller>(this: TraitControllerSet<unknown, T, C>, controller: C, trait: T): C | null {\n    const traitControllers = this.traitControllers as {[comtroltraitIdltraitIderId: number]: C | undefined};\n    const traitController = traitControllers[trait.uid];\n    if (traitController !== void 0) {\n      this.willDetachControllerTrait(traitController, trait);\n      (this as Mutable<typeof this>).controllerCount -= 1;\n      delete traitControllers[trait.uid];\n      this.onDetachControllerTrait(traitController, trait);\n      this.deinitControllerTrait(traitController, trait);\n      this.didDetachControllerTrait(traitController, trait);\n      return traitController;\n    }\n    return null;\n  };\n\n  TraitControllerSet.prototype.initControllerTrait = function <T extends Trait, C extends Controller>(this: TraitControllerSet<unknown, T, C>, controller: C, trait: T): void {\n    // hook\n  };\n\n  TraitControllerSet.prototype.willAttachControllerTrait = function <T extends Trait, C extends Controller>(this: TraitControllerSet<unknown, T, C>, controller: C, trait: T, targetTrait: Trait | null): void {\n    // hook\n  };\n\n  TraitControllerSet.prototype.onAttachControllerTrait = function <T extends Trait, C extends Controller>(this: TraitControllerSet<unknown, T, C>, controller: C, trait: T, targetTrait: Trait | null): void {\n    // hook\n  };\n\n  TraitControllerSet.prototype.didAttachControllerTrait = function <T extends Trait, C extends Controller>(this: TraitControllerSet<unknown, T, C>, controller: C, trait: T, targetTrait: Trait | null): void {\n    // hook\n  };\n\n  TraitControllerSet.prototype.deinitControllerTrait = function <T extends Trait, C extends Controller>(this: TraitControllerSet<unknown, T, C>, controller: C, trait: T): void {\n    // hook\n  };\n\n  TraitControllerSet.prototype.willDetachControllerTrait = function <T extends Trait, C extends Controller>(this: TraitControllerSet<unknown, T, C>, controller: C, trait: T): void {\n    // hook\n  };\n\n  TraitControllerSet.prototype.onDetachControllerTrait = function <T extends Trait, C extends Controller>(this: TraitControllerSet<unknown, T, C>, controller: C, trait: T): void {\n    // hook\n  };\n\n  TraitControllerSet.prototype.didDetachControllerTrait = function <T extends Trait, C extends Controller>(this: TraitControllerSet<unknown, T, C>, controller: C, trait: T): void {\n    // hook\n  };\n\n  TraitControllerSet.prototype.onAttachController = function <T extends Trait, C extends Controller>(this: TraitControllerSet<unknown, T, C>, controller: C, targetController: Controller | null): void {\n    const trait = this.getTraitRef(controller).trait;\n    if (trait !== null) {\n      const targetTrait = targetController !== null && this.hasController(targetController) ? this.getTraitRef(targetController as C).trait : null;\n      this.attachControllerTrait(controller, trait, targetTrait);\n    }\n    ControllerSet.prototype.onAttachController.call(this, controller, targetController);\n  };\n\n  TraitControllerSet.prototype.onDetachController = function <T extends Trait, C extends Controller>(this: TraitControllerSet<unknown, T, C>, controller: C): void {\n    ControllerSet.prototype.onDetachController.call(this, controller);\n    const trait = this.getTraitRef(controller).trait;\n    if (trait !== null) {\n      this.detachControllerTrait(controller, trait);\n    }\n  };\n\n  TraitControllerSet.construct = function <F extends TraitControllerSet<any, any, any>>(fastenerClass: {prototype: F}, fastener: F | null, owner: FastenerOwner<F>): F {\n    fastener = _super.construct(fastenerClass, fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).traitControllers = {};\n    return fastener;\n  };\n\n  TraitControllerSet.define = function <O, T extends Trait, C extends Controller>(className: string, descriptor: TraitControllerSetDescriptor<O, T, C>): TraitControllerSetFactory<TraitControllerSet<any, T, C>> {\n    let superClass = descriptor.extends as TraitControllerSetFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    const sorted = descriptor.sorted;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n    delete descriptor.sorted;\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const fastenerClass = superClass.extend(className, descriptor);\n\n    fastenerClass.construct = function (fastenerClass: {prototype: TraitControllerSet<any, any, any>}, fastener: TraitControllerSet<O, T, C> | null, owner: O): TraitControllerSet<O, T, C> {\n      fastener = superClass!.construct(fastenerClass, fastener, owner);\n      if (affinity !== void 0) {\n        fastener.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        fastener.initInherits(inherits);\n      }\n      if (sorted !== void 0) {\n        fastener.initSorted(sorted);\n      }\n      return fastener;\n    };\n\n    return fastenerClass;\n  };\n\n  return TraitControllerSet;\n})(ControllerSet);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Proto, ObserverType} from \"@swim/util\";\nimport type {FastenerOwner} from \"@swim/component\";\nimport type {Trait} from \"@swim/model\";\nimport type {View} from \"@swim/view\";\nimport type {Controller} from \"../controller/Controller\";\nimport {ControllerRefInit, ControllerRefClass, ControllerRef} from \"../controller/ControllerRef\";\nimport type {TraitViewRef} from \"./TraitViewRef\";\n\n/** @internal */\nexport type TraitViewControllerRefType<F extends TraitViewControllerRef<any, any, any, any>> =\n  F extends TraitViewControllerRef<any, any, any, infer C> ? C : never;\n\n/** @public */\nexport interface TraitViewControllerRefInit<T extends Trait, V extends View, C extends Controller = Controller> extends ControllerRefInit<C> {\n  extends?: {prototype: TraitViewControllerRef<any, any, any, any>} | string | boolean | null;\n  getTraitViewRef?(controller: C): TraitViewRef<any, T, V>;\n  createController?(trait?: T): C;\n  parentView?: View | null;\n}\n\n/** @public */\nexport type TraitViewControllerRefDescriptor<O = unknown, T extends Trait = Trait, V extends View = View, C extends Controller = Controller, I = {}> = ThisType<TraitViewControllerRef<O, T, V, C> & I> & TraitViewControllerRefInit<T, V, C> & Partial<I>;\n\n/** @public */\nexport interface TraitViewControllerRefClass<F extends TraitViewControllerRef<any, any, any, any> = TraitViewControllerRef<any, any, any, any>> extends ControllerRefClass<F> {\n}\n\n/** @public */\nexport interface TraitViewControllerRefFactory<F extends TraitViewControllerRef<any, any, any, any> = TraitViewControllerRef<any, any, any, any>> extends TraitViewControllerRefClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): TraitViewControllerRefFactory<F> & I;\n\n  define<O, T extends Trait = Trait, V extends View = View, C extends Controller = Controller>(className: string, descriptor: TraitViewControllerRefDescriptor<O, T, V, C>): TraitViewControllerRefFactory<TraitViewControllerRef<any, T, V, C>>;\n  define<O, T extends Trait = Trait, V extends View = View, C extends Controller = Controller>(className: string, descriptor: {observes: boolean} & TraitViewControllerRefDescriptor<O, T, V, C, ObserverType<C>>): TraitViewControllerRefFactory<TraitViewControllerRef<any, T, V, C>>;\n  define<O, T extends Trait = Trait, V extends View = View, C extends Controller = Controller, I = {}>(className: string, descriptor: {implements: unknown} & TraitViewControllerRefDescriptor<O, T, V, C, I>): TraitViewControllerRefFactory<TraitViewControllerRef<any, T, V, C> & I>;\n  define<O, T extends Trait = Trait, V extends View = View, C extends Controller = Controller, I = {}>(className: string, descriptor: {implements: unknown; observes: boolean} & TraitViewControllerRefDescriptor<O, T, V, C, I & ObserverType<C>>): TraitViewControllerRefFactory<TraitViewControllerRef<any, T, V, C> & I>;\n\n  <O, T extends Trait = Trait, V extends View = View, C extends Controller = Controller>(descriptor: TraitViewControllerRefDescriptor<O, T, V, C>): PropertyDecorator;\n  <O, T extends Trait = Trait, V extends View = View, C extends Controller = Controller>(descriptor: {observes: boolean} & TraitViewControllerRefDescriptor<O, T, V, C, ObserverType<C>>): PropertyDecorator;\n  <O, T extends Trait = Trait, V extends View = View, C extends Controller = Controller, I = {}>(descriptor: {implements: unknown} & TraitViewControllerRefDescriptor<O, T, V, C, I>): PropertyDecorator;\n  <O, T extends Trait = Trait, V extends View = View, C extends Controller = Controller, I = {}>(descriptor: {implements: unknown; observes: boolean} & TraitViewControllerRefDescriptor<O, T, V, C, I & ObserverType<C>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface TraitViewControllerRef<O = unknown, T extends Trait = Trait, V extends View = View, C extends Controller = Controller> extends ControllerRef<O, C> {\n  /** @override */\n  get fastenerType(): Proto<TraitViewControllerRef<any, any, any, any>>;\n\n  /** @internal */\n  getTraitViewRef(controller: C): TraitViewRef<unknown, T, V>;\n\n  get trait(): T | null;\n\n  setTrait(trait: T | null, targetTrait?: Trait | null, key?: string): C | null;\n\n  removeTrait(trait: T | null): C | null;\n\n  deleteTrait(trait: T | null): C | null;\n\n  get view(): V | null;\n\n  createController(trait?: T): C;\n\n  /** @internal @protected */\n  get parentView(): View | null; // optional prototype property\n}\n\n/** @public */\nexport const TraitViewControllerRef = (function (_super: typeof ControllerRef) {\n  const TraitViewControllerRef: TraitViewControllerRefFactory = _super.extend(\"TraitViewControllerRef\");\n\n  Object.defineProperty(TraitViewControllerRef.prototype, \"fastenerType\", {\n    get: function (this: TraitViewControllerRef): Proto<TraitViewControllerRef<any, any, any, any>> {\n      return TraitViewControllerRef;\n    },\n    configurable: true,\n  });\n\n  TraitViewControllerRef.prototype.getTraitViewRef = function <T extends Trait, V extends View, C extends Controller>(controller: C): TraitViewRef<unknown, T, V> {\n    throw new Error(\"abstract\");\n  };\n\n  Object.defineProperty(TraitViewControllerRef.prototype, \"trait\", {\n    get: function <T extends Trait>(this: TraitViewControllerRef<unknown, T, View, Controller>): T | null {\n      const controller = this.controller;\n      if (controller !== null) {\n        const traitViewRef = this.getTraitViewRef(controller);\n        return traitViewRef.trait;\n      }\n      return null;\n    },\n    configurable: true,\n  });\n\n  TraitViewControllerRef.prototype.setTrait = function <T extends Trait, V extends View, C extends Controller>(this: TraitViewControllerRef<unknown, T, V, C>, trait: T | null, targetTrait?: Trait | null, key?: string): C | null {\n    let controller = this.controller;\n    if (trait !== null) {\n      if (controller === null) {\n        controller = this.createController(trait);\n      }\n      const traitViewRef = this.getTraitViewRef(controller);\n      traitViewRef.setTrait(trait, targetTrait, key);\n      this.setController(controller, null, key);\n      if (traitViewRef.view === null) {\n        const view = traitViewRef.createView();\n        traitViewRef.insertView(this.parentView, view, null, key);\n      }\n    } else if (controller !== null) {\n      const traitViewRef = this.getTraitViewRef(controller);\n      traitViewRef.setTrait(null);\n    }\n    return controller;\n  };\n\n  TraitViewControllerRef.prototype.removeTrait = function <T extends Trait, C extends Controller>(this: TraitViewControllerRef<unknown, T, View, C>, trait: T | null): C | null {\n    const controller = this.controller;\n    if (controller !== null) {\n      const traitViewRef = this.getTraitViewRef(controller);\n      if (traitViewRef.trait === trait) {\n        controller.remove();\n        return controller;\n      }\n    }\n    return null;\n  };\n\n  TraitViewControllerRef.prototype.deleteTrait = function <T extends Trait, C extends Controller>(this: TraitViewControllerRef<unknown, T, View, C>, trait: T | null): C | null {\n    const controller = this.controller;\n    if (controller !== null) {\n      const traitViewRef = this.getTraitViewRef(controller);\n      if (traitViewRef.trait === trait) {\n        controller.remove();\n        this.setController(null);\n        return controller;\n      }\n    }\n    return null;\n  };\n\n  Object.defineProperty(TraitViewControllerRef.prototype, \"view\", {\n    get: function <V extends View>(this: TraitViewControllerRef<unknown, Trait, V, Controller>): V | null {\n      const controller = this.controller;\n      if (controller !== null) {\n        const traitViewRef = this.getTraitViewRef(controller);\n        return traitViewRef.view;\n      }\n      return null;\n    },\n    configurable: true,\n  });\n\n  Object.defineProperty(TraitViewControllerRef.prototype, \"parentView\", {\n    get: function (this: TraitViewControllerRef): View | null {\n      return null;\n    },\n    configurable: true,\n  });\n\n  TraitViewControllerRef.construct = function <F extends TraitViewControllerRef<any, any, any, any>>(fastenerClass: {prototype: F}, fastener: F | null, owner: FastenerOwner<F>): F {\n    fastener = _super.construct(fastenerClass, fastener, owner) as F;\n    return fastener;\n  };\n\n  TraitViewControllerRef.define = function <O, T extends Trait, V extends View, C extends Controller>(className: string, descriptor: TraitViewControllerRefDescriptor<O, T, V, C>): TraitViewControllerRefFactory<TraitViewControllerRef<any, T, V, C>> {\n    let superClass = descriptor.extends as TraitViewControllerRefFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n\n    if (descriptor.key === true) {\n      Object.defineProperty(descriptor, \"key\", {\n        value: className,\n        configurable: true,\n      });\n    } else if (descriptor.key === false) {\n      Object.defineProperty(descriptor, \"key\", {\n        value: void 0,\n        configurable: true,\n      });\n    }\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const fastenerClass = superClass.extend(className, descriptor);\n\n    fastenerClass.construct = function (fastenerClass: {prototype: TraitViewControllerRef<any, any, any, any>}, fastener: TraitViewControllerRef<O, T, V, C> | null, owner: O): TraitViewControllerRef<O, T, V, C> {\n      fastener = superClass!.construct(fastenerClass, fastener, owner);\n      if (affinity !== void 0) {\n        fastener.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        fastener.initInherits(inherits);\n      }\n      return fastener;\n    };\n\n    return fastenerClass;\n  };\n\n  return TraitViewControllerRef;\n})(ControllerRef);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, ObserverType} from \"@swim/util\";\nimport type {FastenerOwner} from \"@swim/component\";\nimport type {Trait} from \"@swim/model\";\nimport type {View} from \"@swim/view\";\nimport type {Controller} from \"../controller/Controller\";\nimport {ControllerSetInit, ControllerSetClass, ControllerSet} from \"../controller/ControllerSet\";\nimport type {TraitViewRef} from \"./TraitViewRef\";\n\n/** @internal */\nexport type TraitViewControllerSetType<F extends TraitViewControllerSet<any, any, any, any>> =\n  F extends TraitViewControllerSet<any, any, any, infer C> ? C : never;\n\n/** @public */\nexport interface TraitViewControllerSetInit<T extends Trait = Trait, V extends View = View, C extends Controller = Controller> extends ControllerSetInit<C> {\n  extends?: {prototype: TraitViewControllerSet<any, any, any, any>} | string | boolean | null;\n  getTraitViewRef?(controller: C): TraitViewRef<any, T, V>;\n  willAttachControllerTrait?(controller: C, trait: T, targetTrait: Trait | null): void;\n  didAttachControllerTrait?(controller: C, trait: T, targetTrait: Trait | null): void;\n  willDetachControllerTrait?(controller: C, trait: T): void;\n  didDetachControllerTrait?(controller: C, trait: T): void;\n  createController?(trait?: T): C;\n  parentView?: View | null;\n}\n\n/** @public */\nexport type TraitViewControllerSetDescriptor<O = unknown, T extends Trait = Trait, V extends View = View, C extends Controller = Controller, I = {}> = ThisType<TraitViewControllerSet<O, T, V, C> & I> & TraitViewControllerSetInit<T, V, C> & Partial<I>;\n\n/** @public */\nexport interface TraitViewControllerSetClass<F extends TraitViewControllerSet<any, any, any, any> = TraitViewControllerSet<any, any, any, any>> extends ControllerSetClass<F> {\n}\n\n/** @public */\nexport interface TraitViewControllerSetFactory<F extends TraitViewControllerSet<any, any, any, any> = TraitViewControllerSet<any, any, any, any>> extends TraitViewControllerSetClass<F> {\n  extend<I = {}>(className: string, classMembers?: Partial<I> | null): TraitViewControllerSetFactory<F> & I;\n\n  define<O, T extends Trait = Trait, V extends View = View, C extends Controller = Controller>(className: string, descriptor: TraitViewControllerSetDescriptor<O, T, V, C>): TraitViewControllerSetFactory<TraitViewControllerSet<any, T, V, C>>;\n  define<O, T extends Trait = Trait, V extends View = View, C extends Controller = Controller>(className: string, descriptor: {observes: boolean} & TraitViewControllerSetDescriptor<O, T, V, C, ObserverType<C>>): TraitViewControllerSetFactory<TraitViewControllerSet<any, T, V, C>>;\n  define<O, T extends Trait = Trait, V extends View = View, C extends Controller = Controller, I = {}>(className: string, descriptor: {implements: unknown} & TraitViewControllerSetDescriptor<O, T, V, C, I>): TraitViewControllerSetFactory<TraitViewControllerSet<any, T, V, C> & I>;\n  define<O, T extends Trait = Trait, V extends View = View, C extends Controller = Controller, I = {}>(className: string, descriptor: {implements: unknown; observes: boolean} & TraitViewControllerSetDescriptor<O, T, V, C, I & ObserverType<C>>): TraitViewControllerSetFactory<TraitViewControllerSet<any, T, V, C> & I>;\n\n  <O, T extends Trait = Trait, V extends View = View, C extends Controller = Controller>(descriptor: TraitViewControllerSetDescriptor<O, T, V, C>): PropertyDecorator;\n  <O, T extends Trait = Trait, V extends View = View, C extends Controller = Controller>(descriptor: {observes: boolean} & TraitViewControllerSetDescriptor<O, T, V, C, ObserverType<C>>): PropertyDecorator;\n  <O, T extends Trait = Trait, V extends View = View, C extends Controller = Controller, I = {}>(descriptor: {implements: unknown} & TraitViewControllerSetDescriptor<O, T, V, C, I>): PropertyDecorator;\n  <O, T extends Trait = Trait, V extends View = View, C extends Controller = Controller, I = {}>(descriptor: {implements: unknown; observes: boolean} & TraitViewControllerSetDescriptor<O, T, V, C, I & ObserverType<C>>): PropertyDecorator;\n}\n\n/** @public */\nexport interface TraitViewControllerSet<O = unknown, T extends Trait = Trait, V extends View = View, C extends Controller = Controller> extends ControllerSet<O, C> {\n  /** @internal */\n  readonly traitControllers: {readonly [traitId: number]: C | undefined};\n\n  /** @internal */\n  getTraitViewRef(controller: C): TraitViewRef<unknown, T, V>;\n\n  hasTraitController(trait: Trait): boolean;\n\n  addTraitController(trait: T, targetTrait?: Trait | null, key?: string): C;\n\n  removeTraitController(trait: T): C | null;\n\n  deleteTraitController(trait: T): C | null;\n\n  attachControllerTrait(controller: C, trait: T, targetTrait?: Trait | null): C;\n\n  /** @protected */\n  initControllerTrait(controller: C, trait: T): void;\n\n  /** @protected */\n  willAttachControllerTrait(controller: C, trait: T, targetTrait: Trait | null): void;\n\n  /** @protected */\n  onAttachControllerTrait(controller: C, trait: T, targetTrait: Trait | null): void;\n\n  /** @protected */\n  didAttachControllerTrait(controller: C, trait: T, targetTrait: Trait | null): void;\n\n  detachControllerTrait(controller: C, trait: T): C | null;\n\n  /** @protected */\n  deinitControllerTrait(controller: C, trait: T): void;\n\n  /** @protected */\n  willDetachControllerTrait(controller: C, trait: T): void;\n\n  /** @protected */\n  onDetachControllerTrait(controller: C, trait: T): void;\n\n  /** @protected */\n  didDetachControllerTrait(controller: C, trait: T): void;\n\n  /** @protected @override */\n  onAttachController(controller: C, targetController: Controller | null): void;\n\n  /** @protected @override */\n  onDetachController(controller: C): void;\n\n  createController(trait?: T): C;\n\n  /** @internal @protected */\n  get parentView(): View | null; // optional prototype property\n}\n\n/** @public */\nexport const TraitViewControllerSet = (function (_super: typeof ControllerSet) {\n  const TraitViewControllerSet: TraitViewControllerSetFactory = _super.extend(\"TraitViewControllerSet\");\n\n  TraitViewControllerSet.prototype.getTraitViewRef = function <T extends Trait, V extends View, C extends Controller>(controller: C): TraitViewRef<unknown, T, V> {\n    throw new Error(\"missing implementation\");\n  };\n\n  TraitViewControllerSet.prototype.hasTraitController = function (this: TraitViewControllerSet, trait: Trait): boolean {\n    return this.traitControllers[trait.uid] !== void 0;\n  };\n\n  TraitViewControllerSet.prototype.addTraitController = function <T extends Trait, V extends View, C extends Controller>(this: TraitViewControllerSet<unknown, T, V, C>, trait: T, targetTrait?: Trait | null, key?: string): C {\n    const traitControllers = this.traitControllers as {[traitId: number]: C | undefined};\n    let controller = traitControllers[trait.uid];\n    if (controller === void 0) {\n      controller = this.createController(trait);\n      const traitViewRef = this.getTraitViewRef(controller);\n      traitViewRef.setTrait(trait, targetTrait, key);\n      const targetController = targetTrait !== void 0 && targetTrait !== null ? traitControllers[targetTrait.uid] : void 0;\n      this.addController(controller, targetController, key);\n      if (traitViewRef.view === null) {\n        const view = traitViewRef.createView();\n        const targetView = targetController !== void 0 ? this.getTraitViewRef(targetController).view : null;\n        traitViewRef.insertView(this.parentView, view, targetView, key);\n      }\n    }\n    return controller;\n  };\n\n  TraitViewControllerSet.prototype.removeTraitController = function <T extends Trait, C extends Controller>(this: TraitViewControllerSet<unknown, T, View, C>, trait: T): C | null {\n    const controllers = this.controllers;\n    for (const controllerId in controllers) {\n      const controller = controllers[controllerId]!;\n      const traitViewRef = this.getTraitViewRef(controller);\n      if (traitViewRef.trait === trait) {\n        this.removeController(controller);\n        return controller;\n      }\n    }\n    return null;\n  };\n\n  TraitViewControllerSet.prototype.deleteTraitController = function <T extends Trait, C extends Controller>(this: TraitViewControllerSet<unknown, T, View, C>, trait: T): C | null {\n    const controllers = this.controllers;\n    for (const controllerId in controllers) {\n      const controller = controllers[controllerId]!;\n      const traitViewRef = this.getTraitViewRef(controller);\n      if (traitViewRef.trait === trait) {\n        this.deleteController(controller);\n        return controller;\n      }\n    }\n    return null;\n  };\n\n  TraitViewControllerSet.prototype.attachControllerTrait = function <T extends Trait, C extends Controller>(this: TraitViewControllerSet<unknown, T, View, C>, controller: C, trait: T, targetTrait?: Trait | null): C {\n    const traitControllers = this.traitControllers as {[traitId: number]: C | undefined};\n    let traitController = traitControllers[trait.uid];\n    if (traitController === void 0) {\n      traitController = controller;\n      if (targetTrait === void 0) {\n        targetTrait = null;\n      }\n      this.willAttachControllerTrait(traitController, trait, targetTrait);\n      traitControllers[trait.uid] = traitController;\n      (this as Mutable<typeof this>).controllerCount += 1;\n      this.onAttachControllerTrait(traitController, trait, targetTrait);\n      this.initControllerTrait(traitController, trait);\n      this.didAttachControllerTrait(traitController, trait, targetTrait);\n    }\n    return traitController;\n  };\n\n  TraitViewControllerSet.prototype.detachControllerTrait = function <T extends Trait, C extends Controller>(this: TraitViewControllerSet<unknown, T, View, C>, controller: C, trait: T): C | null {\n    const traitControllers = this.traitControllers as {[comtroltraitIdltraitIderId: number]: C | undefined};\n    const traitController = traitControllers[trait.uid];\n    if (traitController !== void 0) {\n      this.willDetachControllerTrait(traitController, trait);\n      (this as Mutable<typeof this>).controllerCount -= 1;\n      delete traitControllers[trait.uid];\n      this.onDetachControllerTrait(traitController, trait);\n      this.deinitControllerTrait(traitController, trait);\n      this.didDetachControllerTrait(traitController, trait);\n      return traitController;\n    }\n    return null;\n  };\n\n  TraitViewControllerSet.prototype.initControllerTrait = function <T extends Trait, C extends Controller>(this: TraitViewControllerSet<unknown, T, View, C>, controller: C, trait: T): void {\n    // hook\n  };\n\n  TraitViewControllerSet.prototype.willAttachControllerTrait = function <T extends Trait, C extends Controller>(this: TraitViewControllerSet<unknown, T, View, C>, controller: C, trait: T, targetTrait: Trait | null): void {\n    // hook\n  };\n\n  TraitViewControllerSet.prototype.onAttachControllerTrait = function <T extends Trait, C extends Controller>(this: TraitViewControllerSet<unknown, T, View, C>, controller: C, trait: T, targetTrait: Trait | null): void {\n    // hook\n  };\n\n  TraitViewControllerSet.prototype.didAttachControllerTrait = function <T extends Trait, C extends Controller>(this: TraitViewControllerSet<unknown, T, View, C>, controller: C, trait: T, targetTrait: Trait | null): void {\n    // hook\n  };\n\n  TraitViewControllerSet.prototype.deinitControllerTrait = function <T extends Trait, C extends Controller>(this: TraitViewControllerSet<unknown, T, View, C>, controller: C, trait: T): void {\n    // hook\n  };\n\n  TraitViewControllerSet.prototype.willDetachControllerTrait = function <T extends Trait, C extends Controller>(this: TraitViewControllerSet<unknown, T, View, C>, controller: C, trait: T): void {\n    // hook\n  };\n\n  TraitViewControllerSet.prototype.onDetachControllerTrait = function <T extends Trait, C extends Controller>(this: TraitViewControllerSet<unknown, T, View, C>, controller: C, trait: T): void {\n    // hook\n  };\n\n  TraitViewControllerSet.prototype.didDetachControllerTrait = function <T extends Trait, C extends Controller>(this: TraitViewControllerSet<unknown, T, View, C>, controller: C, trait: T): void {\n    // hook\n  };\n\n  TraitViewControllerSet.prototype.onAttachController = function <T extends Trait, C extends Controller>(this: TraitViewControllerSet<unknown, T, View, C>, controller: C, targetController: Controller | null): void {\n    const trait = this.getTraitViewRef(controller).trait;\n    if (trait !== null) {\n      const targetTrait = targetController !== null && this.hasController(targetController) ? this.getTraitViewRef(targetController as C).trait : null;\n      this.attachControllerTrait(controller, trait, targetTrait);\n    }\n    ControllerSet.prototype.onAttachController.call(this, controller, targetController);\n  };\n\n  TraitViewControllerSet.prototype.onDetachController = function <T extends Trait, C extends Controller>(this: TraitViewControllerSet<unknown, T, View, C>, controller: C): void {\n    ControllerSet.prototype.onDetachController.call(this, controller);\n    const trait = this.getTraitViewRef(controller).trait;\n    if (trait !== null) {\n      this.detachControllerTrait(controller, trait);\n    }\n  };\n\n  Object.defineProperty(TraitViewControllerSet.prototype, \"parentView\", {\n    get: function (this: TraitViewControllerSet): View | null {\n      return null;\n    },\n    configurable: true,\n  });\n\n  TraitViewControllerSet.construct = function <F extends TraitViewControllerSet<any, any, any, any>>(fastenerClass: {prototype: F}, fastener: F | null, owner: FastenerOwner<F>): F {\n    fastener = _super.construct(fastenerClass, fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).traitControllers = {};\n    return fastener;\n  };\n\n  TraitViewControllerSet.define = function <O, T extends Trait, V extends View, C extends Controller>(className: string, descriptor: TraitViewControllerSetDescriptor<O, T, V, C>): TraitViewControllerSetFactory<TraitViewControllerSet<any, T, V, C>> {\n    let superClass = descriptor.extends as TraitViewControllerSetFactory | null | undefined;\n    const affinity = descriptor.affinity;\n    const inherits = descriptor.inherits;\n    const sorted = descriptor.sorted;\n    delete descriptor.extends;\n    delete descriptor.implements;\n    delete descriptor.affinity;\n    delete descriptor.inherits;\n    delete descriptor.sorted;\n\n    if (superClass === void 0 || superClass === null) {\n      superClass = this;\n    }\n\n    const fastenerClass = superClass.extend(className, descriptor);\n\n    fastenerClass.construct = function (fastenerClass: {prototype: TraitViewControllerSet<any, any, any, any>}, fastener: TraitViewControllerSet<O, T, V, C> | null, owner: O): TraitViewControllerSet<O, T, V, C> {\n      fastener = superClass!.construct(fastenerClass, fastener, owner);\n      if (affinity !== void 0) {\n        fastener.initAffinity(affinity);\n      }\n      if (inherits !== void 0) {\n        fastener.initInherits(inherits);\n      }\n      if (sorted !== void 0) {\n        fastener.initSorted(sorted);\n      }\n      return fastener;\n    };\n\n    return fastenerClass;\n  };\n\n  return TraitViewControllerSet;\n})(ControllerSet);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport {Look, MoodVector, ThemeMatrix} from \"@swim/theme\";\nimport {StyleAnimator, StyleConstraintAnimator, HtmlView} from \"@swim/dom\";\n\n/** @public */\nexport type ButtonGlowState = \"ready\" | \"glowing\" | \"pulsing\" | \"fading\";\n\n/** @public */\nexport class ButtonGlow extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.glowState = \"ready\";\n    this.glowTimer = 0;\n    this.initGlow();\n  }\n\n  protected initGlow(): void {\n    this.addClass(\"button-glow\");\n    this.position.setState(\"absolute\", Affinity.Intrinsic);\n    this.width.setState(Length.zero(), Affinity.Intrinsic);\n    this.height.setState(Length.zero(), Affinity.Intrinsic);\n    this.borderTopLeftRadius.setState(Length.pct(50), Affinity.Intrinsic);\n    this.borderTopRightRadius.setState(Length.pct(50), Affinity.Intrinsic);\n    this.borderBottomLeftRadius.setState(Length.pct(50), Affinity.Intrinsic);\n    this.borderBottomRightRadius.setState(Length.pct(50), Affinity.Intrinsic);\n    this.pointerEvents.setState(\"none\", Affinity.Intrinsic);\n  }\n\n  readonly glowState: ButtonGlowState;\n\n  /** @internal */\n  glowTimer: number;\n\n  @StyleConstraintAnimator<ButtonGlow, Length | null, AnyLength | null>({\n    propertyNames: \"left\",\n    type: Length,\n    value: null,\n    get constraintValue(): Length | null {\n      const node = this.owner.node;\n      return node instanceof HTMLElement ? Length.px(node.offsetLeft) : null;\n    },\n    didTransition(): void {\n      this.owner.didGlow();\n    },\n  })\n  override readonly left!: StyleConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  @StyleAnimator<ButtonGlow, number | undefined>({\n    propertyNames: \"opacity\",\n    type: Number,\n    didTransition(opacity: number | undefined): void {\n      if (this.owner.glowState === \"pulsing\" && opacity === 0) {\n        this.owner.didPulse();\n      } else if (this.owner.glowState === \"fading\" && opacity === 0) {\n        this.owner.didFade();\n      }\n    },\n  })\n  override readonly opacity!: StyleAnimator<this, number | undefined>;\n\n  protected override didMount(): void {\n    if (this.backgroundColor.hasAffinity(Affinity.Intrinsic)) {\n      let highlightColor = this.getLookOr(Look.highlightColor, null);\n      if (highlightColor !== null) {\n        highlightColor = highlightColor.alpha(1);\n      }\n      this.backgroundColor.setState(highlightColor, Affinity.Intrinsic);\n    }\n    super.didMount();\n  }\n\n  protected override onUnmount(): void {\n    (this as Mutable<this>).glowState = \"ready\";\n    this.cancelGlow();\n    this.remove();\n    super.onUnmount();\n  }\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    if (this.backgroundColor.hasAffinity(Affinity.Intrinsic)) {\n      let highlightColor = theme.getOr(Look.highlightColor, mood, null);\n      if (highlightColor !== null) {\n        highlightColor = highlightColor.alpha(1);\n      }\n      this.backgroundColor.setState(highlightColor, Affinity.Intrinsic);\n    }\n  }\n\n  glow(clientX: number, clientY: number, timing?: AnyTiming | boolean, delay: number = 0): void {\n    if (this.glowState === \"ready\") {\n      this.cancelGlow();\n      if (delay !== 0) {\n        const glow = this.glow.bind(this, clientX, clientY, timing, Affinity.Intrinsic);\n        this.glowTimer = setTimeout(glow, delay) as any;\n      } else {\n        if (timing === void 0 || timing === true) {\n          timing = this.getLookOr(Look.timing, false);\n        } else {\n          timing = Timing.fromAny(timing);\n        }\n        this.willGlow();\n        const offsetParent = this.node.offsetParent;\n        if (offsetParent !== null) {\n          const clientBounds = offsetParent.getBoundingClientRect();\n          const cx = clientX - clientBounds.left;\n          const cy = clientY - clientBounds.top;\n          const rx = Math.max(cx, clientBounds.width - cx);\n          const ry = Math.max(cy, clientBounds.height - cy);\n          const r = Math.sqrt(rx * rx + ry * ry);\n          const highlightColor = this.getLook(Look.highlightColor);\n          const opacity = highlightColor !== void 0 ? highlightColor.alpha() : 0.1;\n          this.opacity.setState(opacity, Affinity.Intrinsic);\n          if (timing !== false) {\n            this.left.setState(cx, Affinity.Intrinsic);\n            this.top.setState(cy, Affinity.Intrinsic);\n            this.left.setState(cx - r, timing, Affinity.Intrinsic);\n            this.top.setState(cy - r, timing, Affinity.Intrinsic);\n            this.width.setState(2 * r, timing, Affinity.Intrinsic);\n            this.height.setState(2 * r, timing, Affinity.Intrinsic);\n          } else {\n            this.left.setState(cx - r, Affinity.Intrinsic);\n            this.top.setState(cy - r, Affinity.Intrinsic);\n            this.width.setState(2 * r, Affinity.Intrinsic);\n            this.height.setState(2 * r, Affinity.Intrinsic);\n            this.didGlow();\n          }\n          (this as Mutable<this>).glowState = \"glowing\";\n        }\n      }\n    }\n  }\n\n  protected willGlow(): void {\n    // hook\n  }\n\n  protected didGlow(): void {\n    // hook\n  }\n\n  cancelGlow(): void {\n    if (this.glowTimer !== 0) {\n      clearTimeout(this.glowTimer);\n      this.glowTimer = 0;\n    }\n  }\n\n  pulse(clientX: number, clientY: number, timing?: AnyTiming | boolean): void {\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n    if (this.glowState === \"ready\") {\n      this.glow(clientX, clientY, timing);\n    }\n    if (this.glowState === \"glowing\") {\n      this.willPulse();\n      if (timing !== false) {\n        this.opacity.setState(0, timing, Affinity.Intrinsic);\n      } else {\n        this.opacity.setState(0, Affinity.Intrinsic);\n        this.didPulse();\n      }\n      (this as Mutable<this>).glowState = \"pulsing\";\n    }\n  }\n\n  protected willPulse(): void {\n    // hook\n  }\n\n  protected didPulse(): void {\n    this.remove();\n  }\n\n  fade(clientX: number, clientY: number, timing?: AnyTiming | boolean): void {\n    if (this.glowState === \"ready\") {\n      this.cancelGlow();\n      this.didFade()\n    } else if (this.glowState === \"glowing\") {\n      if (timing === void 0 || timing === true) {\n        timing = this.getLookOr(Look.timing, false);\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      this.willFade();\n      if (timing !== false) {\n        this.opacity.setState(0, timing, Affinity.Intrinsic);\n      } else {\n        this.opacity.setState(0, Affinity.Intrinsic);\n        this.didFade();\n      }\n    }\n    (this as Mutable<this>).glowState = \"fading\";\n  }\n\n  protected willFade(): void {\n    // hook\n  }\n\n  protected didFade(): void {\n    this.remove();\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {MemberFastenerClass, Property} from \"@swim/component\";\nimport {HtmlViewInit, HtmlView} from \"@swim/dom\";\nimport {PositionGestureInput, PositionGesture} from \"@swim/view\";\nimport {ButtonGlow} from \"./ButtonGlow\";\n\n/** @public */\nexport interface ButtonMembraneInit extends HtmlViewInit {\n}\n\n/** @public */\nexport class ButtonMembrane extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initMembrane(node);\n  }\n\n  protected initMembrane(node: HTMLElement): void {\n    this.addClass(\"membrane\");\n  }\n\n  @Property({type: Boolean, inherits: true, value: true})\n  readonly glows!: Property<this, boolean>;\n\n  protected glow(input: PositionGestureInput): void {\n    if (input.detail instanceof ButtonGlow) {\n      input.detail.fade(input.x, input.y);\n      input.detail = void 0;\n    }\n    if (input.detail === void 0) {\n      const delay = input.inputType === \"mouse\" ? 0 : 100;\n      input.detail = this.prependChild(ButtonGlow);\n      (input.detail as ButtonGlow).glow(input.x, input.y, void 0, delay);\n    }\n  }\n\n  @PositionGesture<ButtonMembrane, HtmlView>({\n    self: true,\n    didBeginPress(input: PositionGestureInput, event: Event | null): void {\n      if (this.owner.glows.value) {\n        this.owner.glow(input);\n      }\n    },\n    didMovePress(input: PositionGestureInput, event: Event | null): void {\n      if (input.isRunaway()) {\n        this.cancelPress(input, event);\n      } else if (!this.owner.clientBounds.contains(input.x, input.y)) {\n        input.clearHoldTimer();\n        this.beginHover(input, event);\n        if (input.detail instanceof ButtonGlow) {\n          input.detail.fade(input.x, input.y);\n          input.detail = void 0;\n        }\n      }\n    },\n    didEndPress(input: PositionGestureInput, event: Event | null): void {\n      if (!this.owner.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n        if (input.detail instanceof ButtonGlow) {\n          input.detail.fade(input.x, input.y);\n          input.detail = void 0;\n        }\n      } else if (input.detail instanceof ButtonGlow) {\n        input.detail.pulse(input.x, input.y);\n      }\n    },\n    didCancelPress(input: PositionGestureInput, event: Event | null): void {\n      if (!this.owner.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n      }\n      if (input.detail instanceof ButtonGlow) {\n        input.detail.fade(input.x, input.y);\n        input.detail = void 0;\n      }\n    },\n  })\n  readonly gesture!: PositionGesture<this, HtmlView>;\n  static readonly gesture: MemberFastenerClass<ButtonMembrane, \"gesture\">;\n\n  override init(init: ButtonMembraneInit): void {\n    super.init(init);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass} from \"@swim/component\";\nimport {Length, Angle, Transform} from \"@swim/math\";\nimport {AnyExpansion, Expansion} from \"@swim/style\";\nimport {\n  Look,\n  Feel,\n  Mood,\n  MoodVector,\n  ThemeMatrix,\n  ThemeAnimator,\n  ExpansionThemeAnimator,\n} from \"@swim/theme\";\nimport {\n  PositionGestureInput,\n  PositionGesture,\n  ViewContextType,\n  ViewContext,\n  ViewRef,\n} from \"@swim/view\";\nimport type {HtmlView} from \"@swim/dom\";\nimport {Graphics, HtmlIconView} from \"@swim/graphics\";\nimport {ButtonMembrane} from \"./ButtonMembrane\";\n\n/** @public */\nexport type FloatingButtonType = \"regular\" | \"mini\";\n\n/** @public */\nexport class FloatingButton extends ButtonMembrane {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.buttonType = \"regular\";\n    this.iconCount = 0;\n    this.icon = null;\n    this.initButton();\n  }\n\n  protected initButton(): void {\n    this.addClass(\"floating-button\");\n    this.position.setState(\"relative\", Affinity.Intrinsic);\n    if (this.buttonType === \"regular\") {\n      this.width.setState(56, Affinity.Intrinsic);\n      this.height.setState(56, Affinity.Intrinsic);\n    } else if (this.buttonType === \"mini\") {\n      this.width.setState(40, Affinity.Intrinsic);\n      this.height.setState(40, Affinity.Intrinsic);\n    }\n    this.borderTopLeftRadius.setState(Length.pct(50), Affinity.Intrinsic);\n    this.borderTopRightRadius.setState(Length.pct(50), Affinity.Intrinsic);\n    this.borderBottomLeftRadius.setState(Length.pct(50), Affinity.Intrinsic);\n    this.borderBottomRightRadius.setState(Length.pct(50), Affinity.Intrinsic);\n    this.overflowX.setState(\"hidden\", Affinity.Intrinsic);\n    this.overflowY.setState(\"hidden\", Affinity.Intrinsic);\n    this.userSelect.setState(\"none\", Affinity.Intrinsic);\n    this.cursor.setState(\"pointer\", Affinity.Intrinsic);\n  }\n\n  readonly buttonType: FloatingButtonType;\n\n  setButtonType(buttonType: FloatingButtonType): void {\n    if (this.buttonType !== buttonType) {\n      (this as Mutable<this>).buttonType = buttonType;\n      if (buttonType === \"regular\") {\n        this.width.setState(56, Affinity.Intrinsic);\n        this.height.setState(56, Affinity.Intrinsic);\n      } else if (buttonType === \"mini\") {\n        this.width.setState(40, Affinity.Intrinsic);\n        this.height.setState(40, Affinity.Intrinsic);\n      }\n    }\n  }\n\n  @PositionGesture<FloatingButton, HtmlView>({\n    extends: true,\n    didStartHovering(): void {\n      this.owner.modifyMood(Feel.default, [[Feel.hovering, 1]]);\n      if (this.owner.backgroundColor.hasAffinity(Affinity.Intrinsic)) {\n        const timing = this.owner.getLook(Look.timing);\n        this.owner.backgroundColor.setState(this.owner.getLookOr(Look.accentColor, null), timing, Affinity.Intrinsic);\n      }\n    },\n    didStopHovering(): void {\n      this.owner.modifyMood(Feel.default, [[Feel.hovering, void 0]]);\n      if (this.owner.backgroundColor.hasAffinity(Affinity.Intrinsic)) {\n        const timing = this.owner.getLook(Look.timing);\n        this.owner.backgroundColor.setState(this.owner.getLookOr(Look.accentColor, null), timing, Affinity.Intrinsic);\n      }\n    },\n    didMovePress(input: PositionGestureInput, event: Event | null): void {\n      // nop\n    },\n  })\n  override readonly gesture!: PositionGesture<this, HtmlView>;\n  static override readonly gesture: MemberFastenerClass<FloatingButton, \"gesture\">;\n\n  /** @internal */\n  static IconRef = ViewRef.define<FloatingButton, HtmlIconView, {iconIndex: number}>(\"IconRef\", {\n    implements: true,\n    type: HtmlIconView,\n    observes: true,\n    init(): void {\n      this.iconIndex = 0;\n    },\n    viewDidApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean, iconView: HtmlIconView): void {\n      const iconColor = theme.getOr(Look.backgroundColor, mood, null);\n      iconView.iconColor.setState(iconColor, timing);\n    },\n    viewDidAnimate(viewContext: ViewContext, iconView: HtmlIconView): void {\n      if (!iconView.opacity.tweening && this.iconIndex !== this.owner.iconCount) {\n        iconView.remove();\n        if (this.iconIndex > this.owner.iconCount) {\n          this.owner.setFastener(this.key!, null);\n        }\n      }\n    },\n  });\n\n  /** @internal */\n  iconCount: number;\n\n  icon: ViewRef<this, HtmlIconView> | null;\n\n  pushIcon(icon: Graphics, timing?: AnyTiming | boolean): void {\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n\n    const oldIconCount = this.iconCount;\n    const oldIconKey = \"icon\" + oldIconCount;\n    const oldIconRef: ViewRef<this, HtmlIconView> | null = this.getFastener(oldIconKey, ViewRef);\n    const oldIconView = oldIconRef !== null ? oldIconRef.view : null;\n    if (oldIconView !== null) {\n      if (timing !== false) {\n        oldIconView.opacity.setState(0, timing, Affinity.Intrinsic);\n        oldIconView.transform.setState(Transform.rotate(Angle.deg(90)), timing, Affinity.Intrinsic);\n      } else {\n        oldIconView.remove();\n      }\n    }\n\n    const newIconCount = oldIconCount + 1;\n    const newIconKey = \"icon\" + newIconCount;\n    const newIconRef = FloatingButton.IconRef.create(this);\n    Object.defineProperty(newIconRef, \"name\", {\n      value: newIconKey,\n      enumerable: true,\n      configurable: true,\n    });\n    newIconRef.iconIndex = newIconCount;\n    const newIconView = HtmlIconView.create();\n    newIconView.position.setState(\"absolute\", Affinity.Intrinsic);\n    newIconView.left.setState(0, Affinity.Intrinsic);\n    newIconView.top.setState(0, Affinity.Intrinsic);\n    newIconView.width.setState(this.width.state, Affinity.Intrinsic);\n    newIconView.height.setState(this.height.state, Affinity.Intrinsic);\n    newIconView.opacity.setState(0, Affinity.Intrinsic);\n    newIconView.opacity.setState(1, timing, Affinity.Intrinsic);\n    newIconView.transform.setState(Transform.rotate(Angle.deg(-90)), Affinity.Intrinsic);\n    newIconView.transform.setState(Transform.rotate(Angle.deg(0)), timing, Affinity.Intrinsic);\n    newIconView.pointerEvents.setState(\"none\", Affinity.Intrinsic);\n    newIconView.iconWidth.setState(24, Affinity.Intrinsic);\n    newIconView.iconHeight.setState(24, Affinity.Intrinsic);\n    newIconView.iconColor.setAffinity(Affinity.Extrinsic);\n    newIconView.graphics.setState(icon, Affinity.Intrinsic);\n    newIconRef.setView(newIconView);\n    this.setFastener(newIconKey, newIconRef);\n    this.appendChild(newIconView, newIconKey);\n\n    this.iconCount = newIconCount;\n    this.icon = newIconRef;\n  }\n\n  popIcon(timing?: AnyTiming | boolean): void {\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n\n    const oldIconCount = this.iconCount;\n    const oldIconKey = \"icon\" + oldIconCount;\n    const oldIconRef: ViewRef<this, HtmlIconView> | null = this.getFastener(oldIconKey, ViewRef);\n    const oldIconView = oldIconRef !== null ? oldIconRef.view : null;\n    if (oldIconView !== null) {\n      if (timing !== false) {\n        oldIconView.opacity.setState(0, timing, Affinity.Intrinsic);\n        oldIconView.transform.setState(Transform.rotate(Angle.deg(-90)), timing, Affinity.Intrinsic);\n      } else {\n        oldIconView.remove();\n      }\n    }\n\n    const newIconCount = oldIconCount - 1;\n    const newIconKey = \"icon\" + newIconCount;\n    const newIconRef: ViewRef<this, HtmlIconView> | null = this.getFastener(newIconKey, ViewRef);\n    const newIconView = newIconRef !== null ? newIconRef.view : null;\n    if (newIconView !== null) {\n      newIconView.opacity.setState(1, timing, Affinity.Intrinsic);\n      newIconView.transform.setState(Transform.rotate(Angle.deg(0)), timing, Affinity.Intrinsic);\n      this.appendChild(newIconView, newIconKey);\n    }\n\n    this.iconCount = newIconCount;\n    this.icon = newIconRef;\n  }\n\n  @ThemeAnimator({type: Expansion, inherits: true})\n  readonly disclosure!: ExpansionThemeAnimator<this, Expansion | undefined, AnyExpansion | undefined>;\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n\n    this.backgroundColor.setState(theme.getOr(Look.accentColor, mood, null), timing, Affinity.Intrinsic);\n\n    let shadow = theme.getOr(Look.shadow, Mood.floating, null);\n    if (shadow !== null) {\n      const shadowColor = shadow.color;\n      const phase = this.disclosure.getPhaseOr(1);\n      shadow = shadow.withColor(shadowColor.alpha(shadowColor.alpha() * phase));\n    }\n    this.boxShadow.setState(shadow, timing, Affinity.Intrinsic);\n  }\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n\n    let shadow = this.getLookOr(Look.shadow, Mood.floating, null);\n    if (shadow !== null) {\n      const shadowColor = shadow.color;\n      const phase = this.disclosure.getPhaseOr(1);\n      shadow = shadow.withColor(shadowColor.alpha(shadowColor.alpha() * phase));\n    }\n    this.boxShadow.setState(shadow, Affinity.Intrinsic);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Timing} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {AnyExpansion, Expansion} from \"@swim/style\";\nimport {Look, MoodVector, ThemeMatrix, ThemeAnimator, ExpansionThemeAnimator} from \"@swim/theme\";\nimport type {ViewContextType, View} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {HtmlIconView} from \"@swim/graphics\";\nimport {FloatingButton} from \"./FloatingButton\";\n\n/** @public */\nexport class ButtonItem extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initButtonItem();\n  }\n\n  protected initButtonItem(): void {\n    this.addClass(\"button-item\");\n    this.position.setState(\"relative\", Affinity.Intrinsic);\n    const button = this.createButton();\n    if (button !== null) {\n      this.setChild(\"button\", button);\n    }\n  }\n\n  protected createButton(): FloatingButton | null {\n    const button = FloatingButton.create();\n    button.setButtonType(\"mini\");\n    return button;\n  }\n\n  get button(): FloatingButton | null {\n    const childView = this.getChild(\"button\");\n    return childView instanceof FloatingButton ? childView : null;\n  }\n\n  get icon(): HtmlIconView | null {\n    const button = this.button;\n    const buttonIcon = button !== null ? button.icon : null;\n    return buttonIcon !== null ? buttonIcon.view : null;\n  }\n\n  get label(): HtmlView | null {\n    const childView = this.getChild(\"label\");\n    return childView instanceof HtmlView ? childView : null;\n  }\n\n  @ThemeAnimator({type: Expansion, inherits: true})\n  readonly disclosure!: ExpansionThemeAnimator<this, Expansion | undefined, AnyExpansion | undefined>;\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    const label = this.label;\n    if (label !== null && label.color.hasAffinity(Affinity.Intrinsic)) {\n      label.color.setState(theme.getOr(Look.mutedColor, mood, null), timing, Affinity.Intrinsic);\n    }\n  }\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    const phase = this.disclosure.getPhaseOr(1);\n    const button = this.button;\n    if (button !== null) {\n      this.width.setState(button.width.state, Affinity.Intrinsic);\n      this.height.setState(button.height.state, Affinity.Intrinsic);\n    }\n    const label = this.label;\n    if (label !== null) {\n      label.opacity.setState(phase, Affinity.Intrinsic);\n    }\n  }\n\n  protected override onInsertChild(childView: View, targetView: View | null): void {\n    super.onInsertChild(childView, targetView);\n    const childKey = childView.key;\n    if (childKey === \"button\" && childView instanceof FloatingButton) {\n      this.onInsertButton(childView);\n    } else if (childKey === \"label\" && childView instanceof HtmlView) {\n      this.onInsertLabel(childView);\n    }\n  }\n\n  protected override onRemoveChild(childView: View): void {\n    const childKey = childView.key;\n    if (childKey === \"button\" && childView instanceof FloatingButton) {\n      this.onRemoveButton(childView);\n    } else if (childKey === \"label\" && childView instanceof HtmlView) {\n      this.onRemoveLabel(childView);\n    }\n    super.onRemoveChild(childView);\n  }\n\n  protected onInsertButton(button: FloatingButton): void {\n    // hook\n  }\n\n  protected onRemoveButton(button: FloatingButton): void {\n    // hook\n  }\n\n  protected onInsertLabel(label: HtmlView): void {\n    label.display.setState(\"block\", Affinity.Intrinsic);\n    label.position.setState(\"absolute\", Affinity.Intrinsic);\n    label.top.setState(0, Affinity.Intrinsic);\n    label.right.setState(40 + 16, Affinity.Intrinsic);\n    label.bottom.setState(0, Affinity.Intrinsic);\n    label.fontSize.setState(17, Affinity.Intrinsic);\n    label.fontWeight.setState(\"500\", Affinity.Intrinsic);\n    label.lineHeight.setState(40, Affinity.Intrinsic);\n    label.whiteSpace.setState(\"nowrap\", Affinity.Intrinsic);\n    label.opacity.setState(this.disclosure.getPhaseOr(0), Affinity.Intrinsic);\n  }\n\n  protected onRemoveLabel(label: HtmlView): void {\n    // hook\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, Lazy, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {Expansion} from \"@swim/style\";\nimport {Look, ThemeAnimator, ExpansionThemeAnimator} from \"@swim/theme\";\nimport {\n  ModalOptions,\n  ModalState,\n  Modal,\n  PositionGestureInput,\n  PositionGesture,\n  ViewContextType,\n  View,\n} from \"@swim/view\";\nimport {StyleAnimator, ViewNode, HtmlView} from \"@swim/dom\";\nimport {Graphics, VectorIcon} from \"@swim/graphics\";\nimport {FloatingButton} from \"./FloatingButton\";\nimport {ButtonItem} from \"./ButtonItem\";\nimport type {ButtonStackObserver} from \"./ButtonStackObserver\";\n\n/** @public */\nexport class ButtonStack extends HtmlView implements Modal {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.stackHeight = 0;\n    this.onClick = this.onClick.bind(this);\n    this.onContextMenu = this.onContextMenu.bind(this);\n    this.initButtonStack();\n    this.initButton();\n  }\n\n  protected initButtonStack(): void {\n    this.addClass(\"button-stack\");\n    this.display.setState(\"block\", Affinity.Intrinsic);\n    this.position.setState(\"relative\", Affinity.Intrinsic);\n    this.width.setState(56, Affinity.Intrinsic);\n    this.height.setState(56, Affinity.Intrinsic);\n    this.opacity.setState(1, Affinity.Intrinsic);\n    this.userSelect.setState(\"none\", Affinity.Intrinsic);\n    this.cursor.setState(\"pointer\", Affinity.Intrinsic);\n  }\n\n  protected initButton(): void {\n    const button = this.createButton();\n    if (button !== null) {\n      this.appendChild(button, \"button\");\n    }\n  }\n\n  override readonly observerType?: Class<ButtonStackObserver>;\n\n  /** @internal */\n  readonly stackHeight: number;\n\n  protected createButton(): HtmlView | null {\n    return FloatingButton.create();\n  }\n\n  @PositionGesture<ButtonStack, HtmlView>({\n    didMovePress(input: PositionGestureInput, event: Event | null): void {\n      if (!input.defaultPrevented && !this.owner.disclosure.expanded) {\n        const stackHeight = this.owner.stackHeight;\n        const phase = Math.min(Math.max(0, -(input.y - input.y0) / (0.5 * stackHeight)), 1);\n        this.owner.disclosure.setPhase(phase);\n        if (phase > 0.1) {\n          input.clearHoldTimer();\n          if (!this.owner.disclosure.expanding) {\n            this.owner.disclosure.setState(this.owner.disclosure.value.asExpanding());\n          }\n        }\n      }\n    },\n    didEndPress(input: PositionGestureInput, event: Event | null): void {\n      if (!input.defaultPrevented) {\n        const phase = this.owner.disclosure.getPhase();\n        if (input.t - input.t0 < input.holdDelay) {\n          if (phase < 0.1 || this.owner.disclosure.expanded) {\n            this.owner.disclosure.collapse();\n          } else {\n            this.owner.disclosure.expand();\n          }\n        } else {\n          if (phase < 0.5) {\n            this.owner.disclosure.collapse();\n          } else if (phase >= 0.5) {\n            this.owner.disclosure.expand();\n          }\n        }\n      }\n    },\n    didCancelPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.buttons === 2) {\n        this.owner.disclosure.toggle();\n      } else {\n        const phase = this.owner.disclosure.getPhase();\n        if (phase < 0.1 || this.owner.disclosure.expanded) {\n          this.owner.disclosure.collapse();\n        } else {\n          this.owner.disclosure.expand();\n        }\n      }\n    },\n    didLongPress(input: PositionGestureInput): void {\n      input.preventDefault();\n      this.owner.disclosure.toggle();\n    },\n  })\n  readonly gesture!: PositionGesture<this, HtmlView>;\n  static readonly gesture: MemberFastenerClass<ButtonStack, \"gesture\">;\n\n  @ThemeAnimator<ButtonStack, Expansion>({\n    type: Expansion,\n    value: Expansion.collapsed(),\n    updateFlags: View.NeedsLayout,\n    willExpand(): void {\n      this.owner.willExpand();\n      this.owner.onExpand();\n    },\n    didExpand(): void {\n      this.owner.didExpand();\n    },\n    willCollapse(): void {\n      this.owner.willCollapse();\n      this.owner.onCollapse();\n    },\n    didCollapse(): void {\n      this.owner.didCollapse();\n    },\n  })\n  readonly disclosure!: ExpansionThemeAnimator<this>;\n\n  @ThemeAnimator({type: Number, value: 28, updateFlags: View.NeedsLayout})\n  readonly buttonSpacing!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Number, value: 20, updateFlags: View.NeedsLayout})\n  readonly itemSpacing!: ThemeAnimator<this, number>;\n\n  @StyleAnimator<ButtonStack, number | undefined>({\n    propertyNames: \"opacity\",\n    type: Number,\n    didTransition(opacity: number | undefined): void {\n      if (opacity === 1) {\n        this.owner.didShowStack();\n      } else if (opacity === 0) {\n        this.owner.didHideStack();\n      }\n    },\n  })\n  override readonly opacity!: StyleAnimator<this, number | undefined>;\n\n  get modalView(): View | null {\n    return null;\n  }\n\n  get modalState(): ModalState {\n    return this.disclosure.modalState! as ModalState;\n  }\n\n  get modality(): boolean | number {\n    return this.disclosure.phase!;\n  }\n\n  showModal(options: ModalOptions, timing?: AnyTiming | boolean): void {\n    this.disclosure.expand(timing);\n  }\n\n  hideModal(timing?: AnyTiming | boolean): void {\n    this.disclosure.collapse(timing);\n  }\n\n  get button(): HtmlView | null {\n    const childView = this.getChild(\"button\");\n    return childView instanceof HtmlView ? childView : null;\n  }\n\n  get closeIcon(): Graphics {\n    return ButtonStack.closeIcon;\n  }\n\n  get items(): ReadonlyArray<ButtonItem> {\n    const childNodes = this.node.childNodes;\n    const children = [];\n    for (let i = 0, n = childNodes.length; i < n; i += 1) {\n      const childView = (childNodes[i] as ViewNode).view;\n      if (childView instanceof ButtonItem) {\n        children.push(childView);\n      }\n    }\n    return children;\n  }\n\n  insertItem(item: ButtonItem, index?: number, key?: string): void {\n    if (index === void 0) {\n      index = this.node.childNodes.length - 1;\n    }\n    this.insertChild(item.node, this.node.childNodes[1 + index] || null, key);\n  }\n\n  removeItems(): void {\n    const childNodes = this.node.childNodes;\n    for (let i = childNodes.length - 1; i >= 0; i -= 1) {\n      const childView = (childNodes[i] as ViewNode).view;\n      if (childView instanceof ButtonItem) {\n        this.removeChild(childView);\n      }\n    }\n  }\n\n  protected override onMount(): void {\n    super.onMount();\n    this.on(\"click\", this.onClick);\n    this.on(\"contextmenu\", this.onContextMenu);\n  }\n\n  protected override onUnmount(): void {\n    this.off(\"click\", this.onClick);\n    this.off(\"contextmenu\", this.onContextMenu);\n    super.onUnmount();\n  }\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.layoutStack();\n    const modalService = this.modalProvider.service;\n    if (modalService !== void 0 && modalService !== null) {\n      modalService.updateModality();\n    }\n  }\n\n  protected layoutStack(): void {\n    const phase = this.disclosure.getPhase();\n    const childNodes = this.node.childNodes;\n    const childCount = childNodes.length;\n    const button = this.button;\n    let zIndex = childCount - 1;\n    let itemIndex = 0;\n    let stackHeight = 0;\n    let y: number;\n    if (button !== null) {\n      button.zIndex.setState(childCount, Affinity.Intrinsic);\n      const buttonHeight = button !== null ? button.height.value : void 0;\n      y = buttonHeight instanceof Length\n        ? buttonHeight.pxValue()\n        : button.node.offsetHeight;\n    } else {\n      y = 0;\n    }\n    const buttonSpacing = this.buttonSpacing.value;\n    const itemSpacing = this.itemSpacing.value;\n    for (let i = 0; i < childCount; i += 1) {\n      const childView = (childNodes[i] as ViewNode).view;\n      if (childView instanceof ButtonItem) {\n        if (itemIndex === 0) {\n          stackHeight += buttonSpacing;\n          y += buttonSpacing;\n        } else {\n          stackHeight += itemSpacing;\n          y += itemSpacing;\n        }\n        const itemHeight = childView.height.value;\n        const dy = itemHeight instanceof Length\n                 ? itemHeight.pxValue()\n                 : childView.node.offsetHeight;\n        childView.display.setState(phase === 0 ? \"none\" : \"flex\", Affinity.Intrinsic);\n        childView.bottom.setState(phase * y, Affinity.Intrinsic);\n        childView.zIndex.setState(zIndex, Affinity.Intrinsic);\n        y += dy;\n        stackHeight += dy;\n        itemIndex += 1;\n        zIndex -= 1;\n      }\n    }\n    (this as Mutable<this>).stackHeight = stackHeight;\n  }\n\n  protected override onInsertChild(childView: View, targetView: View | null): void {\n    super.onInsertChild(childView, targetView);\n    const childKey = childView.key;\n    if (childKey === \"button\" && childView instanceof HtmlView) {\n      this.onInsertButton(childView);\n    } else if (childView instanceof ButtonItem) {\n      this.onInsertItem(childView);\n    }\n  }\n\n  protected override onRemoveChild(childView: View): void {\n    const childKey = childView.key;\n    if (childKey === \"button\" && childView instanceof HtmlView) {\n      this.onRemoveButton(childView);\n    } else if (childView instanceof ButtonItem) {\n      this.onRemoveItem(childView);\n    }\n    super.onRemoveChild(childView);\n  }\n\n  protected onInsertButton(button: HtmlView): void {\n    this.gesture.setView(button);\n    if (button instanceof FloatingButton) {\n      button.disclosure.setState(Expansion.expanded(), Affinity.Intrinsic);\n      if (this.disclosure.expanded || this.disclosure.expanding) {\n        button.pushIcon(this.closeIcon);\n      }\n    }\n    button.zIndex.setState(0, Affinity.Intrinsic);\n  }\n\n  protected onRemoveButton(button: HtmlView): void {\n    this.gesture.setView(null);\n  }\n\n  protected onInsertItem(item: ButtonItem): void {\n    item.position.setState(\"absolute\", Affinity.Intrinsic);\n    item.right.setState(8, Affinity.Intrinsic);\n    item.bottom.setState(8, Affinity.Intrinsic);\n    item.left.setState(8, Affinity.Intrinsic);\n    item.zIndex.setState(0, Affinity.Intrinsic);\n  }\n\n  protected onRemoveItem(item: ButtonItem): void {\n    // hook\n  }\n\n  protected willExpand(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.buttonStackWillExpand !== void 0) {\n        observer.buttonStackWillExpand(this);\n      }\n    }\n  }\n\n  protected onExpand(): void {\n    const button = this.button;\n    if (button instanceof FloatingButton) {\n      const timing = this.disclosure.timing;\n      button.pushIcon(this.closeIcon, timing !== null ? timing : void 0);\n    }\n\n    this.modalProvider.presentModal(this);\n  }\n\n  protected didExpand(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.buttonStackDidExpand !== void 0) {\n        observer.buttonStackDidExpand(this);\n      }\n    }\n  }\n\n  protected willCollapse(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.buttonStackWillCollapse !== void 0) {\n        observer.buttonStackWillCollapse(this);\n      }\n    }\n  }\n\n  protected onCollapse(): void {\n    this.modalProvider.dismissModal(this);\n\n    const button = this.button;\n    if (button instanceof FloatingButton && button.iconCount > 1) {\n      const timing = this.disclosure.timing;\n      button.popIcon(timing !== null ? timing : void 0);\n    }\n  }\n\n  protected didCollapse(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.buttonStackDidCollapse !== void 0) {\n        observer.buttonStackDidCollapse(this);\n      }\n    }\n  }\n\n  show(timing?: AnyTiming | boolean): void {\n    if (this.opacity.state !== 1) {\n      if (timing === void 0 || timing === true) {\n        timing = this.getLookOr(Look.timing, false);\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      this.willShowStack();\n      if (timing !== false) {\n        this.opacity.setState(1, timing, Affinity.Intrinsic);\n      } else {\n        this.opacity.setState(1, Affinity.Intrinsic);\n        this.didShowStack();\n      }\n    }\n  }\n\n  protected willShowStack(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.buttonStackWillShow !== void 0) {\n        observer.buttonStackWillShow(this);\n      }\n    }\n\n    this.display(\"block\");\n  }\n\n  protected didShowStack(): void {\n    this.requireUpdate(View.NeedsLayout);\n\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.buttonStackDidShow !== void 0) {\n        observer.buttonStackDidShow(this);\n      }\n    }\n  }\n\n  hide(timing?: AnyTiming | boolean): void {\n    if (this.opacity.state !== 0) {\n      if (timing === void 0 || timing === true) {\n        timing = this.getLookOr(Look.timing, false);\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      this.willHideStack();\n      if (timing !== false) {\n        this.opacity.setState(0, timing, Affinity.Intrinsic);\n      } else {\n        this.opacity.setState(0, Affinity.Intrinsic);\n        this.didHideStack();\n      }\n    }\n  }\n\n  protected willHideStack(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.buttonStackWillHide !== void 0) {\n        observer.buttonStackWillHide(this);\n      }\n    }\n  }\n\n  protected didHideStack(): void {\n    this.display(\"none\");\n    this.requireUpdate(View.NeedsLayout);\n\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.buttonStackDidHide !== void 0) {\n        observer.buttonStackDidHide(this);\n      }\n    }\n  }\n\n  protected onClick(event: MouseEvent): void {\n    if (event.target === this.button?.node) {\n      event.stopPropagation();\n    }\n  }\n\n  protected onContextMenu(event: MouseEvent): void {\n    event.preventDefault();\n  }\n\n  @Lazy\n  static get closeIcon(): Graphics {\n    return VectorIcon.create(24, 24, \"M19,6.4L17.6,5L12,10.6L6.4,5L5,6.4L10.6,12L5,17.6L6.4,19L12,13.4L17.6,19L19,17.6L13.4,12Z\");\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Animator} from \"@swim/component\";\nimport {AnyLength, Length, Angle, Transform} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {Look, Feel, MoodVector, ThemeMatrix, ThemeAnimator} from \"@swim/theme\";\nimport {\n  PositionGesture,\n  ViewContextType,\n  ViewContext,\n  ViewFlags,\n  View,\n  ViewRef,\n} from \"@swim/view\";\nimport type {HtmlView, HtmlViewObserver} from \"@swim/dom\";\nimport {\n  Graphics,\n  Icon,\n  FilledIcon,\n  IconViewInit,\n  IconView,\n  IconGraphicsAnimator,\n  SvgIconView,\n} from \"@swim/graphics\";\nimport type {ButtonObserver} from \"./ButtonObserver\";\nimport {ButtonMembraneInit, ButtonMembrane} from \"./ButtonMembrane\";\n\n/** @public */\nexport interface IconButtonInit extends ButtonMembraneInit, IconViewInit {\n}\n\n/** @public */\nexport class IconButton extends ButtonMembrane implements IconView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.iconCount = 0;\n    this.icon = null;\n    this.onClick = this.onClick.bind(this);\n    this.initButton();\n    this.initTheme();\n  }\n\n  override readonly observerType?: Class<HtmlViewObserver & ButtonObserver>;\n\n  protected initButton(): void {\n    this.addClass(\"icon-button\");\n    this.position.setState(\"relative\", Affinity.Intrinsic);\n    this.width.setState(44, Affinity.Intrinsic);\n    this.height.setState(44, Affinity.Intrinsic);\n    this.display.setState(\"flex\", Affinity.Intrinsic);\n    this.justifyContent.setState(\"center\", Affinity.Intrinsic);\n    this.alignItems.setState(\"center\", Affinity.Intrinsic);\n    this.borderTopLeftRadius.setState(4, Affinity.Intrinsic);\n    this.borderTopRightRadius.setState(4, Affinity.Intrinsic);\n    this.borderBottomLeftRadius.setState(4, Affinity.Intrinsic);\n    this.borderBottomRightRadius.setState(4, Affinity.Intrinsic);\n    this.overflowX.setState(\"hidden\", Affinity.Intrinsic);\n    this.overflowY.setState(\"hidden\", Affinity.Intrinsic);\n    this.userSelect.setState(\"none\", Affinity.Intrinsic);\n    this.cursor.setState(\"pointer\", Affinity.Intrinsic);\n  }\n\n  protected initTheme(): void {\n    this.modifyTheme(Feel.default, [[Feel.translucent, 1]]);\n  }\n\n  @Animator({type: Number, value: 0.5, updateFlags: View.NeedsLayout})\n  readonly xAlign!: Animator<this, number>;\n\n  @Animator({type: Number, value: 0.5, updateFlags: View.NeedsLayout})\n  readonly yAlign!: Animator<this, number>;\n\n  @ThemeAnimator({type: Length, value: Length.px(24), updateFlags: View.NeedsLayout})\n  readonly iconWidth!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator({type: Length, value: Length.px(24), updateFlags: View.NeedsLayout})\n  readonly iconHeight!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator<IconButton, Color | null, AnyColor | null>({\n    type: Color,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    didSetValue(newIconColor: Color | null, oldIconColor: Color | null): void {\n      if (newIconColor !== null) {\n        const oldGraphics = this.owner.graphics.value;\n        if (oldGraphics instanceof FilledIcon) {\n          const newGraphics = oldGraphics.withFillColor(newIconColor);\n          this.owner.graphics.setState(newGraphics, Affinity.Reflexive);\n        }\n      }\n    },\n  })\n  readonly iconColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({extends: IconGraphicsAnimator, value: null, type: Object, updateFlags: View.NeedsLayout})\n  readonly graphics!: ThemeAnimator<this, Graphics | null>;\n\n  /** @internal */\n  static IconRef = ViewRef.define<IconButton, SvgIconView, {iconIndex: number}>(\"IconRef\", {\n    implements: true,\n    type: SvgIconView,\n    observes: true,\n    init(): void {\n      this.iconIndex = 0;\n    },\n    viewDidAnimate(viewContext: ViewContext, iconView: SvgIconView): void {\n      if (!iconView.opacity.tweening && this.iconIndex !== this.owner.iconCount) {\n        iconView.remove();\n        if (this.iconIndex > this.owner.iconCount) {\n          this.owner.setFastener(this.name, null);\n        }\n      }\n    },\n  });\n\n  /** @internal */\n  iconCount: number;\n\n  icon: ViewRef<this, SvgIconView> | null;\n\n  pushIcon(icon: Graphics, timing?: AnyTiming | boolean): void {\n    const oldIconCount = this.iconCount;\n    const newIconCount = oldIconCount + 1;\n    this.iconCount = newIconCount;\n\n    if (timing === void 0 && oldIconCount === 0) {\n      timing = false;\n    } else if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n\n    const oldIconKey = \"icon\" + oldIconCount;\n    const oldIconRef: ViewRef<this, SvgIconView> | null = this.getFastener(oldIconKey, ViewRef);\n    const oldIconView = oldIconRef !== null ? oldIconRef.view : null;\n    if (oldIconView !== null) {\n      if (timing !== false) {\n        oldIconView.opacity.setState(0, timing, Affinity.Intrinsic);\n        oldIconView.cssTransform.setState(Transform.rotate(Angle.deg(90)), timing, Affinity.Intrinsic);\n      } else {\n        oldIconView.remove();\n      }\n    }\n\n    const newIconKey = \"icon\" + newIconCount;\n    const newIconRef = IconButton.IconRef.create(this);\n    Object.defineProperty(newIconRef, \"name\", {\n      value: newIconKey,\n      enumerable: true,\n      configurable: true,\n    });\n    newIconRef.iconIndex = newIconCount;\n    this.icon = newIconRef;\n    const newIconView = SvgIconView.create();\n\n    newIconView.setStyle(\"position\", \"absolute\");\n    newIconView.setStyle(\"left\", \"0\");\n    newIconView.setStyle(\"top\", \"0\");\n    newIconView.opacity.setState(0, Affinity.Intrinsic);\n    newIconView.opacity.setState(1, timing, Affinity.Intrinsic);\n    newIconView.cssTransform.setState(Transform.rotate(Angle.deg(-90)), Affinity.Intrinsic);\n    newIconView.cssTransform.setState(Transform.rotate(Angle.deg(0)), timing, Affinity.Intrinsic);\n    newIconView.pointerEvents.setState(\"none\", Affinity.Intrinsic);\n    newIconView.xAlign.setInherits(true);\n    newIconView.yAlign.setInherits(true);\n    newIconView.iconWidth.setInherits(true);\n    newIconView.iconHeight.setInherits(true);\n    newIconView.iconColor.setInherits(true);\n    newIconView.graphics.setState(icon, Affinity.Intrinsic);\n    newIconRef.setView(newIconView);\n    this.setFastener(newIconKey, newIconRef);\n    this.appendChild(newIconView, newIconKey);\n  }\n\n  popIcon(timing?: AnyTiming | boolean): SvgIconView | null {\n    const oldIconCount = this.iconCount;\n    const newIconCount = oldIconCount - 1;\n    this.iconCount = newIconCount;\n\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n\n    const oldIconKey = \"icon\" + oldIconCount;\n    const oldIconRef: ViewRef<this, SvgIconView> | null = this.getFastener(oldIconKey, ViewRef);\n    const oldIconView = oldIconRef !== null ? oldIconRef.view : null;\n    if (oldIconView !== null) {\n      if (timing !== false) {\n        oldIconView.opacity.setState(0, timing, Affinity.Intrinsic);\n        oldIconView.cssTransform.setState(Transform.rotate(Angle.deg(-90)), timing, Affinity.Intrinsic);\n      } else {\n        oldIconView.remove();\n        this.setFastener(oldIconKey, null);\n      }\n    }\n\n    const newIconKey = \"icon\" + newIconCount;\n    const newIconRef: ViewRef<this, SvgIconView> | null = this.getFastener(newIconKey, ViewRef);\n    this.icon = newIconRef;\n    const newIconView = newIconRef !== null ? newIconRef.view : null;\n    if (newIconView !== null) {\n      newIconView.opacity.setState(1, timing, Affinity.Intrinsic);\n      newIconView.cssTransform.setState(Transform.rotate(Angle.deg(0)), timing, Affinity.Intrinsic);\n      this.appendChild(newIconView, newIconKey);\n    }\n\n    return oldIconView;\n  }\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    if (this.backgroundColor.hasAffinity(Affinity.Intrinsic)) {\n      let backgroundColor = this.getLookOr(Look.backgroundColor, null);\n      if (!this.gesture.hovering && backgroundColor instanceof Color) {\n        backgroundColor = backgroundColor.alpha(0);\n      }\n      this.backgroundColor.setState(backgroundColor, timing, Affinity.Intrinsic);\n    }\n    if (!this.graphics.inherited) {\n      const oldGraphics = this.graphics.value;\n      if (oldGraphics instanceof Icon) {\n        const newGraphics = oldGraphics.withTheme(theme, mood);\n        this.graphics.setState(newGraphics, oldGraphics.isThemed() ? timing : false, Affinity.Reflexive);\n      }\n    }\n  }\n\n  protected override onResize(viewContext: ViewContextType<this>): void {\n    super.onResize(viewContext);\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected override needsDisplay(displayFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    if ((this.flags & View.NeedsLayout) === 0) {\n      displayFlags &= ~View.NeedsLayout;\n    }\n    return displayFlags;\n  }\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.layoutIcon();\n  }\n\n  protected layoutIcon(): void {\n    const fasteners = this.fasteners;\n    if (fasteners !== null) {\n      let viewWidth: Length | number | null = this.width.value;\n      viewWidth = viewWidth instanceof Length ? viewWidth.pxValue() : this.node.offsetWidth;\n      let viewHeight: Length | number | null = this.height.value;\n      viewHeight = viewHeight instanceof Length ? viewHeight.pxValue() : this.node.offsetHeight;\n      for (const fastenerName in fasteners) {\n        const fastener = fasteners[fastenerName];\n        if (fastener instanceof IconButton.IconRef) {\n          const iconView = fastener.view;\n          if (iconView !== null) {\n            iconView.width.setState(viewWidth, Affinity.Intrinsic);\n            iconView.height.setState(viewHeight, Affinity.Intrinsic);\n            iconView.viewBox.setState(\"0 0 \" + viewWidth + \" \" + viewHeight, Affinity.Intrinsic);\n          }\n        }\n      }\n    }\n  }\n\n  protected override onMount(): void {\n    super.onMount();\n    this.on(\"click\", this.onClick);\n  }\n\n  protected override onUnmount(): void {\n    this.off(\"click\", this.onClick);\n    super.onUnmount();\n  }\n\n  get hovers(): boolean {\n    return true;\n  }\n\n  setHovers(hovers: boolean): void {\n    if (this.hovers !== hovers) {\n      Object.defineProperty(this, \"hovers\", {\n        value: hovers,\n        configurable: true,\n      });\n    }\n  }\n\n  @PositionGesture<IconButton, HtmlView>({\n    extends: true,\n    didStartHovering(): void {\n      if (this.owner.hovers) {\n        this.owner.modifyMood(Feel.default, [[Feel.hovering, 1]]);\n        const timing = this.owner.getLook(Look.timing);\n        if (this.owner.backgroundColor.hasAffinity(Affinity.Intrinsic)) {\n          this.owner.backgroundColor.setState(this.owner.getLookOr(Look.backgroundColor, null), timing, Affinity.Intrinsic);\n        }\n      }\n    },\n    didStopHovering(): void {\n      this.owner.modifyMood(Feel.default, [[Feel.hovering, void 0]]);\n      const timing = this.owner.getLook(Look.timing);\n      if (this.owner.backgroundColor.hasAffinity(Affinity.Intrinsic)) {\n        let backgroundColor = this.owner.getLookOr(Look.backgroundColor, null);\n        if (backgroundColor !== null) {\n          backgroundColor = backgroundColor.alpha(0);\n        }\n        this.owner.backgroundColor.setState(backgroundColor, timing, Affinity.Intrinsic);\n      }\n    },\n  })\n  override readonly gesture!: PositionGesture<this, HtmlView>;\n  static override readonly gesture: MemberFastenerClass<IconButton, \"gesture\">;\n\n  protected onClick(event: MouseEvent): void {\n    event.stopPropagation();\n\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.buttonDidPress !== void 0) {\n        observer.buttonDidPress(this);\n      }\n    }\n  }\n\n  override init(init: IconButtonInit): void {\n    super.init(init);\n    IconView.init(this, init);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Angle, Transform} from \"@swim/math\";\nimport {Affinity} from \"@swim/component\";\nimport {AnyColor, Color, AnyExpansion, Expansion} from \"@swim/style\";\nimport {Look, ThemeAnimator, ExpansionThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, ViewFlags, View} from \"@swim/view\";\nimport {HtmlView, SvgView} from \"@swim/dom\";\n\n/** @public */\nexport class DisclosureButton extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initDisclosureButton();\n  }\n\n  protected initDisclosureButton(): void {\n    this.addClass(\"disclosure-button\");\n    this.display.setState(\"flex\", Affinity.Intrinsic);\n    this.justifyContent.setState(\"center\", Affinity.Intrinsic);\n    this.alignItems.setState(\"center\", Affinity.Intrinsic);\n    this.flexGrow.setState(1, Affinity.Intrinsic);\n    this.flexShrink.setState(0, Affinity.Intrinsic);\n    this.cursor.setState(\"pointer\", Affinity.Intrinsic);\n\n    const icon = this.appendChild(SvgView, \"icon\");\n    icon.width.setState(24, Affinity.Intrinsic);\n    icon.height.setState(24, Affinity.Intrinsic);\n    icon.viewBox.setState(\"0 0 24 24\", Affinity.Intrinsic);\n    const arrow = icon.appendChild(\"polygon\", \"arrow\");\n    arrow.points.setState(\"0 4 -6 -2 -4.59 -3.41 0 1.17 4.59 -3.41 6 -2\", Affinity.Intrinsic);\n    arrow.transform.setState(Transform.translate(12, 12).rotate(Angle.deg(0)), Affinity.Intrinsic);\n  }\n\n  get icon(): SvgView {\n    return this.getChild(\"icon\") as SvgView;\n  }\n\n  get arrow(): SvgView {\n    const icon = this.icon;\n    return icon.getChild(\"arrow\") as SvgView;\n  }\n\n  @ThemeAnimator({type: Expansion, inherits: true, updateFlags: View.NeedsLayout})\n  readonly disclosure!: ExpansionThemeAnimator<this, Expansion, AnyExpansion>;\n\n  @ThemeAnimator({type: Color, inherits: true, look: Look.color, updateFlags: View.NeedsLayout})\n  readonly collapsedColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Color, inherits: true, look: Look.accentColor, updateFlags: View.NeedsLayout})\n  readonly expandedColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  protected override needsDisplay(displayFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    if ((this.flags & View.NeedsLayout) === 0) {\n      displayFlags &= ~View.NeedsLayout;\n    }\n    return displayFlags;\n  }\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    const phase = this.disclosure.getPhase();\n    const collapsedColor = this.collapsedColor.value;\n    const expandedColor = this.expandedColor.value;\n    if (collapsedColor !== null && expandedColor !== null && this.arrow.fill.hasAffinity(Affinity.Intrinsic)) {\n      const colorInterpolator = collapsedColor.interpolateTo(expandedColor);\n      this.arrow.fill.setState(colorInterpolator(phase), Affinity.Intrinsic);\n    }\n    const transform = Transform.translate(12, 12).rotate(Angle.deg(-180 * phase));\n    this.arrow.transform.setState(transform, Affinity.Intrinsic);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Property, Animator} from \"@swim/component\";\nimport {Length, R2Box} from \"@swim/math\";\nimport type {Color} from \"@swim/style\";\nimport {Look, Feel, MoodVector, ThemeMatrix} from \"@swim/theme\";\nimport {\n  PositionGestureInput,\n  PositionGesture,\n  ViewContextType,\n  ViewFlags,\n  View,\n  ViewRef,\n} from \"@swim/view\";\nimport {HtmlViewInit, HtmlView, SvgView} from \"@swim/dom\";\nimport {Graphics, PathContext, PathRenderer} from \"@swim/graphics\";\nimport type {TokenViewObserver} from \"./TokenViewObserver\";\n\n/** @public */\nexport type TokenViewState = \"collapsed\" | \"expanding\" | \"expanded\" | \"collapsing\";\n\n/** @public */\nexport interface TokenViewInit extends HtmlViewInit {\n}\n\n/** @public */\nexport class TokenView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.tokenState = \"expanded\";\n    this.onClickHead = this.onClickHead.bind(this);\n    this.onClickBody = this.onClickBody.bind(this);\n    this.onClickFoot = this.onClickFoot.bind(this);\n    this.initToken();\n  }\n\n  override readonly observerType?: Class<TokenViewObserver>;\n\n  protected initToken(): void {\n    this.addClass(\"token\");\n    this.position.setState(\"relative\", Affinity.Intrinsic);\n    this.height.setState(32, Affinity.Intrinsic);\n    this.boxSizing.setState(\"content-box\", Affinity.Intrinsic);\n    this.userSelect.setState(\"none\", Affinity.Intrinsic);\n    this.shape.insertView();\n  }\n\n  protected initShape(shapeView: SvgView): void {\n    shapeView.addClass(\"shape\");\n    shapeView.setStyle(\"position\", \"absolute\");\n    shapeView.setStyle(\"top\", \"0\");\n    shapeView.setStyle(\"left\", \"0\");\n\n    this.head.insertView(shapeView);\n    this.headIcon.attachView();\n    this.body.insertView(shapeView);\n    this.foot.insertView(shapeView);\n    this.footIcon.attachView();\n  }\n\n  protected initHead(headView: SvgView): void {\n    headView.addClass(\"head\");\n    headView.fillRule.setState(\"evenodd\", Affinity.Intrinsic);\n    headView.pointerEvents.setState(\"bounding-box\", Affinity.Intrinsic);\n    headView.cursor.setState(\"pointer\", Affinity.Intrinsic);\n  }\n\n  protected initHeadIcon(headIconView: SvgView): void {\n    headIconView.addClass(\"head-icon\");\n    headIconView.pointerEvents.setState(\"none\", Affinity.Intrinsic);\n  }\n\n  protected initBody(bodyView: SvgView): void {\n    bodyView.addClass(\"body\");\n    bodyView.pointerEvents.setState(\"fill\", Affinity.Intrinsic);\n    bodyView.cursor.setState(\"pointer\", Affinity.Intrinsic);\n  }\n\n  protected initFoot(footView: SvgView): void {\n    footView.addClass(\"foot\");\n    footView.fillRule.setState(\"evenodd\", Affinity.Intrinsic);\n    footView.pointerEvents.setState(\"bounding-box\", Affinity.Intrinsic);\n    footView.cursor.setState(\"pointer\", Affinity.Intrinsic);\n  }\n\n  protected initFootIcon(footIconView: SvgView): void {\n    footIconView.addClass(\"foot-icon\");\n    footIconView.pointerEvents.setState(\"none\", Affinity.Intrinsic);\n  }\n\n  protected initLabelContainer(labelContainer: HtmlView): void {\n    labelContainer.addClass(\"label\");\n    labelContainer.display.setState(\"block\", Affinity.Intrinsic);\n    labelContainer.position.setState(\"absolute\", Affinity.Intrinsic);\n    labelContainer.top.setState(0, Affinity.Intrinsic);\n    labelContainer.left.setState(0, Affinity.Intrinsic);\n    labelContainer.overflowX.setState(\"hidden\", Affinity.Intrinsic);\n    labelContainer.overflowY.setState(\"hidden\", Affinity.Intrinsic);\n    labelContainer.pointerEvents.setState(\"none\", Affinity.Intrinsic);\n  }\n\n  protected initLabel(labelView: HtmlView): void {\n    labelView.position.setState(\"absolute\", Affinity.Intrinsic);\n    labelView.top.setState(0, Affinity.Intrinsic);\n    labelView.bottom.setState(0, Affinity.Intrinsic);\n    labelView.left.setState(0, Affinity.Intrinsic);\n  }\n\n  readonly tokenState: TokenViewState;\n\n  get expanded(): boolean {\n    return this.tokenState === \"expanded\" || this.tokenState === \"expanding\";\n  }\n\n  get collapsed(): boolean {\n    return this.tokenState === \"collapsed\" || this.tokenState === \"collapsing\";\n  }\n\n  @Animator<TokenView, number>({\n    type: Number,\n    value: 1,\n    updateFlags: View.NeedsLayout,\n    didTransition(expandedPhase: number): void {\n      const tokenState = this.owner.tokenState;\n      if (tokenState === \"expanding\" && expandedPhase === 1) {\n        this.owner.didExpand();\n      } else if (tokenState === \"collapsing\" && expandedPhase === 0) {\n        this.owner.didCollapse();\n      }\n    },\n  })\n  readonly expandedPhase!: Animator<this, number>;\n\n  @ViewRef<TokenView, SvgView>({\n    key: true,\n    type: SvgView,\n    binds: true,\n    didAttachView(shapeView: SvgView): void {\n      this.owner.initShape(shapeView);\n    },\n  })\n  readonly shape!: ViewRef<this, SvgView>;\n  static readonly shape: MemberFastenerClass<TokenView, \"shape\">;\n\n  /** @internal */\n  get fillLook(): Look<Color> {\n    return Look.accentColor;\n  }\n\n  @ViewRef<TokenView, SvgView>({\n    key: true,\n    type: SvgView.forTag(\"path\"),\n    observes: true,\n    didAttachView(headView: SvgView): void {\n      this.owner.initHead(headView);\n      this.owner.headGesture.setView(headView);\n    },\n    willDetachView(headView: SvgView): void {\n      this.owner.headGesture.setView(null);\n    },\n    viewDidMount(headView: SvgView): void {\n      headView.on(\"click\", this.owner.onClickHead);\n    },\n    viewWillUnmount(headView: SvgView): void {\n      headView.off(\"click\", this.owner.onClickHead);\n    },\n    viewDidApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean, headView: SvgView): void {\n      headView.fill.setState(theme.getOr(this.owner.fillLook, mood, null), timing, Affinity.Intrinsic);\n      const headIconView = this.owner.headIcon.view;\n      if (headIconView !== null && headIconView.fill.hasAffinity(Affinity.Intrinsic)) {\n        const iconColor = theme.getOr(this.owner.fillLook, mood.updated(Feel.embossed, 1), null);\n        headIconView.fill.setState(iconColor, timing, Affinity.Intrinsic);\n      }\n    },\n  })\n  readonly head!: ViewRef<this, SvgView>;\n  static readonly head: MemberFastenerClass<TokenView, \"head\">;\n\n  @PositionGesture<TokenView, SvgView>({\n    didStartHovering(): void {\n      const headView = this.view!;\n      headView.modifyMood(Feel.default, [[Feel.hovering, 1]]);\n      const timing = headView.getLook(Look.timing);\n      headView.fill.setState(headView.getLookOr(this.owner.fillLook, null), timing, Affinity.Intrinsic);\n      const headIconView = this.owner.headIcon.view;\n      if (headIconView !== null && headIconView.fill.hasAffinity(Affinity.Intrinsic)) {\n        const iconColor = headView.getLookOr(this.owner.fillLook, headView.mood.getValue().updated(Feel.embossed, 1), null);\n        headIconView.fill.setState(iconColor, timing, Affinity.Intrinsic);\n      }\n    },\n    didStopHovering(): void {\n      const headView = this.view!;\n      headView.modifyMood(Feel.default, [[Feel.hovering, void 0]]);\n      const timing = headView.getLook(Look.timing);\n      headView.fill.setState(headView.getLookOr(this.owner.fillLook, null), timing, Affinity.Intrinsic);\n      const headIconView = this.owner.headIcon.view;\n      if (headIconView !== null && headIconView.fill.hasAffinity(Affinity.Intrinsic)) {\n        const iconColor = headView.getLookOr(this.owner.fillLook, headView.mood.getValue().updated(Feel.embossed, 1), null);\n        headIconView.fill.setState(iconColor, timing, Affinity.Intrinsic);\n      }\n    },\n    didBeginPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.inputType !== \"mouse\") {\n        this.beginHover(input, event);\n      }\n    },\n    didMovePress(input: PositionGestureInput, event: Event | null): void {\n      if (input.isRunaway()) {\n        this.cancelPress(input, event);\n      }\n    },\n    didEndPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.inputType !== \"mouse\" || !this.view!.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n      }\n    },\n    didCancelPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.inputType !== \"mouse\" || !this.view!.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n      }\n    },\n  })\n  readonly headGesture!: PositionGesture<this, SvgView>;\n  static readonly headGesture: MemberFastenerClass<TokenView, \"headGesture\">;\n\n  /** @internal */\n  @ViewRef<TokenView, SvgView>({\n    key: true,\n    type: SvgView.forTag(\"path\"),\n    didAttachView(headIconView: SvgView): void {\n      this.owner.initHeadIcon(headIconView);\n    },\n    insertChild(parent: View, child: SvgView, target: View | number | null, key: string | undefined): void {\n      const shapeView = this.owner.shape.view;\n      if (shapeView !== null) {\n        shapeView.insertChild(child, this.owner.body.view, key);\n      }\n    },\n  })\n  readonly headIcon!: ViewRef<this, SvgView>;\n  static readonly headIcon: MemberFastenerClass<TokenView, \"headIcon\">;\n\n  @Property<TokenView, Graphics | null, never, {embossed: boolean}>({\n    implements: true,\n    type: Object,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    embossed: true,\n  })\n  readonly icon!: Property<this, Graphics | null> & {embossed: boolean};\n\n  @ViewRef<TokenView, SvgView>({\n    key: true,\n    type: SvgView.forTag(\"path\"),\n    observes: true,\n    didAttachView(bodyView: SvgView): void {\n      this.owner.initBody(bodyView);\n      this.owner.bodyGesture.setView(bodyView);\n    },\n    willDetachView(bodyView: SvgView): void {\n      this.owner.bodyGesture.setView(null);\n    },\n    viewDidMount(headView: SvgView): void {\n      headView.on(\"click\", this.owner.onClickBody);\n    },\n    viewWillUnmount(headView: SvgView): void {\n      headView.off(\"click\", this.owner.onClickBody);\n    },\n    viewDidApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean, bodyView: SvgView): void {\n      bodyView.fill.setState(theme.getOr(this.owner.fillLook, mood, null), timing, Affinity.Intrinsic);\n      const labelView = this.owner.label.view;\n      if (labelView !== null && labelView.color.hasAffinity(Affinity.Intrinsic)) {\n        labelView.color.setState(theme.getOr(Look.backgroundColor, mood, null), timing, Affinity.Intrinsic);\n      }\n    },\n  })\n  readonly body!: ViewRef<this, SvgView>;\n  static readonly body: MemberFastenerClass<TokenView, \"body\">;\n\n  @PositionGesture<TokenView, SvgView>({\n    didStartHovering(): void {\n      const bodyView = this.view!;\n      bodyView.modifyMood(Feel.default, [[Feel.hovering, 1]]);\n      const timing = bodyView.getLook(Look.timing);\n      bodyView.fill.setState(bodyView.getLookOr(this.owner.fillLook, null), timing, Affinity.Intrinsic);\n      const labelView = this.owner.label.view;\n      if (labelView !== null && labelView.color.hasAffinity(Affinity.Intrinsic)) {\n        labelView.color.setState(bodyView.getLookOr(Look.backgroundColor, null), timing, Affinity.Intrinsic);\n      }\n    },\n    didStopHovering(): void {\n      const bodyView = this.view!;\n      bodyView.modifyMood(Feel.default, [[Feel.hovering, void 0]]);\n      const timing = bodyView.getLook(Look.timing);\n      bodyView.fill.setState(bodyView.getLookOr(this.owner.fillLook, null), timing, Affinity.Intrinsic);\n      const labelView = this.owner.label.view;\n      if (labelView !== null && labelView.color.hasAffinity(Affinity.Intrinsic)) {\n        labelView.color.setState(bodyView.getLookOr(Look.backgroundColor, null), timing, Affinity.Intrinsic);\n      }\n    },\n    didBeginPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.inputType !== \"mouse\") {\n        this.beginHover(input, event);\n      }\n    },\n    didMovePress(input: PositionGestureInput, event: Event | null): void {\n      if (input.isRunaway()) {\n        this.cancelPress(input, event);\n      }\n    },\n    didEndPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.inputType !== \"mouse\" || !this.view!.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n      }\n    },\n    didCancelPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.inputType !== \"mouse\" || !this.view!.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n      }\n    },\n  })\n  readonly bodyGesture!: PositionGesture<this, SvgView>;\n  static readonly bodyGesture: MemberFastenerClass<TokenView, \"bodyGesture\">;\n\n  @ViewRef<TokenView, SvgView>({\n    key: true,\n    type: SvgView.forTag(\"path\"),\n    observes: true,\n    didAttachView(footView: SvgView): void {\n      this.owner.initFoot(footView);\n      this.owner.footGesture.setView(footView);\n    },\n    willDetachView(footView: SvgView): void {\n      this.owner.footGesture.setView(null);\n    },\n    viewDidMount(footView: SvgView): void {\n      footView.on(\"click\", this.owner.onClickFoot);\n    },\n    viewWillUnmount(footView: SvgView): void {\n      footView.off(\"click\", this.owner.onClickFoot);\n    },\n    viewDidApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean, footView: SvgView): void {\n      footView.fill.setState(theme.getOr(this.owner.fillLook, mood, null), timing, Affinity.Intrinsic);\n      const footIconView = this.owner.footIcon.view;\n      if (footIconView !== null && footIconView.fill.hasAffinity(Affinity.Intrinsic)) {\n        const iconColor = theme.getOr(this.owner.fillLook, mood.updated(Feel.embossed, 1), null);\n        footIconView.fill.setState(iconColor, timing, Affinity.Intrinsic);\n      }\n    },\n  })\n  readonly foot!: ViewRef<this, SvgView>;\n  static readonly foot: MemberFastenerClass<TokenView, \"foot\">;\n\n  @PositionGesture<TokenView, SvgView>({\n    didStartHovering(): void {\n      const footView = this.view!;\n      footView.modifyMood(Feel.default, [[Feel.hovering, 1]]);\n      const timing = footView.getLook(Look.timing);\n      footView.fill.setState(footView.getLookOr(this.owner.fillLook, null), timing, Affinity.Intrinsic);\n      const footIconView = this.owner.footIcon.view;\n      if (footIconView !== null && footIconView.fill.hasAffinity(Affinity.Intrinsic)) {\n        const iconColor = footView.getLookOr(this.owner.fillLook, footView.mood.getValue().updated(Feel.embossed, 1), null);\n        footIconView.fill.setState(iconColor, timing, Affinity.Intrinsic);\n      }\n    },\n    didStopHovering(): void {\n      const footView = this.view!;\n      footView.modifyMood(Feel.default, [[Feel.hovering, void 0]]);\n      const timing = footView.getLook(Look.timing);\n      footView.fill.setState(footView.getLookOr(this.owner.fillLook, null), timing, Affinity.Intrinsic);\n      const footIconView = this.owner.footIcon.view;\n      if (footIconView !== null && footIconView.fill.hasAffinity(Affinity.Intrinsic)) {\n        const iconColor = footView.getLookOr(this.owner.fillLook, footView.mood.getValue().updated(Feel.embossed, 1), null);\n        footIconView.fill.setState(iconColor, timing, Affinity.Intrinsic);\n      }\n    },\n    didBeginPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.inputType !== \"mouse\") {\n        this.beginHover(input, event);\n      }\n    },\n    didMovePress(input: PositionGestureInput, event: Event | null): void {\n      if (input.isRunaway()) {\n        this.cancelPress(input, event);\n      }\n    },\n    didEndPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.inputType !== \"mouse\" || !this.view!.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n      }\n    },\n    didCancelPress(input: PositionGestureInput, event: Event | null): void {\n      if (input.inputType !== \"mouse\" || !this.view!.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n      }\n    },\n  })\n  readonly footGesture!: PositionGesture<this, SvgView>;\n  static readonly footGesture: MemberFastenerClass<TokenView, \"footGesture\">;\n\n  /** @internal */\n  @ViewRef<TokenView, SvgView>({\n    key: true,\n    type: SvgView.forTag(\"path\"),\n    didAttachView(footIconView: SvgView): void {\n      this.owner.initFootIcon(footIconView);\n    },\n    insertChild(parent: View, child: SvgView, target: View | number | null, key: string | undefined): void {\n      const shapeView = this.owner.shape.view;\n      if (shapeView !== null) {\n        shapeView.appendChild(child, key);\n      }\n    },\n  })\n  readonly footIcon!: ViewRef<this, SvgView>;\n  static readonly footIcon: MemberFastenerClass<TokenView, \"footIcon\">;\n\n  @Property<TokenView, Graphics | null, never, {embossed: boolean}>({\n    implements: true,\n    type: Object,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    init(): void {\n      this.embossed = true;\n    },\n  })\n  readonly accessory!: Property<this, Graphics | null> & {embossed: boolean};\n\n  @ViewRef<TokenView, HtmlView>({\n    key: true,\n    type: HtmlView,\n    binds: true,\n    didAttachView(labelContainer: HtmlView): void {\n      this.owner.initLabelContainer(labelContainer);\n    },\n  })\n  readonly labelContainer!: ViewRef<this, HtmlView>;\n  static readonly labelContainer: MemberFastenerClass<TokenView, \"labelContainer\">;\n\n  @ViewRef<TokenView, HtmlView>({\n    key: true,\n    type: HtmlView,\n    didAttachView(labelView: HtmlView): void {\n      if (labelView.parent === null) {\n        this.owner.labelContainer.insertView();\n        const labelContainer = this.owner.labelContainer.view;\n        if (labelContainer !== null) {\n          labelContainer.appendChild(labelView);\n        }\n      }\n      this.owner.initLabel(labelView);\n    },\n  })\n  readonly label!: ViewRef<this, HtmlView>;\n  static readonly label: MemberFastenerClass<TokenView, \"label\">;\n\n  protected override needsProcess(processFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    if ((processFlags & View.NeedsLayout) !== 0) {\n      processFlags |= View.NeedsAnimate;\n    }\n    return processFlags;\n  }\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.layoutToken();\n  }\n\n  protected layoutToken(): void {\n    const gap = 2;\n\n    const paddingTop = this.paddingTop.getStateOr(Length.zero()).pxValue();\n    const paddingRight = this.paddingRight.getStateOr(Length.zero()).pxValue();\n    const paddingBottom = this.paddingBottom.getStateOr(Length.zero()).pxValue();\n    const paddingLeft = this.paddingLeft.getStateOr(Length.zero()).pxValue();\n    const boxHeight = this.node.clientHeight;\n    const tokenHeight = boxHeight - paddingTop - paddingBottom;\n    const radius = tokenHeight / 2;\n    const pad = Math.sqrt(gap * gap + 2 * radius * gap);\n    const padAngle = Math.asin(pad / (radius + gap));\n    const labelPaddingLeft = radius / 2;\n    const labelPaddingRight = radius;\n    const accessoryPaddingRight = radius / 2;\n    const expandedPhase = this.expandedPhase.value;\n\n    const icon = this.icon.value;\n    const accessoryIcon = this.accessory.value;\n\n    let labelWidth = 0;\n    let bodyWidth = 0;\n    const labelView = this.label.view;\n    if (labelView !== null) {\n      labelWidth = labelView.node.clientWidth;\n      bodyWidth += labelPaddingLeft + labelWidth + labelPaddingRight;\n    }\n\n    let accessoryWidth = 0;\n    let footWidth = 0;\n    if (accessoryIcon !== null) {\n      accessoryWidth = 2 * radius;\n      footWidth += accessoryWidth + accessoryPaddingRight;\n    }\n\n    let tokenWidth = tokenHeight;\n    if (expandedPhase !== 0 && bodyWidth !== 0) {\n      tokenWidth += gap + expandedPhase * bodyWidth;\n    }\n    const bodyRight = tokenWidth;\n    if (expandedPhase !== 0 && footWidth !== 0) {\n      tokenWidth += gap + expandedPhase * footWidth;\n    }\n\n    const width = tokenWidth + paddingLeft + paddingRight;\n    const height = boxHeight;\n\n    this.width.setState(tokenWidth, Affinity.Intrinsic);\n\n    const labelContainer = this.labelContainer.view;\n    if (labelContainer !== null) {\n      labelContainer.display.setState(expandedPhase !== 0 ? \"block\" : \"none\", Affinity.Intrinsic);\n      labelContainer.left.setState(paddingLeft + tokenHeight + gap + labelPaddingLeft, Affinity.Intrinsic);\n      labelContainer.top.setState(paddingTop, Affinity.Intrinsic);\n      labelContainer.width.setState(expandedPhase * labelWidth, Affinity.Intrinsic);\n      labelContainer.height.setState(tokenHeight, Affinity.Intrinsic);\n    }\n\n    const shapeView = this.shape.view;\n    if (shapeView !== null) {\n      shapeView.width.setState(width, Affinity.Intrinsic);\n      shapeView.height.setState(height, Affinity.Intrinsic);\n      shapeView.viewBox.setState(\"0 0 \" + width + \" \" + height, Affinity.Intrinsic);\n    }\n\n    const headView = this.head.view;\n    if (headView !== null) {\n      const context = new PathContext();\n      context.setPrecision(3);\n      context.arc(paddingLeft + radius, paddingTop + radius, radius, -(Math.PI / 2), 3 * (Math.PI / 2));\n      context.closePath();\n      if (icon !== null && !this.icon.embossed) {\n        const renderer = new PathRenderer(context);\n        const frame = new R2Box(paddingLeft, paddingTop, paddingLeft + tokenHeight, paddingTop + tokenHeight);\n        icon.render(renderer, frame);\n        this.headIcon.removeView();\n      }\n      headView.d.setState(context.toString(), Affinity.Intrinsic);\n    }\n    const headIconView = this.headIcon.view;\n    if (headIconView !== null) {\n      if (icon !== null && this.icon.embossed) {\n        const context = new PathContext();\n        context.setPrecision(3);\n        const renderer = new PathRenderer(context);\n        const frame = new R2Box(paddingLeft, paddingTop, paddingLeft + tokenHeight, paddingTop + tokenHeight);\n        icon.render(renderer, frame);\n        headIconView.d.setState(context.toString(), Affinity.Intrinsic);\n        this.headIcon.insertView();\n      } else {\n        this.headIcon.removeView();\n      }\n    }\n\n    const bodyView = this.body.view;\n    if (bodyView !== null) {\n      const context = new PathContext();\n      context.setPrecision(3);\n      if (expandedPhase !== 0) {\n        const u = 1 - expandedPhase;\n        context.arc(paddingLeft + radius, paddingTop + radius, radius + gap, -(Math.PI / 2) + padAngle, Math.PI / 2 - padAngle);\n        context.arc(paddingLeft + bodyRight - radius - u * gap, paddingTop + radius, radius + u * gap, Math.PI / 2 - u * padAngle, -(Math.PI / 2) + u * padAngle, true);\n        context.closePath();\n      }\n      bodyView.d.setState(context.toString(), Affinity.Intrinsic);\n    }\n\n    const footView = this.foot.view;\n    if (footView !== null && accessoryIcon !== null) {\n      const context = new PathContext();\n      context.setPrecision(3);\n      if (expandedPhase !== 0) {\n        const u = 1 - expandedPhase;\n        context.arc(paddingLeft + bodyRight - radius, paddingTop + radius, radius + gap, -(Math.PI / 2) + padAngle, Math.PI / 2 - padAngle);\n        context.arc(paddingLeft + tokenWidth - radius - u * gap, paddingTop + radius, radius + u * gap, Math.PI / 2 - u * padAngle, -(Math.PI / 2) + u * padAngle, true);\n        context.closePath();\n        if (accessoryIcon !== null && !this.accessory.embossed) {\n          const renderer = new PathRenderer(context);\n          const frame = new R2Box(paddingLeft + bodyRight + gap, paddingTop, paddingLeft + bodyRight + gap + 2 * radius, paddingTop + 2 * radius);\n          accessoryIcon.render(renderer, frame);\n          this.headIcon.removeView();\n        }\n      }\n      footView.d.setState(context.toString(), Affinity.Intrinsic);\n    }\n    const footIconView = this.footIcon.view;\n    if (footIconView !== null) {\n      if (accessoryIcon !== null && this.accessory.embossed) {\n        const context = new PathContext();\n        context.setPrecision(3);\n        if (expandedPhase !== 0) {\n          const renderer = new PathRenderer(context);\n          const frame = new R2Box(paddingLeft + bodyRight + gap, paddingTop, paddingLeft + bodyRight + gap + tokenHeight, paddingTop + tokenHeight);\n          accessoryIcon.render(renderer, frame);\n        }\n        footIconView.d.setState(context.toString(), Affinity.Intrinsic);\n        this.footIcon.insertView();\n      } else {\n        this.footIcon.removeView();\n      }\n    }\n  }\n\n  expand(timing?: AnyTiming | boolean): void {\n    if (this.tokenState !== \"expanded\" || this.expandedPhase.value !== 1) {\n      if (timing === void 0 || timing === true) {\n        timing = this.getLookOr(Look.timing, false);\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      if (this.tokenState !== \"expanding\") {\n        this.willExpand();\n        this.onExpand();\n      }\n      if (timing !== false) {\n        if (this.expandedPhase.value !== 1) {\n          this.expandedPhase.setState(1, timing, Affinity.Intrinsic);\n        } else {\n          setTimeout(this.didExpand.bind(this));\n        }\n      } else {\n        this.expandedPhase.setState(1, Affinity.Intrinsic);\n        this.didExpand();\n      }\n    }\n  }\n\n  protected willExpand(): void {\n    (this as Mutable<this>).tokenState = \"expanding\";\n    const labelContainer = this.labelContainer.view;\n    if (labelContainer !== null) {\n      labelContainer.display.setState(\"block\", Affinity.Intrinsic);\n    }\n\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.tokenWillExpand !== void 0) {\n        observer.tokenWillExpand(this);\n      }\n    }\n  }\n\n  protected onExpand(): void {\n    // hook\n  }\n\n  protected didExpand(): void {\n    (this as Mutable<this>).tokenState = \"expanded\";\n    this.requireUpdate(View.NeedsLayout);\n\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.tokenDidExpand !== void 0) {\n        observer.tokenDidExpand(this);\n      }\n    }\n  }\n\n  collapse(timing?: AnyTiming | boolean): void {\n    if (this.tokenState !== \"collapsed\" || this.expandedPhase.value !== 0) {\n      if (timing === void 0 || timing === true) {\n        timing = this.getLookOr(Look.timing, false);\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      if (this.tokenState !== \"collapsing\") {\n        this.willCollapse();\n        this.onCollapse();\n      }\n      if (timing !== false) {\n        if (this.expandedPhase.value !== 0) {\n          this.expandedPhase.setState(0, timing, Affinity.Intrinsic);\n        } else {\n          setTimeout(this.didCollapse.bind(this));\n        }\n      } else {\n        this.expandedPhase.setState(0, Affinity.Intrinsic);\n        this.didCollapse();\n      }\n    }\n  }\n\n  protected willCollapse(): void {\n    (this as Mutable<this>).tokenState = \"collapsing\";\n\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.tokenWillCollapse !== void 0) {\n        observer.tokenWillCollapse(this);\n      }\n    }\n  }\n\n  protected onCollapse(): void {\n    const labelView = this.label.view;\n    if (labelView !== null) {\n      labelView.node.blur();\n    }\n  }\n\n  protected didCollapse(): void {\n    (this as Mutable<this>).tokenState = \"collapsed\";\n    this.requireUpdate(View.NeedsLayout);\n\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.tokenDidCollapse !== void 0) {\n        observer.tokenDidCollapse(this);\n      }\n    }\n  }\n\n  toggle(timing?: AnyTiming | boolean): void {\n    const tokenState = this.tokenState;\n    if (tokenState === \"collapsed\" || tokenState === \"collapsing\") {\n      this.expand(timing);\n    } else if (tokenState === \"expanded\" || tokenState === \"expanding\") {\n      this.collapse(timing);\n    }\n  }\n\n  protected onClickHead(event: MouseEvent): void {\n    this.toggle();\n    const labelView = this.label.view;\n    if (labelView !== null && this.expanded) {\n      labelView.node.focus();\n    }\n    this.didPressHead();\n  }\n\n  protected didPressHead(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.tokenDidPressHead !== void 0) {\n        observer.tokenDidPressHead(this);\n      }\n    }\n  }\n\n  protected onClickBody(event: MouseEvent): void {\n    this.didPressBody();\n  }\n\n  protected didPressBody(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.tokenDidPressBody !== void 0) {\n        observer.tokenDidPressBody(this);\n      }\n    }\n  }\n\n  protected onClickFoot(event: MouseEvent): void {\n    this.didPressFoot();\n  }\n\n  protected didPressFoot(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.tokenDidPressFoot !== void 0) {\n        observer.tokenDidPressFoot(this);\n      }\n    }\n  }\n\n  override init(init: TokenViewInit): void {\n    super.init(init);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class, Timing} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass} from \"@swim/component\";\nimport {Color} from \"@swim/style\";\nimport {Look, MoodVector, ThemeMatrix} from \"@swim/theme\";\nimport {ViewRef} from \"@swim/view\";\nimport {StyleRule, StyleSheet, HtmlView, StyleView} from \"@swim/dom\";\nimport {TokenViewInit, TokenView} from \"./TokenView\";\nimport type {InputTokenViewObserver} from \"./InputTokenViewObserver\";\n\n/** @public */\nexport interface InputTokenViewInit extends TokenViewInit {\n}\n\n/** @public */\nexport class InputTokenView extends TokenView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.onInputUpdate = this.onInputUpdate.bind(this);\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onInputKey = this.onInputKey.bind(this);\n  }\n\n  override readonly observerType?: Class<InputTokenViewObserver>;\n\n  protected override initToken(): void {\n    this.stylesheet.insertView();\n    super.initToken();\n    this.addClass(\"input-token\");\n    this.label.attachView();\n  }\n\n  protected initStylesheet(styleView: StyleView): void {\n    const sheet = styleView.sheet;\n    if (sheet !== null) {\n      const placeholder = InputTokenView.PlaceholderRule.create(sheet);\n      sheet.setFastener(\"placeholder\", placeholder);\n    }\n  }\n\n  /** @internal */\n  static PlaceholderRule = StyleRule.define<StyleSheet>(\"PlaceholderRule\", {\n    css: \"::placeholder {}\",\n  });\n\n  protected override initLabel(labelView: HtmlView): void {\n    super.initLabel(labelView);\n    labelView.paddingTop.setState(0, Affinity.Intrinsic);\n    labelView.paddingRight.setState(0, Affinity.Intrinsic);\n    labelView.paddingBottom.setState(0, Affinity.Intrinsic);\n    labelView.paddingLeft.setState(0, Affinity.Intrinsic);\n    labelView.borderTopStyle.setState(\"none\", Affinity.Intrinsic);\n    labelView.borderRightStyle.setState(\"none\", Affinity.Intrinsic);\n    labelView.borderBottomStyle.setState(\"none\", Affinity.Intrinsic);\n    labelView.borderLeftStyle.setState(\"none\", Affinity.Intrinsic);\n    labelView.boxSizing.setState(\"border-box\", Affinity.Intrinsic);\n    labelView.backgroundColor.setState(Color.transparent(), Affinity.Intrinsic);\n    labelView.appearance.setState(\"none\", Affinity.Intrinsic);\n    labelView.outlineStyle.setState(\"none\", Affinity.Intrinsic);\n    labelView.pointerEvents.setState(\"auto\", Affinity.Intrinsic);\n  }\n\n  @ViewRef<InputTokenView, StyleView>({\n    key: true,\n    type: StyleView,\n    binds: true,\n    observes: true,\n    viewDidMount(styleView: StyleView): void {\n      this.owner.initStylesheet(styleView);\n    },\n  })\n  readonly stylesheet!: ViewRef<this, StyleView>;\n  static readonly stylesheet: MemberFastenerClass<InputTokenView, \"stylesheet\">;\n\n  @ViewRef<InputTokenView, HtmlView>({\n    type: HtmlView.forTag(\"input\"),\n    observes: true,\n    didAttachView(labelView: HtmlView): void {\n      if (labelView.parent === null) {\n        this.owner.labelContainer.insertView();\n        const labelContainer = this.owner.labelContainer.view;\n        if (labelContainer !== null) {\n          labelContainer.appendChild(labelView);\n        }\n      }\n      this.owner.initLabel(labelView);\n    },\n    viewDidMount(labelView: HtmlView): void {\n      labelView.on(\"input\", this.owner.onInputUpdate as EventListener);\n      labelView.on(\"change\", this.owner.onInputChange);\n      labelView.on(\"keydown\", this.owner.onInputKey);\n    },\n    viewWillUnmount(labelView: HtmlView): void {\n      labelView.off(\"input\", this.owner.onInputUpdate as EventListener);\n      labelView.off(\"change\", this.owner.onInputChange);\n      labelView.off(\"keydown\", this.owner.onInputKey);\n    },\n  })\n  override readonly label!: ViewRef<this, HtmlView>;\n  static override readonly label: MemberFastenerClass<InputTokenView, \"label\">;\n\n  /** @internal */\n  get placeholderLook(): Look<Color> {\n    return Look.neutralColor;\n  }\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    const styleView = this.stylesheet.view;\n    if (styleView !== null) {\n      const placeholder = styleView.getFastener(\"placeholder\", StyleRule);\n      if (placeholder !== null) {\n        placeholder.color.setState(theme.getOr(this.placeholderLook, mood, null), timing, Affinity.Intrinsic);\n      }\n    }\n\n    const labelView = this.label.view;\n    if (labelView !== null) {\n      labelView.font(theme.getOr(Look.font, mood, null), false, Affinity.Intrinsic);\n    }\n  }\n\n  protected onInputUpdate(event: InputEvent): void {\n    const inputView = this.label.view;\n    if (inputView !== null) {\n      this.didUpdateInput(inputView);\n    }\n  }\n\n  protected didUpdateInput(inputView: HtmlView): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.tokenDidUpdateInput !== void 0) {\n        observer.tokenDidUpdateInput(inputView, this);\n      }\n    }\n  }\n\n  protected onInputChange(event: Event): void {\n    const inputView = this.label.view;\n    if (inputView !== null) {\n      this.didChangeInput(inputView);\n    }\n  }\n\n  protected didChangeInput(inputView: HtmlView): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.tokenDidChangeInput !== void 0) {\n        observer.tokenDidChangeInput(inputView, this);\n      }\n    }\n  }\n\n  protected onInputKey(event: KeyboardEvent): void {\n    const inputView = this.label.view;\n    if (inputView !== null && event.key === \"Enter\") {\n      this.didAcceptInput(inputView);\n    }\n  }\n\n  protected didAcceptInput(inputView: HtmlView): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.tokenDidAcceptInput !== void 0) {\n        observer.tokenDidAcceptInput(inputView, this);\n      }\n    }\n  }\n\n  override init(init: InputTokenViewInit): void {\n    super.init(init);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equivalent, Equals} from \"@swim/util\"\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\n\n/** @public */\nexport type AnyColLayout = ColLayout | ColLayoutInit;\n\n/** @public */\nexport interface ColLayoutInit {\n  key?: string;\n  grow?: number;\n  shrink?: number;\n  basis?: AnyLength;\n  optional?: boolean;\n  persistent?: boolean;\n  textColor?: Look<Color> | AnyColor | null;\n  width?: AnyLength | null;\n  left?: AnyLength | null;\n  right?: AnyLength | null;\n  hidden?: boolean;\n}\n\n/** @public */\nexport class ColLayout implements Equals, Equivalent, Debug {\n  constructor(key: string, grow: number, shrink: number, basis: Length,\n              optional: boolean, persistent: boolean, textColor: Look<Color> | Color | null,\n              width: Length | null, left: Length | null, right: Length | null, hidden: boolean) {\n    this.key = key;\n    this.grow = grow;\n    this.shrink = shrink;\n    this.basis = basis;\n    this.optional = optional;\n    this.persistent = persistent;\n    this.textColor = textColor;\n    this.width = width;\n    this.left = left;\n    this.right = right;\n    this.hidden = hidden;\n  }\n\n  readonly key: string;\n\n  readonly grow: number;\n\n  readonly shrink: number;\n\n  readonly basis: Length;\n\n  withFlex(grow: number, shrink: number, basis?: AnyLength): ColLayout {\n    if (basis !== void 0) {\n      basis = Length.fromAny(basis);\n    } else {\n      basis = this.basis;\n    }\n    return this.copy(this.key, grow, shrink, basis, this.optional, this.persistent,\n                     this.textColor, this.width, this.left, this.right, this.hidden);\n  }\n\n  readonly optional: boolean;\n\n  asOptional(optional: boolean): ColLayout {\n    return this.copy(this.key, this.grow, this.shrink, this.basis, optional, this.persistent,\n                     this.textColor, this.width, this.left, this.right, this.hidden);\n  }\n\n  readonly persistent: boolean;\n\n  asPersistent(persistent: boolean): ColLayout {\n    return this.copy(this.key, this.grow, this.shrink, this.basis, this.optional, persistent,\n                     this.textColor, this.width, this.left, this.right, this.hidden);\n  }\n\n  readonly textColor: Look<Color> | Color | null;\n\n  withTextColor(textColor: Look<Color> | AnyColor | null): ColLayout {\n    if (textColor !== null && !(textColor instanceof Look)) {\n      textColor = Color.fromAny(textColor);\n    }\n    return this.copy(this.key, this.grow, this.shrink, this.basis, this.optional, this.persistent,\n                     textColor, this.width, this.left, this.right, this.hidden);\n  }\n\n  readonly width: Length | null;\n\n  readonly left: Length | null;\n\n  readonly right: Length | null;\n\n  readonly hidden: boolean;\n\n  asHidden(hidden: boolean): ColLayout {\n    return this.copy(this.key, this.grow, this.shrink, this.basis, this.optional, this.persistent,\n                     this.textColor, this.width, this.left, this.right, hidden);\n  }\n\n  resized(width: AnyLength | null, left: AnyLength | null,\n          right: AnyLength | null, hidden?: boolean): ColLayout {\n    if (width !== null) {\n      width = Length.fromAny(width);\n    }\n    if (left !== null) {\n      left = Length.fromAny(left);\n    }\n    if (right !== null) {\n      right = Length.fromAny(right);\n    }\n    if (hidden === void 0) {\n      hidden = this.hidden;\n    }\n    return this.copy(this.key, this.grow, this.shrink, this.basis, this.optional,\n                     this.persistent, this.textColor, width, left, right, hidden);\n  }\n\n  protected copy(key: string, grow: number, shrink: number, basis: Length, optional: boolean,\n                 persistent: boolean, textColor: Look<Color> | Color | null,\n                 width: Length | null, left: Length | null, right: Length | null,\n                 hidden: boolean): ColLayout {\n    return new ColLayout(key, grow, shrink, basis, optional, persistent,\n                         textColor, width, left, right, hidden);\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ColLayout) {\n      return this.key === that.key && this.grow === that.grow && this.shrink === that.shrink\n          && this.basis.equivalentTo(that.basis, epsilon) && this.optional === that.optional\n          && this.persistent === that.persistent && Equivalent(this.textColor, that.textColor, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ColLayout) {\n      return this.key === that.key && this.grow === that.grow && this.shrink === that.shrink\n          && this.basis.equals(that.basis) && this.optional === that.optional\n          && this.persistent === that.persistent && Equals(this.textColor, that.textColor)\n          && Equals(this.width, that.width) && Equals(this.left, that.left)\n          && Equals(this.right, that.right) && this.hidden === that.hidden;\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"ColLayout\").write(46/*'.'*/).write(\"create\").write(40/*'('*/)\n                   .debug(this.key).write(\", \").debug(this.grow).write(\", \")\n                   .debug(this.shrink).write(\", \").debug(this.basis).write(41/*')'*/);\n    if (this.optional) {\n      output = output.write(46/*'.'*/).write(\"asOptional\").write(40/*'('*/)\n                     .debug(this.optional).write(41/*')'*/);\n    }\n    if (this.persistent) {\n      output = output.write(46/*'.'*/).write(\"asPersistent\").write(40/*'('*/)\n                     .debug(this.persistent).write(41/*')'*/);\n    }\n    if (this.textColor) {\n      output = output.write(46/*'.'*/).write(\"withTextColor\").write(40/*'('*/)\n                     .debug(this.textColor).write(41/*')'*/);\n    }\n    if (this.width !== null || this.left !== null || this.right !== null || this.hidden) {\n      output = output.write(46/*'.'*/).write(\"resized\").write(40/*'('*/)\n                     .debug(this.width).write(\", \").debug(this.left).write(\", \")\n                     .debug(this.right).write(\", \").debug(this.hidden).write(41/*')'*/);\n    }\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  static create(key: string, grow?: number, shrink?: number, basis?: AnyLength,\n                optional?: boolean, persistent?: boolean, textColor?: Look<Color> | AnyColor | null): ColLayout {\n    if (grow === void 0) {\n      grow = 0;\n    }\n    if (shrink === void 0) {\n      shrink = 1;\n    }\n    if (basis !== void 0) {\n      basis = Length.fromAny(basis);\n    } else {\n      basis = Length.zero();\n    }\n    if (optional === void 0) {\n      optional = false;\n    }\n    if (persistent === void 0) {\n      persistent = false;\n    }\n    if (textColor === void 0) {\n      textColor = null;\n    }\n    if (textColor !== null && !(textColor instanceof Look)) {\n      textColor = Color.fromAny(textColor);\n    }\n    return new ColLayout(key, grow, shrink, basis, optional, persistent,\n                         textColor, null, null, null, false);\n  }\n\n  static fromAny(value: AnyColLayout): ColLayout {\n    if (value === void 0 || value === null || value instanceof ColLayout) {\n      return value;\n    } else if (typeof value === \"object\" && value !== null) {\n      return ColLayout.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromInit(init: ColLayoutInit): ColLayout {\n    let key = init.key;\n    if (key === void 0) {\n      key = \"\";\n    }\n    let grow = init.grow;\n    if (grow === void 0) {\n      grow = 0;\n    }\n    let shrink = init.shrink;\n    if (shrink === void 0) {\n      shrink = 1;\n    }\n    let basis = init.basis;\n    if (basis !== void 0) {\n      basis = Length.fromAny(basis);\n    } else {\n      basis = Length.zero();\n    }\n    let optional = init.optional;\n    if (optional === void 0) {\n      optional = false;\n    }\n    let persistent = init.persistent;\n    if (persistent === void 0) {\n      persistent = false;\n    }\n    let textColor = init.textColor;\n    if (textColor === void 0) {\n      textColor = null;\n    }\n    if (textColor !== null && !(textColor instanceof Look)) {\n      textColor = Color.fromAny(textColor);\n    }\n    let width = init.width;\n    if (width !== void 0 && width !== null) {\n      width = Length.fromAny(width);\n    } else {\n      width = null;\n    }\n    let left = init.left;\n    if (left !== void 0 && left !== null) {\n      left = Length.fromAny(left);\n    } else {\n      left = null;\n    }\n    let right = init.right;\n    if (right !== void 0 && right !== null) {\n      right = Length.fromAny(right);\n    } else {\n      right = null;\n    }\n    let hidden = init.hidden;\n    if (hidden === void 0) {\n      hidden = false;\n    }\n    return new ColLayout(key, grow, shrink, basis, optional, persistent,\n                         textColor, width, left, right, hidden);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equivalent, Equals, Arrays} from \"@swim/util\"\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport {AnyColLayout, ColLayout} from \"./ColLayout\";\n\n/** @public */\nexport type AnyTableLayout = TableLayout | TableLayoutInit;\n\n/** @public */\nexport interface TableLayoutInit {\n  width?: AnyLength | null;\n  left?: AnyLength | null;\n  right?: AnyLength | null;\n  colSpacing?: AnyLength | null;\n  cols: AnyColLayout[];\n}\n\n/** @public */\nexport class TableLayout implements Equals, Equivalent, Debug {\n  constructor(width: Length | null, left: Length | null, right: Length | null,\n              colSpacing: Length | null, cols: ReadonlyArray<ColLayout>) {\n    this.width = width;\n    this.left = left;\n    this.right = right;\n    this.colSpacing = colSpacing;\n    this.cols = cols;\n  }\n\n  readonly width: Length | null;\n\n  readonly left: Length | null;\n\n  readonly right: Length | null;\n\n  readonly colSpacing: Length | null;\n\n  readonly cols: ReadonlyArray<ColLayout>;\n\n  getCol(key: string): ColLayout | null {\n    const cols = this.cols;\n    for (let i = 0, n = cols.length; i < n; i += 1) {\n      const col = cols[i]!;\n      if (key === col.key) {\n        return col;\n      }\n    }\n    return null;\n  }\n\n  resized(width: AnyLength, left?: AnyLength | null, right?: AnyLength | null,\n          colSpacing?: AnyLength | null): TableLayout {\n    width = Length.fromAny(width);\n    if (left === void 0) {\n      left = this.left;\n    } else if (left !== null) {\n      left = Length.fromAny(left);\n    }\n    if (right === void 0) {\n      right = this.right;\n    } else if (right !== null) {\n      right = Length.fromAny(right);\n    }\n    if (colSpacing === void 0) {\n      colSpacing = this.colSpacing;\n    } else if (colSpacing !== null) {\n      colSpacing = Length.fromAny(colSpacing);\n    }\n    if (Equals(this.width, width) && Equals(this.left, left) &&\n        Equals(this.right, right) && Equals(this.colSpacing, colSpacing)) {\n      return this;\n    } else {\n      const oldCols = this.cols;\n      const colCount = oldCols.length;\n      const newCols = new Array<ColLayout>(colCount);\n      const tableWidth = width.pxValue();\n      const tableLeft = left !== null ? left.pxValue(tableWidth) : 0;\n      const tableRight = right !== null ? right.pxValue(tableWidth) : 0;\n      const spacing = colSpacing !== null ? colSpacing.pxValue(tableWidth) : 0;\n\n      let grow = 0;\n      let shrink = 0;\n      let optional = 0;\n      let basis = tableLeft + tableRight;\n      let x = tableLeft;\n      for (let i = 0; i < colCount; i += 1) {\n        if (i !== 0) {\n          basis += spacing;\n          x += spacing;\n        }\n        const col = oldCols[i]!;\n        const colWidth = col.basis.pxValue(tableWidth);\n        newCols[i] = col.resized(colWidth, x, tableWidth - colWidth - x, false);\n        grow += col.grow;\n        shrink += col.shrink;\n        if (col.optional) {\n          optional += 1;\n        }\n        basis += colWidth;\n        x += colWidth;\n      }\n\n      if (basis > tableWidth && optional > 0) {\n        // Hide optional cols as needed to fit.\n        let i = colCount - 1;\n        while (i >= 0 && optional > 0) {\n          const col = newCols[i]!;\n          const colWidth = col.width!.pxValue();\n          if (col.optional) {\n            newCols[i] = col.resized(0, x, tableWidth - x, true);\n            grow -= col.grow;\n            shrink -= col.shrink;\n            optional -= 1;\n            basis -= colWidth;\n          }\n          x -= colWidth;\n          if (i !== 0) {\n            basis -= spacing;\n            x -= spacing;\n          }\n\n          if (basis <= tableWidth) {\n            // Remaining cols now fit.\n            break;\n          }\n          i -= 1;\n        }\n\n        // Resize trailing non-optional cols.\n        i += 1;\n        while (i < colCount) {\n          const col = newCols[i]!;\n          if (!col.optional) {\n            basis += spacing;\n            x += spacing;\n            const colWidth = col.basis.pxValue(tableWidth);\n            newCols[i] = col.resized(colWidth, x, tableWidth - colWidth - x);\n            x += colWidth;\n          }\n          i += 1;\n        }\n      }\n\n      if (basis < tableWidth && grow > 0) {\n        const delta = tableWidth - basis;\n        let x = tableLeft;\n        let j = 0;\n        for (let i = 0; i < colCount; i += 1) {\n          const col = newCols[i]!;\n          if (!col.hidden) {\n            if (j !== 0) {\n              x += spacing;\n            }\n            const colBasis = col.basis.pxValue(tableWidth);\n            const colWidth = colBasis + delta * (col.grow / grow);\n            newCols[i] = col.resized(colWidth, x, tableWidth - colWidth - x);\n            x += colWidth;\n            j += 1;\n          } else {\n            newCols[i] = col.resized(0, x + spacing, tableWidth - x - spacing);\n          }\n        }\n      } else if (basis > tableWidth && shrink > 0) {\n        const delta = basis - tableWidth;\n        let x = tableLeft;\n        let j = 0;\n        for (let i = 0; i < colCount; i += 1) {\n          const col = newCols[i]!;\n          if (!col.hidden) {\n            if (j !== 0) {\n              x += spacing;\n            }\n            const colBasis = col.basis.pxValue(tableWidth);\n            const colWidth = colBasis - delta * (col.shrink / shrink);\n            newCols[i] = col.resized(colWidth, x, tableWidth - colWidth - x);\n            x += colWidth;\n            j += 1;\n          } else {\n            newCols[i] = col.resized(0, x + spacing, tableWidth - x - spacing);\n          }\n        }\n      }\n\n      return new TableLayout(width, left, right, colSpacing, newCols);\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof TableLayout) {\n      const theseCols = this.cols;\n      const thoseCols = that.cols;\n      const n = theseCols.length;\n      if (n === thoseCols.length) {\n        for (let i = 0; i < n; i += 1) {\n          if (!theseCols[i]!.equivalentTo(thoseCols[i]!, epsilon)) {\n            return false;\n          }\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof TableLayout) {\n      return Equals(this.width, that.width) && Equals(this.left, that.left)\n          && Equals(this.right, that.right) && Equals(this.colSpacing, that.colSpacing)\n          && Arrays.equal(this.cols, that.cols);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"TableLayout\").write(46/*'.'*/).write(\"of\").write(40/*'('*/);\n    for (let i = 0, n = this.cols.length; i < n; i += 1) {\n      if (i !== 0) {\n        output = output.write(\", \");\n      }\n      output = output.debug(this.cols[i]!);\n    }\n    output = output.write(41/*')'*/);\n    if (this.width !== null || this.left !== null || this.right !== null || this.colSpacing !== null) {\n      output = output.write(46/*'.'*/).write(\"resized\").write(40/*'('*/)\n                     .debug(this.width).write(\", \").debug(this.left).write(\", \")\n                     .debug(this.right).write(\", \").debug(this.colSpacing).write(41/*')'*/);\n    }\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  static of(...tableCols: AnyColLayout[]): TableLayout {\n    const n = tableCols.length;\n    const cols = new Array<ColLayout>(n);\n    for (let i = 0; i < n; i += 1) {\n      cols[i] = ColLayout.fromAny(tableCols[i]!);\n    }\n    return new TableLayout(null, null, null, null, cols);\n  }\n\n  static create(cols: ReadonlyArray<ColLayout>): TableLayout {\n    return new TableLayout(null, null, null, null, cols);\n  }\n\n  static fromAny(value: AnyTableLayout): TableLayout {\n    if (value === void 0 || value === null || value instanceof TableLayout) {\n      return value;\n    } else if (typeof value === \"object\" && value !== null) {\n      return TableLayout.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromInit(init: TableLayoutInit): TableLayout {\n    let width = init.width;\n    if (width !== void 0 && width !== null) {\n      width = Length.fromAny(width);\n    } else {\n      width = null;\n    }\n    let left = init.left;\n    if (left !== void 0 && left !== null) {\n      left = Length.fromAny(left);\n    } else {\n      left = null;\n    }\n    let right = init.right;\n    if (right !== void 0 && right !== null) {\n      right = Length.fromAny(right);\n    } else {\n      right = null;\n    }\n    let colSpacing = init.colSpacing;\n    if (colSpacing !== void 0 && colSpacing !== null) {\n      colSpacing = Length.fromAny(colSpacing);\n    } else {\n      colSpacing = null;\n    }\n    const colCount = init.cols.length;\n    const cols = new Array<ColLayout>(colCount);\n    for (let i = 0; i < colCount; i += 1) {\n      cols[i] = ColLayout.fromAny(init.cols[i]!);\n    }\n    return new TableLayout(width, left, right, colSpacing, cols);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {CellViewObserver} from \"./CellViewObserver\";\n\n/** @public */\nexport class CellView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initCell();\n  }\n\n  protected initCell(): void {\n    this.addClass(\"cell\");\n    this.overflowX.setState(\"hidden\", Affinity.Intrinsic);\n    this.overflowY.setState(\"hidden\", Affinity.Intrinsic);\n  }\n\n  override readonly observerType?: Class<CellViewObserver>;\n\n  onPress(input: PositionGestureInput, event: Event | null): void {\n    // hook\n  }\n\n  didPress(input: PositionGestureInput, event: Event | null): void {\n    this.callObservers(\"viewDidPress\", input, event, this);\n  }\n\n  onLongPress(input: PositionGestureInput): void {\n    // hook\n  }\n\n  didLongPress(input: PositionGestureInput): void {\n    this.callObservers(\"viewDidLongPress\", input, this);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class, Initable} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass} from \"@swim/component\";\nimport {AnyView, ViewRef} from \"@swim/view\";\nimport {HtmlViewInit, HtmlView} from \"@swim/dom\";\nimport {CellView} from \"./CellView\";\nimport type {TextCellViewObserver} from \"./TextCellViewObserver\";\n\n/** @public */\nexport class TextCellView extends CellView {\n  protected override initCell(): void {\n    super.initCell();\n    this.addClass(\"cell-text\");\n  }\n\n  override readonly observerType?: Class<TextCellViewObserver>;\n\n  @ViewRef<TextCellView, HtmlView & Initable<HtmlViewInit | string>, {create(value?: string): HtmlView}>({\n    implements: true,\n    key: true,\n    type: HtmlView,\n    binds: true,\n    willAttachView(contentView: HtmlView): void {\n      this.owner.callObservers(\"viewWillAttachContent\", contentView, this.owner);\n    },\n    didDetachView(contentView: HtmlView): void {\n      this.owner.callObservers(\"viewDidDetachContent\", contentView, this.owner);\n    },\n    create(value?: string): HtmlView {\n      const contentView = HtmlView.fromTag(\"span\");\n      contentView.alignSelf.setState(\"center\", Affinity.Intrinsic);\n      contentView.whiteSpace.setState(\"nowrap\", Affinity.Intrinsic);\n      contentView.textOverflow.setState(\"ellipsis\", Affinity.Intrinsic);\n      contentView.overflowX.setState(\"hidden\", Affinity.Intrinsic);\n      contentView.overflowY.setState(\"hidden\", Affinity.Intrinsic);\n      if (value !== void 0) {\n        contentView.text(value);\n      }\n      return contentView;\n    },\n    fromAny(value: AnyView<HtmlView> | string): HtmlView {\n      if (typeof value === \"string\") {\n        return this.create(value);\n      } else {\n        return HtmlView.fromAny(value);\n      }\n    },\n  })\n  readonly content!: ViewRef<this, HtmlView & Initable<HtmlViewInit | string>> & {create(value?: string): HtmlView};\n  static readonly content: MemberFastenerClass<TextCellView, \"content\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class, Timing} from \"@swim/util\";\nimport {Affinity, Animator} from \"@swim/component\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {MoodVector, ThemeMatrix, ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, ViewFlags, View} from \"@swim/view\";\nimport {Graphics, Icon, FilledIcon, IconGraphicsAnimator, SvgIconView} from \"@swim/graphics\";\nimport {CellView} from \"./CellView\";\nimport type {IconCellViewObserver} from \"./IconCellViewObserver\";\n\n/** @public */\nexport class IconCellView extends CellView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initSvg();\n  }\n\n  protected override initCell(): void {\n    super.initCell();\n    this.addClass(\"cell-icon\");\n  }\n\n  override readonly observerType?: Class<IconCellViewObserver>;\n\n  protected initSvg(): void {\n    const svgView = this.createSvgView();\n    if (svgView !== null) {\n      this.setChild(\"svg\", svgView);\n    }\n  }\n\n  protected createSvgView(): SvgIconView | null {\n    return SvgIconView.create();\n  }\n\n  get svgView(): SvgIconView | null {\n    const svgView = this.getChild(\"svg\");\n    return svgView instanceof SvgIconView ? svgView : null;\n  }\n\n  @Animator({type: Number, value: 0.5, updateFlags: View.NeedsLayout})\n  readonly xAlign!: Animator<this, number>;\n\n  @Animator({type: Number, value: 0.5, updateFlags: View.NeedsLayout})\n  readonly yAlign!: Animator<this, number>;\n\n  @ThemeAnimator({type: Length, value: null, updateFlags: View.NeedsLayout})\n  readonly iconWidth!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator({type: Length, value: null, updateFlags: View.NeedsLayout})\n  readonly iconHeight!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator<IconCellView, Color | null, AnyColor | null>({\n    type: Color,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    didSetValue(newIconColor: Color | null, oldIconColor: Color | null): void {\n      if (newIconColor !== null) {\n        const oldGraphics = this.owner.graphics.value;\n        if (oldGraphics instanceof FilledIcon) {\n          const newGraphics = oldGraphics.withFillColor(newIconColor);\n          this.owner.graphics.setState(newGraphics, Affinity.Reflexive);\n        }\n      }\n    },\n  })\n  readonly iconColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator<IconCellView, Graphics | null>({\n    extends: IconGraphicsAnimator,\n    type: Object,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    willSetValue(newGraphics: Graphics | null, oldGraphics: Graphics | null): void {\n      this.owner.callObservers(\"viewWillSetGraphics\", newGraphics, oldGraphics, this.owner);\n    },\n    didSetValue(newGraphics: Graphics | null, oldGraphics: Graphics | null): void {\n      this.owner.requireUpdate(View.NeedsRasterize | View.NeedsComposite);\n      this.owner.callObservers(\"viewDidSetGraphics\", newGraphics, oldGraphics, this.owner);\n    },\n  })\n  readonly graphics!: ThemeAnimator<this, Graphics | null>;\n\n  protected override onInsertChild(child: View, target: View | null): void {\n    super.onInsertChild(child, target);\n    if (child.key === \"svg\" && child instanceof SvgIconView) {\n      this.onInsertSvg(child);\n    }\n  }\n\n  protected onInsertSvg(svgView: SvgIconView): void {\n    svgView.xAlign.setInherits(true);\n    svgView.yAlign.setInherits(true);\n    svgView.iconWidth.setInherits(true);\n    svgView.iconHeight.setInherits(true);\n    svgView.iconColor.setInherits(true);\n    svgView.graphics.setInherits(true);\n    svgView.setStyle(\"position\", \"absolute\");\n  }\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    if (!this.graphics.inherited) {\n      const oldGraphics = this.graphics.value;\n      if (oldGraphics instanceof Icon) {\n        const newGraphics = oldGraphics.withTheme(theme, mood);\n        this.graphics.setState(newGraphics, oldGraphics.isThemed() ? timing : false, Affinity.Reflexive);\n      }\n    }\n  }\n\n  protected override onResize(viewContext: ViewContextType<this>): void {\n    super.onResize(viewContext);\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected override needsDisplay(displayFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    if ((this.flags & View.NeedsLayout) === 0) {\n      displayFlags &= ~View.NeedsLayout;\n    }\n    return displayFlags;\n  }\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.layoutIcon();\n  }\n\n  protected layoutIcon(): void {\n    const svgView = this.svgView;\n    if (svgView !== null && (svgView.width.hasAffinity(Affinity.Intrinsic)\n                          || svgView.height.hasAffinity(Affinity.Intrinsic)\n                          || svgView.viewBox.hasAffinity(Affinity.Intrinsic))) {\n      let viewWidth: Length | number | null = this.width.value;\n      viewWidth = viewWidth instanceof Length ? viewWidth.pxValue() : this.node.offsetWidth;\n      let viewHeight: Length | number | null = this.height.value;\n      viewHeight = viewHeight instanceof Length ? viewHeight.pxValue() : this.node.offsetHeight;\n      svgView.width.setState(viewWidth, Affinity.Intrinsic);\n      svgView.height.setState(viewHeight, Affinity.Intrinsic);\n      svgView.viewBox.setState(\"0 0 \" + viewWidth + \" \" + viewHeight, Affinity.Intrinsic);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {AnyExpansion, Expansion} from \"@swim/style\";\nimport {ThemeAnimator, ExpansionThemeAnimator} from \"@swim/theme\";\nimport {ViewRef, PositionGestureInput} from \"@swim/view\";\nimport {DisclosureButton} from \"@swim/button\";\nimport {CellView} from \"./CellView\";\n\n/** @public */\nexport class DisclosureCellView extends CellView {\n  protected override initCell(): void {\n    super.initCell();\n    this.addClass(\"cell-disclosure\");\n    this.button.insertView();\n  }\n\n  @ThemeAnimator({type: Expansion, inherits: true})\n  readonly disclosure!: ExpansionThemeAnimator<this, Expansion, AnyExpansion>;\n\n  @ViewRef<DisclosureCellView, DisclosureButton>({\n    key: true,\n    type: DisclosureButton,\n    binds: true,\n  })\n  readonly button!: ViewRef<this, DisclosureButton>;\n  static readonly button: MemberFastenerClass<DisclosureCellView, \"button\">;\n\n  override didPress(input: PositionGestureInput, event: Event | null): void {\n    input.preventDefault();\n    const superDisclosure = this.disclosure.superFastener;\n    if (superDisclosure instanceof ExpansionThemeAnimator) {\n      superDisclosure.toggle();\n    }\n    super.didPress(input, event);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Trait} from \"@swim/model\";\nimport type {CellTraitObserver} from \"./CellTraitObserver\";\n\n/** @public */\nexport class CellTrait extends Trait {\n  override readonly observerType?: Class<CellTraitObserver>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {HtmlView} from \"@swim/dom\";\nimport {CellTrait} from \"./CellTrait\";\nimport type {TextCellTraitObserver} from \"./TextCellTraitObserver\";\n\n/** @public */\nexport type TextCellContent = TextCellContentFunction | string;\n/** @public */\nexport type TextCellContentFunction = (cellTrait: TextCellTrait) => HtmlView | string | null;\n\n/** @public */\nexport class TextCellTrait extends CellTrait {\n  override readonly observerType?: Class<TextCellTraitObserver>;\n\n  @Property<TextCellTrait, TextCellContent | null>({\n    value: null,\n    willSetValue(newContent: TextCellContent | null, oldContent: TextCellContent | null): void {\n      this.owner.callObservers(\"traitWillSetContent\", newContent, oldContent, this.owner);\n    },\n    didSetValue(newContent: TextCellContent | null, oldContent: TextCellContent | null): void {\n      this.owner.callObservers(\"traitDidSetContent\", newContent, oldContent, this.owner);\n    },\n  })\n  readonly content!: Property<this, TextCellContent | null>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {Graphics} from \"@swim/graphics\";\nimport {CellTrait} from \"./CellTrait\";\nimport type {IconCellTraitObserver} from \"./IconCellTraitObserver\";\n\n/** @public */\nexport class IconCellTrait extends CellTrait {\n  override readonly observerType?: Class<IconCellTraitObserver>;\n\n  @Property<IconCellTrait, Graphics | null>({\n    value: null,\n    willSetValue(newIcon: Graphics | null, oldIcon: Graphics | null): void {\n      this.owner.callObservers(\"traitWillSetIcon\", newIcon, oldIcon, this.owner);\n    },\n    didSetValue(newIcon: Graphics | null, oldIcon: Graphics | null): void {\n      this.owner.callObservers(\"traitDidSetIcon\", newIcon, oldIcon, this.owner);\n    },\n  })\n  readonly icon!: Property<this, Graphics | null>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport type {PositionGestureInput} from \"@swim/view\";\nimport {Controller, TraitViewRef} from \"@swim/controller\";\nimport {CellView} from \"./CellView\";\nimport {CellTrait} from \"./CellTrait\";\nimport {TextCellTrait} from \"./TextCellTrait\";\nimport {IconCellTrait} from \"./IconCellTrait\";\nimport type {CellControllerObserver} from \"./CellControllerObserver\";\nimport {TextCellController} from \"../\"; // forward import\nimport {IconCellController} from \"../\"; // forward import\n\n/** @public */\nexport class CellController extends Controller {\n  override readonly observerType?: Class<CellControllerObserver>;\n\n  @TraitViewRef<CellController, CellTrait, CellView>({\n    traitType: CellTrait,\n    willAttachTrait(cellTrait: CellTrait): void {\n      this.owner.callObservers(\"controllerWillAttachCellTrait\", cellTrait, this.owner);\n    },\n    didDetachTrait(cellTrait: CellTrait): void {\n      this.owner.callObservers(\"controllerDidDetachCellTrait\", cellTrait, this.owner);\n    },\n    viewType: CellView,\n    observesView: true,\n    willAttachView(cellView: CellView): void {\n      this.owner.callObservers(\"controllerWillAttachCellView\", cellView, this.owner);\n    },\n    didDetachView(cellView: CellView): void {\n      this.owner.callObservers(\"controllerDidDetachCellView\", cellView, this.owner);\n    },\n    viewDidPress(input: PositionGestureInput, event: Event | null, cellView: CellView): void {\n      this.owner.callObservers(\"controllerDidPressCellView\", input, event, cellView, this.owner);\n    },\n    viewDidLongPress(input: PositionGestureInput, cellView: CellView): void {\n      this.owner.callObservers(\"controllerDidLongPressCellView\", input, cellView, this.owner);\n    },\n  })\n  readonly cell!: TraitViewRef<this, CellTrait, CellView>;\n  static readonly cell: MemberFastenerClass<CellController, \"cell\">;\n\n  static fromTrait(cellTrait: CellTrait): CellController {\n    if (cellTrait instanceof TextCellTrait) {\n      return new TextCellController();\n    } else if (cellTrait instanceof IconCellTrait) {\n      return new IconCellController();\n    } else {\n      return new CellController();\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {CellController} from \"./CellController\";\nimport {TextCellView} from \"./TextCellView\";\nimport {TextCellContent, TextCellTrait} from \"./TextCellTrait\";\nimport type {TextCellControllerObserver} from \"./TextCellControllerObserver\";\n\n/** @public */\nexport class TextCellController extends CellController {\n  override readonly observerType?: Class<TextCellControllerObserver>;\n\n  @TraitViewRef<TextCellController, TextCellTrait, TextCellView>({\n    extends: true,\n    traitType: TextCellTrait,\n    observesTrait: true,\n    initTrait(cellTrait: TextCellTrait): void {\n      this.owner.setContentView(cellTrait.content.value, cellTrait);\n    },\n    deinitTrait(cellTrait: TextCellTrait): void {\n      this.owner.setContentView(null, cellTrait);\n    },\n    traitDidSetContent(newContent: TextCellContent | null, oldContent: TextCellContent | null, cellTrait: TextCellTrait): void {\n      this.owner.setContentView(newContent, cellTrait);\n    },\n    viewType: TextCellView,\n    observesView: true,\n    initView(cellView: TextCellView): void {\n      this.owner.content.setView(cellView.content.view);\n      const cellTrait = this.trait;\n      if (cellTrait !== null) {\n        this.owner.setContentView(cellTrait.content.value, cellTrait);\n      }\n    },\n    deinitView(cellView: TextCellView): void {\n      this.owner.content.setView(null);\n    },\n    viewWillAttachContent(contentView: HtmlView): void {\n      this.owner.content.setView(contentView);\n    },\n    viewDidDetachContent(contentView: HtmlView): void {\n      this.owner.content.setView(null);\n    },\n  })\n  override readonly cell!: TraitViewRef<this, TextCellTrait, TextCellView>;\n  static override readonly cell: MemberFastenerClass<TextCellController, \"cell\">;\n\n  protected createContentView(content: TextCellContent, cellTrait: TextCellTrait): HtmlView | string | null {\n    if (typeof content === \"function\") {\n      return content(cellTrait);\n    } else {\n      return content;\n    }\n  }\n\n  protected setContentView(content: TextCellContent | null, cellTrait: TextCellTrait): void {\n    const cellView = this.cell.view;\n    if (cellView !== null) {\n      const contentView = content !== null ? this.createContentView(content, cellTrait) : null;\n      cellView.content.setView(contentView);\n    }\n  }\n\n  @ViewRef<TextCellController, HtmlView>({\n    type: HtmlView,\n    willAttachView(contentView: HtmlView): void {\n      this.owner.callObservers(\"controllerWillAttachCellContentView\", contentView, this.owner);\n    },\n    didDetachView(contentView: HtmlView): void {\n      this.owner.callObservers(\"controllerDidDetachCellContentView\", contentView, this.owner);\n    },\n  })\n  readonly content!: ViewRef<this, HtmlView>;\n  static readonly content: MemberFastenerClass<TextCellController, \"content\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport type {Graphics} from \"@swim/graphics\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {CellController} from \"./CellController\";\nimport {IconCellView} from \"./IconCellView\";\nimport {IconCellTrait} from \"./IconCellTrait\";\nimport type {IconCellControllerObserver} from \"./IconCellControllerObserver\";\n\n/** @public */\nexport class IconCellController extends CellController {\n  override readonly observerType?: Class<IconCellControllerObserver>;\n\n  protected setIcon(icon: Graphics | null): void {\n    const cellView = this.cell.view;\n    if (cellView !== null) {\n      cellView.graphics.setState(icon);\n    }\n  }\n\n  @TraitViewRef<IconCellController, IconCellTrait, IconCellView>({\n    extends: true,\n    traitType: IconCellTrait,\n    observesTrait: true,\n    initTrait(cellTrait: IconCellTrait): void {\n      this.owner.setIcon(cellTrait.icon.value);\n    },\n    deinitTrait(cellTrait: IconCellTrait): void {\n      this.owner.setIcon(null);\n    },\n    traitDidSetIcon(newCellIcon: Graphics | null, oldCellIcon: Graphics | null): void {\n      this.owner.setIcon(newCellIcon);\n    },\n    viewType: IconCellView,\n    observesView: true,\n    initView(cellView: IconCellView): void {\n      const cellTrait = this.trait;\n      if (cellTrait !== null) {\n        this.owner.setIcon(cellTrait.icon.value);\n      }\n    },\n    viewWillSetGraphics(newCellIcon: Graphics | null, oldCellIcon: Graphics | null): void {\n      this.owner.callObservers(\"controllerWillSetCellIcon\", newCellIcon, oldCellIcon, this.owner);\n    },\n    viewDidSetGraphics(newCellIcon: Graphics | null, oldCellIcon: Graphics | null): void {\n      this.owner.callObservers(\"controllerDidSetCellIcon\", newCellIcon, oldCellIcon, this.owner);\n    },\n  })\n  override readonly cell!: TraitViewRef<this, IconCellTrait, IconCellView>;\n  static override readonly cell: MemberFastenerClass<IconCellController, \"cell\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Property} from \"@swim/component\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport {AnyFocus, Focus, AnyExpansion, Expansion} from \"@swim/style\";\nimport {\n  Look,\n  Feel,\n  ThemeAnimator,\n  FocusThemeAnimator,\n  ExpansionThemeAnimator,\n  ThemeConstraintAnimator,\n} from \"@swim/theme\";\nimport {\n  PositionGestureInput,\n  PositionGesture,\n  ViewContextType,\n  ViewFlags,\n  ViewCreator,\n  View,\n  ViewSet,\n} from \"@swim/view\";\nimport {ViewNode, HtmlView} from \"@swim/dom\";\nimport {ButtonGlow} from \"@swim/button\";\nimport {AnyTableLayout, TableLayout} from \"../layout/TableLayout\";\nimport {CellView} from \"../cell/CellView\";\nimport type {LeafViewObserver} from \"./LeafViewObserver\";\n\n/** @public */\nexport class LeafView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initLeaf();\n  }\n\n  protected initLeaf(): void {\n    this.addClass(\"leaf\");\n    this.position.setState(\"relative\", Affinity.Intrinsic);\n    this.overflowX.setState(\"hidden\", Affinity.Intrinsic);\n    this.overflowY.setState(\"hidden\", Affinity.Intrinsic);\n\n    const highlightPhase = this.highlight.getPhase();\n    const hoverPhase = this.hover.getPhase();\n    const backgroundPhase = Math.max(highlightPhase, hoverPhase);\n    this.modifyMood(Feel.default, [[Feel.transparent, 1 - backgroundPhase],\n                                   [Feel.hovering, hoverPhase * (1 - highlightPhase)],\n                                   [Feel.selected, highlightPhase]], false);\n  }\n\n  override readonly observerType?: Class<LeafViewObserver>;\n\n  @Property({type: TableLayout, inherits: true, value: null, updateFlags: View.NeedsLayout})\n  readonly layout!: Property<this, TableLayout | null, AnyTableLayout | null>;\n\n  @Property({type: Number, inherits: true, value: 0, updateFlags: View.NeedsLayout})\n  readonly depth!: Property<this, number>;\n\n  @ThemeConstraintAnimator({type: Length, inherits: true, value: null, updateFlags: View.NeedsLayout})\n  readonly rowSpacing!: ThemeConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeConstraintAnimator({type: Length, inherits: true, value: null, updateFlags: View.NeedsLayout})\n  readonly rowHeight!: ThemeConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator({type: Expansion, inherits: true, value: null, updateFlags: View.NeedsLayout})\n  readonly stretch!: ExpansionThemeAnimator<this, Expansion | null, AnyExpansion | null>;\n\n  @Property({type: Boolean, inherits: true, value: false})\n  readonly hovers!: Property<this, boolean>;\n\n  @ThemeAnimator<LeafView, Focus, AnyFocus>({\n    type: Focus,\n    value: Focus.unfocused(),\n    didSetValue(newHover: Focus, oldHover: Focus): void {\n      const highlightPhase = this.owner.highlight.getPhase();\n      const hoverPhase = newHover.phase;\n      const backgroundPhase = Math.max(highlightPhase, hoverPhase);\n      this.owner.modifyMood(Feel.default, [[Feel.transparent, 1 - backgroundPhase],\n                                           [Feel.hovering, hoverPhase * (1 - highlightPhase)],\n                                           [Feel.selected, highlightPhase]], false);\n      if (backgroundPhase !== 0) {\n        this.owner.backgroundColor.setLook(Look.backgroundColor, Affinity.Intrinsic);\n      } else {\n        this.owner.backgroundColor.setLook(null, Affinity.Intrinsic);\n        this.owner.backgroundColor.setState(null, Affinity.Intrinsic);\n      }\n    },\n  })\n  readonly hover!: FocusThemeAnimator<this>;\n\n  @ThemeAnimator<LeafView, Focus, AnyFocus>({\n    type: Focus,\n    value: Focus.unfocused(),\n    willFocus(): void {\n      this.owner.callObservers(\"viewWillHighlight\", this.owner);\n    },\n    didFocus(): void {\n      this.owner.callObservers(\"viewDidHighlight\", this.owner);\n    },\n    willUnfocus(): void {\n      this.owner.callObservers(\"viewWillUnhighlight\", this.owner);\n    },\n    didUnfocus(): void {\n      this.owner.callObservers(\"viewDidUnhighlight\", this.owner);\n    },\n    didSetValue(newHighlight: Focus, oldHighlight: Focus): void {\n      const highlightPhase = newHighlight.phase;\n      const hoverPhase = this.owner.hover.getPhase();\n      const backgroundPhase = Math.max(highlightPhase, hoverPhase);\n      this.owner.modifyMood(Feel.default, [[Feel.transparent, 1 - backgroundPhase],\n                                           [Feel.hovering, hoverPhase * (1 - highlightPhase)],\n                                           [Feel.selected, highlightPhase]], false);\n      if (backgroundPhase !== 0) {\n        this.owner.backgroundColor.setLook(Look.backgroundColor, Affinity.Intrinsic);\n      } else {\n        this.owner.backgroundColor.setLook(null, Affinity.Intrinsic);\n        this.owner.backgroundColor.setState(null, Affinity.Intrinsic);\n      }\n    },\n  })\n  readonly highlight!: FocusThemeAnimator<this>;\n\n  getCell<F extends abstract new (...args: any) => CellView>(key: string, cellViewClass: F): InstanceType<F> | null;\n  getCell(key: string): CellView | null;\n  getCell(key: string, cellViewClass?: abstract new (...args: any) => CellView): CellView | null {\n    if (cellViewClass === void 0) {\n      cellViewClass = CellView;\n    }\n    const cellView = this.getChild(key);\n    return cellView instanceof cellViewClass ? cellView : null;\n  }\n\n  getOrCreateCell<F extends ViewCreator<F, CellView>>(key: string, cellViewClass: F): InstanceType<F> {\n    let cellView = this.getChild(key, cellViewClass);\n    if (cellView === null) {\n      cellView = cellViewClass.create();\n      this.setChild(key, cellView);\n    }\n    return cellView!;\n  }\n\n  setCell(key: string, cellView: CellView): void {\n    this.setChild(key, cellView);\n  }\n\n  @ViewSet<LeafView, CellView>({\n    type: CellView,\n    binds: true,\n    initView(cellView: CellView): void {\n      cellView.display.setState(\"none\", Affinity.Intrinsic);\n      cellView.position.setState(\"absolute\", Affinity.Intrinsic);\n      cellView.left.setState(0, Affinity.Intrinsic);\n      cellView.top.setState(0, Affinity.Intrinsic);\n      cellView.width.setState(0, Affinity.Intrinsic);\n      cellView.height.setState(this.owner.height.state, Affinity.Intrinsic);\n    },\n    willAttachView(cellView: CellView, target: View | null): void {\n      this.owner.callObservers(\"viewWillAttachCell\", cellView, target, this.owner);\n    },\n    didDetachView(cellView: CellView): void {\n      this.owner.callObservers(\"viewDidDetachCell\", cellView, this.owner);\n    },\n  })\n  readonly cells!: ViewSet<this, CellView>;\n  static readonly cells: MemberFastenerClass<LeafView, \"cells\">;\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.layoutLeaf();\n  }\n\n  protected layoutLeaf(): void {\n    const rowHeight = this.rowHeight.value;\n    if (rowHeight !== null) {\n      this.height.setState(rowHeight, Affinity.Intrinsic);\n    }\n  }\n\n  protected override displayChildren(displayFlags: ViewFlags, viewContext: ViewContextType<this>,\n                                     displayChild: (this: this, child: View, displayFlags: ViewFlags,\n                                                    viewContext: ViewContextType<this>) => void): void {\n    if ((displayFlags & View.NeedsLayout) !== 0) {\n      this.layoutChildViews(displayFlags, viewContext, displayChild);\n    } else {\n      super.displayChildren(displayFlags, viewContext, displayChild);\n    }\n  }\n\n  protected layoutChildViews(displayFlags: ViewFlags, viewContext: ViewContextType<this>,\n                             displayChild: (this: this, child: View, displayFlags: ViewFlags,\n                                            viewContext: ViewContextType<this>) => void): void {\n    const layout = this.layout.value;\n    const height = this.height.state;\n    const stretch = this.stretch.getPhaseOr(1);\n    type self = this;\n    function layoutChildView(this: self, child: View, displayFlags: ViewFlags,\n                             viewContext: ViewContextType<self>): void {\n      if (child instanceof CellView) {\n        const key = child.key;\n        const col = layout !== null && key !== void 0 ? layout.getCol(key) : null;\n        if (col !== null) {\n          child.display.setState(!col.hidden ? \"flex\" : \"none\", Affinity.Intrinsic);\n          child.left.setState(col.left, Affinity.Intrinsic);\n          child.width.setState(col.width, Affinity.Intrinsic);\n          child.height.setState(height, Affinity.Intrinsic);\n          const textColor = col.textColor;\n          if (textColor instanceof Look) {\n            child.color.setLook(textColor, Affinity.Intrinsic);\n          } else {\n            child.color.setState(textColor, Affinity.Intrinsic);\n          }\n          if (!col.persistent) {\n            child.opacity.setState(stretch, Affinity.Intrinsic);\n          }\n        } else {\n          child.display.setState(\"none\", Affinity.Intrinsic);\n          child.left.setState(null, Affinity.Intrinsic);\n          child.width.setState(null, Affinity.Intrinsic);\n          child.height.setState(null, Affinity.Intrinsic);\n        }\n      }\n      displayChild.call(this, child, displayFlags, viewContext);\n    }\n    super.displayChildren(displayFlags, viewContext, layoutChildView);\n  }\n\n  @Property({type: Boolean, inherits: true, value: true})\n  readonly glows!: Property<this, boolean>;\n\n  protected glow(input: PositionGestureInput): void {\n    if (input.detail instanceof ButtonGlow) {\n      input.detail.fade(input.x, input.y);\n      input.detail = void 0;\n    }\n    if (input.detail === void 0) {\n      const delay = input.inputType === \"mouse\" ? 0 : 100;\n      input.detail = this.prependChild(ButtonGlow);\n      (input.detail as ButtonGlow).glow(input.x, input.y, void 0, delay);\n    }\n  }\n\n  @PositionGesture<LeafView, LeafView>({\n    self: true,\n    didBeginPress(input: PositionGestureInput, event: Event | null): void {\n      if (this.owner.glows.value) {\n        this.owner.glow(input);\n      }\n    },\n    didMovePress(input: PositionGestureInput, event: Event | null): void {\n      if (input.isRunaway()) {\n        this.cancelPress(input, event);\n      } else if (!this.owner.clientBounds.contains(input.x, input.y)) {\n        input.clearHoldTimer();\n        this.beginHover(input, event);\n        if (input.detail instanceof ButtonGlow) {\n          input.detail.fade(input.x, input.y);\n          input.detail = void 0;\n        }\n      }\n    },\n    didEndPress(input: PositionGestureInput, event: Event | null): void {\n      if (!this.owner.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n        if (input.detail instanceof ButtonGlow) {\n          input.detail.fade(input.x, input.y);\n          input.detail = void 0;\n        }\n      } else if (input.detail instanceof ButtonGlow) {\n        input.detail.pulse(input.x, input.y);\n      }\n    },\n    didCancelPress(input: PositionGestureInput, event: Event | null): void {\n      if (!this.owner.clientBounds.contains(input.x, input.y)) {\n        this.endHover(input, event);\n      }\n      if (input.detail instanceof ButtonGlow) {\n        input.detail.fade(input.x, input.y);\n        input.detail = void 0;\n      }\n    },\n    didStartHovering(): void {\n      if (this.owner.hovers.value) {\n        this.owner.hover.focus(false);\n      }\n      this.owner.callObservers(\"viewDidEnter\", this.owner);\n    },\n    didStopHovering(): void {\n      if (this.owner.hovers.value) {\n        this.owner.hover.unfocus();\n      }\n      this.owner.callObservers(\"viewDidLeave\", this.owner);\n    },\n    didPress(input: PositionGestureInput, event: Event | null): void {\n      if (this.owner.clientBounds.contains(input.x, input.y)) {\n        if (!input.defaultPrevented) {\n          let target = input.target;\n          while (target !== null && target !== this.owner.node) {\n            const targetView = (target as ViewNode).view;\n            if (targetView instanceof CellView) {\n              targetView.onPress(input, event);\n              targetView.didPress(input, event);\n              break;\n            }\n            target = target instanceof Node ? target.parentNode : null;\n          }\n        }\n        if (!input.defaultPrevented) {\n          this.owner.callObservers(\"viewDidPress\", input, event, this.owner);\n        }\n      }\n    },\n    didLongPress(input: PositionGestureInput): void {\n      if (!input.defaultPrevented) {\n        let target = input.target;\n        while (target !== null && target !== this.owner.node) {\n          const targetView = (target as ViewNode).view;\n          if (targetView instanceof CellView) {\n            targetView.onLongPress(input);\n            targetView.didLongPress(input);\n            break;\n          }\n          target = target instanceof Node ? target.parentNode : null;\n        }\n      }\n      if (!input.defaultPrevented) {\n        this.owner.callObservers(\"viewDidLongPress\", input, this.owner);\n      }\n    },\n  })\n  readonly gesture!: PositionGesture<this, LeafView>;\n  static readonly gesture: MemberFastenerClass<LeafView, \"gesture\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {Model, TraitCreator, Trait, TraitSet} from \"@swim/model\";\nimport {CellTrait} from \"../cell/CellTrait\";\nimport type {LeafTraitObserver} from \"./LeafTraitObserver\";\n\n/** @public */\nexport class LeafTrait extends Trait {\n  override readonly observerType?: Class<LeafTraitObserver>;\n\n  getCell<F extends abstract new (...args: any) => CellTrait>(key: string, cellTraitClass: F): InstanceType<F> | null;\n  getCell(key: string): CellTrait | null;\n  getCell(key: string, cellTraitClass?: abstract new (...args: any) => CellTrait): CellTrait | null {\n    if (cellTraitClass === void 0) {\n      cellTraitClass = CellTrait;\n    }\n    const cellTrait = this.getTrait(key);\n    return cellTrait instanceof cellTraitClass ? cellTrait : null;\n  }\n\n  getOrCreateCell<F extends TraitCreator<F, CellTrait>>(key: string, cellTraitClass: F): InstanceType<F> {\n    let cellTrait = this.getTrait(key, cellTraitClass);\n    if (cellTrait === null) {\n      cellTrait = cellTraitClass.create();\n      this.setTrait(key, cellTrait);\n    }\n    return cellTrait!;\n  }\n\n  setCell(key: string, cellTrait: CellTrait): void {\n    this.setTrait(key, cellTrait);\n  }\n\n  @TraitSet<LeafTrait, CellTrait>({\n    type: CellTrait,\n    binds: true,\n    willAttachTrait(cellTrait: CellTrait, targetTrait: Trait | null): void {\n      this.owner.callObservers(\"traitWillAttachCell\", cellTrait, targetTrait, this.owner);\n    },\n    didAttachTrait(cellTrait: CellTrait, targetTrait: Trait | null): void {\n      if (this.owner.consuming) {\n        cellTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(cellTrait: CellTrait): void {\n      if (this.owner.consuming) {\n        cellTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(cellTrait: CellTrait): void {\n      this.owner.callObservers(\"traitDidDetachCell\", cellTrait, this.owner);\n    },\n    detectModel(model: Model): CellTrait | null {\n      return model.getTrait(CellTrait);\n    },\n  })\n  readonly cells!: TraitSet<this, CellTrait>;\n  static readonly cells: MemberFastenerClass<LeafTrait, \"cells\">;\n\n  /** @internal */\n  protected startConsumingCells(): void {\n    const cellTraits = this.cells.traits;\n    for (const traitId in cellTraits) {\n      const cellTrait = cellTraits[traitId]!;\n      cellTrait.consume(this);\n    }\n  }\n\n  /** @internal */\n  protected stopConsumingCells(): void {\n    const cellTraits = this.cells.traits;\n    for (const traitId in cellTraits) {\n      const cellTrait = cellTraits[traitId]!;\n      cellTrait.unconsume(this);\n    }\n  }\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    this.startConsumingCells();\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    this.stopConsumingCells();\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class, ObserverType} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport type {TraitCreator, Trait} from \"@swim/model\";\nimport type {PositionGestureInput, ViewCreator} from \"@swim/view\";\nimport type {HtmlView} from \"@swim/dom\";\nimport type {Graphics} from \"@swim/graphics\";\nimport {Controller, TraitViewRef, TraitViewControllerSet} from \"@swim/controller\";\nimport type {CellView} from \"../cell/CellView\";\nimport {TextCellView} from \"../cell/TextCellView\";\nimport type {CellTrait} from \"../cell/CellTrait\";\nimport {CellController} from \"../cell/CellController\";\nimport type {TextCellController} from \"../cell/TextCellController\";\nimport type {IconCellController} from \"../cell/IconCellController\";\nimport {LeafView} from \"./LeafView\";\nimport {LeafTrait} from \"./LeafTrait\";\nimport type {LeafControllerObserver} from \"./LeafControllerObserver\";\n\n/** @public */\nexport interface LeafControllerCellExt {\n  attachCellTrait(cellTrait: CellTrait, cellController: CellController): void;\n  detachCellTrait(cellTrait: CellTrait, cellController: CellController): void;\n  attachCellView(cellView: CellView, cellController: CellController): void;\n  detachCellView(cellView: CellView, cellController: CellController): void;\n  attachCellContentView(cellContentView: HtmlView, cellController: CellController): void;\n  detachCellContentView(cellContentView: HtmlView, cellController: CellController): void;\n}\n\n/** @public */\nexport class LeafController extends Controller {\n  override readonly observerType?: Class<LeafControllerObserver>;\n\n  @TraitViewRef<LeafController, LeafTrait, LeafView>({\n    traitType: LeafTrait,\n    observesTrait: true,\n    willAttachTrait(leafTrait: LeafTrait): void {\n      this.owner.callObservers(\"controllerWillAttachLeafTrait\", leafTrait, this.owner);\n    },\n    didAttachTrait(leafTrait: LeafTrait): void {\n      const cellTraits = leafTrait.cells.traits;\n      for (const traitId in cellTraits) {\n        const cellTrait = cellTraits[traitId]!;\n        this.owner.cells.addTraitController(cellTrait);\n      }\n    },\n    willDetachTrait(leafTrait: LeafTrait): void {\n      const cellTraits = leafTrait.cells.traits;\n      for (const traitId in cellTraits) {\n        const cellTrait = cellTraits[traitId]!;\n        this.owner.cells.deleteTraitController(cellTrait);\n      }\n    },\n    didDetachTrait(leafTrait: LeafTrait): void {\n      this.owner.callObservers(\"controllerDidDetachLeafTrait\", leafTrait, this.owner);\n    },\n    traitWillAttachCell(cellTrait: CellTrait, targetTrait: Trait | null): void {\n      this.owner.cells.addTraitController(cellTrait, targetTrait);\n    },\n    traitDidDetachCell(cellTrait: CellTrait): void {\n      this.owner.cells.deleteTraitController(cellTrait);\n    },\n    viewType: LeafView,\n    observesView: true,\n    initView(leafView: LeafView): void {\n      const cellControllers = this.owner.cells.controllers;\n      for (const controllerId in cellControllers) {\n        const cellController = cellControllers[controllerId]!;\n        const cellView = cellController.cell.view;\n        if (cellView !== null && cellView.parent === null) {\n          const cellTrait = cellController.cell.trait;\n          if (cellTrait !== null) {\n            cellController.cell.insertView(leafView, void 0, void 0, cellTrait.key);\n          }\n        }\n      }\n    },\n    willAttachView(leafView: LeafView): void {\n      this.owner.callObservers(\"controllerWillAttachLeafView\", leafView, this.owner);\n    },\n    didDetachView(leafView: LeafView): void {\n      this.owner.callObservers(\"controllerDidDetachLeafView\", leafView, this.owner);\n    },\n    viewWillHighlight(leafView: LeafView): void {\n      this.owner.callObservers(\"controllerWillHighlightLeafView\", leafView, this.owner);\n    },\n    viewDidHighlight(leafView: LeafView): void {\n      this.owner.callObservers(\"controllerDidHighlightLeafView\", leafView, this.owner);\n    },\n    viewWillUnhighlight(leafView: LeafView): void {\n      this.owner.callObservers(\"controllerWillUnhighlightLeafView\", leafView, this.owner);\n    },\n    viewDidUnhighlight(leafView: LeafView): void {\n      this.owner.callObservers(\"controllerDidUnhighlightLeafView\", leafView, this.owner);\n    },\n    viewDidEnter(leafView: LeafView): void {\n      this.owner.callObservers(\"controllerDidEnterLeafView\", leafView, this.owner);\n    },\n    viewDidLeave(leafView: LeafView): void {\n      this.owner.callObservers(\"controllerDidLeaveLeafView\", leafView, this.owner);\n    },\n    viewDidPress(input: PositionGestureInput, event: Event | null, leafView: LeafView): void {\n      this.owner.callObservers(\"controllerDidPressLeafView\", input, event, leafView, this.owner);\n    },\n    viewDidLongPress(input: PositionGestureInput, leafView: LeafView): void {\n      this.owner.callObservers(\"controllerDidLongPressLeafView\", input, leafView, this.owner);\n    },\n  })\n  readonly leaf!: TraitViewRef<this, LeafTrait, LeafView>;\n  static readonly leaf: MemberFastenerClass<LeafController, \"leaf\">;\n\n  getCellTrait<F extends abstract new (...args: any) => CellTrait>(key: string, cellTraitClass: F): InstanceType<F> | null;\n  getCellTrait(key: string): CellTrait | null;\n  getCellTrait(key: string, cellTraitClass?: abstract new (...args: any) => CellTrait): CellTrait | null {\n    const leafTrait = this.leaf.trait;\n    return leafTrait !== null ? leafTrait.getCell(key, cellTraitClass!) : null;\n  }\n\n  getOrCreateCellTrait<F extends TraitCreator<F, CellTrait>>(key: string, cellTraitClass: F): InstanceType<F> {\n    const leafTrait = this.leaf.trait;\n    if (leafTrait === null) {\n      throw new Error(\"no leaf trait\");\n    }\n    return leafTrait.getOrCreateCell(key, cellTraitClass);\n  }\n\n  setCellTrait(key: string, cellTrait: CellTrait): void {\n    const leafTrait = this.leaf.trait;\n    if (leafTrait === null) {\n      throw new Error(\"no leaf trait\");\n    }\n    leafTrait.setCell(key, cellTrait);\n  }\n\n  getCellView<F extends abstract new (...args: any) => CellView>(key: string, cellViewClass: F): InstanceType<F> | null;\n  getCellView(key: string): CellView | null;\n  getCellView(key: string, cellViewClass?: abstract new (...args: any) => CellView): CellView | null {\n    const leafView = this.leaf.view;\n    return leafView !== null ? leafView.getCell(key, cellViewClass!) : null;\n  }\n\n  getOrCreateCellView<F extends ViewCreator<F, CellView>>(key: string, cellViewClass: F): InstanceType<F> {\n    let leafView = this.leaf.view;\n    if (leafView === null) {\n      leafView = this.leaf.createView();\n      if (leafView === null) {\n        throw new Error(\"no leaf view\");\n      }\n      this.leaf.setView(leafView);\n    }\n    return leafView.getOrCreateCell(key, cellViewClass);\n  }\n\n  setCellView(key: string, cellView: CellView): void {\n    let leafView = this.leaf.view;\n    if (leafView === null) {\n      leafView = this.leaf.createView();\n      if (leafView === null) {\n        throw new Error(\"no leaf view\");\n      }\n      this.leaf.setView(leafView);\n    }\n    leafView.setCell(key, cellView);\n  }\n\n  @TraitViewControllerSet<LeafController, CellTrait, CellView, CellController, LeafControllerCellExt & ObserverType<CellController | TextCellController | IconCellController>>({\n    implements: true,\n    type: CellController,\n    binds: true,\n    observes: true,\n    get parentView(): LeafView | null {\n      return this.owner.leaf.view;\n    },\n    getTraitViewRef(cellController: CellController): TraitViewRef<unknown, CellTrait, CellView> {\n      return cellController.cell;\n    },\n    willAttachController(cellController: CellController): void {\n      this.owner.callObservers(\"controllerWillAttachCell\", cellController, this.owner);\n    },\n    didAttachController(cellController: CellController): void {\n      const cellTrait = cellController.cell.trait;\n      if (cellTrait !== null) {\n        this.attachCellTrait(cellTrait, cellController);\n      }\n      const cellView = cellController.cell.view;\n      if (cellView !== null) {\n        this.attachCellView(cellView, cellController);\n      }\n    },\n    willDetachController(cellController: CellController): void {\n      const cellView = cellController.cell.view;\n      if (cellView !== null) {\n        this.detachCellView(cellView, cellController);\n      }\n      const cellTrait = cellController.cell.trait;\n      if (cellTrait !== null) {\n        this.detachCellTrait(cellTrait, cellController);\n      }\n    },\n    didDetachController(cellController: CellController): void {\n      this.owner.callObservers(\"controllerDidDetachCell\", cellController, this.owner);\n    },\n    controllerWillAttachCellTrait(cellTrait: CellTrait, cellController: CellController): void {\n      this.owner.callObservers(\"controllerWillAttachCellTrait\", cellTrait, cellController, this.owner);\n      this.attachCellTrait(cellTrait, cellController);\n    },\n    controllerDidDetachCellTrait(cellTrait: CellTrait, cellController: CellController): void {\n      this.detachCellTrait(cellTrait, cellController);\n      this.owner.callObservers(\"controllerDidDetachCellTrait\", cellTrait, cellController, this.owner);\n    },\n    attachCellTrait(cellTrait: CellTrait, cellController: CellController): void {\n      // hook\n    },\n    detachCellTrait(cellTrait: CellTrait, cellController: CellController): void {\n      // hook\n    },\n    controllerWillAttachCellView(cellView: CellView, cellController: CellController): void {\n      this.owner.callObservers(\"controllerWillAttachCellView\", cellView, cellController, this.owner);\n      this.attachCellView(cellView, cellController);\n    },\n    controllerDidDetachCellView(cellView: CellView, cellController: CellController): void {\n      this.detachCellView(cellView, cellController);\n      this.owner.callObservers(\"controllerDidDetachCellView\", cellView, cellController, this.owner);\n    },\n    attachCellView(cellView: CellView, cellController: CellController): void {\n      if (cellView instanceof TextCellView) {\n        const cellContentView = cellView.content.view;\n        if (cellContentView !== null) {\n          this.attachCellContentView(cellContentView, cellController);\n        }\n      }\n    },\n    detachCellView(cellView: CellView, cellController: CellController): void {\n      if (cellView instanceof TextCellView) {\n        const cellContentView = cellView.content.view;\n        if (cellContentView !== null) {\n          this.detachCellContentView(cellContentView, cellController);\n        }\n      }\n      cellView.remove();\n    },\n    controllerDidPressCellView(input: PositionGestureInput, event: Event | null, cellView: CellView, cellController: CellController): void {\n      this.owner.callObservers(\"controllerDidPressCellView\", input, event, cellView, cellController, this.owner);\n    },\n    controllerDidLongPressCellView(input: PositionGestureInput, cellView: CellView, cellController: CellController): void {\n      this.owner.callObservers(\"controllerDidLongPressCellView\", input, cellView, cellController, this.owner);\n    },\n    controllerWillAttachCellContentView(contentView: HtmlView, cellController: CellController): void {\n      this.attachCellContentView(contentView, cellController);\n      this.owner.callObservers(\"controllerWillAttachCellContentView\", contentView, cellController, this.owner);\n    },\n    controllerDidDetachCellContentView(contentView: HtmlView, cellController: CellController): void {\n      this.owner.callObservers(\"controllerDidDetachCellContentView\", contentView, cellController, this.owner);\n      this.detachCellContentView(contentView, cellController);\n    },\n    attachCellContentView(cellContentView: HtmlView, cellController: CellController): void {\n      // hook\n    },\n    detachCellContentView(cellContentView: HtmlView, cellController: CellController): void {\n      // hook\n    },\n    controllerWillSetCellIcon(newCellIcon: Graphics | null, oldCellIcon: Graphics | null, cellController: CellController): void {\n      this.owner.callObservers(\"controllerWillSetCellIcon\", newCellIcon, oldCellIcon, cellController, this.owner);\n    },\n    controllerDidSetCellIcon(newCellIcon: Graphics | null, oldCellIcon: Graphics | null, cellController: CellController): void {\n      this.owner.callObservers(\"controllerDidSetCellIcon\", newCellIcon, oldCellIcon, cellController, this.owner);\n    },\n    createController(cellTrait?: CellTrait): CellController {\n      if (cellTrait !== void 0) {\n        return CellController.fromTrait(cellTrait);\n      } else {\n        return TraitViewControllerSet.prototype.createController.call(this);\n      }\n    },\n  })\n  readonly cells!: TraitViewControllerSet<this, CellTrait, CellView, CellController>;\n  static readonly cells: MemberFastenerClass<LeafController, \"cells\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Class} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Property} from \"@swim/component\";\nimport {AnyLength, Length, R2Box} from \"@swim/math\";\nimport {AnyExpansion, Expansion} from \"@swim/style\";\nimport {Look, ThemeAnimator, ExpansionThemeAnimator, ThemeConstraintAnimator} from \"@swim/theme\";\nimport {\n  PositionGestureInput,\n  ViewContextType,\n  ViewContext,\n  ViewFlags,\n  ViewCreator,\n  View,\n  ViewRef,\n} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport {AnyTableLayout, TableLayout} from \"../layout/TableLayout\";\nimport type {CellView} from \"../cell/CellView\";\nimport {LeafView} from \"../leaf/LeafView\";\nimport type {RowViewObserver} from \"./RowViewObserver\";\nimport type {TableViewContext} from \"../table/TableViewContext\";\nimport {TableView} from \"../\"; // forward reference\n\n/** @public */\nexport class RowView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.visibleFrame = new R2Box(0, 0, window.innerWidth, window.innerHeight);\n    this.initRow();\n  }\n\n  protected initRow(): void {\n    this.addClass(\"row\");\n    this.position.setState(\"relative\", Affinity.Intrinsic);\n  }\n\n  override readonly observerType?: Class<RowViewObserver>;\n\n  override readonly contextType?: Class<TableViewContext>;\n\n  @Property({type: TableLayout, inherits: true, value: null, updateFlags: View.NeedsLayout})\n  readonly layout!: Property<this, TableLayout | null, AnyTableLayout | null>;\n\n  @Property<RowView, number>({\n    type: Number,\n    inherits: true,\n    value: 0,\n    updateFlags: View.NeedsLayout,\n    didSetValue(newDepth: number, oldDepth: number): void {\n      const treeView = this.owner.tree.view;\n      if (treeView !== null) {\n        treeView.depth.setValue(newDepth + 1, Affinity.Intrinsic);\n      }\n    },\n  })\n  readonly depth!: Property<this, number>;\n\n  @ThemeConstraintAnimator({type: Length, inherits: true, value: null, updateFlags: View.NeedsLayout})\n  readonly rowSpacing!: ThemeConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeConstraintAnimator({type: Length, inherits: true, value: null, updateFlags: View.NeedsLayout})\n  readonly rowHeight!: ThemeConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  @Property({type: Boolean, inherits: true, value: false})\n  readonly hovers!: Property<this, boolean>;\n\n  @Property({type: Boolean, inherits: true, value: true})\n  readonly glows!: Property<this, boolean>;\n\n  getCell<F extends abstract new (...args: any) => CellView>(key: string, cellViewClass: F): InstanceType<F> | null;\n  getCell(key: string): CellView | null;\n  getCell(key: string, cellViewClass?: abstract new (...args: any) => CellView): CellView | null {\n    const leafView = this.leaf.view;\n    return leafView !== null ? leafView.getCell(key, cellViewClass!) : null;\n  }\n\n  getOrCreateCell<F extends ViewCreator<F, CellView>>(key: string, cellViewClass: F): InstanceType<F> {\n    const leafView = this.leaf.insertView();\n    if (leafView === null) {\n      throw new Error(\"no leaf view\");\n    }\n    return leafView.getOrCreateCell(key, cellViewClass);\n  }\n\n  setCell(key: string, cellView: CellView): void {\n    const leafView = this.leaf.insertView();\n    if (leafView === null) {\n      throw new Error(\"no leaf view\");\n    }\n    leafView.setCell(key, cellView);\n  }\n\n  @ViewRef<RowView, LeafView>({\n    key: true,\n    type: LeafView,\n    binds: true,\n    observes: true,\n    initView(leafView: LeafView): void {\n      leafView.display.setState(\"none\", Affinity.Intrinsic);\n      leafView.position.setState(\"absolute\", Affinity.Intrinsic);\n      leafView.left.setState(0, Affinity.Intrinsic);\n      leafView.top.setState(0, Affinity.Intrinsic);\n      const layout = this.owner.layout.value;\n      leafView.width.setState(layout !== null ? layout.width : null, Affinity.Intrinsic);\n      leafView.zIndex.setState(1, Affinity.Intrinsic);\n    },\n    willAttachView(leafView: LeafView): void {\n      this.owner.callObservers(\"viewWillAttachLeaf\", leafView, this.owner);\n    },\n    didDetachView(leafView: LeafView): void {\n      this.owner.callObservers(\"viewDidDetachLeaf\", leafView, this.owner);\n    },\n    viewWillHighlight(leafView: LeafView): void {\n      this.owner.callObservers(\"viewWillHighlightLeaf\", leafView, this.owner);\n    },\n    viewDidHighlight(leafView: LeafView): void {\n      this.owner.callObservers(\"viewDidHighlightLeaf\", leafView, this.owner);\n    },\n    viewWillUnhighlight(leafView: LeafView): void {\n      this.owner.callObservers(\"viewWillUnhighlightLeaf\", leafView, this.owner);\n    },\n    viewDidUnhighlight(leafView: LeafView): void {\n      this.owner.callObservers(\"viewDidUnhighlightLeaf\", leafView, this.owner);\n    },\n    viewDidEnter(leafView: LeafView): void {\n      this.owner.callObservers(\"viewDidEnterLeaf\", leafView, this.owner);\n    },\n    viewDidLeave(leafView: LeafView): void {\n      this.owner.callObservers(\"viewDidLeaveLeaf\", leafView, this.owner);\n    },\n    viewDidPress(input: PositionGestureInput, event: Event | null, leafView: LeafView): void {\n      this.owner.callObservers(\"viewDidPressLeaf\", input, event, leafView, this.owner);\n    },\n    viewDidLongPress(input: PositionGestureInput, leafView: LeafView): void {\n      this.owner.callObservers(\"viewDidLongPressLeaf\", input, leafView, this.owner);\n    },\n  })\n  readonly leaf!: ViewRef<this, LeafView>;\n  static readonly leaf: MemberFastenerClass<RowView, \"leaf\">;\n\n  @ViewRef<RowView, HtmlView>({\n    key: true,\n    type: HtmlView,\n    binds: true,\n    initView(headView: HtmlView): void {\n      headView.addClass(\"head\");\n      headView.display.setState(\"none\", Affinity.Intrinsic);\n      headView.position.setState(\"absolute\", Affinity.Intrinsic);\n      headView.left.setState(0, Affinity.Intrinsic);\n      headView.top.setState(this.owner.rowHeight.state, Affinity.Intrinsic);\n      const layout = this.owner.layout.value;\n      headView.width.setState(layout !== null ? layout.width : null, Affinity.Intrinsic);\n      headView.height.setState(this.owner.rowSpacing.state, Affinity.Intrinsic);\n      headView.backgroundColor.setLook(Look.accentColor, Affinity.Intrinsic);\n      headView.opacity.setState(this.owner.disclosing.phase, Affinity.Intrinsic);\n      headView.zIndex.setState(1, Affinity.Intrinsic);\n    },\n  })\n  readonly head!: ViewRef<this, HtmlView>;\n  static readonly head: MemberFastenerClass<RowView, \"head\">;\n\n  @ViewRef<RowView, TableView>({\n    key: true,\n    // avoid cyclic static reference to type: TableView\n    binds: true,\n    initView(treeView: TableView): void {\n      treeView.addClass(\"tree\");\n      treeView.display.setState(this.owner.disclosure.collapsed ? \"none\" : \"block\", Affinity.Intrinsic);\n      treeView.position.setState(\"absolute\", Affinity.Intrinsic);\n      treeView.left.setState(0, Affinity.Intrinsic);\n      const layout = this.owner.layout.value;\n      treeView.width.setState(layout !== null ? layout.width : null, Affinity.Intrinsic);\n      treeView.zIndex.setState(0, Affinity.Intrinsic);\n      treeView.depth.setValue(this.owner.depth.value + 1, Affinity.Intrinsic);\n    },\n    willAttachView(treeView: TableView): void {\n      this.owner.callObservers(\"viewWillAttachTree\", treeView, this.owner);\n    },\n    didDetachView(treeView: TableView): void {\n      this.owner.callObservers(\"viewDidDetachTree\", treeView, this.owner);\n    },\n    createView(): TableView {\n      return TableView.create();\n    },\n  })\n  readonly tree!: ViewRef<this, TableView>;\n  static readonly tree: MemberFastenerClass<RowView, \"tree\">;\n\n  @ViewRef<RowView, HtmlView>({\n    key: true,\n    type: HtmlView,\n    binds: true,\n    initView(footView: HtmlView): void {\n      footView.addClass(\"foot\");\n      footView.display.setState(\"none\", Affinity.Intrinsic);\n      footView.position.setState(\"absolute\", Affinity.Intrinsic);\n      footView.left.setState(0, Affinity.Intrinsic);\n      footView.top.setState(this.owner.rowHeight.state, Affinity.Intrinsic);\n      const layout = this.owner.layout.value;\n      footView.width.setState(layout !== null ? layout.width : null, Affinity.Intrinsic);\n      footView.height.setState(this.owner.rowSpacing.state, Affinity.Intrinsic);\n      footView.backgroundColor.setLook(Look.borderColor, Affinity.Intrinsic);\n      footView.opacity.setState(this.owner.disclosing.phase, Affinity.Intrinsic);\n      footView.zIndex.setState(1, Affinity.Intrinsic);\n    },\n  })\n  readonly foot!: ViewRef<this, HtmlView>;\n  static readonly foot: MemberFastenerClass<RowView, \"foot\">;\n\n  @ThemeAnimator<RowView, Expansion>({\n    type: Expansion,\n    value: Expansion.collapsed(),\n    willExpand(): void {\n      this.owner.callObservers(\"viewWillExpand\", this.owner);\n      const treeView = this.owner.tree.view;\n      if (treeView !== null) {\n        treeView.display.setState(\"block\", Affinity.Intrinsic);\n      }\n    },\n    didExpand(): void {\n      this.owner.callObservers(\"viewDidExpand\", this.owner);\n    },\n    willCollapse(): void {\n      this.owner.callObservers(\"viewWillCollapse\", this.owner);\n    },\n    didCollapse(): void {\n      const treeView = this.owner.tree.view;\n      if (treeView !== null) {\n        treeView.display.setState(\"none\", Affinity.Intrinsic);\n      }\n      this.owner.callObservers(\"viewDidCollapse\", this.owner);\n    },\n    didSetValue(newDisclosure: Expansion, oldDisclosure: Expansion): void {\n      if (newDisclosure.direction !== 0) {\n        this.owner.disclosing.setState(newDisclosure, Affinity.Intrinsic);\n      } else {\n        this.owner.disclosing.setState(null, Affinity.Intrinsic);\n        this.owner.disclosing.setAffinity(Affinity.Transient);\n      }\n      const tableView = this.owner.getBase(TableView);\n      if (tableView !== null) {\n        tableView.requireUpdate(View.NeedsLayout);\n      }\n    },\n  })\n  readonly disclosure!: ExpansionThemeAnimator<this, Expansion, AnyExpansion>;\n\n  @ThemeAnimator({type: Expansion, inherits: true, value: null, updateFlags: View.NeedsLayout})\n  readonly disclosing!: ExpansionThemeAnimator<this, Expansion | null, AnyExpansion | null>;\n\n  /** @internal */\n  readonly visibleFrame!: R2Box;\n\n  protected detectVisibleFrame(viewContext: ViewContext): R2Box {\n    const xBleed = 0;\n    const yBleed = this.rowHeight.getValueOr(Length.zero()).pxValue();\n    const parentVisibleFrame = (viewContext as TableViewContext).visibleFrame as R2Box | undefined;\n    if (parentVisibleFrame !== void 0) {\n      let left: Length | number | null = this.left.state;\n      left = left instanceof Length ? left.pxValue() : 0;\n      let top: Length | number | null = this.top.state;\n      top = top instanceof Length ? top.pxValue() : 0;\n      return new R2Box(parentVisibleFrame.xMin - left - xBleed, parentVisibleFrame.yMin - top - yBleed,\n                       parentVisibleFrame.xMax - left + xBleed, parentVisibleFrame.yMax - top + yBleed);\n    } else {\n      const bounds = this.node.getBoundingClientRect();\n      const xMin = -bounds.x - xBleed;\n      const yMin = -bounds.y - yBleed;\n      const xMax = window.innerWidth - bounds.x + xBleed;\n      const yMax = window.innerHeight - bounds.y + yBleed;\n      return new R2Box(xMin, yMin, xMax, yMax);\n    }\n  }\n\n  override extendViewContext(viewContext: ViewContext): ViewContextType<this> {\n    const treeViewContext = Object.create(viewContext);\n    treeViewContext.visibleFrame = this.visibleFrame;\n    return treeViewContext;\n  }\n\n  protected override onProcess(processFlags: ViewFlags, viewContext: ViewContextType<this>): void {\n    super.onProcess(processFlags, viewContext);\n    const visibleFrame = this.detectVisibleFrame(Object.getPrototypeOf(viewContext));\n    (this as Mutable<this>).visibleFrame = visibleFrame;\n    (viewContext as Mutable<ViewContextType<this>>).visibleFrame = this.visibleFrame;\n  }\n\n  protected override needsProcess(processFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    if ((processFlags & View.NeedsResize) !== 0) {\n      processFlags |= View.NeedsScroll;\n    }\n    return processFlags;\n  }\n\n  protected override onDisplay(displayFlags: ViewFlags, viewContext: ViewContextType<this>): void {\n    super.onDisplay(displayFlags, viewContext);\n    const visibleFrame = this.detectVisibleFrame(Object.getPrototypeOf(viewContext));\n    (this as Mutable<this>).visibleFrame = visibleFrame;\n    (viewContext as Mutable<ViewContextType<this>>).visibleFrame = this.visibleFrame;\n  }\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.resizeRow();\n    const leafView = this.leaf.view;\n    if (leafView !== null) {\n      this.layoutLeaf(leafView);\n    }\n  }\n\n  protected resizeRow(): void {\n    const oldLayout = !this.layout.inherited ? this.layout.value : null;\n    if (oldLayout !== null) {\n      const superLayout = this.layout.superValue;\n      let width: Length | number | null = null;\n      if (superLayout !== void 0 && superLayout !== null && superLayout.width !== null) {\n        width = superLayout.width.pxValue();\n      }\n      if (width === null) {\n        width = this.width.state;\n        width = width instanceof Length ? width.pxValue() : this.node.offsetWidth;\n      }\n      const newLayout = oldLayout.resized(width, 0, 0);\n      this.layout.setValue(newLayout);\n    }\n  }\n\n  protected layoutLeaf(leafView: LeafView): void {\n    const layout = this.layout.value;\n    const width = layout !== null ? layout.width : null;\n    const timing = this.getLook(Look.timing);\n    leafView.top.setState(0, timing, Affinity.Intrinsic);\n    leafView.width.setState(width, Affinity.Intrinsic);\n  }\n\n  protected override didLayout(viewContext: ViewContextType<this>): void {\n    this.layoutRow();\n    super.didLayout(viewContext);\n  }\n\n  protected layoutRow(): void {\n    const layout = this.layout.value;\n    const width = layout !== null ? layout.width : null;\n    const rowSpacing = this.rowSpacing.getValueOr(Length.zero()).pxValue();\n    const disclosure = this.disclosure.getValue();\n    const disclosingPhase = this.disclosing.getPhaseOr(1);\n\n    let leafHeightValue: Length | number | null = 0;\n    let leafHeightState: Length | number | null = 0;\n    const leafView = this.leaf.view;\n    if (leafView !== null) {\n      leafView.width.setState(width, Affinity.Intrinsic);\n      leafView.display.setState(\"flex\", Affinity.Intrinsic);\n      leafHeightValue = leafView.height.value;\n      leafHeightValue = leafHeightValue instanceof Length ? leafHeightValue.pxValue() : leafView.node.offsetHeight;\n      leafHeightState = leafView.height.state;\n      leafHeightState = leafHeightState instanceof Length ? leafHeightState.pxValue() : leafHeightValue;\n    }\n\n    const headView = this.head.view;\n    if (headView !== null) {\n      if (!disclosure.collapsed) {\n        headView.top.setState(leafHeightValue, Affinity.Intrinsic);\n        headView.width.setState(width, Affinity.Intrinsic);\n        headView.height.setState(rowSpacing * disclosingPhase, Affinity.Intrinsic);\n        headView.opacity.setState(disclosingPhase, Affinity.Intrinsic);\n        headView.display.setState(\"block\", Affinity.Intrinsic);\n      } else {\n        headView.display.setState(\"none\", Affinity.Intrinsic);\n      }\n    }\n\n    let treeHeightValue: Length | number | null = 0;\n    let treeHeightState: Length | number | null = 0;\n    const treeView = this.tree.view;\n    if (treeView !== null) {\n      if (!disclosure.collapsed) {\n        treeView.top.setState((leafHeightValue + rowSpacing) * disclosingPhase, Affinity.Intrinsic);\n        treeView.width.setState(width, Affinity.Intrinsic);\n        treeView.display.setState(\"block\", Affinity.Intrinsic);\n        treeHeightValue = treeView.height.value;\n        treeHeightValue = treeHeightValue instanceof Length ? treeHeightValue.pxValue() : treeView.node.offsetHeight;\n        treeHeightValue += rowSpacing;\n        treeHeightState = treeView.height.state;\n        treeHeightState = treeHeightState instanceof Length ? treeHeightState.pxValue() : treeHeightValue;\n        treeHeightState += rowSpacing;\n      } else {\n        treeView.display.setState(\"none\", Affinity.Intrinsic);\n      }\n    }\n\n    const footView = this.foot.view;\n    if (footView !== null) {\n      if (!disclosure.collapsed) {\n        footView.top.setState(leafHeightValue + treeHeightValue, Affinity.Intrinsic);\n        footView.width.setState(width, Affinity.Intrinsic);\n        footView.height.setState(rowSpacing * disclosingPhase, Affinity.Intrinsic);\n        footView.opacity.setState(disclosingPhase, Affinity.Intrinsic);\n        footView.display.setState(\"block\", Affinity.Intrinsic);\n      } else {\n        footView.display.setState(\"none\", Affinity.Intrinsic);\n      }\n    }\n\n    if (this.height.hasAffinity(Affinity.Intrinsic)) {\n      const heightValue = leafHeightValue + treeHeightValue * disclosingPhase;\n      const heightState = leafHeightState + treeHeightState;\n      this.height.setInterpolatedValue(Length.px(heightValue), Length.px(heightState));\n    }\n  }\n\n  protected override onCull(): void {\n    super.onCull();\n    this.display.setState(\"none\", Affinity.Intrinsic);\n  }\n\n  protected override onUncull(): void {\n    super.onUncull();\n    this.display.setState(\"block\", Affinity.Intrinsic);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {Model, Trait, TraitRef} from \"@swim/model\";\nimport {LeafTrait} from \"../leaf/LeafTrait\";\nimport type {RowTraitObserver} from \"./RowTraitObserver\";\nimport {TableTrait} from \"../\"; // forward import\n\n/** @public */\nexport class RowTrait extends LeafTrait {\n  override readonly observerType?: Class<RowTraitObserver>;\n\n  @TraitRef<RowTrait, TableTrait>({\n    // avoid cyclic static reference to type: TableTrait\n    binds: true,\n    willAttachTrait(treeTrait: TableTrait): void {\n      this.owner.callObservers(\"traitWillAttachTree\", treeTrait, this.owner);\n    },\n    didDetachTrait(treeTrait: TableTrait): void {\n      this.owner.callObservers(\"traitDidDetachTree\", treeTrait, this.owner);\n    },\n    detectModel(model: Model): TableTrait | null {\n      return model.getTrait(TableTrait);\n    },\n    detectTrait(trait: Trait): TableTrait | null {\n      return trait instanceof TableTrait ? trait : null;\n    },\n    createTrait(): TableTrait {\n      return TableTrait.create();\n    },\n  })\n  readonly tree!: TraitRef<this, TableTrait>;\n  static readonly tree: MemberFastenerClass<RowTrait, \"tree\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {Controller, TraitViewRef, TraitViewControllerRef} from \"@swim/controller\";\nimport {LeafController} from \"../leaf/LeafController\";\nimport {RowView} from \"./RowView\";\nimport {RowTrait} from \"./RowTrait\";\nimport type {RowControllerObserver} from \"./RowControllerObserver\";\nimport type {TableView} from \"../table/TableView\";\nimport type {TableTrait} from \"../table/TableTrait\";\nimport {TableController} from \"../\"; // forward import\n\n/** @public */\nexport interface RowControllerTreeExt {\n  attachTreeTrait(treeTrait: TableTrait, treeController: TableController): void;\n  detachTreeTrait(treeTrait: TableTrait, treeController: TableController): void;\n  attachTreeView(treeView: TableView, treeController: TableController): void;\n  detachTreeView(treeView: TableView, treeController: TableController): void;\n}\n\n/** @public */\nexport class RowController extends LeafController {\n  override readonly observerType?: Class<RowControllerObserver>;\n\n  @TraitViewRef<RowController, RowTrait, RowView>({\n    traitType: RowTrait,\n    observesTrait: true,\n    initTrait(rowTrait: RowTrait): void {\n      if (this.owner.leaf.trait === null) {\n        this.owner.leaf.setTrait(rowTrait);\n      }\n      const treeTrait = rowTrait.tree.trait;\n      if (treeTrait !== null) {\n        this.owner.tree.setTrait(treeTrait);\n      }\n    },\n    deinitTrait(rowTrait: RowTrait): void {\n      const treeTrait = rowTrait.tree.trait;\n      if (treeTrait !== null) {\n        this.owner.tree.deleteTrait(treeTrait);\n      }\n      if (this.owner.leaf.trait === rowTrait) {\n        this.owner.leaf.setTrait(null);\n      }\n    },\n    willAttachTrait(rowTrait: RowTrait): void {\n      this.owner.callObservers(\"controllerWillAttachRowTrait\", rowTrait, this.owner);\n    },\n    didDetachTrait(rowTrait: RowTrait): void {\n      this.owner.callObservers(\"controllerDidDetachRowTrait\", rowTrait, this.owner);\n    },\n    traitWillAttachTree(treeTrait: TableTrait): void {\n      this.owner.tree.setTrait(treeTrait);\n    },\n    traitDidDetachTree(treeTrait: TableTrait): void {\n      this.owner.tree.deleteTrait(treeTrait);\n    },\n    viewType: RowView,\n    observesView: true,\n    initView(rowView: RowView): void {\n      if (this.owner.leaf.view === null) {\n        const leafView = rowView.leaf.insertView();\n        this.owner.leaf.setView(leafView);\n      }\n      const treeController = this.owner.tree.controller;\n      if (treeController !== null) {\n        treeController.table.insertView(rowView);\n      }\n    },\n    willAttachView(rowView: RowView): void {\n      this.owner.callObservers(\"controllerWillAttachRowView\", rowView, this.owner);\n    },\n    didDetachView(rowView: RowView): void {\n      this.owner.callObservers(\"controllerDidDetachRowView\", rowView, this.owner);\n    },\n    viewWillExpand(rowView: RowView): void {\n      this.owner.callObservers(\"controllerWillExpandRowView\", rowView, this.owner);\n    },\n    viewDidExpand(rowView: RowView): void {\n      this.owner.callObservers(\"controllerDidExpandRowView\", rowView, this.owner);\n    },\n    viewWillCollapse(rowView: RowView): void {\n      this.owner.callObservers(\"controllerWillCollapseRowView\", rowView, this.owner);\n    },\n    viewDidCollapse(rowView: RowView): void {\n      this.owner.callObservers(\"controllerDidCollapseRowView\", rowView, this.owner);\n    },\n    viewWillAttachTree(treeView: TableView): void {\n      const treeController = this.owner.tree.controller;\n      if (treeController !== null) {\n        treeController.table.setView(treeView);\n      }\n    },\n  })\n  readonly row!: TraitViewRef<this, RowTrait, RowView>;\n  static readonly row: MemberFastenerClass<RowController, \"row\">;\n\n  @TraitViewControllerRef<RowController, TableTrait, TableView, TableController, RowControllerTreeExt>({\n    implements: true,\n    // avoid cyclic static reference to type: TableController\n    binds: true,\n    observes: true,\n    get parentView(): RowView | null {\n      return this.owner.row.view;\n    },\n    getTraitViewRef(treeController: TableController): TraitViewRef<unknown, TableTrait, TableView> {\n      return treeController.table;\n    },\n    initController(treeController: TableController): void {\n      const treeTrait = treeController.table.trait;\n      if (treeTrait !== null) {\n        this.attachTreeTrait(treeTrait, treeController);\n      }\n      const treeView = treeController.table.view;\n      if (treeView !== null) {\n        this.attachTreeView(treeView, treeController);\n      }\n      const rowTrait = this.owner.row.trait;\n      if (rowTrait !== null) {\n        const treeTrait = rowTrait.tree.trait;\n        if (treeTrait !== null) {\n          treeController.table.setTrait(treeTrait);\n        }\n      }\n    },\n    deinitController(treeController: TableController): void {\n      const treeTrait = treeController.table.trait;\n      if (treeTrait !== null) {\n        this.detachTreeTrait(treeTrait, treeController);\n      }\n      const treeView = treeController.table.view;\n      if (treeView !== null) {\n        this.detachTreeView(treeView, treeController);\n      }\n    },\n    willAttachController(treeController: TableController): void {\n      this.owner.callObservers(\"controllerWillAttachTree\", treeController, this.owner);\n    },\n    didDetachController(treeController: TableController): void {\n      this.owner.callObservers(\"controllerDidDetachTree\", treeController, this.owner);\n    },\n    controllerWillAttachTreeTrait(treeTrait: TableTrait, treeController: TableController): void {\n      this.owner.callObservers(\"controllerWillAttachTreeTrait\", treeTrait, treeController, this.owner);\n      this.attachTreeTrait(treeTrait, treeController);\n    },\n    controllerDidDetachTreeTrait(treeTrait: TableTrait, treeController: TableController): void {\n      this.detachTreeTrait(treeTrait, treeController);\n      this.owner.callObservers(\"controllerDidDetachTreeTrait\", treeTrait, treeController, this.owner);\n    },\n    attachTreeTrait(treeTrait: TableTrait, treeController: TableController): void {\n      // hook\n    },\n    detachTreeTrait(treeTrait: TableTrait, treeController: TableController): void {\n      // hook\n    },\n    controllerWillAttachTableView(treeView: TableView, treeController: TableController): void {\n      this.owner.callObservers(\"controllerWillAttachTreeView\", treeView, treeController, this.owner);\n      this.attachTreeView(treeView, treeController);\n    },\n    controllerDidDetachTableView(treeView: TableView, treeController: TableController): void {\n      this.detachTreeView(treeView, treeController);\n      this.owner.callObservers(\"controllerDidDetachTreeView\", treeView, treeController, this.owner);\n    },\n    attachTreeView(treeView: TableView, treeController: TableController): void {\n      // hook\n    },\n    detachTreeView(treeView: TableView, treeController: TableController): void {\n      treeView.remove();\n    },\n    detectController(controller: Controller): TableController | null {\n      return controller instanceof TableController ? controller : null;\n    },\n    createController(): TableController {\n      return TableController.create();\n    },\n  })\n  readonly tree!: TraitViewControllerRef<this, TableTrait, TableView, TableController>;\n  static readonly tree: MemberFastenerClass<RowController, \"tree\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class, Initable} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass} from \"@swim/component\";\nimport {Look} from \"@swim/theme\";\nimport {AnyView, ViewRef} from \"@swim/view\";\nimport {HtmlViewInit, HtmlView} from \"@swim/dom\";\nimport type {ColViewObserver} from \"./ColViewObserver\";\n\n/** @public */\nexport class ColView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initCol();\n  }\n\n  protected initCol(): void {\n    this.addClass(\"col\");\n    this.overflowX.setState(\"hidden\", Affinity.Intrinsic);\n    this.overflowY.setState(\"hidden\", Affinity.Intrinsic);\n  }\n\n  override readonly observerType?: Class<ColViewObserver>;\n\n  @ViewRef<ColView, HtmlView & Initable<HtmlViewInit | string>, {createView(value?: string): HtmlView}>({\n    implements: true,\n    key: true,\n    type: HtmlView,\n    binds: true,\n    willAttachView(labelView: HtmlView): void {\n      this.owner.callObservers(\"viewWillAttachLabel\", labelView, this.owner);\n    },\n    didDetachView(labelView: HtmlView): void {\n      this.owner.callObservers(\"viewDidDetachLabel\", labelView, this.owner);\n    },\n    createView(value?: string): HtmlView {\n      const labelView = HtmlView.fromTag(\"span\");\n      labelView.alignSelf.setState(\"center\", Affinity.Intrinsic);\n      labelView.whiteSpace.setState(\"nowrap\", Affinity.Intrinsic);\n      labelView.textOverflow.setState(\"ellipsis\", Affinity.Intrinsic);\n      labelView.overflowX.setState(\"hidden\", Affinity.Intrinsic);\n      labelView.overflowY.setState(\"hidden\", Affinity.Intrinsic);\n      labelView.color.setLook(Look.neutralColor, Affinity.Intrinsic);\n      if (value !== void 0) {\n        labelView.text(value);\n      }\n      return labelView;\n    },\n    fromAny(value: AnyView<HtmlView> | string): HtmlView {\n      if (typeof value === \"string\") {\n        return this.createView(value);\n      } else {\n        return HtmlView.fromAny(value);\n      }\n    },\n  })\n  readonly label!: ViewRef<this, HtmlView & Initable<HtmlViewInit | string>> & {create(value?: string): HtmlView};\n  static readonly label: MemberFastenerClass<ColView, \"label\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Trait} from \"@swim/model\";\nimport type {HtmlView} from \"@swim/dom\";\nimport {AnyColLayout, ColLayout} from \"../layout/ColLayout\";\nimport type {ColTraitObserver} from \"./ColTraitObserver\";\n\n/** @public */\nexport type ColLabel = ColLabelFunction | string;\n/** @public */\nexport type ColLabelFunction = (colTrait: ColTrait) => HtmlView | string | null;\n\n/** @public */\nexport class ColTrait extends Trait {\n  override readonly observerType?: Class<ColTraitObserver>;\n\n  @Property<ColTrait, ColLayout | null, AnyColLayout | null>({\n    type: ColLayout,\n    value: null,\n    willSetValue(newLayout: ColLayout | null, oldLayout: ColLayout | null): void {\n      this.owner.callObservers(\"traitWillSetLayout\", newLayout, oldLayout, this.owner);\n    },\n    didSetValue(newLayout: ColLayout | null, oldLayout: ColLayout | null): void {\n      this.owner.callObservers(\"traitDidSetLayout\", newLayout, oldLayout, this.owner);\n    },\n  })\n  readonly layout!: Property<this, ColLayout | null, AnyColLayout | null>;\n\n  @Property<ColTrait, ColLabel | null>({\n    value: null,\n    willSetValue(newLabel: ColLabel | null, oldLabel: ColLabel | null): void {\n      this.owner.callObservers(\"traitWillSetLabel\", newLabel, oldLabel, this.owner);\n    },\n    didSetValue(newLabel: ColLabel | null, oldLabel: ColLabel | null): void {\n      this.owner.callObservers(\"traitDidSetLabel\", newLabel, oldLabel, this.owner);\n    },\n  })\n  readonly label!: Property<this, ColLabel | null>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport {Controller, TraitViewRef} from \"@swim/controller\";\nimport type {ColLayout} from \"../layout/ColLayout\";\nimport {ColView} from \"./ColView\";\nimport {ColLabel, ColTrait} from \"./ColTrait\";\nimport type {ColControllerObserver} from \"./ColControllerObserver\";\n\n/** @public */\nexport class ColController extends Controller {\n  override readonly observerType?: Class<ColControllerObserver>;\n\n  @TraitViewRef<ColController, ColTrait, ColView>({\n    traitType: ColTrait,\n    observesTrait: true,\n    initTrait(colTrait: ColTrait): void {\n      const colView = this.view;\n      if (colView !== null) {\n        this.owner.setLabelView(colTrait.label.value, colTrait);\n      }\n    },\n    deinitTrait(colTrait: ColTrait): void {\n      const colView = this.view;\n      if (colView !== null) {\n        this.owner.setLabelView(null, colTrait);\n      }\n    },\n    willAttachTrait(colTrait: ColTrait): void {\n      this.owner.callObservers(\"controllerWillAttachColTrait\", colTrait, this.owner);\n    },\n    didDetachTrait(colTrait: ColTrait): void {\n      this.owner.callObservers(\"controllerDidDetachColTrait\", colTrait, this.owner);\n    },\n    traitWillSetLayout(newLayout: ColLayout | null, oldLayout: ColLayout | null): void {\n      this.owner.callObservers(\"controllerWillSetColLayout\", newLayout, oldLayout, this.owner);\n    },\n    traitDidSetLayout(newLayout: ColLayout | null, oldLayout: ColLayout | null): void {\n      this.owner.callObservers(\"controllerDidSetColLayout\", newLayout, oldLayout, this.owner);\n    },\n    traitDidSetLabel(newLabel: ColLabel | null, oldLabel: ColLabel | null, colTrait: ColTrait): void {\n      this.owner.setLabelView(newLabel, colTrait);\n    },\n    viewType: ColView,\n    observesView: true,\n    initView(colView: ColView): void {\n      this.owner.label.setView(colView.label.view);\n      const colTrait = this.trait;\n      if (colTrait !== null) {\n        this.owner.setLabelView(colTrait.label.value, colTrait);\n      }\n    },\n    deinitView(colView: ColView): void {\n      this.owner.label.setView(null);\n    },\n    willAttachView(colView: ColView): void {\n      this.owner.callObservers(\"controllerWillAttachColView\", colView, this.owner);\n    },\n    didDetachView(colView: ColView): void {\n      this.owner.callObservers(\"controllerDidDetachColView\", colView, this.owner);\n    },\n    viewWillAttachLabel(labelView: HtmlView): void {\n      this.owner.label.setView(labelView);\n    },\n    viewDidDetachLabel(labelView: HtmlView): void {\n      this.owner.label.setView(null);\n    },\n  })\n  readonly col!: TraitViewRef<this, ColTrait, ColView>;\n  static readonly col: MemberFastenerClass<ColController, \"col\">;\n\n  protected createLabelView(label: ColLabel, colTrait: ColTrait): HtmlView | string | null {\n    if (typeof label === \"function\") {\n      return label(colTrait);\n    } else {\n      return label;\n    }\n  }\n\n  protected setLabelView(label: ColLabel | null, colTrait: ColTrait): void {\n    const colView = this.col.view;\n    if (colView !== null) {\n      const labelView = label !== null ? this.createLabelView(label, colTrait) : null;\n      colView.label.setView(labelView);\n    }\n  }\n\n  @ViewRef<ColController, HtmlView>({\n    type: HtmlView,\n    willAttachView(labelView: HtmlView): void {\n      this.owner.callObservers(\"controllerWillAttachColLabelView\", labelView, this.owner);\n    },\n    didDetachView(labelView: HtmlView): void {\n      this.owner.callObservers(\"controllerDidDetachColLabelView\", labelView, this.owner);\n    },\n  })\n  readonly label!: ViewRef<this, HtmlView>;\n  static readonly label: MemberFastenerClass<ColController, \"label\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Property} from \"@swim/component\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport {AnyExpansion, Expansion} from \"@swim/style\";\nimport {Look, ThemeAnimator, ExpansionThemeAnimator, ThemeConstraintAnimator} from \"@swim/theme\";\nimport {ViewContextType, ViewFlags, View, ViewSet} from \"@swim/view\";\nimport {HtmlViewClass, HtmlView} from \"@swim/dom\";\nimport {AnyTableLayout, TableLayout} from \"../layout/TableLayout\";\nimport {ColView} from \"../col/ColView\";\nimport type {HeaderViewObserver} from \"./HeaderViewObserver\";\n\n/** @public */\nexport class HeaderView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initHeader();\n  }\n\n  protected initHeader(): void {\n    this.addClass(\"header\");\n    this.position.setState(\"relative\", Affinity.Intrinsic);\n    this.overflowX.setState(\"hidden\", Affinity.Intrinsic);\n    this.overflowY.setState(\"hidden\", Affinity.Intrinsic);\n  }\n\n  override readonly observerType?: Class<HeaderViewObserver>;\n\n  @Property({type: TableLayout, inherits: true, value: null, updateFlags: View.NeedsLayout})\n  readonly layout!: Property<this, TableLayout | null, AnyTableLayout | null>;\n\n  @Property({type: Number, inherits: true, value: 0, updateFlags: View.NeedsLayout})\n  readonly depth!: Property<this, number>;\n\n  @ThemeConstraintAnimator({type: Length, inherits: true, value: null, updateFlags: View.NeedsLayout})\n  readonly rowSpacing!: ThemeConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeConstraintAnimator({type: Length, inherits: true, value: null, updateFlags: View.NeedsLayout})\n  readonly rowHeight!: ThemeConstraintAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator({type: Expansion, inherits: true, value: null, updateFlags: View.NeedsLayout})\n  readonly stretch!: ExpansionThemeAnimator<this, Expansion | null, AnyExpansion | null>;\n\n  getCol(key: string): ColView | null;\n  getCol<V extends ColView>(key: string, colViewClass: Class<V>): V | null;\n  getCol(key: string, colViewClass?: Class<ColView>): ColView | null {\n    if (colViewClass === void 0) {\n      colViewClass = ColView;\n    }\n    const colView = this.getChild(key);\n    return colView instanceof colViewClass ? colView : null;\n  }\n\n  getOrCreateCol(key: string): ColView;\n  getOrCreateCol<V extends ColView>(key: string, colViewClass: HtmlViewClass<V>): V;\n  getOrCreateCol(key: string, colViewClass?: HtmlViewClass<ColView>): ColView {\n    if (colViewClass === void 0) {\n      colViewClass = ColView;\n    }\n    let colView = this.getChild(key) as ColView | null;\n    if (!(colView instanceof colViewClass)) {\n      colView = colViewClass.create();\n      this.setChild(key, colView);\n    }\n    return colView;\n  }\n\n  setCol(key: string, colView: ColView): void {\n    this.setChild(key, colView);\n  }\n\n  @ViewSet<HeaderView, ColView>({\n    type: ColView,\n    binds: true,\n    initView(colView: ColView): void {\n      colView.display.setState(\"none\", Affinity.Intrinsic);\n      colView.position.setState(\"absolute\", Affinity.Intrinsic);\n      colView.left.setState(0, Affinity.Intrinsic);\n      colView.top.setState(0, Affinity.Intrinsic);\n      colView.width.setState(0, Affinity.Intrinsic);\n      colView.height.setState(this.owner.height.state, Affinity.Intrinsic);\n    },\n    willAttachView(colView: ColView, target: View | null): void {\n      this.owner.callObservers(\"viewWillAttachCol\", colView, target, this.owner);\n    },\n    didDetachView(colView: ColView): void {\n      this.owner.callObservers(\"viewDidDetachCol\", colView, this.owner);\n    },\n  })\n  readonly cols!: ViewSet<this, ColView>;\n  static readonly cols: MemberFastenerClass<HeaderView, \"cols\">;\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.layoutHeader();\n  }\n\n  protected layoutHeader(): void {\n    const rowHeight = this.rowHeight.value;\n    if (rowHeight !== null) {\n      this.height.setState(rowHeight, Affinity.Intrinsic);\n    }\n  }\n\n  protected override displayChildren(displayFlags: ViewFlags, viewContext: ViewContextType<this>,\n                                     displayChild: (this: this, child: View, displayFlags: ViewFlags,\n                                                    viewContext: ViewContextType<this>) => void): void {\n    if ((displayFlags & View.NeedsLayout) !== 0) {\n      this.layoutChildViews(displayFlags, viewContext, displayChild);\n    } else {\n      super.displayChildren(displayFlags, viewContext, displayChild);\n    }\n  }\n\n  protected layoutChildViews(displayFlags: ViewFlags, viewContext: ViewContextType<this>,\n                             displayChild: (this: this, child: View, displayFlags: ViewFlags,\n                                            viewContext: ViewContextType<this>) => void): void {\n    const layout = this.layout.value;\n    const height = this.height.state;\n    const stretch = this.stretch.getPhaseOr(1);\n    type self = this;\n    function layoutChildView(this: self, child: View, displayFlags: ViewFlags,\n                             viewContext: ViewContextType<self>): void {\n      if (child instanceof ColView) {\n        const key = child.key;\n        const col = layout !== null && key !== void 0 ? layout.getCol(key) : null;\n        if (col !== null) {\n          child.display.setState(!col.hidden ? \"flex\" : \"none\", Affinity.Intrinsic);\n          child.left.setState(col.left, Affinity.Intrinsic);\n          child.width.setState(col.width, Affinity.Intrinsic);\n          child.height.setState(height, Affinity.Intrinsic);\n          const textColor = col.textColor;\n          if (textColor instanceof Look) {\n            child.color.setLook(textColor, Affinity.Intrinsic);\n          } else {\n            child.color.setState(textColor, Affinity.Intrinsic);\n          }\n          if (!col.persistent) {\n            child.opacity.setState(stretch, Affinity.Intrinsic);\n          }\n        } else {\n          child.display.setState(\"none\", Affinity.Intrinsic);\n          child.left.setState(null, Affinity.Intrinsic);\n          child.width.setState(null, Affinity.Intrinsic);\n          child.height.setState(null, Affinity.Intrinsic);\n        }\n      }\n      displayChild.call(this, child, displayFlags, viewContext);\n    }\n    super.displayChildren(displayFlags, viewContext, layoutChildView);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {Model, TraitConstructor, TraitClass, Trait, TraitSet} from \"@swim/model\";\nimport {ColTrait} from \"../col/ColTrait\";\nimport type {HeaderTraitObserver} from \"./HeaderTraitObserver\";\n\n/** @public */\nexport class HeaderTrait extends Trait {\n  override readonly observerType?: Class<HeaderTraitObserver>;\n\n  getCol(key: string): ColTrait | null;\n  getCol<R extends ColTrait>(key: string, colTraitClass: TraitClass<R>): R | null;\n  getCol(key: string, colTraitClass?: TraitClass<ColTrait>): ColTrait | null {\n    if (colTraitClass === void 0) {\n      colTraitClass = ColTrait;\n    }\n    const colTrait = this.getTrait(key);\n    return colTrait instanceof colTraitClass ? colTrait : null;\n  }\n\n  getOrCreateCol(key: string): ColTrait;\n  getOrCreateCol<R extends ColTrait>(key: string, colTraitConstructor: TraitConstructor<R>): R;\n  getOrCreateCol(key: string, colTraitConstructor?: TraitConstructor<ColTrait>): ColTrait {\n    if (colTraitConstructor === void 0) {\n      colTraitConstructor = ColTrait;\n    }\n    let colTrait = this.getTrait(key) as ColTrait | null;\n    if (!(colTrait instanceof colTraitConstructor)) {\n      colTrait = new colTraitConstructor();\n      this.setTrait(key, colTrait);\n    }\n    return colTrait;\n  }\n\n  setCol(key: string, colTrait: ColTrait): void {\n    this.setTrait(key, colTrait);\n  }\n\n  @TraitSet<HeaderTrait, ColTrait>({\n    type: ColTrait,\n    binds: true,\n    willAttachTrait(colTrait: ColTrait, targetTrait: Trait | null): void {\n      this.owner.callObservers(\"traitWillAttachCol\", colTrait, targetTrait, this.owner);\n    },\n    didAttachTrait(colTrait: ColTrait): void {\n      if (this.owner.consuming) {\n        colTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(colTrait: ColTrait): void {\n      if (this.owner.consuming) {\n        colTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(colTrait: ColTrait): void {\n      this.owner.callObservers(\"traitDidDetachCol\", colTrait, this.owner);\n    },\n    detectModel(model: Model): ColTrait | null {\n      return model.getTrait(ColTrait);\n    },\n  })\n  readonly cols!: TraitSet<this, ColTrait>;\n  static readonly cols: MemberFastenerClass<HeaderTrait, \"cols\">;\n\n  /** @internal */\n  protected startConsumingCols(): void {\n    const colTraits = this.cols.traits;\n    for (const traitId in colTraits) {\n      const colTrait = colTraits[traitId]!;\n      colTrait.consume(this);\n    }\n  }\n\n  /** @internal */\n  protected stopConsumingCols(): void {\n    const colTraits = this.cols.traits;\n    for (const traitId in colTraits) {\n      const colTrait = colTraits[traitId]!;\n      colTrait.unconsume(this);\n    }\n  }\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    this.startConsumingCols();\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    this.stopConsumingCols();\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport type {TraitConstructor, TraitClass, Trait} from \"@swim/model\";\nimport type {View} from \"@swim/view\";\nimport type {HtmlViewClass, HtmlView} from \"@swim/dom\";\nimport {Controller, TraitViewRef, TraitViewControllerSet} from \"@swim/controller\";\nimport type {ColLayout} from \"../layout/ColLayout\";\nimport type {ColView} from \"../col/ColView\";\nimport type {ColTrait} from \"../col/ColTrait\";\nimport {ColController} from \"../col/ColController\";\nimport {HeaderView} from \"./HeaderView\";\nimport {HeaderTrait} from \"./HeaderTrait\";\nimport type {HeaderControllerObserver} from \"./HeaderControllerObserver\";\n\n/** @public */\nexport type HeaderControllerColExt = {\n  attachColTrait(colTrait: ColTrait, colController: ColController): void;\n  detachColTrait(colTrait: ColTrait, colController: ColController): void;\n  attachColView(colView: ColView, colController: ColController): void;\n  detachColView(colView: ColView, colController: ColController): void;\n  attachColLabelView(colLabelView: HtmlView, colController: ColController): void;\n  detachColLabelView(colLabelView: HtmlView, colController: ColController): void;\n};\n\n/** @public */\nexport class HeaderController extends Controller {\n  override readonly observerType?: Class<HeaderControllerObserver>;\n\n  @TraitViewRef<HeaderController, HeaderTrait, HeaderView>({\n    traitType: HeaderTrait,\n    observesTrait: true,\n    willAttachTrait(headerTrait: HeaderTrait): void {\n      this.owner.callObservers(\"controllerWillAttachHeaderTrait\", headerTrait, this.owner);\n    },\n    didAttachTrait(headerTrait: HeaderTrait): void {\n      const colTraits = headerTrait.cols.traits;\n      for (const traitId in colTraits) {\n        const colTrait = colTraits[traitId]!;\n        this.owner.cols.addTraitController(colTrait);\n      }\n    },\n    willDetachTrait(headerTrait: HeaderTrait): void {\n      const colTraits = headerTrait.cols.traits;\n      for (const traitId in colTraits) {\n        const colTrait = colTraits[traitId]!;\n        this.owner.cols.deleteTraitController(colTrait);\n      }\n    },\n    didDetachTrait(headerTrait: HeaderTrait): void {\n      this.owner.callObservers(\"controllerDidDetachHeaderTrait\", headerTrait, this.owner);\n    },\n    traitWillAttachCol(colTrait: ColTrait, targetTrait: Trait): void {\n      this.owner.cols.addTraitController(colTrait, targetTrait);\n    },\n    traitDidDetachCol(colTrait: ColTrait): void {\n      this.owner.cols.deleteTraitController(colTrait);\n    },\n    viewType: HeaderView,\n    observesView: true,\n    initView(headerView: HeaderView): void {\n      const colControllers = this.owner.cols.controllers;\n      for (const controllerId in colControllers) {\n        const colController = colControllers[controllerId]!;\n        const colView = colController.col.view;\n        if (colView !== null && colView.parent === null) {\n          const colTrait = colController.col.trait;\n          if (colTrait !== null) {\n            colController.col.insertView(headerView, void 0, void 0, colTrait.key);\n          }\n        }\n      }\n    },\n    willAttachView(headerView: HeaderView): void {\n      this.owner.callObservers(\"controllerWillAttachHeaderView\", headerView, this.owner);\n    },\n    didDetachView(headerView: HeaderView): void {\n      this.owner.callObservers(\"controllerDidDetachHeaderView\", headerView, this.owner);\n    },\n    insertChildView(parent: View, childView: HeaderView, targetView: View | null, key: string | undefined): void {\n      parent.prependChild(childView, key);\n    },\n  })\n  readonly header!: TraitViewRef<this, HeaderTrait, HeaderView>;\n  static readonly header: MemberFastenerClass<HeaderController, \"header\">;\n\n  getColTrait(key: string): ColTrait | null;\n  getColTrait<R extends ColTrait>(key: string, colTraitClass: TraitClass<R>): R | null;\n  getColTrait(key: string, colTraitClass?: TraitClass<ColTrait>): ColTrait | null {\n    const headerTrait = this.header.trait;\n    return headerTrait !== null ? headerTrait.getCol(key, colTraitClass!) : null;\n  }\n\n  getOrCreateColTrait(key: string): ColTrait;\n  getOrCreateColTrait<R extends ColTrait>(key: string, colTraitConstructor: TraitConstructor<R>): R;\n  getOrCreateColTrait(key: string, colTraitConstructor?: TraitConstructor<ColTrait>): ColTrait {\n    const headerTrait = this.header.trait;\n    if (headerTrait === null) {\n      throw new Error(\"no header trait\");\n    }\n    return headerTrait.getOrCreateCol(key, colTraitConstructor!);\n  }\n\n  setColTrait(key: string, colTrait: ColTrait): void {\n    const headerTrait = this.header.trait;\n    if (headerTrait === null) {\n      throw new Error(\"no header trait\");\n    }\n    headerTrait.setCol(key, colTrait);\n  }\n\n  getColView(key: string): ColView | null;\n  getColView<V extends ColView>(key: string, colViewClass: Class<V>): V | null;\n  getColView(key: string, colViewClass?: Class<ColView>): ColView | null {\n    const headerView = this.header.view;\n    return headerView !== null ? headerView.getCol(key, colViewClass!) : null;\n  }\n\n  getOrCreateColView(key: string): ColView;\n  getOrCreateColView<V extends ColView>(key: string, colViewClass: HtmlViewClass<V>): V;\n  getOrCreateColView(key: string, colViewClass?: HtmlViewClass<ColView>): ColView {\n    let headerView = this.header.view;\n    if (headerView === null) {\n      headerView = this.header.createView();\n      if (headerView === null) {\n        throw new Error(\"no header view\");\n      }\n      this.header.setView(headerView);\n    }\n    return headerView.getOrCreateCol(key, colViewClass!);\n  }\n\n  setColView(key: string, colView: ColView): void {\n    let headerView = this.header.view;\n    if (headerView === null) {\n      headerView = this.header.createView();\n      if (headerView === null) {\n        throw new Error(\"no header view\");\n      }\n      this.header.setView(headerView);\n    }\n    headerView.setCol(key, colView);\n  }\n\n  @TraitViewControllerSet<HeaderController, ColTrait, ColView, ColController, HeaderControllerColExt>({\n    implements: true,\n    type: ColController,\n    binds: true,\n    observes: true,\n    get parentView(): HeaderView | null {\n      return this.owner.header.view;\n    },\n    getTraitViewRef(colController: ColController): TraitViewRef<unknown, ColTrait, ColView> {\n      return colController.col;\n    },\n    willAttachController(colController: ColController): void {\n      this.owner.callObservers(\"controllerWillAttachCol\", colController, this.owner);\n    },\n    didAttachController(colController: ColController): void {\n      const colTrait = colController.col.trait;\n      if (colTrait !== null) {\n        this.attachColTrait(colTrait, colController);\n      }\n      const colView = colController.col.view;\n      if (colView !== null) {\n        this.attachColView(colView, colController);\n      }\n    },\n    willDetachController(colController: ColController): void {\n      const colView = colController.col.view;\n      if (colView !== null) {\n        this.detachColView(colView, colController);\n      }\n      const colTrait = colController.col.trait;\n      if (colTrait !== null) {\n        this.detachColTrait(colTrait, colController);\n      }\n    },\n    didDetachController(colController: ColController): void {\n      this.owner.callObservers(\"controllerDidDetachCol\", colController, this.owner);\n    },\n    controllerWillAttachColTrait(colTrait: ColTrait, colController: ColController): void {\n      this.owner.callObservers(\"controllerWillAttachColTrait\", colTrait, colController, this.owner);\n      this.attachColTrait(colTrait, colController);\n    },\n    controllerDidDetachColTrait(colTrait: ColTrait, colController: ColController): void {\n      this.detachColTrait(colTrait, colController);\n      this.owner.callObservers(\"controllerDidDetachColTrait\", colTrait, colController, this.owner);\n    },\n    attachColTrait(colTrait: ColTrait, colController: ColController): void {\n      // hook\n    },\n    detachColTrait(colTrait: ColTrait, colController: ColController): void {\n      // hook\n    },\n    controllerWillAttachColView(colView: ColView, colController: ColController): void {\n      this.owner.callObservers(\"controllerWillAttachColView\", colView, colController, this.owner);\n      this.attachColView(colView, colController);\n    },\n    controllerDidDetachColView(colView: ColView, colController: ColController): void {\n      this.detachColView(colView, colController);\n      this.owner.callObservers(\"controllerDidDetachColView\", colView, colController, this.owner);\n    },\n    attachColView(colView: ColView, colController: ColController): void {\n      const colLabelView = colView.label.view;\n      if (colLabelView !== null) {\n        this.attachColLabelView(colLabelView, colController);\n      }\n    },\n    detachColView(colView: ColView, colController: ColController): void {\n      const colLabelView = colView.label.view;\n      if (colLabelView !== null) {\n        this.detachColLabelView(colLabelView, colController);\n      }\n      colView.remove();\n    },\n    controllerWillSetColLayout(newColLayout: ColLayout | null, oldColLayout: ColLayout | null, colController: ColController): void {\n      this.owner.callObservers(\"controllerWillSetColLayout\", newColLayout, oldColLayout, colController, this.owner);\n    },\n    controllerDidSetColLayout(newColLayout: ColLayout | null, oldColLayout: ColLayout | null, colController: ColController): void {\n      this.owner.callObservers(\"controllerDidSetColLayout\", newColLayout, oldColLayout, colController, this.owner);\n    },\n    controllerWillAttachColLabelView(colLabelView: HtmlView, colController: ColController): void {\n      this.owner.callObservers(\"controllerWillAttachColLabelView\", colLabelView, colController, this.owner);\n      this.attachColLabelView(colLabelView, colController);\n    },\n    controllerDidDetachColLabelView(colLabelView: HtmlView, colController: ColController): void {\n      this.detachColLabelView(colLabelView, colController);\n      this.owner.callObservers(\"controllerDidDetachColLabelView\", colLabelView, colController, this.owner);\n    },\n    attachColLabelView(colLabelView: HtmlView, colController: ColController): void {\n      // hook\n    },\n    detachColLabelView(colLabelView: HtmlView, colController: ColController): void {\n      // hook\n    },\n  })\n  readonly cols!: TraitViewControllerSet<this, ColTrait, ColView, ColController>;\n  static readonly cols: MemberFastenerClass<HeaderController, \"cols\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Class} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Property} from \"@swim/component\";\nimport {AnyLength, Length, R2Box} from \"@swim/math\";\nimport {AnyExpansion, Expansion} from \"@swim/style\";\nimport {\n  Look,\n  Feel,\n  ThemeAnimator,\n  ExpansionThemeAnimator,\n  ThemeConstraintAnimator,\n} from \"@swim/theme\";\nimport {\n  ViewportInsets,\n  PositionGestureInput,\n  ViewContextType,\n  ViewContext,\n  ViewFlags,\n  View,\n  ViewRef,\n  ViewSet,\n} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport {AnyTableLayout, TableLayout} from \"../layout/TableLayout\";\nimport type {LeafView} from \"../leaf/LeafView\";\nimport {RowView} from \"../row/RowView\";\nimport {HeaderView} from \"../header/HeaderView\";\nimport type {TableViewContext} from \"./TableViewContext\";\nimport type {TableViewObserver} from \"./TableViewObserver\";\n\n/** @public */\nexport class TableView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.visibleViews = [];\n    this.visibleFrame = new R2Box(0, 0, window.innerWidth, window.innerHeight);\n    this.initTable();\n  }\n\n  protected initTable(): void {\n    this.addClass(\"table\");\n    this.position.setState(\"relative\", Affinity.Intrinsic);\n    this.backgroundColor.setLook(Look.backgroundColor, Affinity.Intrinsic);\n  }\n\n  override readonly observerType?: Class<TableViewObserver>;\n\n  override readonly contextType?: Class<TableViewContext>;\n\n  @Property({type: TableLayout, inherits: true, value: null, updateFlags: View.NeedsLayout})\n  readonly layout!: Property<this, TableLayout | null, AnyTableLayout | null>;\n\n  @Property({type: Object, inherits: true, value: null, updateFlags: View.NeedsLayout})\n  readonly edgeInsets!: Property<this, ViewportInsets | null>;\n\n  @Property<TableView, number>({\n    type: Number,\n    inherits: true,\n    value: 0,\n    updateFlags: View.NeedsLayout,\n    didSetValue(newDepth: number, oldDepth: number): void {\n      this.owner.modifyTheme(Feel.default, [[Feel.nested, newDepth !== 0 ? 1 : void 0]], false);\n    },\n  })\n  readonly depth!: Property<this, number>;\n\n  @ThemeConstraintAnimator({type: Length, inherits: true, value: Length.zero(), updateFlags: View.NeedsLayout})\n  readonly rowSpacing!: ThemeConstraintAnimator<this, Length, AnyLength>;\n\n  @ThemeConstraintAnimator({type: Length, inherits: true, value: Length.px(24), updateFlags: View.NeedsLayout})\n  readonly rowHeight!: ThemeConstraintAnimator<this, Length, AnyLength>;\n\n  @Property({type: Boolean, inherits: true, value: false})\n  readonly hovers!: Property<this, boolean>;\n\n  @Property({type: Boolean, inherits: true, value: true})\n  readonly glows!: Property<this, boolean>;\n\n  @ThemeAnimator({type: Expansion, inherits: true, value: null})\n  readonly disclosure!: ExpansionThemeAnimator<this, Expansion | null, AnyExpansion | null>;\n\n  @ThemeAnimator({type: Expansion, inherits: true, value: null})\n  readonly disclosing!: ExpansionThemeAnimator<this, Expansion | null, AnyExpansion | null>;\n\n  @ThemeAnimator({type: Expansion, inherits: true, value: null, updateFlags: View.NeedsLayout})\n  readonly stretch!: ExpansionThemeAnimator<this, Expansion | null, AnyExpansion | null>;\n\n  @ViewRef<TableView, HeaderView>({\n    key: true,\n    type: HeaderView,\n    binds: true,\n    initView(headerView: HeaderView): void {\n      headerView.display.setState(\"none\", Affinity.Intrinsic);\n      headerView.position.setState(\"absolute\", Affinity.Intrinsic);\n      headerView.left.setState(0, Affinity.Intrinsic);\n      headerView.top.setState(null, Affinity.Intrinsic);\n      const layout = this.owner.layout.value;\n      headerView.width.setState(layout !== null ? layout.width : null, Affinity.Intrinsic);\n      headerView.setCulled(true);\n    },\n    willAttachView(headerView: HeaderView): void {\n      this.owner.callObservers(\"viewWillAttachHeader\", headerView, this.owner);\n    },\n    didDetachView(headerView: HeaderView): void {\n      this.owner.callObservers(\"viewDidDetachHeader\", headerView, this.owner);\n    },\n    insertChild(parent: View, child: HeaderView, target: View | number | null, key: string | undefined): void {\n      parent.prependChild(child, key);\n    }\n  })\n  readonly header!: ViewRef<this, HeaderView>;\n  static readonly header: MemberFastenerClass<TableView, \"header\">;\n\n  @ViewSet<TableView, RowView>({\n    type: RowView,\n    binds: true,\n    observes: true,\n    initView(rowView: RowView): void {\n      rowView.display.setState(\"none\", Affinity.Intrinsic);\n      rowView.position.setState(\"absolute\", Affinity.Intrinsic);\n      rowView.left.setState(0, Affinity.Intrinsic);\n      rowView.top.setState(null, Affinity.Intrinsic);\n      const layout = this.owner.layout.value;\n      rowView.width.setState(layout !== null ? layout.width : null, Affinity.Intrinsic);\n      rowView.setCulled(true);\n    },\n    willAttachView(rowView: RowView, target: View | null): void {\n      this.owner.callObservers(\"viewWillAttachRow\", rowView, target, this.owner);\n    },\n    didDetachView(rowView: RowView): void {\n      this.owner.callObservers(\"viewDidDetachRow\", rowView, this.owner);\n    },\n    viewWillAttachLeaf(leafView: LeafView, rowView: RowView): void {\n      this.owner.callObservers(\"viewWillAttachLeaf\", leafView, rowView);\n    },\n    viewDidDetachLeaf(leafView: LeafView, rowView: RowView): void {\n      this.owner.callObservers(\"viewDidDetachLeaf\", leafView, rowView);\n    },\n    viewDidEnterLeaf(leafView: LeafView, rowView: RowView): void {\n      this.owner.callObservers(\"viewDidEnterLeaf\", leafView, rowView);\n    },\n    viewDidLeaveLeaf(leafView: LeafView, rowView: RowView): void {\n      this.owner.callObservers(\"viewDidLeaveLeaf\", leafView, rowView);\n    },\n    viewDidPressLeaf(input: PositionGestureInput, event: Event | null, leafView: LeafView, rowView: RowView): void {\n      this.owner.callObservers(\"viewDidPressLeaf\", input, event, leafView, rowView);\n    },\n    viewDidLongPressLeaf(input: PositionGestureInput, leafView: LeafView, rowView: RowView): void {\n      this.owner.callObservers(\"viewDidLongPressLeaf\", input, leafView, rowView);\n    },\n    viewWillAttachTree(treeView: TableView, rowView: RowView): void {\n      this.owner.callObservers(\"viewWillAttachTree\", treeView, rowView);\n    },\n    viewDidDetachTree(treeView: TableView, rowView: RowView): void {\n      this.owner.callObservers(\"viewDidDetachTree\", treeView, rowView);\n    },\n    viewWillHighlightLeaf(leafView: LeafView, rowView: RowView): void {\n      this.owner.callObservers(\"viewWillHighlightLeaf\", leafView, rowView);\n    },\n    viewDidHighlightLeaf(leafView: LeafView, rowView: RowView): void {\n      this.owner.callObservers(\"viewDidHighlightLeaf\", leafView, rowView);\n    },\n    viewWillUnhighlightLeaf(leafView: LeafView, rowView: RowView): void {\n      this.owner.callObservers(\"viewWillUnhighlightLeaf\", leafView, rowView);\n    },\n    viewDidUnhighlightLeaf(leafView: LeafView, rowView: RowView): void {\n      this.owner.callObservers(\"viewDidUnhighlightLeaf\", leafView, rowView);\n    },\n    viewWillExpand(rowView: RowView): void {\n      this.owner.callObservers(\"viewWillExpandRow\", rowView);\n    },\n    viewDidExpand(rowView: RowView): void {\n      this.owner.callObservers(\"viewDidExpandRow\", rowView);\n    },\n    viewWillCollapse(rowView: RowView): void {\n      this.owner.callObservers(\"viewWillCollapseRow\", rowView);\n    },\n    viewDidCollapse(rowView: RowView): void {\n      this.owner.callObservers(\"viewDidCollapseRow\", rowView);\n    },\n  })\n  readonly rows!: ViewSet<this, RowView>;\n  static readonly rows: MemberFastenerClass<TableView, \"rows\">;\n\n  /** @internal */\n  readonly visibleViews: ReadonlyArray<View>;\n\n  /** @internal */\n  readonly visibleFrame: R2Box;\n\n  protected detectVisibleFrame(viewContext: ViewContext): R2Box {\n    const xBleed = 0;\n    const yBleed = this.rowHeight.getValueOr(Length.zero()).pxValue();\n    const parentVisibleFrame = (viewContext as TableViewContext).visibleFrame as R2Box | undefined;\n    if (parentVisibleFrame !== void 0) {\n      let left: Length | number | null = this.left.state;\n      left = left instanceof Length ? left.pxValue() : 0;\n      let top: Length | number | null = this.top.state;\n      top = top instanceof Length ? top.pxValue() : 0;\n      return new R2Box(parentVisibleFrame.xMin - left - xBleed, parentVisibleFrame.yMin - top - yBleed,\n                       parentVisibleFrame.xMax - left + xBleed, parentVisibleFrame.yMax - top + yBleed);\n    } else {\n      const bounds = this.node.getBoundingClientRect();\n      const xMin = -bounds.x - xBleed;\n      const yMin = -bounds.y - yBleed;\n      const xMax = window.innerWidth - bounds.x + xBleed;\n      const yMax = window.innerHeight - bounds.y + yBleed;\n      return new R2Box(xMin, yMin, xMax, yMax);\n    }\n  }\n\n  override extendViewContext(viewContext: ViewContext): ViewContextType<this> {\n    const treeViewContext = Object.create(viewContext);\n    treeViewContext.visibleFrame = this.visibleFrame;\n    return treeViewContext;\n  }\n\n  override needsProcess(processFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    if ((processFlags & View.NeedsResize) !== 0) {\n      processFlags |= View.NeedsScroll;\n    }\n    return processFlags;\n  }\n\n  protected override onResize(viewContext: ViewContextType<this>): void {\n    super.onResize(viewContext);\n    this.resizeTable();\n  }\n\n  protected resizeTable(): void {\n    const oldLayout = !this.layout.inherited ? this.layout.value : null;\n    if (oldLayout !== null) {\n      const superLayout = this.layout.superValue;\n      let width: Length | number | null = null;\n      if (superLayout !== void 0 && superLayout !== null && superLayout.width !== null) {\n        width = superLayout.width.pxValue();\n      }\n      if (width === null) {\n        width = this.width.state;\n        width = width instanceof Length ? width.pxValue() : this.node.offsetWidth;\n      }\n      const edgeInsets = this.edgeInsets.value;\n      let paddingLeft: Length | number | null = this.paddingLeft.state;\n      paddingLeft = paddingLeft instanceof Length ? paddingLeft.pxValue(width) : 0;\n      let paddingRight: Length | number | null = this.paddingRight.state;\n      paddingRight = paddingRight instanceof Length ? paddingRight.pxValue(width) : 0;\n      let left = edgeInsets !== null ? edgeInsets.insetLeft : 0;\n      left += paddingLeft;\n      let right = edgeInsets !== null ? edgeInsets.insetRight : 0;\n      right += paddingRight;\n      const newLayout = oldLayout.resized(width, left, right);\n      this.layout.setValue(newLayout);\n    }\n  }\n\n  protected processVisibleViews(processFlags: ViewFlags, viewContext: ViewContextType<this>,\n                                processChild: (this: this, child: View, processFlags: ViewFlags,\n                                               viewContext: ViewContextType<this>) => void): void {\n    const visibleViews = this.visibleViews;\n    let i = 0;\n    while (i < visibleViews.length) {\n      const child = visibleViews[i]!;\n      processChild.call(this, child, processFlags, viewContext);\n      if ((child.flags & View.RemovingFlag) !== 0) {\n        child.setFlags(child.flags & ~View.RemovingFlag);\n        this.removeChild(child);\n        continue;\n      }\n      i += 1;\n    }\n  }\n\n  protected override processChildren(processFlags: ViewFlags, viewContext: ViewContextType<this>,\n                                     processChild: (this: this, child: View, processFlags: ViewFlags,\n                                                    viewContext: ViewContextType<this>) => void): void {\n    if (!this.culled) {\n      if ((processFlags & View.NeedsScroll) !== 0) {\n        this.scrollChildViews(processFlags, viewContext, processChild);\n      } else {\n        this.processVisibleViews(processFlags, viewContext, processChild);\n      }\n    }\n  }\n\n  protected scrollChildViews(processFlags: ViewFlags, viewContext: ViewContextType<this>,\n                             processChild: (this: this, child: View, processFlags: ViewFlags,\n                                            viewContext: ViewContextType<this>) => void): void {\n    const visibleViews = this.visibleViews as View[];\n    visibleViews.length = 0;\n\n    const visibleFrame = this.detectVisibleFrame(Object.getPrototypeOf(viewContext));\n    (viewContext as Mutable<ViewContextType<this>>).visibleFrame = visibleFrame;\n    (this as Mutable<this>).visibleFrame = visibleFrame;\n\n    type self = this;\n    function scrollChildView(this: self, child: View, processFlags: ViewFlags,\n                             viewContext: ViewContextType<self>): void {\n      let isVisible: boolean;\n      if (child instanceof HtmlView) {\n        const top = child.top.state;\n        const height = child.height.state;\n        if (top instanceof Length && height instanceof Length) {\n          const yMin0 = visibleFrame.yMin;\n          const yMax0 = visibleFrame.yMax;\n          const yMin1 = top.pxValue();\n          const yMax1 = yMin1 + height.pxValue();\n          isVisible = yMin0 <= yMax1 && yMin1 <= yMax0;\n          child.display.setState(isVisible ? \"flex\" : \"none\", Affinity.Intrinsic);\n          child.setCulled(!isVisible);\n        } else {\n          isVisible = true;\n        }\n      } else {\n        isVisible = true;\n      }\n      if (isVisible) {\n        visibleViews.push(child);\n        processChild.call(this, child, processFlags, viewContext);\n      }\n    }\n    super.processChildren(processFlags, viewContext, scrollChildView);\n  }\n\n  protected displayVisibleViews(displayFlags: ViewFlags, viewContext: ViewContextType<this>,\n                                displayChild: (this: this, child: View, displayFlags: ViewFlags,\n                                               viewContext: ViewContextType<this>) => void): void {\n    const visibleViews = this.visibleViews;\n    let i = 0;\n    while (i < visibleViews.length) {\n      const child = visibleViews[i]!;\n      displayChild.call(this, child, displayFlags, viewContext);\n      if ((child.flags & View.RemovingFlag) !== 0) {\n        child.setFlags(child.flags & ~View.RemovingFlag);\n        this.removeChild(child);\n        continue;\n      }\n      i += 1;\n    }\n  }\n\n  protected override displayChildren(displayFlags: ViewFlags, viewContext: ViewContextType<this>,\n                                     displayChild: (this: this, child: View, displayFlags: ViewFlags,\n                                                    viewContext: ViewContextType<this>) => void): void {\n    if ((displayFlags & View.NeedsLayout) !== 0) {\n      this.layoutChildViews(displayFlags, viewContext, displayChild);\n    } else {\n      this.displayVisibleViews(displayFlags, viewContext, displayChild);\n    }\n  }\n\n  protected layoutChildViews(displayFlags: ViewFlags, viewContext: ViewContextType<this>,\n                             displayChild: (this: this, child: View, displayFlags: ViewFlags,\n                                            viewContext: ViewContextType<this>) => void): void {\n    this.resizeTable();\n    const layout = this.layout.value;\n    const width = layout !== null ? layout.width : null;\n    const rowHeight = this.rowHeight.getValue();\n    const rowSpacing = this.rowSpacing.getValue().pxValue(rowHeight.pxValue());\n    const disclosingPhase = this.disclosing.getPhaseOr(1);\n\n    const visibleViews = this.visibleViews as View[];\n    visibleViews.length = 0;\n\n    const visibleFrame = this.detectVisibleFrame(Object.getPrototypeOf(viewContext));\n    (viewContext as Mutable<ViewContextType<this>>).visibleFrame = visibleFrame;\n    (this as Mutable<this>).visibleFrame = visibleFrame;\n\n    let yValue = 0;\n    let yState = 0;\n    let rowIndex = 0;\n\n    type self = this;\n    function layoutChildView(this: self, child: View, displayFlags: ViewFlags,\n                             viewContext: ViewContextType<self>): void {\n      if (child instanceof RowView || child instanceof HeaderView) {\n        if (rowIndex !== 0) {\n          yValue += rowSpacing * disclosingPhase;\n          yState += rowSpacing;\n        }\n        if (child.top.hasAffinity(Affinity.Intrinsic)) {\n          child.top.setInterpolatedValue(Length.px(yValue), Length.px(yState));\n        }\n        child.width.setState(width, Affinity.Intrinsic);\n      }\n      let isVisible: boolean;\n      if (child instanceof HtmlView) {\n        const top = child.top.state;\n        const height = child.height.state;\n        if (top instanceof Length && height instanceof Length) {\n          const yMin0 = visibleFrame.yMin;\n          const yMax0 = visibleFrame.yMax;\n          const yMin1 = top.pxValue();\n          const yMax1 = yMin1 + height.pxValue();\n          isVisible = yMin0 <= yMax1 && yMin1 <= yMax0;\n        } else {\n          isVisible = true;\n        }\n        child.display.setState(isVisible ? \"flex\" : \"none\", Affinity.Intrinsic);\n        child.setCulled(!isVisible);\n      } else {\n        isVisible = true;\n      }\n      if (isVisible) {\n        visibleViews.push(child);\n      }\n      displayChild.call(this, child, displayFlags, viewContext);\n      if (child instanceof RowView || child instanceof HeaderView) {\n        let heightValue: Length | number | null = child.height.value;\n        heightValue = heightValue instanceof Length ? heightValue.pxValue() : child.node.offsetHeight;\n        let heightState: Length | number | null = child.height.state;\n        heightState = heightState instanceof Length ? heightState.pxValue() : heightValue;\n        yValue += heightValue * disclosingPhase;\n        yState += heightState;\n        rowIndex += 1;\n      }\n    }\n    super.displayChildren(displayFlags, viewContext, layoutChildView);\n\n    if (this.height.hasAffinity(Affinity.Intrinsic)) {\n      this.height.setInterpolatedValue(Length.px(yValue), Length.px(yState));\n    }\n\n    const disclosurePhase = this.disclosure.getPhaseOr(1);\n    this.opacity.setState(disclosurePhase, Affinity.Intrinsic);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Property} from \"@swim/component\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport {Model, Trait, TraitRef, TraitSet} from \"@swim/model\";\nimport type {ColLayout} from \"../layout/ColLayout\";\nimport {AnyTableLayout, TableLayout} from \"../layout/TableLayout\";\nimport {RowTrait} from \"../row/RowTrait\";\nimport {ColTrait} from \"../col/ColTrait\";\nimport {HeaderTrait} from \"../header/HeaderTrait\";\nimport type {TableTraitObserver} from \"./TableTraitObserver\";\n\n/** @public */\nexport class TableTrait extends Trait {\n  override readonly observerType?: Class<TableTraitObserver>;\n\n  protected createLayout(): TableLayout | null {\n    const colLayouts: ColLayout[] = [];\n    const colTraits = this.cols.traits;\n    for (const traitId in colTraits) {\n      const colTrait = colTraits[traitId]!;\n      const colLayout = colTrait.layout.value;\n      if (colLayout !== null) {\n        colLayouts.push(colLayout);\n      }\n    }\n    const colSpacing = this.colSpacing.value;\n    return new TableLayout(null, null, null, colSpacing, colLayouts);\n  }\n\n  protected updateLayout(): void {\n    const layout = this.createLayout();\n    this.layout.setValue(layout, Affinity.Intrinsic);\n  }\n\n  @Property<TableTrait, TableLayout | null, AnyTableLayout | null>({\n    type: TableLayout,\n    value: null,\n    willSetValue(newLayout: TableLayout | null, oldLayout: TableLayout | null): void {\n      this.owner.callObservers(\"traitWillSetTableLayout\", newLayout, oldLayout, this.owner);\n    },\n    didSetValue(newLayout: TableLayout | null, oldLayout: TableLayout | null): void {\n      this.owner.callObservers(\"traitDidSetTableLayout\", newLayout, oldLayout, this.owner);\n    },\n  })\n  readonly layout!: Property<this, TableLayout | null, AnyTableLayout | null>;\n\n  @Property<TableTrait, Length | null, AnyLength | null>({\n    type: Length,\n    value: null,\n    didSetValue(newColSpacing: Length | null, oldColSpacing: Length | null): void {\n      this.owner.updateLayout();\n    },\n  })\n  readonly colSpacing!: Property<this, Length | null, AnyLength | null>;\n\n  @TraitRef<TableTrait, HeaderTrait>({\n    type: HeaderTrait,\n    binds: true,\n    willAttachTrait(headerTrait: HeaderTrait): void {\n      this.owner.callObservers(\"traitWillAttachHeader\", headerTrait, this.owner);\n    },\n    didDetachTrait(headerTrait: HeaderTrait): void {\n      this.owner.callObservers(\"traitDidDetachHeader\", headerTrait, this.owner);\n    },\n    detectTrait(trait: Trait): HeaderTrait | null {\n      return trait instanceof HeaderTrait ? trait : null;\n    },\n  })\n  readonly header!: TraitRef<this, HeaderTrait>;\n  static readonly header: MemberFastenerClass<TableTrait, \"header\">;\n\n  @TraitSet<TableTrait, ColTrait>({\n    type: ColTrait,\n    binds: true,\n    observes: true,\n    willAttachTrait(colTrait: ColTrait, targetTrait: Trait | null): void {\n      this.owner.callObservers(\"traitWillAttachCol\", colTrait, targetTrait, this.owner);\n    },\n    didAttachTrait(colTrait: ColTrait): void {\n      this.owner.updateLayout();\n      if (this.owner.consuming) {\n        colTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(colTrait: ColTrait): void {\n      if (this.owner.consuming) {\n        colTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(colTrait: ColTrait): void {\n      this.owner.updateLayout();\n      this.owner.callObservers(\"traitDidDetachCol\", colTrait, this.owner);\n    },\n    traitDidSetLayout(newColLayout: ColLayout | null, oldColLayout: ColLayout | null): void {\n      this.owner.updateLayout();\n    },\n    detectModel(model: Model): ColTrait | null {\n      return model.getTrait(ColTrait);\n    },\n  })\n  readonly cols!: TraitSet<this, ColTrait>;\n  static readonly cols: MemberFastenerClass<TableTrait, \"cols\">;\n\n  /** @internal */\n  protected startConsumingCols(): void {\n    const colTraits = this.cols.traits;\n    for (const traitId in colTraits) {\n      const colTrait = colTraits[traitId]!;\n      colTrait.consume(this);\n    }\n  }\n\n  /** @internal */\n  protected stopConsumingCols(): void {\n    const colTraits = this.cols.traits;\n    for (const traitId in colTraits) {\n      const colTrait = colTraits[traitId]!;\n      colTrait.unconsume(this);\n    }\n  }\n\n  @TraitSet<TableTrait, RowTrait>({\n    type: RowTrait,\n    binds: true,\n    willAttachTrait(rowTrait: RowTrait, targetTrait: Trait | null): void {\n      this.owner.callObservers(\"traitWillAttachRow\", rowTrait, targetTrait, this.owner);\n    },\n    didAttachTrait(rowTrait: RowTrait): void {\n      if (this.owner.consuming) {\n        rowTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(rowTrait: RowTrait): void {\n      if (this.owner.consuming) {\n        rowTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(rowTrait: RowTrait): void {\n      this.owner.callObservers(\"traitDidDetachRow\", rowTrait, this.owner);\n    },\n    detectModel(model: Model): RowTrait | null {\n      return model.getTrait(RowTrait);\n    },\n    detectTrait(trait: Trait): RowTrait | null {\n      return null;\n    },\n  })\n  readonly rows!: TraitSet<this, RowTrait>;\n  static readonly rows: MemberFastenerClass<TableTrait, \"rows\">;\n\n  /** @internal */\n  protected startConsumingRows(): void {\n    const rowTraits = this.rows.traits;\n    for (const traitId in rowTraits) {\n      const rowTrait = rowTraits[traitId]!;\n      rowTrait.consume(this);\n    }\n  }\n\n  /** @internal */\n  protected stopConsumingRows(): void {\n    const rowTraits = this.rows.traits;\n    for (const traitId in rowTraits) {\n      const rowTrait = rowTraits[traitId]!;\n      rowTrait.unconsume(this);\n    }\n  }\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    this.startConsumingCols();\n    this.startConsumingRows();\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    this.stopConsumingRows();\n    this.stopConsumingCols();\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass} from \"@swim/component\";\nimport type {Trait} from \"@swim/model\";\nimport type {View} from \"@swim/view\";\nimport type {HtmlView} from \"@swim/dom\";\nimport type {Graphics} from \"@swim/graphics\";\nimport {Controller, TraitViewRef, TraitViewControllerRef, TraitViewControllerSet} from \"@swim/controller\";\nimport type {TableLayout} from \"../layout/TableLayout\";\nimport type {ColLayout} from \"../layout/ColLayout\";\nimport type {CellView} from \"../cell/CellView\";\nimport {TextCellView} from \"../cell/TextCellView\";\nimport type {CellTrait} from \"../cell/CellTrait\";\nimport type {CellController} from \"../cell/CellController\";\nimport type {LeafView} from \"../leaf/LeafView\";\nimport type {LeafTrait} from \"../leaf/LeafTrait\";\nimport type {RowView} from \"../row/RowView\";\nimport type {RowTrait} from \"../row/RowTrait\";\nimport {RowController} from \"../row/RowController\";\nimport type {ColView} from \"../col/ColView\";\nimport type {ColTrait} from \"../col/ColTrait\";\nimport {ColController} from \"../col/ColController\";\nimport type {HeaderView} from \"../header/HeaderView\";\nimport type {HeaderTrait} from \"../header/HeaderTrait\";\nimport {HeaderController} from \"../header/HeaderController\";\nimport {TableView} from \"./TableView\";\nimport {TableTrait} from \"./TableTrait\";\nimport type {TableControllerObserver} from \"./TableControllerObserver\";\n\n/** @public */\nexport interface TableControllerHeaderExt {\n  attachHeaderTrait(headerTrait: HeaderTrait, headerController: HeaderController): void;\n  detachHeaderTrait(headerTrait: HeaderTrait, headerController: HeaderController): void;\n  attachHeaderView(headerView: HeaderView, headerController: HeaderController): void;\n  detachHeaderView(headerView: HeaderView, headerController: HeaderController): void;\n}\n\n/** @public */\nexport interface TableControllerColExt {\n  attachColTrait(colTrait: ColTrait, colController: ColController): void;\n  detachColTrait(colTrait: ColTrait, colController: ColController): void;\n  attachColView(colView: ColView, colController: ColController): void;\n  detachColView(colView: ColView, colController: ColController): void;\n  attachColLabelView(colLabelView: HtmlView, colController: ColController): void;\n  detachColLabelView(colLabelView: HtmlView, colController: ColController): void;\n}\n\n/** @public */\nexport interface TableControllerRowExt {\n  attachRowTrait(rowTrait: RowTrait, rowController: RowController): void;\n  detachRowTrait(rowTrait: RowTrait, rowController: RowController): void;\n  attachRowView(rowView: RowView, rowController: RowController): void;\n  detachRowView(rowView: RowView, rowController: RowController): void;\n  attachLeafTrait(leafTrait: LeafTrait, rowController: RowController): void;\n  detachLeafTrait(leafTrait: LeafTrait, rowController: RowController): void;\n  attachLeafView(leafView: LeafView, rowController: RowController): void;\n  detachLeafView(leafView: LeafView, rowController: RowController): void;\n  attachCell(cellController: CellController, rowController: RowController): void;\n  detachCell(cellController: CellController, rowController: RowController): void;\n  attachCellTrait(cellTrait: CellTrait, cellController: CellController, rowController: RowController): void;\n  detachCellTrait(cellTrait: CellTrait, cellController: CellController, rowController: RowController): void;\n  attachCellView(cellView: CellView, cellController: CellController, rowController: RowController): void;\n  detachCellView(cellView: CellView, cellController: CellController, rowController: RowController): void;\n  attachCellContentView(cellContentView: HtmlView, cellController: CellController, rowController: RowController): void;\n  detachCellContentView(cellContentView: HtmlView, cellController: CellController, rowController: RowController): void;\n  attachTree(treeController: TableController, rowController: RowController): void;\n  detachTree(treeController: TableController, rowController: RowController): void;\n  attachTreeTrait(treeTrait: TableTrait, treeController: TableController, rowController: RowController): void;\n  detachTreeTrait(treeTrait: TableTrait, treeController: TableController, rowController: RowController): void;\n  attachTreeView(treeView: TableView, treeController: TableController, rowController: RowController): void;\n  detachTreeView(treeView: TableView, treeController: TableController, rowController: RowController): void;\n}\n\n/** @public */\nexport class TableController extends Controller {\n  override readonly observerType?: Class<TableControllerObserver>;\n\n  protected layoutTable(tableLayout: TableLayout, tableView: TableView): void {\n    tableView.layout.setValue(tableLayout, Affinity.Intrinsic);\n  }\n\n  @TraitViewRef<TableController, TableTrait, TableView>({\n    traitType: TableTrait,\n    observesTrait: true,\n    willAttachTrait(tableTrait: TableTrait): void {\n      this.owner.callObservers(\"controllerWillAttachTableTrait\", tableTrait, this.owner);\n    },\n    didAttachTrait(tableTrait: TableTrait): void {\n      const headerTrait = tableTrait.header.trait;\n      if (headerTrait !== null) {\n        this.owner.header.setTrait(headerTrait);\n      }\n      const colTraits = tableTrait.cols.traits;\n      for (const traitId in colTraits) {\n        const colTrait = colTraits[traitId]!;\n        this.owner.cols.addTraitController(colTrait, null, colTrait.key);\n      }\n      const rowTraits = tableTrait.rows.traits;\n      for (const traitId in rowTraits) {\n        const rowTrait = rowTraits[traitId]!;\n        this.owner.rows.addTraitController(rowTrait);\n      }\n      const tableView = this.view;\n      if (tableView !== null) {\n        const tableLayout = tableTrait.layout.value;\n        if (tableLayout !== null) {\n          this.owner.layoutTable(tableLayout, tableView);\n        }\n      }\n    },\n    willDetachTrait(tableTrait: TableTrait): void {\n      const rowTraits = tableTrait.rows.traits;\n      for (const traitId in rowTraits) {\n        const rowTrait = rowTraits[traitId]!;\n        this.owner.rows.deleteTraitController(rowTrait);\n      }\n      const colTraits = tableTrait.cols.traits;\n      for (const traitId in colTraits) {\n        const colTrait = colTraits[traitId]!;\n        this.owner.cols.deleteTraitController(colTrait);\n      }\n      const headerTrait = tableTrait.header.trait;\n      if (headerTrait !== null) {\n        this.owner.header.deleteTrait(headerTrait);\n      }\n    },\n    didDetachTrait(tableTrait: TableTrait): void {\n      this.owner.callObservers(\"controllerDidDetachTableTrait\", tableTrait, this.owner);\n    },\n    traitWillSetTableLayout(newTableLayout: TableLayout | null, oldTableLayout: TableLayout | null): void {\n      this.owner.callObservers(\"controllerWillSetTableLayout\", newTableLayout, oldTableLayout, this.owner);\n    },\n    traitDidSetTableLayout(newTableLayout: TableLayout | null, oldTableLayout: TableLayout | null): void {\n      this.owner.callObservers(\"controllerDidSetTableLayout\", newTableLayout, oldTableLayout, this.owner);\n    },\n    traitWillAttachHeader(headerTrait: HeaderTrait): void {\n      this.owner.header.setTrait(headerTrait);\n    },\n    traitDidDetachHeader(headerTrait: HeaderTrait): void {\n      this.owner.header.deleteTrait(headerTrait);\n    },\n    traitWillAttachCol(colTrait: ColTrait, targetTrait: Trait): void {\n      this.owner.cols.addTraitController(colTrait, targetTrait, colTrait.key);\n    },\n    traitDidDetachCol(colTrait: ColTrait): void {\n      this.owner.cols.deleteTraitController(colTrait);\n    },\n    traitWillAttachRow(rowTrait: RowTrait, targetTrait: Trait): void {\n      this.owner.rows.addTraitController(rowTrait, targetTrait);\n    },\n    traitDidDetachRow(rowTrait: RowTrait): void {\n      this.owner.rows.deleteTraitController(rowTrait);\n    },\n    viewType: TableView,\n    observesView: true,\n    initView(tableView: TableView): void {\n      const headerController = this.owner.header.controller;\n      if (headerController !== null) {\n        headerController.header.insertView(tableView);\n        if (tableView.header.view === null) {\n          tableView.header.setView(headerController.header.view);\n        }\n      }\n      const rowControllers = this.owner.rows.controllers;\n      for (const controllerId in rowControllers) {\n        const rowController = rowControllers[controllerId]!;\n        const rowView = rowController.row.view;\n        if (rowView !== null && rowView.parent === null) {\n          rowController.row.insertView(tableView);\n        }\n      }\n      const tableTrait = this.trait;\n      if (tableTrait !== null) {\n        const tableLayout = tableTrait.layout.value;\n        if (tableLayout !== null) {\n          this.owner.layoutTable(tableLayout, tableView);\n        }\n      }\n    },\n    willAttachView(tableView: TableView): void {\n      this.owner.callObservers(\"controllerWillAttachTableView\", tableView, this.owner);\n    },\n    didDetachView(tableView: TableView): void {\n      this.owner.callObservers(\"controllerDidDetachTableView\", tableView, this.owner);\n    },\n    viewWillAttachHeader(headerView: HeaderView): void {\n      const headerController = this.owner.header.controller;\n      if (headerController !== null) {\n        headerController.header.setView(headerView);\n      }\n    },\n    viewDidDetachHeader(headerView: HeaderView): void {\n      const headerController = this.owner.header.controller;\n      if (headerController !== null) {\n        headerController.header.setView(null);\n      }\n    },\n  })\n  readonly table!: TraitViewRef<this, TableTrait, TableView>;\n  static readonly table: MemberFastenerClass<TableController, \"table\">;\n\n  @TraitViewControllerRef<TableController, HeaderTrait, HeaderView, HeaderController, TableControllerHeaderExt>({\n    implements: true,\n    type: HeaderController,\n    binds: true,\n    observes: true,\n    get parentView(): TableView | null {\n      return this.owner.table.view;\n    },\n    getTraitViewRef(headerController: HeaderController): TraitViewRef<unknown, HeaderTrait, HeaderView> {\n      return headerController.header;\n    },\n    initController(headerController: HeaderController): void {\n      const tableTrait = this.owner.table.trait;\n      if (tableTrait !== null) {\n        const headerTrait = tableTrait.header.trait;\n        if (headerTrait !== null) {\n          headerController.header.setTrait(headerTrait);\n        }\n      }\n    },\n    willAttachController(headerController: HeaderController): void {\n      this.owner.callObservers(\"controllerWillAttachHeader\", headerController, this.owner);\n    },\n    didAttachController(headerController: HeaderController): void {\n      const headerTrait = headerController.header.trait;\n      if (headerTrait !== null) {\n        this.attachHeaderTrait(headerTrait, headerController);\n      }\n      const headerView = headerController.header.view;\n      if (headerView !== null) {\n        this.attachHeaderView(headerView, headerController);\n      }\n    },\n    willDetachController(headerController: HeaderController): void {\n      const headerView = headerController.header.view;\n      if (headerView !== null) {\n        this.detachHeaderView(headerView, headerController);\n      }\n      const headerTrait = headerController.header.trait;\n      if (headerTrait !== null) {\n        this.detachHeaderTrait(headerTrait, headerController);\n      }\n    },\n    didDetachController(headerController: HeaderController): void {\n      this.owner.callObservers(\"controllerDidDetachHeader\", headerController, this.owner);\n    },\n    controllerWillAttachHeaderTrait(headerTrait: HeaderTrait, headerController: HeaderController): void {\n      this.owner.callObservers(\"controllerWillAttachHeaderTrait\", headerTrait, this.owner);\n      this.attachHeaderTrait(headerTrait, headerController);\n    },\n    controllerDidDetachHeaderTrait(headerTrait: HeaderTrait, headerController: HeaderController): void {\n      this.detachHeaderTrait(headerTrait, headerController);\n      this.owner.callObservers(\"controllerDidDetachHeaderTrait\", headerTrait, this.owner);\n    },\n    attachHeaderTrait(headerTrait: HeaderTrait, headerController: HeaderController): void {\n      // hook\n    },\n    detachHeaderTrait(headerTrait: HeaderTrait, headerController: HeaderController): void {\n      // hook\n    },\n    controllerWillAttachHeaderView(headerView: HeaderView, headerController: HeaderController): void {\n      this.owner.callObservers(\"controllerWillAttachHeaderView\", headerView, this.owner);\n      this.attachHeaderView(headerView, headerController);\n    },\n    controllerDidDetachHeaderView(headerView: HeaderView, headerController: HeaderController): void {\n      this.detachHeaderView(headerView, headerController);\n      this.owner.callObservers(\"controllerDidDetachHeaderView\", headerView, this.owner);\n    },\n    attachHeaderView(headerView: HeaderView, headerController: HeaderController): void {\n      //const tableView = this.owner.table.view;\n      //if (tableView !== null && tableView.header.view === null) {\n      //  tableView.header.setView(headerView);\n      //}\n    },\n    detachHeaderView(headerView: HeaderView, headerController: HeaderController): void {\n      headerView.remove();\n    },\n    detectController(controller: Controller): HeaderController | null {\n      return controller instanceof HeaderController ? controller : null;\n    },\n  })\n  readonly header!: TraitViewControllerRef<this, HeaderTrait, HeaderView, HeaderController>;\n  static readonly header: MemberFastenerClass<TableController, \"header\">;\n\n  @TraitViewControllerSet<TableController, ColTrait, ColView, ColController, TableControllerColExt>({\n    implements: true,\n    type: ColController,\n    binds: true,\n    observes: true,\n    getTraitViewRef(colController: ColController): TraitViewRef<unknown, ColTrait, ColView> {\n      return colController.col;\n    },\n    willAttachController(colController: ColController): void {\n      this.owner.callObservers(\"controllerWillAttachCol\", colController, this.owner);\n    },\n    didAttachController(colController: ColController): void {\n      const colTrait = colController.col.trait;\n      if (colTrait !== null) {\n        this.attachColTrait(colTrait, colController);\n      }\n      const colView = colController.col.view;\n      if (colView !== null) {\n        this.attachColView(colView, colController);\n      }\n    },\n    willDetachController(colController: ColController): void {\n      const colTrait = colController.col.trait;\n      if (colTrait !== null) {\n        this.detachColTrait(colTrait, colController);\n      }\n      const colView = colController.col.view;\n      if (colView !== null) {\n        this.detachColView(colView, colController);\n      }\n    },\n    didDetachController(colController: ColController): void {\n      this.owner.callObservers(\"controllerDidDetachCol\", colController, this.owner);\n    },\n    controllerWillAttachColTrait(colTrait: ColTrait, colController: ColController): void {\n      this.owner.callObservers(\"controllerWillAttachColTrait\", colTrait, colController, this.owner);\n      this.attachColTrait(colTrait, colController);\n    },\n    controllerDidDetachColTrait(colTrait: ColTrait, colController: ColController): void {\n      this.detachColTrait(colTrait, colController);\n      this.owner.callObservers(\"controllerDidDetachColTrait\", colTrait, colController, this.owner);\n    },\n    attachColTrait(colTrait: ColTrait, colController: ColController): void {\n      // hook\n    },\n    detachColTrait(colTrait: ColTrait, colController: ColController): void {\n      // hook\n    },\n    controllerWillSetColLayout(newColLayout: ColLayout | null, oldColLayout: ColLayout | null, colController: ColController): void {\n      this.owner.callObservers(\"controllerWillSetColLayout\", newColLayout, oldColLayout, colController, this.owner);\n    },\n    controllerDidSetColLayout(newColLayout: ColLayout | null, oldColLayout: ColLayout | null, colController: ColController): void {\n      this.owner.callObservers(\"controllerDidSetColLayout\", newColLayout, oldColLayout, colController, this.owner);\n    },\n    controllerWillAttachColView(colView: ColView, colController: ColController): void {\n      this.owner.callObservers(\"controllerWillAttachColView\", colView, colController, this.owner);\n      this.attachColView(colView, colController);\n    },\n    controllerDidDetachColView(colView: ColView, colController: ColController): void {\n      this.detachColView(colView, colController);\n      this.owner.callObservers(\"controllerDidDetachColView\", colView, colController, this.owner);\n    },\n    attachColView(colView: ColView, colController: ColController): void {\n      const colLabelView = colView.label.view;\n      if (colLabelView !== null) {\n        this.attachColLabelView(colLabelView, colController);\n      }\n    },\n    detachColView(colView: ColView, colController: ColController): void {\n      const colLabelView = colView.label.view;\n      if (colLabelView !== null) {\n        this.detachColLabelView(colLabelView, colController);\n      }\n      colView.remove();\n    },\n    controllerWillAttachColLabelView(colLabelView: HtmlView, colController: ColController): void {\n      this.owner.callObservers(\"controllerWillAttachColLabelView\", colLabelView, colController, this.owner);\n      this.attachColLabelView(colLabelView, colController);\n    },\n    controllerDidDetachColLabelView(colLabelView: HtmlView, colController: ColController): void {\n      this.detachColLabelView(colLabelView, colController);\n      this.owner.callObservers(\"controllerDidDetachColLabelView\", colLabelView, colController, this.owner);\n    },\n    attachColLabelView(colLabelView: HtmlView, colController: ColController): void {\n      // hook\n    },\n    detachColLabelView(colLabelView: HtmlView, colController: ColController): void {\n      // hook\n    },\n  })\n  readonly cols!: TraitViewControllerSet<this, ColTrait, ColView, ColController>;\n  static readonly cols: MemberFastenerClass<TableController, \"cols\">;\n\n  @TraitViewControllerSet<TableController, RowTrait, RowView, RowController, TableControllerRowExt>({\n    implements: true,\n    type: RowController,\n    binds: true,\n    observes: true,\n    get parentView(): View | null {\n      return this.owner.table.view;\n    },\n    getTraitViewRef(rowController: RowController): TraitViewRef<unknown, RowTrait, RowView> {\n      return rowController.row;\n    },\n    willAttachController(rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachRow\", rowController, this.owner);\n    },\n    didAttachController(rowController: RowController): void {\n      const rowTrait = rowController.row.trait;\n      if (rowTrait !== null) {\n        this.attachRowTrait(rowTrait, rowController);\n      }\n      const rowView = rowController.row.view;\n      if (rowView !== null) {\n        this.attachRowView(rowView, rowController);\n      }\n    },\n    willDetachController(rowController: RowController): void {\n      const rowView = rowController.row.view;\n      if (rowView !== null) {\n        this.detachRowView(rowView, rowController);\n      }\n      const rowTrait = rowController.row.trait;\n      if (rowTrait !== null) {\n        this.detachRowTrait(rowTrait, rowController);\n      }\n    },\n    didDetachController(rowController: RowController): void {\n      this.owner.callObservers(\"controllerDidDetachRow\", rowController, this.owner);\n    },\n    controllerWillAttachRowTrait(rowTrait: RowTrait, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachRowTrait\", rowTrait, rowController, this.owner);\n      this.attachRowTrait(rowTrait, rowController);\n    },\n    controllerDidDetachRowTrait(rowTrait: RowTrait, rowController: RowController): void {\n      this.detachRowTrait(rowTrait, rowController);\n      this.owner.callObservers(\"controllerDidDetachRowTrait\", rowTrait, rowController, this.owner);\n    },\n    attachRowTrait(rowTrait: RowTrait, rowController: RowController): void {\n      // hook\n    },\n    detachRowTrait(rowTrait: RowTrait, rowController: RowController): void {\n      // hook\n    },\n    controllerWillAttachRowView(rowView: RowView, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachRowView\", rowView, rowController, this.owner);\n      this.attachRowView(rowView, rowController);\n    },\n    controllerDidDetachRowView(rowView: RowView, rowController: RowController): void {\n      this.detachRowView(rowView, rowController);\n      this.owner.callObservers(\"controllerDidDetachRowView\", rowView, rowController, this.owner);\n    },\n    attachRowView(rowView: RowView, rowController: RowController): void {\n      // hook\n    },\n    detachRowView(rowView: RowView, rowController: RowController): void {\n      rowView.remove();\n    },\n    controllerWillAttachLeafTrait(leafTrait: LeafTrait, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachLeafTrait\", leafTrait, rowController, this.owner);\n      this.attachLeafTrait(leafTrait, rowController);\n    },\n    controllerDidDetachLeafTrait(leafTrait: LeafTrait, rowController: RowController): void {\n      this.detachLeafTrait(leafTrait, rowController);\n      this.owner.callObservers(\"controllerDidDetachLeafTrait\", leafTrait, rowController, this.owner);\n    },\n    attachLeafTrait(leafTrait: LeafTrait, rowController: RowController): void {\n      // hook\n    },\n    detachLeafTrait(leafTrait: LeafTrait, rowController: RowController): void {\n      // hook\n    },\n    controllerWillAttachLeafView(leafView: LeafView, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachLeafView\", leafView, rowController, this.owner);\n      this.attachLeafView(leafView, rowController);\n    },\n    controllerDidDetachLeafView(leafView: LeafView, rowController: RowController): void {\n      this.detachLeafView(leafView, rowController);\n      this.owner.callObservers(\"controllerDidDetachLeafView\", leafView, rowController, this.owner);\n    },\n    attachLeafView(leafView: LeafView, rowController: RowController): void {\n      // hook\n    },\n    detachLeafView(leafView: LeafView, rowController: RowController): void {\n      // hook\n    },\n    controllerWillAttachCell(cellController: CellController, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachCell\", cellController, rowController, this.owner);\n      this.attachCell(cellController, rowController);\n    },\n    controllerDidDetachCell(cellController: CellController, rowController: RowController): void {\n      this.detachCell(cellController, rowController);\n      this.owner.callObservers(\"controllerDidDetachCell\", cellController, rowController, this.owner);\n    },\n    attachCell(cellController: CellController, rowController: RowController): void {\n      const cellTrait = cellController.cell.trait;\n      if (cellTrait !== null) {\n        this.attachCellTrait(cellTrait, cellController, rowController);\n      }\n      const cellView = cellController.cell.view;\n      if (cellView !== null) {\n        this.attachCellView(cellView, cellController, rowController);\n      }\n    },\n    detachCell(cellController: CellController, rowController: RowController): void {\n      const cellTrait = cellController.cell.trait;\n      if (cellTrait !== null) {\n        this.detachCellTrait(cellTrait, cellController, rowController);\n      }\n      const cellView = cellController.cell.view;\n      if (cellView !== null) {\n        this.detachCellView(cellView, cellController, rowController);\n      }\n    },\n    controllerWillAttachCellTrait(cellTrait: CellTrait, cellController: CellController, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachCellTrait\", cellTrait, cellController, rowController, this.owner);\n      this.attachCellTrait(cellTrait, cellController, rowController);\n    },\n    controllerDidDetachCellTrait(cellTrait: CellTrait, cellController: CellController, rowController: RowController): void {\n      this.detachCellTrait(cellTrait, cellController, rowController);\n      this.owner.callObservers(\"controllerDidDetachCellTrait\", cellTrait, cellController, rowController, this.owner);\n    },\n    attachCellTrait(cellTrait: CellTrait, cellController: CellController, rowController: RowController): void {\n      // hook\n    },\n    detachCellTrait(cellTrait: CellTrait, cellController: CellController, rowController: RowController): void {\n      // hook\n    },\n    controllerWillAttachCellView(cellView: CellView, cellController: CellController, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachCellView\", cellView, cellController, rowController, this.owner);\n      this.attachCellView(cellView, cellController, rowController);\n    },\n    controllerDidDetachCellView(cellView: CellView, cellController: CellController, rowController: RowController): void {\n      this.detachCellView(cellView, cellController, rowController);\n      this.owner.callObservers(\"controllerDidDetachCellView\", cellView, cellController, rowController, this.owner);\n    },\n    attachCellView(cellView: CellView, cellController: CellController, rowController: RowController): void {\n      if (cellView instanceof TextCellView) {\n        const cellContentView = cellView.content.view;\n        if (cellContentView !== null) {\n          this.attachCellContentView(cellContentView, cellController, rowController);\n        }\n      }\n    },\n    detachCellView(cellView: CellView, cellController: CellController, rowController: RowController): void {\n      if (cellView instanceof TextCellView) {\n        const cellContentView = cellView.content.view;\n        if (cellContentView !== null) {\n          this.detachCellContentView(cellContentView, cellController, rowController);\n        }\n      }\n    },\n    controllerWillAttachCellContentView(cellContentView: HtmlView, cellController: CellController, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachCellContentView\", cellContentView, cellController, rowController, this.owner);\n      this.attachCellContentView(cellContentView, cellController, rowController);\n    },\n    controllerDidDetachCellContentView(cellContentView: HtmlView, cellController: CellController, rowController: RowController): void {\n      this.detachCellContentView(cellContentView, cellController, rowController);\n      this.owner.callObservers(\"controllerDidDetachCellContentView\", cellContentView, cellController, rowController, this.owner);\n    },\n    attachCellContentView(cellContentView: HtmlView, cellController: CellController, rowController: RowController): void {\n      // hook\n    },\n    detachCellContentView(cellContentView: HtmlView, cellController: CellController, rowController: RowController): void {\n      // hook\n    },\n    controllerWillSetCellIcon(newCellIcon: Graphics | null, oldCellIcon: Graphics | null, cellController: CellController, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillSetCellIcon\", newCellIcon, oldCellIcon, cellController, rowController, this.owner);\n    },\n    controllerDidSetCellIcon(newCellIcon: Graphics | null, oldCellIcon: Graphics | null, cellController: CellController, rowController: RowController): void {\n      this.owner.callObservers(\"controllerDidSetCellIcon\", newCellIcon, oldCellIcon, cellController, rowController, this.owner);\n    },\n    controllerWillAttachTree(treeController: TableController, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachTree\", treeController, rowController, this.owner);\n      this.attachTree(treeController, rowController);\n    },\n    controllerDidDetachTree(treeController: TableController, rowController: RowController): void {\n      this.detachTree(treeController, rowController);\n      this.owner.callObservers(\"controllerDidDetachTree\", treeController, rowController, this.owner);\n    },\n    attachTree(treeController: TableController, rowController: RowController): void {\n      const treeTrait = treeController.table.trait;\n      if (treeTrait !== null) {\n        this.attachTreeTrait(treeTrait, treeController, rowController);\n      }\n      const treeView = treeController.table.view;\n      if (treeView !== null) {\n        this.attachTreeView(treeView, treeController, rowController);\n      }\n    },\n    detachTree(treeController: TableController, rowController: RowController): void {\n      const treeTrait = treeController.table.trait;\n      if (treeTrait !== null) {\n        this.detachTreeTrait(treeTrait, treeController, rowController);\n      }\n      const treeView = treeController.table.view;\n      if (treeView !== null) {\n        this.detachTreeView(treeView, treeController, rowController);\n      }\n    },\n    controllerWillAttachTreeTrait(treeTrait: TableTrait, treeController: TableController, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachTreeTrait\", treeTrait, treeController, rowController, this.owner);\n      this.attachTreeTrait(treeTrait, treeController, rowController);\n    },\n    controllerDidDetachTreeTrait(treeTrait: TableTrait, treeController: TableController, rowController: RowController): void {\n      this.detachTreeTrait(treeTrait, treeController, rowController);\n      this.owner.callObservers(\"controllerDidDetachTreeTrait\", treeTrait, treeController, rowController, this.owner);\n    },\n    attachTreeTrait(treeTrait: TableTrait, treeController: TableController, rowController: RowController): void {\n      // hook\n    },\n    detachTreeTrait(treeTrait: TableTrait, treeController: TableController, rowController: RowController): void {\n      // hook\n    },\n    controllerWillAttachTreeView(treeView: TableView, treeController: TableController, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillAttachTreeView\", treeView, treeController, rowController, this.owner);\n      this.attachTreeView(treeView, treeController, rowController);\n    },\n    controllerDidDetachTreeView(treeView: TableView, treeController: TableController, rowController: RowController): void {\n      this.detachTreeView(treeView, treeController, rowController);\n      this.owner.callObservers(\"controllerDidDetachTreeView\", treeView, treeController, rowController, this.owner);\n    },\n    attachTreeView(treeView: TableView, treeController: TableController, rowController: RowController): void {\n      // hook\n    },\n    detachTreeView(treeView: TableView, treeController: TableController, rowController: RowController): void {\n      // hook\n    },\n    controllerWillExpandRowView(rowView: RowView, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillExpandRowView\", rowView, rowController, this.owner);\n    },\n    controllerDidExpandRowView(rowView: RowView, rowController: RowController): void {\n      this.owner.callObservers(\"controllerDidExpandRowView\", rowView, rowController, this.owner);\n    },\n    controllerWillCollapseRowView(rowView: RowView, rowController: RowController): void {\n      this.owner.callObservers(\"controllerWillCollapseRowView\", rowView, rowController, this.owner);\n    },\n    controllerDidCollapseRowView(rowView: RowView, rowController: RowController): void {\n      this.owner.callObservers(\"controllerDidCollapseRowView\", rowView, rowController, this.owner);\n    },\n  })\n  readonly rows!: TraitViewControllerSet<this, RowTrait, RowView, RowController>;\n  static readonly rows: MemberFastenerClass<TableController, \"rows\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport type {ModalService, ModalServiceObserver} from \"@swim/view\";\nimport {StyleAnimator, HtmlView} from \"@swim/dom\";\n\n/** @public */\nexport class ScrimView extends HtmlView implements ModalServiceObserver {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.displayState = ScrimView.HiddenState;\n    this.onClick = this.onClick.bind(this);\n    if (typeof PointerEvent !== \"undefined\") {\n      this.onSyntheticClick = this.onSyntheticClick.bind(this);\n      this.on(\"pointerup\", this.onClick);\n      this.on(\"click\", this.onSyntheticClick);\n    } else if (typeof TouchEvent !== \"undefined\") {\n      this.onSyntheticClick = this.onSyntheticClick.bind(this);\n      this.on(\"touchend\", this.onClick);\n      this.on(\"click\", this.onSyntheticClick);\n    } else {\n      this.on(\"click\", this.onClick);\n    }\n    this.initScrim();\n  }\n\n  protected initScrim(): void {\n    this.addClass(\"scrim\");\n    this.display.setState(\"none\", Affinity.Intrinsic);\n    this.position.setState(\"absolute\", Affinity.Intrinsic);\n    this.top.setState(0, Affinity.Intrinsic);\n    this.right.setState(0, Affinity.Intrinsic);\n    this.bottom.setState(0, Affinity.Intrinsic);\n    this.left.setState(0, Affinity.Intrinsic);\n    this.pointerEvents.setState(\"auto\", Affinity.Intrinsic);\n    this.cursor.setState(\"pointer\", Affinity.Intrinsic);\n    this.backgroundColor.setState(Color.black(0), Affinity.Intrinsic);\n  }\n\n  /** @internal */\n  readonly displayState: number;\n\n  /** @internal */\n  setDisplayState(displayState: number): void {\n    (this as Mutable<this>).displayState = displayState;\n  }\n\n  @StyleAnimator<ScrimView, Color | null, AnyColor | null>({\n    propertyNames: \"background-color\",\n    type: Color,\n    value: null,\n    willTransition(): void {\n      const displayState = this.owner.displayState;\n      if (displayState === ScrimView.ShowState) {\n        this.owner.willShowScrim();\n      } else if (displayState === ScrimView.HideState) {\n        this.owner.willHideScrim();\n      }\n    },\n    didTransition(): void {\n      const displayState = this.owner.displayState;\n      if (displayState === ScrimView.ShowingState) {\n        this.owner.didShowScrim();\n      } else if (displayState === ScrimView.HidingState) {\n        this.owner.didHideScrim();\n      }\n    },\n  })\n  override readonly backgroundColor!: StyleAnimator<this, Color | null, AnyColor | null>;\n\n  isShown(): boolean {  \n    switch (this.displayState) {\n      case ScrimView.ShownState:\n      case ScrimView.ShowingState:\n      case ScrimView.ShowState: return true;\n      default: return false;\n    }\n  }\n\n  isHidden(): boolean {\n    switch (this.displayState) {\n      case ScrimView.HiddenState:\n      case ScrimView.HidingState:\n      case ScrimView.HideState: return true;\n      default: return false;\n    }\n  }\n\n  show(opacity: number, timing?: AnyTiming | boolean): void {\n    if (this.isHidden()) {\n      if (timing === void 0 || timing === true) {\n        timing = this.getLookOr(Look.timing, false);\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      this.setDisplayState(ScrimView.ShowState);\n      if (timing !== false) {\n        this.backgroundColor.setState(Color.black(0), Affinity.Intrinsic);\n        this.backgroundColor.setState(Color.black(opacity), timing, Affinity.Intrinsic);\n      } else {\n        this.willShowScrim();\n        this.backgroundColor.setState(Color.black(opacity), Affinity.Intrinsic);\n        this.didShowScrim();\n      }\n    }\n  }\n\n  protected willShowScrim(): void {\n    this.setDisplayState(ScrimView.ShowingState);\n\n    this.display.setState(\"block\", Affinity.Intrinsic);\n  }\n\n  protected didShowScrim(): void {\n    this.setDisplayState(ScrimView.ShownState);\n  }\n\n  hide(timing?: AnyTiming | boolean): void {\n    if (this.isShown()) {\n      if (timing === void 0 || timing === true) {\n        timing = this.getLookOr(Look.timing, false);\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      this.setDisplayState(ScrimView.HideState);\n      if (timing !== false) {\n        this.backgroundColor.setState(Color.black(0), timing, Affinity.Intrinsic);\n      } else {\n        this.willHideScrim();\n        this.backgroundColor.setState(Color.black(0), Affinity.Intrinsic);\n        this.didHideScrim();\n      }\n    }\n  }\n\n  protected willHideScrim(): void {\n    this.setDisplayState(ScrimView.HidingState);\n  }\n\n  protected didHideScrim(): void {\n    this.setDisplayState(ScrimView.HiddenState);\n\n    this.display.setState(\"none\", Affinity.Intrinsic);\n  }\n\n  protected override onMount(): void {\n    super.onMount();\n    const modalService = this.modalProvider.service;\n    if (modalService !== void 0 && modalService !== null) {\n      modalService.observe(this);\n      this.serviceDidUpdateModality(modalService.modality, 0, modalService);\n    }\n  }\n\n  protected override onUnmount(): void {\n    const modalService = this.modalProvider.service;\n    if (modalService !== void 0 && modalService !== null) {\n      modalService.unobserve(this);\n    }\n    this.hide(false);\n    super.onUnmount();\n  }\n\n  serviceDidUpdateModality(newModality: number, oldModality: number, modalService: ModalService): void {\n    if (newModality !== 0) {\n      const opacity = 0.5 * newModality;\n      if (oldModality === 0) {\n        this.show(opacity);\n      } else {\n        this.backgroundColor.setState(Color.black(opacity), Affinity.Intrinsic);\n        if (this.displayState === ScrimView.ShowingState) {\n          this.didShowScrim();\n        }\n      }\n    } else {\n      this.hide();\n    }\n  }\n\n  protected onClick(event: Event): void {\n    const modalService = this.modalProvider.service;\n    if (modalService !== void 0 && modalService !== null) {\n      modalService.displaceModals(event);\n    }\n  }\n\n  protected onSyntheticClick(event: Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  /** @internal */\n  static readonly HiddenState: number = 0;\n  /** @internal */\n  static readonly HidingState: number = 1;\n  /** @internal */\n  static readonly HideState: number = 2;\n  /** @internal */\n  static readonly ShownState: number = 3;\n  /** @internal */\n  static readonly ShowingState: number = 4;\n  /** @internal */\n  static readonly ShowState: number = 5;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, Arrays, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Property} from \"@swim/component\";\nimport {AnyLength, Length, AnyR2Box, R2Box} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {Look, ThemeAnimator} from \"@swim/theme\";\nimport {\n  ModalOptions,\n  ModalState,\n  Modal,\n  ViewContextType,\n  ViewContext,\n  ViewFlags,\n  View,\n  ViewRef,\n} from \"@swim/view\";\nimport {StyleAnimator, HtmlViewInit, HtmlView, HtmlViewObserver} from \"@swim/dom\";\nimport type {PopoverViewObserver} from \"./PopoverViewObserver\";\n\n/** @public */\nexport type PopoverPlacement = \"none\" | \"above\" | \"below\" | \"over\" | \"top\" | \"bottom\" | \"right\" | \"left\";\n\n/** @public */\nexport interface PopoverViewInit extends HtmlViewInit {\n  source?: View;\n  placement?: PopoverPlacement[];\n  placementFrame?: R2Box;\n  arrowWidth?: AnyLength;\n  arrowHeight?: AnyLength;\n}\n\n/** @public */\nexport class PopoverView extends HtmlView implements Modal {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.sourceFrame = null;\n    this.displayState = PopoverView.HiddenState;\n    this.modality = false;\n    this.allowedPlacement = [\"top\", \"bottom\", \"right\", \"left\"];\n    this.currentPlacement = \"none\";\n    this.onClick = this.onClick.bind(this);\n    this.initArrow();\n  }\n\n  override readonly observerType?: Class<PopoverViewObserver>;\n\n  protected initArrow(): void {\n    const arrow = this.createArrow();\n    if (arrow !== null) {\n      this.prependChild(arrow, \"arrow\");\n    }\n  }\n\n  protected createArrow(): HtmlView | null {\n    const arrow = HtmlView.fromTag(\"div\");\n    arrow.addClass(\"popover-arrow\");\n    arrow.display.setState(\"none\", Affinity.Intrinsic);\n    arrow.position.setState(\"absolute\", Affinity.Intrinsic);\n    arrow.width.setState(0, Affinity.Intrinsic);\n    arrow.height.setState(0, Affinity.Intrinsic);\n    return arrow;\n  }\n\n  /** @internal */\n  readonly displayState: number;\n\n  /** @internal */\n  setDisplayState(displayState: number): void {\n    (this as Mutable<this>).displayState = displayState;\n  }\n\n  @StyleAnimator<PopoverView, Color | null, AnyColor | null>({\n    propertyNames: \"background-color\",\n    type: Color,\n    value: null,\n    didSetValue(newBackgroundColor: Color, oldBackgroundColor: Color): void {\n      this.owner.place();\n    },\n  })\n  override readonly backgroundColor!: StyleAnimator<this, Color | null, AnyColor | null>;\n\n  /** @internal */\n  @ThemeAnimator({type: Number, value: 0})\n  readonly displayPhase!: ThemeAnimator<this, number>; // 0 = hidden; 1 = shown\n\n  @ThemeAnimator({type: Length, value: Length.zero()})\n  readonly placementGap!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, value: Length.px(10)})\n  readonly arrowWidth!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, value: Length.px(8)})\n  readonly arrowHeight!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ViewRef<PopoverView, View, HtmlViewObserver>({\n    implements: true,\n    observes: true,\n    willAttachView(sourceView: View): void {\n      this.owner.callObservers(\"popoverWillAttachSource\", sourceView, this.owner);\n    },\n    didAttachView(sourceView: View): void {\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    didDetachView(sourceView: View): void {\n      this.owner.callObservers(\"popoverDidDetachSource\", sourceView, this.owner);\n    },\n    viewDidMount(view: View): void {\n      this.owner.place();\n    },\n    viewDidResize(viewContext: ViewContext, view: View): void {\n      this.owner.place();\n    },\n    viewDidScroll(viewContext: ViewContext, view: View): void {\n      this.owner.place();\n    },\n    viewDidAnimate(viewContext: ViewContext, view: View): void {\n      this.owner.place();\n    },\n    viewDidLayout(viewContext: ViewContext, view: View): void {\n      this.owner.place();\n    },\n    viewDidProject(viewContext: ViewContext, view: View): void {\n      this.owner.place();\n    },\n    viewDidSetAttribute(name: string, value: unknown, view: HtmlView): void {\n      this.owner.place();\n    },\n    viewDidSetStyle(name: string, value: unknown, priority: string | undefined, view: HtmlView): void {\n      this.owner.place();\n    },\n  })\n  readonly source!: ViewRef<this, View>;\n  static readonly source: MemberFastenerClass<PopoverView, \"source\">;\n\n  setSource(sourceView: View | null): void {\n    this.source.setView(sourceView);\n  }\n\n  get modalView(): View | null {\n    return this;\n  }\n\n  get modalState(): ModalState {\n    switch (this.displayState) {\n      case PopoverView.HiddenState: return \"hidden\";\n      case PopoverView.HidingState:\n      case PopoverView.HideState: return \"hiding\";\n      case PopoverView.ShownState: return \"shown\";\n      case PopoverView.ShowingState:\n      case PopoverView.ShowState: return \"showing\";\n      default: throw new Error(\"\" + this.displayState);\n    }\n  }\n\n  isShown(): boolean {\n    switch (this.displayState) {\n      case PopoverView.ShownState:\n      case PopoverView.ShowingState:\n      case PopoverView.ShowState: return true;\n      default: return false;\n    }\n  }\n\n  isHidden(): boolean {\n    switch (this.displayState) {\n      case PopoverView.HiddenState:\n      case PopoverView.HidingState:\n      case PopoverView.HideState: return true;\n      default: return false;\n    }\n  }\n\n  readonly modality: boolean | number;\n\n  showModal(options: ModalOptions, timing?: AnyTiming | boolean): void {\n    if (this.isHidden()) {\n      if (timing === void 0 || timing === true) {\n        timing = this.getLookOr(Look.timing, false);\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      if (options.modal !== void 0) {\n        (this as Mutable<this>).modality = options.modal;\n      }\n      this.setDisplayState(PopoverView.ShowState);\n      if (timing !== false) {\n        this.displayPhase.setState(1, timing);\n      } else {\n        this.willShowPopover();\n        this.didShowPopover();\n      }\n    }\n  }\n\n  protected willShowPopover(): void {\n    this.setDisplayState(PopoverView.ShowingState);\n\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.popoverWillShow !== void 0) {\n        observer.popoverWillShow(this);\n      }\n    }\n\n    this.place();\n    this.visibility.setState(\"visible\", Affinity.Intrinsic);\n  }\n\n  protected didShowPopover(): void {\n    this.setDisplayState(PopoverView.ShownState);\n\n    this.pointerEvents.setState(\"auto\", Affinity.Intrinsic);\n    this.marginTop.setState(null, Affinity.Intrinsic);\n    this.opacity.setState(void 0, Affinity.Intrinsic);\n\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.popoverDidShow !== void 0) {\n        observer.popoverDidShow(this);\n      }\n    }\n  }\n\n  hideModal(timing?: AnyTiming | boolean): void {\n    if (this.isShown()) {\n      if (timing === void 0 || timing === true) {\n        timing = this.getLookOr(Look.timing, false);\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      this.setDisplayState(PopoverView.HideState);\n      if (timing !== false) {\n        this.displayPhase.setState(0, timing);\n      } else {\n        this.willHidePopover();\n        this.didHidePopover();\n      }\n    }\n  }\n\n  protected willHidePopover(): void {\n    this.setDisplayState(PopoverView.HidingState);\n\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.popoverWillHide !== void 0) {\n        observer.popoverWillHide(this);\n      }\n    }\n\n    this.pointerEvents.setState(\"none\", Affinity.Intrinsic);\n  }\n\n  protected didHidePopover(): void {\n    this.setDisplayState(PopoverView.HiddenState);\n\n    this.visibility.setState(\"hidden\", Affinity.Intrinsic);\n    this.marginTop.setState(null, Affinity.Intrinsic);\n    this.opacity.setState(void 0, Affinity.Intrinsic);\n\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.popoverDidHide !== void 0) {\n        observer.popoverDidHide(this);\n      }\n    }\n  }\n\n  /** @internal */\n  readonly allowedPlacement: PopoverPlacement[];\n\n  placement(): ReadonlyArray<PopoverPlacement>;\n  placement(placement: ReadonlyArray<PopoverPlacement>): this;\n  placement(placement?: ReadonlyArray<PopoverPlacement>): ReadonlyArray<PopoverPlacement> | this {\n    if (placement === void 0) {\n      return this.allowedPlacement;\n    } else {\n      if (!Arrays.equal(this.allowedPlacement, placement)) {\n        this.allowedPlacement.length = 0;\n        this.allowedPlacement.push(...placement);\n        this.place();\n      }\n      return this;\n    }\n  }\n\n  /** @internal */\n  readonly currentPlacement: PopoverPlacement;\n\n  @Property<PopoverView, R2Box | null, AnyR2Box | null>({\n    type: R2Box,\n    value: null,\n    didSetValue(placementFrame: R2Box | null): void {\n      this.owner.place();\n    },\n    fromAny(value: AnyR2Box | null): R2Box | null {\n      return value !== null ? R2Box.fromAny(value) : null;\n    },\n  })\n  readonly placementFrame!: Property<this, R2Box | null, AnyR2Box | null>;\n\n  @Property<PopoverView, boolean>({\n    type: Boolean,\n    value: false,\n    didSetValue(dropdown: boolean): void {\n      this.owner.place();\n    }\n  })\n  readonly dropdown!: Property<this, boolean>;\n\n  protected override onMount(): void {\n    super.onMount();\n    this.attachEvents();\n  }\n\n  protected override onUnmount(): void {\n    super.onUnmount();\n    this.detachEvents();\n  }\n\n  protected attachEvents(): void {\n    this.on(\"click\", this.onClick);\n  }\n\n  protected detachEvents(): void {\n    this.off(\"click\", this.onClick);\n  }\n\n  protected override needsProcess(processFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    if ((processFlags & (View.NeedsScroll | View.NeedsAnimate)) !== 0) {\n      this.requireUpdate(View.NeedsLayout);\n    }\n    return processFlags;\n  }\n\n  protected override onAnimate(viewContext: ViewContextType<this>): void {\n    super.onAnimate(viewContext);\n    const displayState = this.displayState;\n    if (displayState === PopoverView.ShowState) {\n      this.willShowPopover();\n    } else if (displayState === PopoverView.HideState) {\n      this.willHidePopover();\n    } else if (displayState === PopoverView.ShowingState && !this.displayPhase.tweening) {\n      this.didShowPopover();\n    } else if (displayState === PopoverView.HidingState && !this.displayPhase.tweening) {\n      this.didHidePopover();\n    }\n    if (this.displayPhase.tweening) {\n      this.applyDisplayPhase(this.displayPhase.value);\n    }\n  }\n\n  protected applyDisplayPhase(displayPhase: number): void {\n    const placement = this.currentPlacement;\n    if (placement === \"above\") {\n      this.opacity.setState(void 0, Affinity.Intrinsic);\n      this.marginTop.setState((1 - displayPhase) * -this.node.clientHeight, Affinity.Intrinsic);\n    } else if (placement === \"below\") {\n      this.opacity.setState(void 0, Affinity.Intrinsic);\n      this.marginTop.setState((1 - displayPhase) * this.node.clientHeight, Affinity.Intrinsic);\n    } else {\n      this.marginTop.setState(null, Affinity.Intrinsic);\n      this.opacity.setState(displayPhase, Affinity.Intrinsic);\n    }\n  }\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.place();\n  }\n\n  /** @internal */\n  readonly sourceFrame: R2Box | null;\n\n  place(force: boolean = false): PopoverPlacement {\n    const sourceView = this.source.view;\n    const oldSourceFrame = this.sourceFrame;\n    const newSourceFrame = sourceView !== null ? sourceView.popoverFrame : null;\n    if (newSourceFrame !== null && this.allowedPlacement.length !== 0 &&\n        (force || !newSourceFrame.equals(oldSourceFrame))) {\n      (this as Mutable<this>).sourceFrame = null;\n      const placement = this.placePopover(sourceView!, newSourceFrame);\n      const arrow = this.getChild(\"arrow\");\n      if (arrow instanceof HtmlView) {\n        this.placeArrow(sourceView!, newSourceFrame, arrow, placement);\n      }\n      return placement;\n    } else {\n      return \"none\";\n    }\n  }\n\n  /** @internal */\n  protected placePopover(sourceView: View, sourceFrame: R2Box): PopoverPlacement {\n    const node = this.node;\n    const parent = node.offsetParent;\n    if (parent === null) {\n      return \"none\";\n    }\n    const popoverWidth = node.clientWidth;\n    const popoverHeight = node.clientHeight;\n\n    // offsetParent bounds in client coordinates\n    const parentBounds = parent.getBoundingClientRect();\n    const parentLeft = parentBounds.left;\n    const parentTop = parentBounds.top;\n\n    // source bounds in offsetParent coordinates (transformed from page coordinates)\n    const sourceLeft = sourceFrame.left - window.pageXOffset - parentLeft;\n    const sourceRight = sourceFrame.right - window.pageXOffset - parentLeft;\n    const sourceTop = sourceFrame.top - window.pageYOffset - parentTop;\n    const sourceBottom = sourceFrame.bottom - window.pageYOffset - parentTop;\n    const sourceWidth = sourceFrame.width;\n    const sourceHeight = sourceFrame.height;\n    const sourceX = sourceLeft + sourceWidth / 2;\n    const sourceY = sourceTop + sourceHeight / 2;\n\n    // placement frame in offsetParent coordinates (transformed from client coordinates)\n    const placementFrame = this.placementFrame.value;\n    const placementLeft = (placementFrame !== null ? placementFrame.left : 0);\n    const placementRight = (placementFrame !== null ? placementFrame.right : window.innerWidth) - parentLeft;\n    const placementTop = (placementFrame !== null ? placementFrame.top : 0);\n    const placementBottom = (placementFrame !== null ? placementFrame.bottom : window.innerHeight) - parentTop;\n\n    // source bound margins relative to placement bounds\n    const marginLeft = sourceLeft - placementLeft - window.pageXOffset;\n    const marginRight = placementRight - sourceLeft - sourceWidth;\n    const marginTop = sourceTop - placementTop - window.pageYOffset;\n    const marginBottom = placementBottom - sourceTop - sourceHeight;\n\n    const dropdown = this.dropdown.value;\n    const arrowHeight = this.arrowHeight.getValue().pxValue();\n    const placementGap = this.placementGap.getValue().pxValue();\n\n    let placement: PopoverPlacement | undefined;\n    const allowedPlacement = this.allowedPlacement;\n    for (let i = 0, n = allowedPlacement.length; i < n; i += 1) { // first fit\n      const p = allowedPlacement[i]!;\n      if (p === \"above\" || p === \"below\" || p === \"over\") {\n        placement = p;\n        break;\n      } else if (p === \"top\" && popoverHeight + arrowHeight + placementGap <= marginTop) {\n        placement = p;\n        break;\n      } else if (p === \"bottom\" && popoverHeight + arrowHeight + placementGap <= marginBottom) {\n        placement = p;\n        break;\n      } else if (p === \"left\" && popoverWidth + arrowHeight + placementGap <= marginLeft) {\n        placement = p;\n        break;\n      } else if (p === \"right\" && popoverWidth + arrowHeight + placementGap <= marginRight) {\n        placement = p;\n        break;\n      }\n    }\n    if (placement === void 0) {\n      placement = \"none\";\n      for (let i = 0, n = allowedPlacement.length; i < n; i += 1) { // best fit\n        const p = allowedPlacement[i]!;\n        if (p === \"top\" && marginTop >= marginBottom) {\n          placement = p;\n          break;\n        } else if (p === \"bottom\" && marginBottom >= marginTop) {\n          placement = p;\n          break;\n        } else if (p === \"left\" && marginLeft >= marginRight) {\n          placement = p;\n          break;\n        } else if (p === \"right\" && marginRight >= marginLeft) {\n          placement = p;\n          break;\n        }\n      }\n    }\n\n    let left = node.offsetLeft;\n    let top = node.offsetTop;\n    let right: number | null = null;\n    let bottom: number | null = null;\n\n    let oldWidth: Length | number | null = this.width.state;\n    oldWidth = oldWidth instanceof Length ? oldWidth.pxValue() : null;\n    let oldHeight: Length | number | null = this.height.state;\n    oldHeight = oldHeight instanceof Length ? oldHeight.pxValue() : null;\n    let width = oldWidth;\n    let height = oldHeight;\n\n    let oldMaxWidth: Length | number | null = this.maxWidth.state;\n    oldMaxWidth = oldMaxWidth instanceof Length ? oldMaxWidth.pxValue() : null;\n    let oldMaxHeight: Length | number | null = this.maxHeight.state;\n    oldMaxHeight = oldMaxHeight instanceof Length ? oldMaxHeight.pxValue() : null;\n    let maxWidth = oldMaxWidth;\n    let maxHeight = oldMaxHeight;\n\n    if (placement === \"above\") {\n      left = Math.round(placementLeft);\n      top = Math.round(placementTop);\n      right = Math.round((placementFrame !== null ? placementFrame.width : window.innerWidth) - placementRight);\n      width = Math.round(Math.max(0, placementRight - placementLeft));\n      height = null;\n      maxWidth = null;\n      maxHeight = Math.round(Math.max(0, placementBottom - placementTop));\n    } else if (placement === \"below\") {\n      left = Math.round(placementLeft);\n      top = Math.round(placementBottom - popoverHeight);\n      right = Math.round(placementRight - (placementFrame !== null ? placementFrame.width : window.innerWidth));\n      width = Math.round(Math.max(0, placementRight - placementLeft));\n      height = null;\n      maxWidth = null;\n      maxHeight = Math.round(Math.max(0, placementBottom - placementTop));\n    } else if (placement === \"over\") {\n      left = Math.round(placementLeft);\n      top = Math.round(placementTop);\n      right = Math.round(placementRight - (placementFrame !== null ? placementFrame.width : window.innerWidth));\n      bottom = Math.round(placementBottom - (placementFrame !== null ? placementFrame.height : window.innerHeight));\n      width = Math.round(Math.max(0, placementRight - placementLeft));\n      height = Math.round(Math.max(0, placementBottom - placementTop));\n      maxWidth = null;\n      maxHeight = null;\n    } else if (placement === \"top\" && !dropdown) {\n      if (sourceX - popoverWidth / 2 <= placementLeft) {\n        left = Math.round(placementLeft);\n      } else if (sourceX + popoverWidth / 2 >= placementRight) {\n        left = Math.round(placementRight - popoverWidth);\n      } else {\n        left = Math.round(sourceX - popoverWidth / 2);\n      }\n      top = Math.round(Math.max(placementTop, sourceTop - (popoverHeight + arrowHeight + placementGap)));\n      maxWidth = Math.round(Math.max(0, placementRight - placementLeft));\n      maxHeight = Math.round(Math.max(0, sourceBottom - placementTop));\n    } else if (placement === \"bottom\" && !dropdown) {\n      if (sourceX - popoverWidth / 2 <= placementLeft) {\n        left = Math.round(placementLeft);\n      } else if (sourceX + popoverWidth / 2 >= placementRight) {\n        left = Math.round(placementRight - popoverWidth);\n      } else {\n        left = Math.round(sourceX - popoverWidth / 2);\n      }\n      top = Math.round(Math.max(placementTop, sourceBottom + arrowHeight + placementGap));\n      maxWidth = Math.round(Math.max(0, placementRight - placementLeft));\n      maxHeight = Math.round(Math.max(0, placementBottom - sourceTop));\n    } else if (placement === \"left\" && !dropdown) {\n      left = Math.round(Math.max(placementLeft, sourceLeft - (popoverWidth + arrowHeight + placementGap)));\n      if (sourceY - popoverHeight / 2 <= placementTop) {\n        top = Math.round(placementTop);\n      } else if (sourceY + popoverHeight / 2 >= placementBottom) {\n        top = Math.round(placementBottom - popoverHeight);\n      } else {\n        top = Math.round(sourceY - popoverHeight / 2);\n      }\n      maxWidth = Math.round(Math.max(0, sourceRight - placementLeft));\n      maxHeight = Math.round(Math.max(0, placementBottom - placementTop));\n    } else if (placement === \"right\" && !dropdown) {\n      left = Math.round(Math.max(placementLeft, sourceRight + arrowHeight + placementGap));\n      if (sourceY - popoverHeight / 2 <= placementTop) {\n        top = Math.round(placementTop);\n      } else if (sourceY + popoverHeight / 2 >= placementBottom) {\n        top = Math.round(placementBottom - popoverHeight);\n      } else {\n        top = Math.round(sourceY - popoverHeight / 2);\n      }\n      maxWidth = Math.round(Math.max(0, placementRight - sourceLeft));\n      maxHeight = Math.round(Math.max(0, placementBottom - placementTop));\n    } else if (placement === \"top\" && dropdown) {\n      left = Math.max(placementLeft, sourceLeft);\n      top = Math.round(Math.max(placementTop, sourceTop - (popoverHeight + placementGap)));\n      width = Math.round(Math.max(0, Math.min(sourceWidth, placementRight - sourceLeft)));\n      height = null;\n      maxWidth = Math.round(Math.max(0, placementRight - placementLeft));\n      maxHeight = Math.round(Math.max(0, sourceBottom - placementTop));\n    } else if (placement === \"bottom\" && dropdown) {\n      left = Math.max(placementLeft, sourceLeft);\n      top = Math.round(Math.max(placementTop, sourceBottom + placementGap));\n      width = Math.round(Math.max(0, Math.min(sourceWidth, placementRight - sourceLeft)));\n      height = null;\n      maxWidth = Math.round(Math.max(0, placementRight - placementLeft));\n      maxHeight = Math.round(Math.max(0, placementBottom - sourceTop));\n    } else if (placement === \"left\" && dropdown) {\n      left = Math.round(Math.max(placementLeft, sourceLeft - (popoverWidth + placementGap)));\n      top = Math.max(placementTop, sourceTop);\n      width = null;\n      height = Math.round(Math.max(0, Math.min(sourceHeight, placementBottom - sourceTop)));\n      maxWidth = Math.round(Math.max(0, sourceRight - placementLeft));\n      maxHeight = Math.round(Math.max(0, placementBottom - placementTop));\n    } else if (placement === \"right\" && dropdown) {\n      left = Math.round(Math.max(placementLeft, sourceRight + placementGap));\n      top = Math.max(placementTop, sourceTop);\n      width = null;\n      height = Math.round(Math.max(0, Math.min(sourceHeight, placementBottom - sourceTop)));\n      maxWidth = Math.round(Math.max(0, placementRight - sourceLeft));\n      maxHeight = Math.round(Math.max(0, placementBottom - placementTop));\n    }\n\n    if (placement !== \"none\" && (left !== node.offsetLeft && this.left.hasAffinity(Affinity.Intrinsic)\n                              || top !== node.offsetTop && this.top.hasAffinity(Affinity.Intrinsic)\n                              || width !== oldWidth && this.width.hasAffinity(Affinity.Intrinsic)\n                              || height !== oldHeight && this.height.hasAffinity(Affinity.Intrinsic)\n                              || maxWidth !== oldMaxWidth && this.maxWidth.hasAffinity(Affinity.Intrinsic)\n                              || maxHeight !== oldMaxHeight && this.maxHeight.hasAffinity(Affinity.Intrinsic))) {\n      this.willPlacePopover(placement!);\n      this.position.setState(\"absolute\", Affinity.Intrinsic);\n      this.left.setState(left, Affinity.Intrinsic);\n      this.right.setState(right, Affinity.Intrinsic);\n      this.top.setState(top, Affinity.Intrinsic);\n      this.bottom.setState(bottom, Affinity.Intrinsic);\n      this.width.setState(width, Affinity.Intrinsic);\n      this.height.setState(height, Affinity.Intrinsic);\n      this.maxWidth.setState(maxWidth, Affinity.Intrinsic);\n      this.maxHeight.setState(maxHeight, Affinity.Intrinsic);\n      this.onPlacePopover(placement!);\n      this.didPlacePopover(placement!);\n    }\n\n    (this as Mutable<this>).currentPlacement = placement;\n    return placement;\n  }\n\n  protected willPlacePopover(placement: PopoverPlacement): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.popoverWillPlace !== void 0) {\n        observer.popoverWillPlace(placement, this);\n      }\n    }\n  }\n\n  protected onPlacePopover(placement: PopoverPlacement): void {\n    // hook\n  }\n\n  protected didPlacePopover(placement: PopoverPlacement): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.popoverDidPlace !== void 0) {\n        observer.popoverDidPlace(placement, this);\n      }\n    }\n  }\n\n  /** @internal */\n  protected placeArrow(sourceView: View, sourceFrame: R2Box, arrow: HtmlView,\n                       placement: PopoverPlacement): void {\n    const node = this.node;\n    const parent = node.offsetParent;\n    if (parent === null) {\n      return;\n    }\n\n    // offsetParent bounds in client coordinates\n    const parentBounds = parent.getBoundingClientRect();\n    const parentLeft = parentBounds.left;\n    const parentTop = parentBounds.top;\n\n    // source bounds in offsetParent coordinates (transformed from page coordinates)\n    const sourceLeft = sourceFrame.left - window.pageXOffset - parentLeft;\n    const sourceTop = sourceFrame.top - window.pageYOffset - parentTop;\n    const sourceWidth = sourceFrame.width;\n    const sourceHeight = sourceFrame.height;\n    const sourceX = sourceLeft + sourceWidth / 2;\n    const sourceY = sourceTop + sourceHeight / 2;\n\n    const offsetLeft = node.offsetLeft;\n    const offsetRight = offsetLeft + node.clientWidth;\n    const offsetTop = node.offsetTop;\n    const offsetBottom = offsetTop + node.clientHeight;\n\n    let backgroundColor = this.backgroundColor.value;\n    if (backgroundColor === null) {\n      backgroundColor = Color.transparent();\n    }\n    const borderRadius = this.borderRadius();\n    const radius = borderRadius instanceof Length ? borderRadius.pxValue() : 0;\n\n    const arrowWidth = this.arrowWidth.getValue().pxValue();\n    const arrowHeight = this.arrowHeight.getValue().pxValue();\n\n    const arrowXMin = offsetLeft + radius + arrowWidth / 2;\n    const arrowXMax = offsetRight - radius - arrowWidth / 2;\n    const arrowYMin = offsetTop + radius + arrowWidth / 2;\n    const arrowYMax = offsetBottom - radius - arrowWidth / 2;\n\n    arrow.top.setState(null, Affinity.Intrinsic);\n    arrow.right.setState(null, Affinity.Intrinsic);\n    arrow.bottom.setState(null, Affinity.Intrinsic);\n    arrow.left.setState(null, Affinity.Intrinsic);\n    arrow.borderLeftWidth.setState(null, Affinity.Intrinsic);\n    arrow.borderLeftStyle.setState(void 0, Affinity.Intrinsic);\n    arrow.borderLeftColor.setState(null, Affinity.Intrinsic);\n    arrow.borderRightWidth.setState(null, Affinity.Intrinsic);\n    arrow.borderRightStyle.setState(void 0, Affinity.Intrinsic);\n    arrow.borderRightColor.setState(null, Affinity.Intrinsic);\n    arrow.borderTopWidth.setState(null, Affinity.Intrinsic);\n    arrow.borderTopStyle.setState(void 0, Affinity.Intrinsic);\n    arrow.borderTopColor.setState(null, Affinity.Intrinsic);\n    arrow.borderBottomWidth.setState(null, Affinity.Intrinsic);\n    arrow.borderBottomStyle.setState(void 0, Affinity.Intrinsic);\n    arrow.borderBottomColor.setState(null, Affinity.Intrinsic);\n    arrow.zIndex.setState(100, Affinity.Intrinsic);\n\n    if (placement === \"none\" || placement === \"above\" || placement === \"below\" || placement === \"over\") {\n      // hide arrow\n      arrow.display.setState(\"none\", Affinity.Intrinsic);\n    } else if (Math.round(sourceY) <= Math.round(offsetTop - arrowHeight) // arrow tip below source center\n        && arrowXMin <= sourceX && sourceX <= arrowXMax) { // arrow base on top popover edge\n      // top arrow\n      arrow.display.setState(\"block\", Affinity.Intrinsic);\n      arrow.top.setState(Math.round(-arrowHeight), Affinity.Intrinsic);\n      arrow.left.setState(Math.round(sourceX - offsetLeft - arrowWidth / 2), Affinity.Intrinsic);\n      arrow.borderLeftWidth.setState(Math.round(arrowWidth / 2), Affinity.Intrinsic);\n      arrow.borderLeftStyle.setState(\"solid\", Affinity.Intrinsic);\n      arrow.borderLeftColor.setState(Color.transparent(), Affinity.Intrinsic);\n      arrow.borderRightWidth.setState(Math.round(arrowWidth / 2), Affinity.Intrinsic);\n      arrow.borderRightStyle.setState(\"solid\", Affinity.Intrinsic);\n      arrow.borderRightColor.setState(Color.transparent(), Affinity.Intrinsic);\n      arrow.borderBottomWidth.setState(Math.round(arrowHeight), Affinity.Intrinsic);\n      arrow.borderBottomStyle.setState(\"solid\", Affinity.Intrinsic);\n      arrow.borderBottomColor.setState(backgroundColor, Affinity.Intrinsic);\n    } else if (Math.round(offsetBottom + arrowHeight) <= Math.round(sourceY) // arrow tip above source center\n        && arrowXMin <= sourceX && sourceX <= arrowXMax) { // arrow base on bottom popover edge\n      // bottom arrow\n      arrow.display.setState(\"block\", Affinity.Intrinsic);\n      arrow.bottom.setState(Math.round(-arrowHeight), Affinity.Intrinsic);\n      arrow.left.setState(Math.round(sourceX - offsetLeft - arrowWidth / 2), Affinity.Intrinsic);\n      arrow.borderLeftWidth.setState(Math.round(arrowWidth / 2), Affinity.Intrinsic);\n      arrow.borderLeftStyle.setState(\"solid\", Affinity.Intrinsic);\n      arrow.borderLeftColor.setState(Color.transparent(), Affinity.Intrinsic);\n      arrow.borderRightWidth.setState(Math.round(arrowWidth / 2), Affinity.Intrinsic);\n      arrow.borderRightStyle.setState(\"solid\", Affinity.Intrinsic);\n      arrow.borderRightColor.setState(Color.transparent(), Affinity.Intrinsic);\n      arrow.borderTopWidth.setState(Math.round(arrowHeight), Affinity.Intrinsic);\n      arrow.borderTopStyle.setState(\"solid\", Affinity.Intrinsic);\n      arrow.borderTopColor.setState(backgroundColor, Affinity.Intrinsic);\n    } else if (Math.round(sourceX) <= Math.round(offsetLeft - arrowHeight) // arrow tip right of source center\n        && arrowYMin <= sourceY && sourceY <= arrowYMax) { // arrow base on left popover edge\n      // left arrow\n      arrow.display.setState(\"block\");\n      arrow.left.setState(Math.round(-arrowHeight), Affinity.Intrinsic);\n      arrow.top.setState(Math.round(sourceY - offsetTop - arrowWidth / 2), Affinity.Intrinsic);\n      arrow.borderTopWidth.setState(Math.round(arrowWidth / 2), Affinity.Intrinsic);\n      arrow.borderTopStyle.setState(\"solid\", Affinity.Intrinsic);\n      arrow.borderTopColor.setState(Color.transparent(), Affinity.Intrinsic);\n      arrow.borderBottomWidth.setState(Math.round(arrowWidth / 2), Affinity.Intrinsic);\n      arrow.borderBottomStyle.setState(\"solid\", Affinity.Intrinsic);\n      arrow.borderBottomColor.setState(Color.transparent(), Affinity.Intrinsic);\n      arrow.borderRightWidth.setState(Math.round(arrowHeight), Affinity.Intrinsic);\n      arrow.borderRightStyle.setState(\"solid\", Affinity.Intrinsic);\n      arrow.borderRightColor.setState(backgroundColor, Affinity.Intrinsic);\n    } else if (Math.round(offsetRight + arrowHeight) <= Math.round(sourceX) // arrow tip left of source center\n        && arrowYMin <= sourceY && sourceY <= arrowYMax) { // arrow base on right popover edge\n      // right arrow\n      arrow.display.setState(\"block\", Affinity.Intrinsic);\n      arrow.right.setState(Math.round(-arrowHeight), Affinity.Intrinsic);\n      arrow.top.setState(Math.round(sourceY - offsetTop - arrowWidth / 2), Affinity.Intrinsic);\n      arrow.borderTopWidth.setState(Math.round(arrowWidth / 2), Affinity.Intrinsic);\n      arrow.borderTopStyle.setState(\"solid\", Affinity.Intrinsic);\n      arrow.borderTopColor.setState(Color.transparent(), Affinity.Intrinsic);\n      arrow.borderBottomWidth.setState(Math.round(arrowWidth / 2), Affinity.Intrinsic);\n      arrow.borderBottomStyle.setState(\"solid\", Affinity.Intrinsic);\n      arrow.borderBottomColor.setState(Color.transparent(), Affinity.Intrinsic);\n      arrow.borderLeftWidth.setState(Math.round(arrowHeight), Affinity.Intrinsic);\n      arrow.borderLeftStyle.setState(\"solid\", Affinity.Intrinsic);\n      arrow.borderLeftColor.setState(backgroundColor, Affinity.Intrinsic);\n    } else {\n      // no arrow\n      arrow.display.setState(\"none\", Affinity.Intrinsic);\n    }\n  }\n\n  protected onClick(event: Event): void {\n    event.stopPropagation();\n  }\n\n  override init(init: PopoverViewInit): void {\n    super.init(init);\n    if (init.source !== void 0) {\n      this.source.setView(init.source);\n    }\n    if (init.placement !== void 0) {\n      this.placement(init.placement);\n    }\n    if (init.placementFrame !== void 0) {\n      this.placementFrame(init.placementFrame);\n    }\n    if (init.arrowWidth !== void 0) {\n      this.arrowWidth(init.arrowWidth);\n    }\n    if (init.arrowHeight !== void 0) {\n      this.arrowHeight(init.arrowHeight);\n    }\n  }\n\n  /** @internal */\n  static readonly HiddenState: number = 0;\n  /** @internal */\n  static readonly HidingState: number = 1;\n  /** @internal */\n  static readonly HideState: number = 2;\n  /** @internal */\n  static readonly ShownState: number = 3;\n  /** @internal */\n  static readonly ShowingState: number = 4;\n  /** @internal */\n  static readonly ShowState: number = 5;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, Property} from \"@swim/component\";\nimport {ConstraintProperty} from \"@swim/constraint\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport {AnyPresence, Presence, AnyExpansion, Expansion} from \"@swim/style\";\nimport {\n  Look,\n  Mood,\n  ThemeAnimator,\n  PresenceThemeAnimator,\n  ExpansionThemeAnimator,\n  ThemeConstraintAnimator,\n} from \"@swim/theme\";\nimport {\n  ViewportInsets,\n  ViewContextType,\n  View,\n  ModalOptions,\n  ModalState,\n  Modal,\n} from \"@swim/view\";\nimport {HtmlViewInit, HtmlView} from \"@swim/dom\";\nimport type {DrawerViewObserver} from \"./DrawerViewObserver\";\n\n/** @public */\nexport type DrawerPlacement = \"top\" | \"right\" | \"bottom\" | \"left\";\n\n/** @public */\nexport interface DrawerViewInit extends HtmlViewInit {\n  placement?: DrawerPlacement;\n  collapsedWidth?: AnyLength;\n  expandedWidth?: AnyLength;\n}\n\n/** @public */\nexport class DrawerView extends HtmlView implements Modal {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.modality = true;\n    this.initDrawer();\n  }\n\n  override readonly observerType?: Class<DrawerViewObserver>;\n\n  protected initDrawer(): void {\n    this.addClass(\"drawer\");\n    this.display.setState(\"flex\", Affinity.Intrinsic);\n    this.overflowX.setState(\"hidden\", Affinity.Intrinsic);\n    this.overflowY.setState(\"auto\", Affinity.Intrinsic);\n    this.overscrollBehaviorY.setState(\"contain\", Affinity.Intrinsic);\n    this.overflowScrolling.setState(\"touch\", Affinity.Intrinsic);\n  }\n\n  @ThemeConstraintAnimator({type: Length, value: Length.px(60)})\n  readonly collapsedWidth!: ThemeConstraintAnimator<this, Length, AnyLength>;\n\n  @ThemeConstraintAnimator({type: Length, value: Length.px(200)})\n  readonly expandedWidth!: ThemeConstraintAnimator<this, Length, AnyLength>;\n\n  @ConstraintProperty<DrawerView, Length | null, AnyLength | null>({\n    type: Length,\n    value: null,\n    toNumber(value: Length | null): number {\n      return value !== null ? value.pxValue() : 0;\n    },\n  })\n  readonly effectiveWidth!: ConstraintProperty<this, Length | null, AnyLength | null>;\n\n  @ConstraintProperty<DrawerView, Length | null, AnyLength | null>({\n    type: Length,\n    value: null,\n    toNumber(value: Length | null): number {\n      return value !== null ? value.pxValue() : 0;\n    },\n  })\n  readonly effectiveHeight!: ConstraintProperty<this, Length | null, AnyLength | null>;\n\n  isHorizontal(): boolean {\n    return this.placement.value === \"top\" || this.placement.value === \"bottom\";\n  }\n\n  isVertical(): boolean {\n    return this.placement.value === \"left\" || this.placement.value === \"right\";\n  }\n\n  protected willSetPlacement(newPlacement: DrawerPlacement, oldPlacement: DrawerPlacement): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewWillSetPlacement !== void 0) {\n        observer.viewWillSetPlacement(newPlacement, oldPlacement, this);\n      }\n    }\n  }\n\n  protected onSetPlacement(newPlacement: DrawerPlacement, oldPlacement: DrawerPlacement): void {\n    // hook\n  }\n\n  protected didSetPlacement(newPlacement: DrawerPlacement, oldPlacement: DrawerPlacement): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewDidSetPlacement !== void 0) {\n        observer.viewDidSetPlacement(newPlacement, oldPlacement, this);\n      }\n    }\n  }\n\n  @Property<DrawerView, DrawerPlacement>({\n    type: String,\n    value: \"left\",\n    updateFlags: View.NeedsResize | View.NeedsLayout,\n    willSetValue(newPlacement: DrawerPlacement, oldPlacement: DrawerPlacement): void {\n      this.owner.willSetPlacement(newPlacement, oldPlacement);\n    },\n    didSetValue(newPlacement: DrawerPlacement, oldPlacement: DrawerPlacement): void {\n      this.owner.onSetPlacement(newPlacement, oldPlacement);\n      this.owner.didSetPlacement(newPlacement, oldPlacement);\n    },\n  })\n  readonly placement!: Property<this, DrawerPlacement>;\n\n  protected willPresent(): void {\n    const observers = this.observers!;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewWillPresent !== void 0) {\n        observer.viewWillPresent(this);\n      }\n    }\n  }\n\n  protected didPresent(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewDidPresent !== void 0) {\n        observer.viewDidPresent(this);\n      }\n    }\n  }\n\n  protected willDismiss(): void {\n    const modalService = this.modalProvider.service;\n    if (modalService !== void 0 && modalService !== null) {\n      modalService.dismissModal(this);\n    }\n\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewWillDismiss !== void 0) {\n        observer.viewWillDismiss(this);\n      }\n    }\n  }\n\n  protected didDismiss(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewDidDismiss !== void 0) {\n        observer.viewDidDismiss(this);\n      }\n    }\n  }\n\n  @ThemeAnimator<DrawerView, Presence, AnyPresence>({\n    type: Presence,\n    value: Presence.presented(),\n    updateFlags: View.NeedsLayout,\n    willPresent(): void {\n      this.owner.willPresent();\n    },\n    didPresent(): void {\n      this.owner.didPresent();\n    },\n    willDismiss(): void {\n      this.owner.willDismiss();\n    },\n    didDismiss(): void {\n      this.owner.didDismiss();\n    },\n  })\n  readonly slide!: PresenceThemeAnimator<this, Presence, AnyPresence>;\n\n  protected willExpand(): void {\n    const modalService = this.modalProvider.service;\n    if (modalService !== void 0 && modalService !== null) {\n      modalService.dismissModal(this);\n    }\n\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewWillExpand !== void 0) {\n        observer.viewWillExpand(this);\n      }\n    }\n  }\n\n  protected didExpand(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewDidExpand !== void 0) {\n        observer.viewDidExpand(this);\n      }\n    }\n  }\n\n  protected willCollapse(): void {\n    const modalService = this.modalProvider.service;\n    if (modalService !== void 0 && modalService !== null) {\n      modalService.dismissModal(this);\n    }\n\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewWillCollapse !== void 0) {\n        observer.viewWillCollapse(this);\n      }\n    }\n  }\n\n  protected didCollapse(): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewDidCollapse !== void 0) {\n        observer.viewDidCollapse(this);\n      }\n    }\n  }\n\n  @ThemeAnimator<DrawerView, Expansion, AnyExpansion>({\n    type: Expansion,\n    value: Expansion.expanded(),\n    updateFlags: View.NeedsResize | View.NeedsLayout,\n    willExpand(): void {\n      this.owner.willExpand();\n    },\n    didExpand(): void {\n      this.owner.didExpand();\n    },\n    willCollapse(): void {\n      this.owner.willCollapse();\n    },\n    didCollapse(): void {\n      this.owner.didCollapse();\n    },\n  })\n  readonly stretch!: ExpansionThemeAnimator<this, Expansion, AnyExpansion>;\n\n  @Property({type: Object, inherits: true, value: null})\n  readonly edgeInsets!: Property<this, ViewportInsets | null>;\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.display.setState(!this.slide.dismissed ? \"flex\" : \"none\", Affinity.Intrinsic);\n    this.layoutDrawer(viewContext);\n\n    if (viewContext.viewportIdiom === \"mobile\") {\n      this.boxShadow.setState(this.getLookOr(Look.shadow, Mood.floating, null), Affinity.Intrinsic);\n    } else {\n      this.boxShadow.setState(this.getLookOr(Look.shadow, null), Affinity.Intrinsic);\n    }\n  }\n\n  protected layoutDrawer(viewContext: ViewContextType<this>): void {\n    const placement = this.placement.value;\n    if (placement === \"top\") {\n      this.layoutDrawerTop(viewContext);\n    } else if (placement === \"right\") {\n      this.layoutDrawerRight(viewContext);\n    } else if (placement === \"bottom\") {\n      this.layoutDrawerBottom(viewContext);\n    } else if (placement === \"left\") {\n      this.layoutDrawerLeft(viewContext);\n    }\n  }\n\n  protected layoutDrawerTop(viewContext: ViewContextType<this>): void {\n    const slidePhase = this.slide.getPhase();\n\n    this.addClass(\"drawer-top\")\n        .removeClass(\"drawer-right\")\n        .removeClass(\"drawer-bottom\")\n        .removeClass(\"drawer-left\");\n\n    this.position.setState(\"fixed\", Affinity.Intrinsic);\n    this.width.setState(null, Affinity.Intrinsic);\n    this.height.setState(null, Affinity.Intrinsic);\n    this.left.setState(Length.zero(), Affinity.Intrinsic);\n    this.right.setState(Length.zero(), Affinity.Intrinsic);\n    this.bottom.setState(null, Affinity.Intrinsic);\n\n    let height: Length | null = this.height.value;\n    if (height === null) {\n      height = Length.px(this.node.offsetHeight);\n    }\n    this.top.setState(height.times(slidePhase - 1), Affinity.Intrinsic);\n\n    this.effectiveWidth.setValue(this.width.value);\n    this.effectiveHeight.setValue(height.times(slidePhase), Affinity.Intrinsic);\n\n    let edgeInsets = this.edgeInsets.superValue;\n    if (edgeInsets === void 0 || edgeInsets === null) {\n      edgeInsets = viewContext.viewport.safeArea;\n    }\n    this.edgeInsets.setValue({\n      insetTop: 0,\n      insetRight: edgeInsets.insetRight,\n      insetBottom: 0,\n      insetLeft: edgeInsets.insetLeft,\n    }, Affinity.Intrinsic);\n\n    if (this.stretch.collapsed) {\n      this.expand();\n    }\n  }\n\n  protected layoutDrawerRight(viewContext: ViewContextType<this>): void {\n    const stretchPhase = this.stretch.getPhase();\n    const slidePhase = this.slide.getPhase();\n\n    this.removeClass(\"drawer-top\")\n        .addClass(\"drawer-right\")\n        .removeClass(\"drawer-bottom\")\n        .removeClass(\"drawer-left\");\n\n    this.position.setState(\"fixed\", Affinity.Intrinsic);\n    this.height.setState(null, Affinity.Intrinsic);\n    this.top.setState(Length.zero(), Affinity.Intrinsic);\n    this.bottom.setState(Length.zero(), Affinity.Intrinsic);\n    this.left.setState(null, Affinity.Intrinsic);\n\n    let width: Length | null;\n    if (this.width.hasAffinity(Affinity.Intrinsic)) {\n      const collapsedWidth = this.collapsedWidth.getValue();\n      const expandedWidth = this.expandedWidth.getValue();\n      width = collapsedWidth.times(1 - stretchPhase).plus(expandedWidth.times(stretchPhase));\n    } else {\n      width = this.width.value;\n      if (width === null) {\n        width = Length.px(this.node.offsetWidth);\n      }\n    }\n    this.width.setState(width, Affinity.Intrinsic);\n    this.right.setState(width.times(slidePhase - 1), Affinity.Intrinsic);\n\n    this.effectiveWidth.setValue(width.times(slidePhase), Affinity.Intrinsic);\n    this.effectiveHeight.setValue(this.height.value, Affinity.Intrinsic);\n\n    let edgeInsets = this.edgeInsets.superValue;\n    if ((edgeInsets === void 0 || edgeInsets === null) || edgeInsets === null) {\n      edgeInsets = viewContext.viewport.safeArea;\n    }\n    this.paddingTop.setState(Length.px(edgeInsets.insetTop), Affinity.Intrinsic);\n    this.paddingBottom.setState(Length.px(edgeInsets.insetBottom), Affinity.Intrinsic);\n    this.edgeInsets.setValue({\n      insetTop: 0,\n      insetRight: edgeInsets.insetRight,\n      insetBottom: 0,\n      insetLeft: 0,\n    }, Affinity.Intrinsic);\n  }\n\n  protected layoutDrawerBottom(viewContext: ViewContextType<this>): void {\n    const slidePhase = this.slide.getPhase();\n\n    this.removeClass(\"drawer-top\")\n        .removeClass(\"drawer-right\")\n        .addClass(\"drawer-bottom\")\n        .removeClass(\"drawer-left\");\n\n    this.position.setState(\"fixed\", Affinity.Intrinsic);\n    this.width.setState(null, Affinity.Intrinsic);\n    this.height.setState(null, Affinity.Intrinsic);\n    this.left.setState(Length.zero(), Affinity.Intrinsic);\n    this.right.setState(Length.zero(), Affinity.Intrinsic);\n    this.top.setState(null, Affinity.Intrinsic);\n\n    let height: Length | null = this.height.value;\n    if (height === null) {\n      height = Length.px(this.node.offsetHeight);\n    }\n    this.bottom.setState(height.times(slidePhase - 1), Affinity.Intrinsic);\n\n    this.effectiveWidth.setValue(this.width.value, Affinity.Intrinsic);\n    this.effectiveHeight.setValue(height.times(slidePhase), Affinity.Intrinsic);\n\n    let edgeInsets = this.edgeInsets.superValue;\n    if ((edgeInsets === void 0 || edgeInsets === null) || edgeInsets === null) {\n      edgeInsets = viewContext.viewport.safeArea;\n    }\n    this.edgeInsets.setValue({\n      insetTop: 0,\n      insetRight: edgeInsets.insetRight,\n      insetBottom: 0,\n      insetLeft: edgeInsets.insetLeft,\n    }, Affinity.Intrinsic);\n\n    if (this.stretch.collapsed) {\n      this.expand();\n    }\n  }\n\n  protected layoutDrawerLeft(viewContext: ViewContextType<this>): void {\n    const stretchPhase = this.stretch.getPhase();\n    const slidePhase = this.slide.getPhase();\n\n    this.removeClass(\"drawer-top\")\n        .removeClass(\"drawer-right\")\n        .removeClass(\"drawer-bottom\")\n        .addClass(\"drawer-left\");\n\n    this.position.setState(\"fixed\", Affinity.Intrinsic);\n    this.height.setState(null, Affinity.Intrinsic);\n    this.top.setState(Length.zero(), Affinity.Intrinsic);\n    this.bottom.setState(Length.zero(), Affinity.Intrinsic);\n    this.right.setState(null, Affinity.Intrinsic);\n\n    let width: Length | null;\n    if (this.width.hasAffinity(Affinity.Intrinsic)) {\n      const collapsedWidth = this.collapsedWidth.getValue();\n      const expandedWidth = this.expandedWidth.getValue();\n      width = collapsedWidth.times(1 - stretchPhase).plus(expandedWidth.times(stretchPhase));\n    } else {\n      width = this.width.value;\n      if (width === null) {\n        width = Length.px(this.node.offsetWidth);\n      }\n    }\n    this.width.setState(width, Affinity.Intrinsic);\n    this.left.setState(width.times(slidePhase - 1), Affinity.Intrinsic);\n\n    this.effectiveWidth.setValue(width.times(slidePhase), Affinity.Intrinsic);\n    this.effectiveHeight.setValue(this.height.value, Affinity.Intrinsic);\n\n    let edgeInsets = this.edgeInsets.superValue;\n    if ((edgeInsets === void 0 || edgeInsets === null) || edgeInsets === null) {\n      edgeInsets = viewContext.viewport.safeArea;\n    }\n    this.paddingTop.setState(Length.px(edgeInsets.insetTop), Affinity.Intrinsic);\n    this.paddingBottom.setState(Length.px(edgeInsets.insetBottom), Affinity.Intrinsic);\n    this.edgeInsets.setValue({\n      insetTop: 0,\n      insetRight: 0,\n      insetBottom: 0,\n      insetLeft: edgeInsets.insetLeft,\n    }, Affinity.Intrinsic);\n  }\n\n  get modalView(): View | null {\n    return this;\n  }\n\n  get modalState(): ModalState {\n    return this.slide.modalState as ModalState;\n  }\n\n  readonly modality: boolean | number;\n\n  showModal(options: ModalOptions, timing?: AnyTiming | boolean): void {\n    if (options.modal !== void 0) {\n      (this as Mutable<this>).modality = options.modal;\n    }\n    this.present(timing);\n  }\n\n  hideModal(timing?: AnyTiming | boolean): void {\n    this.dismiss(timing);\n  }\n\n  present(timing?: AnyTiming | boolean): void {\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n    this.slide.present(timing);\n  }\n\n  dismiss(timing?: AnyTiming | boolean): void {\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n    this.slide.dismiss(timing);\n  }\n\n  expand(timing?: AnyTiming | boolean): void {\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n    this.stretch.expand(timing);\n  }\n\n  collapse(timing?: AnyTiming | boolean): void {\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n    this.stretch.collapse(timing);\n  }\n\n  toggle(timing?: AnyTiming | boolean): void {\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n    if (this.viewportIdiom === \"mobile\" || this.isHorizontal()) {\n      if (this.slide.presented) {\n        this.slide.dismiss(timing);\n      } else {\n        this.stretch.expand(timing);\n        this.slide.present(timing);\n        const modalService = this.modalProvider.service;\n        if (modalService !== void 0 && modalService !== null) {\n          modalService.presentModal(this, {modal: true});\n        }\n      }\n    } else {\n      this.stretch.toggle(timing);\n      this.slide.present(timing);\n    }\n  }\n\n  override init(init: DrawerViewInit): void {\n    super.init(init);\n    if (init.placement !== void 0) {\n      this.placement(init.placement);\n    }\n    if (init.collapsedWidth !== void 0) {\n      this.collapsedWidth(init.collapsedWidth);\n    }\n    if (init.expandedWidth !== void 0) {\n      this.expandedWidth(init.expandedWidth);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, Mutable} from \"@swim/util\";\nimport {Graphics, VectorIcon} from \"@swim/graphics\";\nimport {IconButton} from \"@swim/button\";\nimport type {DrawerView} from \"./DrawerView\";\n\n/** @public */\nexport class DrawerButton extends IconButton {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.drawerView = null;\n    this.initIcon();\n  }\n\n  protected override initButton(): void {\n    super.initButton();\n    this.addClass(\"drawer-button\");\n  }\n\n  protected initIcon(): void {\n    this.pushIcon(DrawerButton.hamburgerIcon);\n  }\n\n  readonly drawerView: DrawerView | null;\n\n  setDrawerView(drawerView: DrawerView | null): void {\n    (this as Mutable<this>).drawerView = drawerView;\n  }\n\n  protected override onClick(event: MouseEvent): void {\n    super.onClick(event);\n    const drawerView = this.drawerView;\n    if (drawerView !== null) {\n      drawerView.toggle();\n    }\n  }\n\n  @Lazy\n  static get hamburgerIcon(): Graphics {\n    return VectorIcon.create(24, 24, \"M21,17L21,19L3,19L3,17L21,17ZM21,11L21,13L3,13L3,11L21,11ZM3,5L3,7L21,7L21,5L3,5Z\");\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals, Equivalent} from \"@swim/util\"\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport {AnyLength, Length} from \"@swim/math\";\n\n/** @public */\nexport type AnyDeckPost = DeckPost | DeckPostInit;\n\n/** @public */\nexport interface DeckPostInit {\n  key?: string;\n  grow?: number;\n  shrink?: number;\n  basis?: AnyLength;\n  width?: AnyLength | null;\n  left?: AnyLength | null;\n  right?: AnyLength | null;\n}\n\n/** @public */\nexport class DeckPost implements Equals, Equivalent, Debug {\n  constructor(key: string, grow: number, shrink: number, basis: Length,\n              width: Length | null, left: Length | null, right: Length | null) {\n    this.key = key;\n    this.grow = grow;\n    this.shrink = shrink;\n    this.basis = basis;\n    this.width = width;\n    this.left = left;\n    this.right = right;\n  }\n\n  readonly key: string;\n\n  readonly grow: number;\n\n  withGrow(grow: number): DeckPost {\n    return this.copy(this.key, grow, this.shrink, this.basis,\n                     this.width, this.left, this.right);\n  }\n\n  readonly shrink: number;\n\n  withShrink(shrink: number): DeckPost {\n    return this.copy(this.key, this.grow, shrink, this.basis,\n                     this.width, this.left, this.right);\n  }\n\n  readonly basis: Length;\n\n  withBasis(basis: AnyLength): DeckPost {\n    basis = Length.fromAny(basis);\n    return this.copy(this.key, this.grow, this.shrink, basis,\n                     this.width, this.left, this.right);\n  }\n\n  readonly width: Length | null;\n\n  readonly left: Length | null;\n\n  readonly right: Length | null;\n\n  resized(width: AnyLength | null, left: AnyLength | null, right: AnyLength | null): DeckPost {\n    if (width !== null) {\n      width = Length.fromAny(width);\n    }\n    if (left !== null) {\n      left = Length.fromAny(left);\n    }\n    if (right !== null) {\n      right = Length.fromAny(right);\n    }\n    return this.copy(this.key, this.grow, this.shrink, this.basis, width, left, right);\n  }\n\n  protected copy(key: string, grow: number, shrink: number, basis: Length,\n                 width: Length | null, left: Length | null, right: Length | null): DeckPost {\n    return new DeckPost(key, grow, shrink, basis, width, left, right);\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof DeckPost) {\n      return this.key === that.key && this.grow === that.grow && this.shrink === that.shrink\n          && this.basis.equivalentTo(that.basis, epsilon);\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof DeckPost) {\n      return this.key === that.key && this.grow === that.grow && this.shrink === that.shrink\n          && this.basis.equals(that.basis) && Equals(this.width, that.width)\n          && Equals(this.left, that.left) && Equals(this.right, that.right);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"DeckPost\").write(46/*'.'*/).write(\"create\").write(40/*'('*/)\n                   .debug(this.key).write(\", \").debug(this.grow).write(\", \")\n                   .debug(this.shrink).write(\", \").debug(this.basis).write(41/*')'*/);\n    if (this.width !== null || this.left !== null || this.right !== null) {\n      output = output.write(46/*'.'*/).write(\"resized\").write(40/*'('*/)\n                     .debug(this.width).write(\", \").debug(this.left).write(\", \")\n                     .debug(this.right).write(\", \").write(41/*')'*/);\n    }\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  static create(key: string, grow?: number, shrink?: number, basis?: AnyLength): DeckPost {\n    if (grow === void 0) {\n      grow = 0;\n    }\n    if (shrink === void 0) {\n      shrink = 1;\n    }\n    if (basis !== void 0) {\n      basis = Length.fromAny(basis);\n    } else {\n      basis = Length.zero();\n    }\n    return new DeckPost(key, grow, shrink, basis, null, null, null);\n  }\n\n  static fromAny(value: AnyDeckPost): DeckPost {\n    if (value === void 0 || value === null || value instanceof DeckPost) {\n      return value;\n    } else if (typeof value === \"object\" && value !== null) {\n      return DeckPost.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromInit(init: DeckPostInit): DeckPost {\n    let key = init.key;\n    if (key === void 0) {\n      key = \"\";\n    }\n    let grow = init.grow;\n    if (grow === void 0) {\n      grow = 0;\n    }\n    let shrink = init.shrink;\n    if (shrink === void 0) {\n      shrink = 1;\n    }\n    let basis = init.basis;\n    if (basis !== void 0) {\n      basis = Length.fromAny(basis);\n    } else {\n      basis = Length.zero();\n    }\n    let width = init.width;\n    if (width !== void 0 && width !== null) {\n      width = Length.fromAny(width);\n    } else {\n      width = null;\n    }\n    let left = init.left;\n    if (left !== void 0 && left !== null) {\n      left = Length.fromAny(left);\n    } else {\n      left = null;\n    }\n    let right = init.right;\n    if (right !== void 0 && right !== null) {\n      right = Length.fromAny(right);\n    } else {\n      right = null;\n    }\n    return new DeckPost(key, grow, shrink, basis, width, left, right);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Equals, Equivalent, Arrays} from \"@swim/util\"\nimport {Debug, Format, Output} from \"@swim/codec\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport {AnyDeckPost, DeckPost} from \"./DeckPost\";\n\n/** @public */\nexport type AnyDeckRail = DeckRail | DeckRailInit;\n\n/** @public */\nexport interface DeckRailInit {\n  width?: AnyLength | null;\n  left?: AnyLength | null;\n  right?: AnyLength | null;\n  spacing?: AnyLength | null;\n  posts?: AnyDeckPost[];\n}\n\n/** @public */\nexport class DeckRail implements Equals, Equivalent, Debug {\n  constructor(width: Length | null, left: Length | null, right: Length | null,\n              spacing: Length | null, posts: ReadonlyArray<DeckPost>) {\n    this.width = width;\n    this.left = left;\n    this.right = right;\n    this.spacing = spacing;\n    this.posts = posts;\n  }\n\n  readonly width: Length | null;\n\n  readonly left: Length | null;\n\n  readonly right: Length | null;\n\n  readonly spacing: Length | null;\n\n  readonly posts: ReadonlyArray<DeckPost>;\n\n  lookupPost(key: string): number | undefined {\n    const posts = this.posts;\n    for (let i = 0, n = posts.length; i < n; i += 1) {\n      const post = posts[i]!;\n      if (key === post.key) {\n        return i;\n      }\n    }\n    return void 0;\n  }\n\n  getPost(key: string | number): DeckPost | null {\n    const posts = this.posts;\n    if (typeof key === \"number\") {\n      const post = posts[key];\n      if (post !== void 0) {\n        return post;\n      }\n    } else if (typeof key === \"string\") {\n      for (let i = 0, n = posts.length; i < n; i += 1) {\n        const post = posts[i]!;\n        if (key === post.key) {\n          return post;\n        }\n      }\n    }\n    return null;\n  }\n\n  resized(width: AnyLength, left?: AnyLength | null, right?: AnyLength | null,\n          spacing?: AnyLength | null): DeckRail {\n    width = Length.fromAny(width);\n    if (left === void 0) {\n      left = this.left;\n    } else if (left !== null) {\n      left = Length.fromAny(left);\n    }\n    if (right === void 0) {\n      right = this.right;\n    } else if (right !== null) {\n      right = Length.fromAny(right);\n    }\n    if (spacing === void 0) {\n      spacing = this.spacing;\n    } else if (spacing !== null) {\n      spacing = Length.fromAny(spacing);\n    }\n    if (Equals(this.width, width) && Equals(this.left, left) &&\n        Equals(this.right, right) && Equals(this.spacing, spacing)) {\n      return this;\n    } else {\n      const oldPosts = this.posts;\n      const postCount = oldPosts.length;\n      const newPosts = new Array<DeckPost>(postCount);\n      const railWidth = width.pxValue();\n      const railLeft = left !== null ? left.pxValue(railWidth) : 0;\n      const railRight = right !== null ? right.pxValue(railWidth) : 0;\n      const postSpacing = spacing !== null ? spacing.pxValue(railWidth) : 0;\n\n      let grow = 0;\n      let shrink = 0;\n      let basis = railLeft + railRight;\n      let x = railLeft;\n      for (let i = 0; i < postCount; i += 1) {\n        if (i !== 0) {\n          basis += postSpacing;\n          x += postSpacing;\n        }\n        const post = oldPosts[i]!;\n        const postWidth = post.basis.pxValue(railWidth);\n        newPosts[i] = post.resized(postWidth, x, railWidth - postWidth - x);\n        grow += post.grow;\n        shrink += post.shrink;\n        basis += postWidth;\n        x += postWidth;\n      }\n\n      if (basis < railWidth && grow > 0) {\n        const delta = railWidth - basis;\n        let x = railLeft;\n        let j = 0;\n        for (let i = 0; i < postCount; i += 1) {\n          const post = newPosts[i]!;\n          if (j !== 0) {\n            basis += postSpacing;\n            x += postSpacing;\n          }\n          const postBasis = post.basis.pxValue(railWidth);\n          const postWidth = postBasis + delta * (post.grow / grow);\n          newPosts[i] = post.resized(postWidth, x, railWidth - postWidth - x);\n          x += postWidth;\n          j += 1;\n        }\n      } else if (basis > railWidth && shrink > 0) {\n        const delta = basis - railWidth;\n        let x = railLeft;\n        let j = 0;\n        for (let i = 0; i < postCount; i += 1) {\n          const post = newPosts[i]!;\n          if (j !== 0) {\n            basis += postSpacing;\n            x += postSpacing;\n          }\n          const postBasis = post.basis.pxValue(railWidth);\n          const postWidth = postBasis - delta * (post.shrink / shrink);\n          newPosts[i] = post.resized(postWidth, x, railWidth - postWidth - x);\n          x += postWidth;\n          j += 1;\n        }\n      }\n\n      return new DeckRail(width, left, right, spacing, newPosts);\n    }\n  }\n\n  equivalentTo(that: unknown, epsilon?: number): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof DeckRail) {\n      const thesePosts = this.posts;\n      const thosePosts = that.posts;\n      const n = thesePosts.length;\n      if (n === thosePosts.length) {\n        for (let i = 0; i < n; i += 1) {\n          if (!thesePosts[i]!.equivalentTo(thosePosts[i]!, epsilon)) {\n            return false;\n          }\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof DeckRail) {\n      return Equals(this.width, that.width) && Equals(this.left, that.left)\n          && Equals(this.right, that.right) && Equals(this.spacing, that.spacing)\n          && Arrays.equal(this.posts, that.posts);\n    }\n    return false;\n  }\n\n  debug<T>(output: Output<T>): Output<T> {\n    output = output.write(\"DeckRail\").write(46/*'.'*/).write(\"of\").write(40/*'('*/);\n    for (let i = 0, n = this.posts.length; i < n; i += 1) {\n      if (i !== 0) {\n        output = output.write(\", \");\n      }\n      output = output.debug(this.posts[i]!);\n    }\n    output = output.write(41/*')'*/);\n    if (this.width !== null || this.left !== null || this.right !== null || this.spacing !== null) {\n      output = output.write(46/*'.'*/).write(\"resized\").write(40/*'('*/)\n                     .debug(this.width).write(\", \").debug(this.left).write(\", \")\n                     .debug(this.right).write(\", \").debug(this.spacing).write(41/*')'*/);\n    }\n    return output;\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  static of(...deckPosts: AnyDeckPost[]): DeckRail {\n    const n = deckPosts.length;\n    const posts = new Array<DeckPost>(n);\n    for (let i = 0; i < n; i += 1) {\n      posts[i] = DeckPost.fromAny(deckPosts[i]!);\n    }\n    return new DeckRail(null, null, null, null, posts);\n  }\n\n  static create(posts: ReadonlyArray<DeckPost>): DeckRail {\n    return new DeckRail(null, null, null, null, posts);\n  }\n\n  static fromAny(value: AnyDeckRail): DeckRail {\n    if (value === void 0 || value === null || value instanceof DeckRail) {\n      return value;\n    } else if (typeof value === \"object\" && value !== null) {\n      return DeckRail.fromInit(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromInit(init: DeckRailInit): DeckRail {\n    let width = init.width;\n    if (width !== void 0 && width !== null) {\n      width = Length.fromAny(width);\n    } else {\n      width = null;\n    }\n    let left = init.left;\n    if (left !== void 0 && left !== null) {\n      left = Length.fromAny(left);\n    } else {\n      left = null;\n    }\n    let right = init.right;\n    if (right !== void 0 && right !== null) {\n      right = Length.fromAny(right);\n    } else {\n      right = null;\n    }\n    let spacing = init.spacing;\n    if (spacing !== void 0 && spacing !== null) {\n      spacing = Length.fromAny(spacing);\n    } else {\n      spacing = null;\n    }\n    let posts: DeckPost[];\n    if (init.posts !== void 0) {\n      const n = init.posts.length;\n      posts = new Array<DeckPost>(n);\n      for (let i = 0; i < n; i += 1) {\n        posts[i] = DeckPost.fromAny(init.posts[i]!);\n      }\n    } else {\n      posts = [];\n    }\n    return new DeckRail(width, left, right, spacing, posts);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Color} from \"@swim/style\";\nimport {Property} from \"@swim/component\";\nimport type {Look, ThemeAnimator} from \"@swim/theme\";\nimport {HtmlView} from \"@swim/dom\";\nimport {AnyDeckPost, DeckPost} from \"./DeckPost\";\n\n/** @public */\nexport abstract class DeckSlot extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initSlot();\n  }\n\n  protected initSlot(): void {\n    this.addClass(\"deck-slot\");\n  }\n\n  @Property({type: DeckPost, value: null, inherits: true})\n  readonly post!: Property<this, DeckPost | null, AnyDeckPost | null>;\n\n  @Property({type: DeckPost, value: null})\n  readonly nextPost!: Property<this, DeckPost | null, AnyDeckPost | null>;\n\n  @Property({type: DeckPost, value: null})\n  readonly prevPost!: Property<this, DeckPost | null, AnyDeckPost | null>;\n\n  abstract readonly deckPhase: ThemeAnimator<this, number | undefined>;\n\n  abstract readonly slotAlign: ThemeAnimator<this, number>;\n\n  abstract readonly colorLook: Look<Color>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, FastenerOwner} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport type {Color} from \"@swim/style\";\nimport {Look, Mood, MoodVector, ThemeMatrix, ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, ViewContext, View, ViewRefFactory, ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport {DeckSlot} from \"./DeckSlot\";\nimport type {DeckSliderObserver} from \"./DeckSliderObserver\";\n\n/** @public */\nexport class DeckSlider extends DeckSlot {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.itemCount = 0;\n    this.item = null;\n    this.initSlider();\n  }\n\n  initSlider(): void {\n    this.addClass(\"deck-slider\");\n    this.position.setState(\"relative\", Affinity.Intrinsic);\n  }\n\n  override readonly observerType?: Class<DeckSliderObserver>;\n\n  @ThemeAnimator({type: Number, inherits: true, updateFlags: View.NeedsLayout})\n  override readonly deckPhase!: ThemeAnimator<this, number | undefined>;\n\n  @ThemeAnimator({type: Number, value: 0.5})\n  override readonly slotAlign!: ThemeAnimator<this, number>;\n\n  override get colorLook(): Look<Color> {\n    return Look.color;\n  }\n\n  /** @internal */\n  itemCount: number;\n\n  /** @internal */\n  item: DeckSliderItem<this, HtmlView> | null;\n\n  protected createItem(value: string): HtmlView {\n    const itemView = HtmlView.fromTag(\"span\");\n    itemView.display.setState(\"flex\", Affinity.Intrinsic);\n    itemView.alignItems.setState(\"center\", Affinity.Intrinsic);\n    itemView.whiteSpace.setState(\"nowrap\", Affinity.Intrinsic);\n    itemView.text(value);\n    return itemView;\n  }\n\n  pushItem(newItemView: HtmlView | string, timing?: AnyTiming | boolean): void {\n    if (typeof newItemView === \"string\") {\n      newItemView = this.createItem(newItemView);\n    }\n\n    const oldItemCount = this.itemCount;\n    const newItemCount = oldItemCount + 1;\n    this.itemCount = newItemCount;\n\n    const oldItemKey = \"item\" + oldItemCount;\n    const oldItemRef = this.getFastener(oldItemKey, ViewRef) as DeckSliderItem<this, HtmlView> | null;\n    const oldItemView = oldItemRef !== null ? oldItemRef.view : null;\n\n    const newItemKey = \"item\" + newItemCount;\n    const newItemRef = DeckSliderItemRef.create(this) as DeckSliderItem<this, HtmlView>;\n    Object.defineProperty(newItemRef, \"name\", {\n      value: newItemKey,\n      configurable: true,\n    })\n    newItemRef.itemIndex = newItemCount;\n    this.willPushItem(newItemView, oldItemView);\n    this.item = newItemRef;\n\n    this.setFastener(newItemKey, newItemRef);\n    newItemRef.setView(newItemView);\n    newItemRef.insertView();\n\n    if (timing === void 0 && oldItemCount === 0) {\n      timing = false;\n    } else if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, Mood.navigating, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n\n    //if (this.deckPhase.superFastener === null) {\n    //  this.deckPhase.setState(newItemCount, timing);\n    //}\n    if (timing === false) {\n      this.didPushItem(newItemView, oldItemView);\n    }\n  }\n\n  protected willPushItem(newItemView: HtmlView, oldItemView: HtmlView | null): void {\n    this.forEachObserver(function (observer: DeckSliderObserver): void {\n      if (observer.deckSliderWillPushItem !== void 0) {\n        observer.deckSliderWillPushItem(newItemView, oldItemView, this);\n      }\n    });\n  }\n\n  protected didPushItem(newItemView: HtmlView, oldItemView: HtmlView | null): void {\n    if (oldItemView !== null && oldItemView.parent === this) {\n      oldItemView.remove();\n    }\n    this.forEachObserver(function (observer: DeckSliderObserver): void {\n      if (observer.deckSliderDidPushItem !== void 0) {\n        observer.deckSliderDidPushItem(newItemView, oldItemView, this);\n      }\n    });\n  }\n\n  popItem(timing?: AnyTiming | boolean): HtmlView | null {\n    const oldItemCount = this.itemCount;\n    const newItemCount = oldItemCount - 1;\n    this.itemCount = newItemCount;\n\n    const oldItemKey = \"item\" + oldItemCount;\n    const oldItemRef = this.getFastener(oldItemKey, ViewRef) as DeckSliderItem<this, HtmlView> | null;\n    const oldItemView = oldItemRef !== null ? oldItemRef.view : null;\n\n    if (oldItemView !== null) {\n      const newItemKey = \"item\" + newItemCount;\n      const newItemRef = this.getFastener(newItemKey, ViewRef) as DeckSliderItem<this, HtmlView> | null;\n      const newItemView = newItemRef !== null ? newItemRef.view : null;\n      this.willPopItem(newItemView, oldItemView);\n      this.item = newItemRef;\n      if (newItemRef !== null) {\n        newItemRef.insertView();\n      }\n\n      if (timing === void 0 || timing === true) {\n        timing = this.getLookOr(Look.timing, Mood.navigating, false);\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n\n      //if (this.deckPhase.superFastener === null) {\n      //  this.deckPhase.setState(newItemCount, timing);\n      //}\n      if (timing === false) {\n        this.didPopItem(newItemView, oldItemView);\n      }\n    }\n\n    return oldItemView;\n  }\n\n  protected willPopItem(newItemView: HtmlView | null, oldItemView: HtmlView): void {\n    this.forEachObserver(function (observer: DeckSliderObserver): void {\n      if (observer.deckSliderWillPopItem !== void 0) {\n        observer.deckSliderWillPopItem(newItemView, oldItemView, this);\n      }\n    });\n  }\n\n  protected didPopItem(newItemView: HtmlView | null, oldItemView: HtmlView): void {\n    const oldItemKey = oldItemView.key;\n    oldItemView.remove();\n    if (oldItemKey !== void 0) {\n      const oldItemRef = this.getFastener(oldItemKey, ViewRef) as DeckSliderItem<this, HtmlView> | null;\n      if (oldItemRef !== null && oldItemRef.itemIndex > this.itemCount) {\n        this.setFastener(oldItemKey, null);\n      }\n    }\n    this.forEachObserver(function (observer: DeckSliderObserver): void {\n      if (observer.deckSliderDidPopItem !== void 0) {\n        observer.deckSliderDidPopItem(newItemView, oldItemView, this);\n      }\n    });\n  }\n\n  protected override didLayout(viewContext: ViewContextType<this>): void {\n    if (!this.deckPhase.tweening) {\n      const deckPhase = this.deckPhase.value;\n      if (deckPhase !== void 0) {\n        const nextItemIndex = Math.round(deckPhase + 1);\n        const nextItemKey = \"item\" + nextItemIndex;\n        const nextItemRef = this.getFastener(nextItemKey, ViewRef) as DeckSliderItem<this, HtmlView> | null;\n        const nextItemView = nextItemRef !== null ? nextItemRef.view : null;\n        if (nextItemView !== null) {\n          this.didPopItem(this.item !== null ? this.item.view : null, nextItemView);\n        } else if (this.item !== null && this.item.view !== null && Math.round(deckPhase) > 0) {\n          const prevItemIndex = Math.round(deckPhase - 1);\n          const prevItemKey = \"item\" + prevItemIndex;\n          const prevItemRef = this.getFastener(prevItemKey, ViewRef) as DeckSliderItem<this, HtmlView> | null;\n          const prevItemView = prevItemRef !== null ? prevItemRef.view : null;\n          this.didPushItem(this.item.view, prevItemView);\n        }\n      }\n    }\n    super.didLayout(viewContext);\n  }\n}\n\n/** @internal */\nexport interface DeckSliderItem<O extends DeckSlider = DeckSlider, V extends HtmlView = HtmlView> extends ViewRef<O, V> {\n  itemIndex: number;\n\n  /** @internal */\n  itemWidth: Length | string | null;\n\n  /** @override */\n  didAttachView(itemView: V): void;\n\n  /** @override */\n  insertChild(parent: View, child: V, target: View | number | null, key: string | undefined): void;\n\n  /** @protected */\n  viewDidApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean, itemView: V): void;\n\n  viewDidLayout(viewContext: ViewContext, itemView: V): void;\n\n  /** @protected */\n  initItem(itemView: V): void;\n\n  /** @protected */\n  layoutItem(itemView: V): void;\n}\n/** @internal */\nexport const DeckSliderItem = (function (_super: typeof ViewRef) {\n  const DeckSliderItem = _super.extend(\"DeckSliderItem\") as ViewRefFactory<DeckSliderItem<any, any>>;\n\n  DeckSliderItem.prototype.didAttachView = function (this: DeckSliderItem, itemView: HtmlView): void {\n    this.initItem(itemView);\n  };\n\n  DeckSliderItem.prototype.insertChild = function (this: DeckSliderItem, parent: View, child: HtmlView, target: View | number | null, key: string | undefined): void {\n    const targetKey = \"item\" + (this.itemIndex + 1);\n    target = parent.getChild(targetKey);\n    parent.insertChild(child, target, key);\n  };\n\n  DeckSliderItem.prototype.viewDidApplyTheme = function (this: DeckSliderItem, theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean, itemView: HtmlView): void {\n    if (itemView.color.hasAffinity(Affinity.Intrinsic)) {\n      itemView.color.setState(theme.getOr(this.owner.colorLook, mood, null), timing, Affinity.Intrinsic);\n    }\n  };\n\n  DeckSliderItem.prototype.viewDidLayout = function (this: DeckSliderItem, viewContext: ViewContext, itemView: HtmlView): void {\n    this.layoutItem(itemView);\n  };\n\n  DeckSliderItem.prototype.initItem = function (this: DeckSliderItem, itemView: HtmlView): void {\n    itemView.position.setState(\"absolute\", Affinity.Intrinsic);\n  };\n\n  DeckSliderItem.prototype.layoutItem = function (this: DeckSliderItem, itemView: HtmlView): void {\n    const itemIndex = this.itemIndex;\n    const slotAlign = this.owner.slotAlign.getValue();\n    let slotWidth: Length | number | null = this.owner.width.state;\n    slotWidth = slotWidth instanceof Length ? slotWidth.pxValue() : this.owner.node.offsetWidth;\n    let slotHeight: Length | number | null = this.owner.height.state;\n    slotHeight = slotHeight instanceof Length ? slotHeight.pxValue() : this.owner.node.offsetHeight;\n    const deckPhase = this.owner.deckPhase.getValueOr(0);\n    const nextIndex = Math.max(this.owner.itemCount, Math.ceil(deckPhase));\n    const prevIndex = nextIndex - 1;\n    const itemPhase = deckPhase - prevIndex;\n\n    let itemWidth: Length | number | null = itemView.width.state;\n    this.itemWidth = itemWidth;\n    if (itemWidth instanceof Length) {\n      itemWidth = itemWidth.pxValue(slotWidth);\n    } else {\n      itemWidth = itemView.node.offsetWidth;\n      // Memoize computed item width while animating\n      // to avoid style recalculation in animation frames.\n      if (this.owner.deckPhase.tweening) {\n        itemView.width.setState(itemWidth, Affinity.Intrinsic);\n      } else {\n        itemView.width.setState(this.itemWidth, Affinity.Intrinsic);\n      }\n    }\n\n    const slotSpace = slotWidth - itemWidth;\n    if (itemIndex < prevIndex || itemIndex === prevIndex && itemPhase === 1) { // under\n      itemView.left.setState(0, Affinity.Intrinsic);\n      itemView.top.setState(0, Affinity.Intrinsic);\n      itemView.height.setState(slotHeight, Affinity.Intrinsic);\n      itemView.opacity.setState(0, Affinity.Intrinsic);\n      itemView.setCulled(true);\n    } else if (itemIndex === prevIndex) { // out\n      itemView.left.setState(slotSpace * slotAlign * (1 - itemPhase), Affinity.Intrinsic);\n      itemView.top.setState(0, Affinity.Intrinsic);\n      itemView.height.setState(slotHeight, Affinity.Intrinsic);\n      itemView.opacity.setState(1 - itemPhase, Affinity.Intrinsic);\n      itemView.setCulled(false);\n    } else if (itemIndex === nextIndex) { // in\n      itemView.left.setState(slotSpace * (1 - itemPhase) + slotSpace * slotAlign * itemPhase, Affinity.Intrinsic);\n      itemView.top.setState(0, Affinity.Intrinsic);\n      itemView.height.setState(slotHeight, Affinity.Intrinsic);\n      itemView.opacity.setState(itemPhase, Affinity.Intrinsic);\n      itemView.setCulled(false);\n    } else { // over\n      itemView.left.setState(slotSpace, Affinity.Intrinsic);\n      itemView.top.setState(0, Affinity.Intrinsic);\n      itemView.height.setState(slotHeight, Affinity.Intrinsic);\n      itemView.opacity.setState(0, Affinity.Intrinsic);\n      itemView.setCulled(true);\n    }\n  };\n\n  DeckSliderItem.construct = function <F extends DeckSliderItem<any, any>>(fastenerClass: {prototype: F}, fastener: F | null, owner: FastenerOwner<F>): F {\n    fastener = _super.construct(fastenerClass, fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).itemIndex = 0;\n    (fastener as Mutable<typeof fastener>).itemWidth = null;\n    return fastener;\n  };\n\n  return DeckSliderItem;\n})(ViewRef);\n/** @internal */\nexport const DeckSliderItemRef = ViewRef.define<DeckSlider, HtmlView>(\"DeckSliderItemRef\", {\n  extends: DeckSliderItem,\n  key: true,\n  type: HtmlView,\n  observes: true,\n});\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, FastenerOwner, Property} from \"@swim/component\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport type {Color} from \"@swim/style\";\nimport {Look, Mood, MoodVector, ThemeMatrix, ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, ViewContext, View, ViewRefFactory, ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport {SvgIconView} from \"@swim/graphics\";\nimport {DeckSlot} from \"./DeckSlot\";\nimport type {DeckButtonObserver} from \"./DeckButtonObserver\";\n\n/** @public */\nexport class DeckButton extends DeckSlot {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.labelCount = 0;\n    this.label = null;\n    this.initButton();\n  }\n\n  protected initButton(): void {\n    this.addClass(\"deck-button\");\n    this.position.setState(\"relative\", Affinity.Intrinsic);\n    this.userSelect.setState(\"none\", Affinity.Intrinsic);\n    this.cursor.setState(\"pointer\", Affinity.Intrinsic);\n  }\n\n  override readonly observerType?: Class<DeckButtonObserver>;\n\n  @Property({type: Length, value: Length.px(12)})\n  readonly iconPadding!: Property<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Number, inherits: true, updateFlags: View.NeedsLayout})\n  readonly deckPhase!: ThemeAnimator<this, number | undefined>;\n\n  @ThemeAnimator({type: Number, value: 0})\n  readonly slotAlign!: ThemeAnimator<this, number>;\n\n  override get colorLook(): Look<Color> {\n    return Look.accentColor;\n  }\n\n  /** @internal */\n  readonly closeIcon!: DeckButtonCloseIcon<this, SvgIconView>; // defined by DeckButtonCloseIcon\n\n  /** @internal */\n  readonly backIcon!: DeckButtonBackIcon<this, SvgIconView>; // defined by DeckButtonBackIcon\n\n  /** @internal */\n  labelCount: number;\n\n  /** @internal */\n  label: DeckButtonLabel<this, HtmlView> | null;\n\n  protected createLabel(value: string): HtmlView {\n    const labelView = HtmlView.fromTag(\"span\");\n    labelView.display.setState(\"flex\", Affinity.Intrinsic);\n    labelView.alignItems.setState(\"center\", Affinity.Intrinsic);\n    labelView.whiteSpace.setState(\"nowrap\", Affinity.Intrinsic);\n    labelView.text(value);\n    return labelView;\n  }\n\n  pushLabel(newLabelView: HtmlView | string, timing?: AnyTiming | boolean): void {\n    if (typeof newLabelView === \"string\") {\n      newLabelView = this.createLabel(newLabelView);\n    }\n\n    const oldLabelCount = this.labelCount;\n    const newLabelCount = oldLabelCount + 1;\n    this.labelCount = newLabelCount;\n\n    const oldLabelKey = \"label\" + oldLabelCount;\n    const oldLabelRef = this.getFastener(oldLabelKey, ViewRef) as DeckButtonLabel<this, HtmlView> | null;\n    const oldLabelView = oldLabelRef !== null ? oldLabelRef.view : null;\n\n    const newLabelKey = \"label\" + newLabelCount;\n    const newLabelRef = DeckButtonLabelRef.create(this) as DeckButtonLabel<this, HtmlView>;\n    Object.defineProperty(newLabelRef, \"name\", {\n      value: newLabelKey,\n      configurable: true,\n    })\n    newLabelRef.labelIndex = newLabelCount;\n    this.willPushLabel(newLabelView, oldLabelView);\n    this.label = newLabelRef;\n\n    this.setFastener(newLabelKey, newLabelRef);\n    newLabelRef.setView(newLabelView);\n    newLabelRef.insertView();\n\n    if (timing === void 0 && oldLabelCount === 0) {\n      timing = false;\n    } else if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, Mood.navigating, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n\n    //if (this.deckPhase.superFastener === null) {\n    //  this.deckPhase.setState(newLabelCount, timing);\n    //}\n    if (timing === false) {\n      this.didPushLabel(newLabelView, oldLabelView);\n    }\n  }\n\n  protected willPushLabel(newLabelView: HtmlView, oldLabelView: HtmlView | null): void {\n    this.forEachObserver(function (observer: DeckButtonObserver): void {\n      if (observer.deckButtonWillPushLabel !== void 0) {\n        observer.deckButtonWillPushLabel(newLabelView, oldLabelView, this);\n      }\n    });\n  }\n\n  protected didPushLabel(newLabelView: HtmlView, oldLabelView: HtmlView | null): void {\n    if (oldLabelView !== null && oldLabelView.parent === this) {\n      oldLabelView.remove();\n    }\n    this.forEachObserver(function (observer: DeckButtonObserver): void {\n      if (observer.deckButtonDidPushLabel !== void 0) {\n        observer.deckButtonDidPushLabel(newLabelView, oldLabelView, this);\n      }\n    });\n  }\n\n  popLabel(timing?: AnyTiming | boolean): HtmlView | null {\n    const oldLabelCount = this.labelCount;\n    const newLabelCount = oldLabelCount - 1;\n    this.labelCount = newLabelCount;\n\n    const oldLabelKey = \"label\" + oldLabelCount;\n    const oldLabelRef = this.getFastener(oldLabelKey, ViewRef) as DeckButtonLabel<this, HtmlView> | null;\n    const oldLabelView = oldLabelRef !== null ? oldLabelRef.view : null;\n\n    if (oldLabelView !== null) {\n      const newLabelKey = \"label\" + newLabelCount;\n      const newLabelRef = this.getFastener(newLabelKey, ViewRef) as DeckButtonLabel<this, HtmlView> | null;\n      const newLabelView = newLabelRef !== null ? newLabelRef.view : null;\n      this.willPopLabel(newLabelView, oldLabelView);\n      this.label = newLabelRef;\n      if (newLabelRef !== null) {\n        newLabelRef.insertView();\n      }\n\n      if (timing === void 0 || timing === true) {\n        timing = this.getLookOr(Look.timing, Mood.navigating, false);\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n\n      //if (this.deckPhase.superFastener === null) {\n      //  this.deckPhase.setState(newLabelCount, timing);\n      //}\n      if (timing === false) {\n        this.didPopLabel(newLabelView, oldLabelView);\n      }\n    }\n\n    return oldLabelView;\n  }\n\n  protected willPopLabel(newLabelView: HtmlView | null, oldLabelView: HtmlView): void {\n    this.forEachObserver(function (observer: DeckButtonObserver): void {\n      if (observer.deckButtonWillPopLabel !== void 0) {\n        observer.deckButtonWillPopLabel(newLabelView, oldLabelView, this);\n      }\n    });\n  }\n\n  protected didPopLabel(newLabelView: HtmlView | null, oldLabelView: HtmlView): void {\n    const oldLabelKey = oldLabelView.key;\n    oldLabelView.remove();\n    if (oldLabelKey !== void 0) {\n      const oldLabelRef = this.getFastener(oldLabelKey, ViewRef) as DeckButtonLabel<this, HtmlView> | null;\n      if (oldLabelRef !== null && oldLabelRef.labelIndex > this.labelCount) {\n        this.setFastener(oldLabelKey, null);\n      }\n    }\n    this.forEachObserver(function (observer: DeckButtonObserver): void {\n      if (observer.deckButtonDidPopLabel !== void 0) {\n        observer.deckButtonDidPopLabel(newLabelView, oldLabelView, this);\n      }\n    });\n  }\n\n  protected override didLayout(viewContext: ViewContextType<this>): void {\n    if (!this.deckPhase.tweening) {\n      const deckPhase = this.deckPhase.value;\n      if (deckPhase !== void 0) {\n        const nextLabelIndex = Math.round(deckPhase + 1);\n        const nextLabelKey = \"label\" + nextLabelIndex;\n        const nextLabelRef = this.getFastener(nextLabelKey, ViewRef) as DeckButtonLabel<this, HtmlView> | null;\n        const nextLabelView = nextLabelRef !== null ? nextLabelRef.view : null;\n        if (nextLabelView !== null) {\n          this.didPopLabel(this.label !== null ? this.label.view : null, nextLabelView);\n        } else if (this.label !== null && this.label.view !== null && Math.round(deckPhase) > 0) {\n          const prevLabelIndex = Math.round(deckPhase - 1);\n          const prevLabelKey = \"label\" + prevLabelIndex;\n          const prevLabelRef = this.getFastener(prevLabelKey, ViewRef) as DeckButtonLabel<this, HtmlView> | null;\n          const prevLabelView = prevLabelRef !== null ? prevLabelRef.view : null;\n          this.didPushLabel(this.label.view, prevLabelView);\n        }\n      }\n    }\n    super.didLayout(viewContext);\n  }\n}\n\n/** @internal */\nexport interface DeckButtonCloseIcon<O extends DeckButton = DeckButton, V extends SvgIconView = SvgIconView> extends ViewRef<O, V> {\n  /** @override */\n  didAttachView(iconView: V): void;\n\n  /** @override */\n  insertChild(parent: View, child: V, target: View | number | null, key: string | undefined): void;\n\n  viewDidLayout(viewContext: ViewContext, iconView: V): void;\n\n  /** @protected */\n  initIcon(iconView: V): void;\n\n  /** @protected */\n  layoutIcon(iconView: V): void;\n}\n/** @internal */\nexport const DeckButtonCloseIcon = (function (_super: typeof ViewRef) {\n  const DeckButtonCloseIcon = _super.extend(\"DeckButtonCloseIcon\") as ViewRefFactory<DeckButtonCloseIcon<any, any>>;\n\n  DeckButtonCloseIcon.prototype.didAttachView = function (this: DeckButtonCloseIcon, iconView: SvgIconView): void {\n    this.initIcon(iconView);\n  };\n\n  DeckButtonCloseIcon.prototype.insertChild = function (this: DeckButtonCloseIcon, parent: View, child: SvgIconView, target: View | number | null, key: string | undefined): void {\n    parent.prependChild(child, key);\n  };\n\n  DeckButtonCloseIcon.prototype.viewDidLayout = function (this: DeckButtonCloseIcon, viewContext: ViewContext, iconView: SvgIconView): void {\n    this.layoutIcon(iconView);\n  };\n\n  DeckButtonCloseIcon.prototype.initIcon = function (this: DeckButtonCloseIcon, iconView: SvgIconView): void {\n    iconView.addClass(\"close-icon\");\n    iconView.setStyle(\"position\", \"absolute\");\n    iconView.pointerEvents.setState(\"none\", Affinity.Intrinsic);\n  };\n\n  DeckButtonCloseIcon.prototype.layoutIcon = function (this: DeckButtonCloseIcon, iconView: SvgIconView): void {\n    const slotAlign = this.owner.slotAlign.getValue();\n    let slotWidth: Length | number | null = this.owner.width.state;\n    slotWidth = slotWidth instanceof Length ? slotWidth.pxValue() : this.owner.node.offsetWidth;\n    let slotHeight: Length | number | null = this.owner.height.state;\n    slotHeight = slotHeight instanceof Length ? slotHeight.pxValue() : this.owner.node.offsetHeight;\n\n    const iconPadding = this.owner.iconPadding.getValue().pxValue(slotWidth);\n    let iconWidth: Length | number | null = iconView.width.state;\n    iconWidth = iconWidth instanceof Length ? iconWidth.pxValue() : 0;\n    let iconHeight: Length | number | null = iconView.height.state;\n    iconHeight = iconHeight instanceof Length ? iconHeight.pxValue() : 0;\n\n    const deckPhase = this.owner.deckPhase.getValueOr(0);\n    const iconPhase = Math.min(Math.max(0, deckPhase - 1), 1);\n    const slotSpace = slotWidth - iconWidth - iconPadding;\n    const iconLeft = iconPadding + slotSpace * slotAlign;\n    const iconTop = (slotHeight - iconHeight) / 2;\n    iconView.setStyle(\"left\", iconLeft + \"px\");\n    iconView.setStyle(\"top\", iconTop + \"px\");\n    iconView.viewBox.setState(\"0 0 \" + iconWidth + \" \" + iconHeight, Affinity.Intrinsic);\n    iconView.opacity.setState(1 - iconPhase, Affinity.Intrinsic);\n  };\n\n  return DeckButtonCloseIcon;\n})(ViewRef);\nViewRef({\n  extends: DeckButtonCloseIcon,\n  key: true,\n  type: SvgIconView,\n  observes: true,\n})(DeckButton.prototype, \"closeIcon\");\n\n/** @internal */\nexport interface DeckButtonBackIcon<O extends DeckButton = DeckButton, V extends SvgIconView = SvgIconView> extends ViewRef<O, V> {\n  /** @override */\n  didAttachView(iconView: V): void;\n\n  /** @override */\n  insertChild(parent: View, child: V, target: View | number | null, key: string | undefined): void;\n\n  viewDidLayout(viewContext: ViewContext, iconView: V): void;\n\n  /** @protected */\n  initIcon(iconView: V): void;\n\n  /** @protected */\n  layoutIcon(iconView: V): void;\n}\n/** @internal */\nexport const DeckButtonBackIcon = (function (_super: typeof ViewRef) {\n  const DeckButtonBackIcon = _super.extend(\"DeckButtonBackIcon\") as ViewRefFactory<DeckButtonBackIcon<any, any>>;\n\n  DeckButtonBackIcon.prototype.didAttachView = function (this: DeckButtonBackIcon, iconView: SvgIconView): void {\n    this.initIcon(iconView);\n  };\n\n  DeckButtonBackIcon.prototype.insertChild = function (this: DeckButtonBackIcon, parent: View, child: SvgIconView, target: View | number | null, key: string | undefined): void {\n    parent.prependChild(child, key);\n  };\n\n  DeckButtonBackIcon.prototype.viewDidLayout = function (this: DeckButtonBackIcon, viewContext: ViewContext, iconView: SvgIconView): void {\n    this.layoutIcon(iconView);\n  };\n\n  DeckButtonBackIcon.prototype.initIcon = function (this: DeckButtonBackIcon, iconView: SvgIconView): void {\n    iconView.addClass(\"back-icon\");\n    iconView.setStyle(\"position\", \"absolute\");\n    iconView.pointerEvents.setState(\"none\", Affinity.Intrinsic);\n  };\n\n  DeckButtonBackIcon.prototype.layoutIcon = function (this: DeckButtonBackIcon, iconView: SvgIconView): void {\n    const slotAlign = this.owner.slotAlign.getValue();\n    let slotWidth: Length | number | null = this.owner.width.state;\n    slotWidth = slotWidth instanceof Length ? slotWidth.pxValue() : this.owner.node.offsetWidth;\n    let slotHeight: Length | number | null = this.owner.height.state;\n    slotHeight = slotHeight instanceof Length ? slotHeight.pxValue() : this.owner.node.offsetHeight;\n\n    const iconPadding = this.owner.iconPadding.getValue().pxValue(slotWidth);\n    let iconWidth: Length | number | null = iconView.width.state;\n    iconWidth = iconWidth instanceof Length ? iconWidth.pxValue() : 0;\n    let iconHeight: Length | number | null = iconView.height.state;\n    iconHeight = iconHeight instanceof Length ? iconHeight.pxValue() : 0;\n\n    const deckPhase = this.owner.deckPhase.getValueOr(0);\n    const nextIndex = Math.max(this.owner.labelCount, Math.ceil(deckPhase));\n    const labelKey = \"label\" + nextIndex;\n    const labelView = this.owner.getChild(labelKey) as HtmlView | null;\n    const slotSpace = slotWidth - iconWidth - iconPadding;\n    let iconLeft = iconPadding + slotSpace * slotAlign;\n    const iconTop = (slotHeight - iconHeight) / 2;\n    let iconOpacity: number | undefined;\n    if (deckPhase <= 1) {\n      iconOpacity = 0;\n      iconView.iconColor.setState(null, Affinity.Intrinsic);\n    } else if (labelView !== null && deckPhase < 2) {\n      const parent = this.owner.parent;\n      const nextPost = this.owner.nextPost.value;\n      const nextSlot = parent !== null && nextPost !== null ? parent.getChild(nextPost.key) : null;\n      let nextSlotAlign: number;\n      let nextSlotWidth: Length | number | null;\n      if (nextSlot instanceof DeckSlot) {\n        nextSlotAlign = nextSlot.slotAlign.value;\n        nextSlotWidth = nextSlot.width.state;\n        nextSlotWidth = nextSlotWidth instanceof Length ? nextSlotWidth.pxValue() : nextSlot.node.offsetWidth;\n        let nextSlotLeft: Length | number | null = nextSlot.left.state;\n        nextSlotLeft = nextSlotLeft instanceof Length ? nextSlotLeft.pxValue() : nextSlot.node.offsetLeft;\n        let slotLeft: Length | number | null = this.owner.left.state;\n        slotLeft = slotLeft instanceof Length ? slotLeft.pxValue() : this.owner.node.offsetLeft;\n        const slotGap = nextSlotLeft - (slotLeft + slotWidth);\n        nextSlotWidth += slotGap;\n      } else {\n        nextSlotAlign = 0;\n        nextSlotWidth = 0;\n      }\n      const prevIndex = nextIndex - 1;\n      const labelPhase = deckPhase - prevIndex;\n      let labelWidth: Length | number | null = labelView.width.state;\n      if (labelWidth instanceof Length) {\n        labelWidth = labelWidth.pxValue(slotWidth);\n      } else {\n        labelWidth = labelView.node.offsetWidth;\n      }\n      const labelSlotSpace = slotWidth - iconLeft - iconWidth + (nextSlotWidth - labelWidth) * nextSlotAlign;\n      iconLeft += (labelSlotSpace * (1 - labelPhase) + labelSlotSpace * slotAlign * labelPhase);\n      iconOpacity = labelPhase;\n      const nextColor = nextSlot instanceof DeckSlot ? nextSlot.getLookOr(nextSlot.colorLook, null) : null;\n      const thisColor = this.owner.getLookOr(this.owner.colorLook, null);\n      if (nextColor !== null && thisColor !== null) {\n        iconView.iconColor.setState(nextColor.interpolateTo(thisColor)(labelPhase), Affinity.Intrinsic);\n      } else {\n        iconView.iconColor.setState(thisColor, Affinity.Intrinsic);\n      }\n    }\n    iconView.setStyle(\"left\", iconLeft + \"px\");\n    iconView.setStyle(\"top\", iconTop + \"px\");\n    iconView.viewBox.setState(\"0 0 \" + iconWidth + \" \" + iconHeight, Affinity.Intrinsic);\n    iconView.opacity.setState(iconOpacity, Affinity.Intrinsic);\n  };\n\n  return DeckButtonBackIcon;\n})(ViewRef);\nViewRef({\n  extends: DeckButtonBackIcon,\n  key: true,\n  type: SvgIconView,\n  observes: true,\n})(DeckButton.prototype, \"backIcon\");\n\n/** @internal */\nexport interface DeckButtonLabel<O extends DeckButton = DeckButton, V extends HtmlView = HtmlView> extends ViewRef<O, V> {\n  labelIndex: number;\n\n  /** @internal */\n  labelWidth: Length | string | null;\n\n  /** @internal */\n  layoutWidth: number;\n\n  /** @override */\n  didAttachView(labelView: V): void;\n\n  /** @override */\n  insertChild(parent: View, child: V, target: View | number | null, key: string | undefined): void;\n\n  /** @protected */\n  viewDidApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean, labelView: V): void;\n\n  viewDidLayout(viewContext: ViewContext, labelView: V): void;\n\n  /** @protected */\n  initLabel(labelView: V): void;\n\n  /** @protected */\n  layoutLabel(labelView: V): void;\n}\n/** @internal */\nexport const DeckButtonLabel = (function (_super: typeof ViewRef) {\n  const DeckButtonLabel = _super.extend(\"DeckButtonLabel\") as ViewRefFactory<DeckButtonLabel<any, any>>;\n\n  DeckButtonLabel.prototype.didAttachView = function (this: DeckButtonLabel, labelView: HtmlView): void {\n    this.initLabel(labelView);\n  };\n\n  DeckButtonLabel.prototype.insertChild = function (this: DeckButtonLabel, parent: View, child: HtmlView, target: View | number | null, key: string | undefined): void {\n    const targetKey = \"label\" + (this.labelIndex + 1);\n    target = parent.getChild(targetKey);\n    parent.insertChild(child, target, key);\n  };\n\n  DeckButtonLabel.prototype.viewDidApplyTheme = function (this: DeckButtonLabel, theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean, labelView: HtmlView): void {\n    if (labelView.color.hasAffinity(Affinity.Intrinsic)) {\n      labelView.color.setState(theme.getOr(this.owner.colorLook, mood, null), timing, Affinity.Intrinsic);\n    }\n  };\n\n  DeckButtonLabel.prototype.viewDidLayout = function (this: DeckButtonLabel, viewContext: ViewContext, labelView: HtmlView): void {\n    this.layoutLabel(labelView);\n  };\n\n  DeckButtonLabel.prototype.initLabel = function (this: DeckButtonLabel, labelView: HtmlView): void {\n    labelView.position.setState(\"absolute\", Affinity.Intrinsic);\n    labelView.pointerEvents.setState(\"none\", Affinity.Intrinsic);\n  };\n\n  DeckButtonLabel.prototype.layoutLabel = function (this: DeckButtonLabel, labelView: HtmlView): void {\n    const labelIndex = this.labelIndex;\n    const slotAlign = this.owner.slotAlign.getValue();\n    let slotWidth: Length | number | null = this.owner.width.state;\n    slotWidth = slotWidth instanceof Length ? slotWidth.pxValue() : this.owner.node.offsetWidth;\n    let slotHeight: Length | number | null = this.owner.height.state;\n    slotHeight = slotHeight instanceof Length ? slotHeight.pxValue() : this.owner.node.offsetHeight;\n\n    const parent = this.owner.parent;\n    const nextPost = this.owner.nextPost.value;\n    const nextSlot = parent !== null && nextPost !== null ? parent.getChild(nextPost.key) : null;\n    let nextSlotAlign: number;\n    let nextSlotWidth: Length | number | null;\n    if (nextSlot instanceof DeckSlot) {\n      nextSlotAlign = nextSlot.slotAlign.value;\n      nextSlotWidth = nextSlot.width.state;\n      nextSlotWidth = nextSlotWidth instanceof Length ? nextSlotWidth.pxValue() : nextSlot.node.offsetWidth;\n      let nextSlotLeft: Length | number | null = nextSlot.left.state;\n      nextSlotLeft = nextSlotLeft instanceof Length ? nextSlotLeft.pxValue() : nextSlot.node.offsetLeft;\n      let slotLeft: Length | number | null = this.owner.left.state;\n      slotLeft = slotLeft instanceof Length ? slotLeft.pxValue() : this.owner.node.offsetLeft;\n      const slotGap = nextSlotLeft - (slotLeft + slotWidth);\n      nextSlotWidth += slotGap;\n    } else {\n      nextSlotAlign = 0;\n      nextSlotWidth = 0;\n    }\n\n    const iconPadding = this.owner.iconPadding.getValue().pxValue(slotWidth);\n    let iconWidth: Length | number | null;\n    let iconHeight: Length | number | null;\n    const iconView = this.owner.backIcon.view;\n    if (iconView !== null) {\n      iconWidth = iconView.width.state;\n      iconWidth = iconWidth instanceof Length ? iconWidth.pxValue() : 0;\n      iconHeight = iconView.height.state;\n      iconHeight = iconHeight instanceof Length ? iconHeight.pxValue() : 0;\n    } else {\n      iconWidth = 0;\n      iconHeight = 0;\n    }\n\n    const deckPhase = this.owner.deckPhase.getValueOr(0);\n    const nextIndex = Math.max(this.owner.labelCount, Math.ceil(deckPhase));\n    const prevIndex = nextIndex - 1;\n    const labelPhase = deckPhase - prevIndex;\n    let labelWidth: Length | number | null = labelView.width.state;\n    this.labelWidth = labelWidth;\n    if (labelWidth instanceof Length) {\n      labelWidth = labelWidth.pxValue(slotWidth);\n    } else {\n      labelWidth = labelView.node.offsetWidth;\n      // Memoize computed label width while animating\n      // to avoid style recalculation in animation frames.\n      if (this.owner.deckPhase.tweening) {\n        labelView.width.setState(labelWidth, Affinity.Intrinsic);\n      } else {\n        labelView.width.setState(this.labelWidth, Affinity.Intrinsic);\n      }\n    }\n\n    const slotSpace = slotWidth - iconWidth - iconPadding;\n    const iconLeft = iconPadding + slotSpace * slotAlign;\n    const iconTop = (slotHeight - iconHeight) / 2;\n    const labelSlotSpace = slotWidth - iconLeft - iconWidth + (nextSlotWidth - labelWidth) * nextSlotAlign;\n    if (labelIndex < prevIndex || labelIndex === prevIndex && labelPhase === 1) { // under\n      labelView.left.setState(iconLeft + iconWidth, Affinity.Intrinsic);\n      labelView.top.setState(iconTop, Affinity.Intrinsic);\n      labelView.height.setState(iconHeight, Affinity.Intrinsic);\n      labelView.opacity.setState(0, Affinity.Intrinsic);\n      labelView.setCulled(true);\n    } else if (labelIndex === prevIndex) { // out\n      labelView.left.setState(iconLeft + iconWidth + (labelSlotSpace * slotAlign * (1 - labelPhase)), Affinity.Intrinsic);\n      labelView.top.setState(iconTop, Affinity.Intrinsic);\n      labelView.height.setState(iconHeight, Affinity.Intrinsic);\n      labelView.opacity.setState(1 - labelPhase, Affinity.Intrinsic);\n      labelView.setCulled(false);\n    } else if (labelIndex === nextIndex) { // in\n      labelView.left.setState(iconLeft + iconWidth + (labelSlotSpace * (1 - labelPhase) + labelSlotSpace * slotAlign * labelPhase), Affinity.Intrinsic);\n      labelView.top.setState(iconTop, Affinity.Intrinsic);\n      labelView.height.setState(iconHeight, Affinity.Intrinsic);\n      const nextColor = nextSlot instanceof DeckSlot ? nextSlot.getLookOr(nextSlot.colorLook, null) : null;\n      const thisColor = this.owner.getLookOr(this.owner.colorLook, null);\n      if (nextColor !== null && thisColor !== null) {\n        labelView.color.setState(nextColor.interpolateTo(thisColor)(labelPhase), Affinity.Intrinsic);\n      } else {\n        labelView.color.setState(thisColor, Affinity.Intrinsic);\n      }\n      labelView.opacity.setState(1, Affinity.Intrinsic);\n      labelView.setCulled(false);\n    } else { // over\n      labelView.left.setState(iconLeft + iconWidth + labelSlotSpace, Affinity.Intrinsic);\n      labelView.top.setState(iconTop, Affinity.Intrinsic);\n      labelView.height.setState(iconHeight, Affinity.Intrinsic);\n      labelView.opacity.setState(0, Affinity.Intrinsic);\n      labelView.setCulled(true);\n    }\n    this.layoutWidth = iconLeft + iconWidth + labelWidth + iconPadding;\n  };\n\n  DeckButtonLabel.construct = function <F extends DeckButtonLabel<any, any>>(fastenerClass: {prototype: F}, fastener: F | null, owner: FastenerOwner<F>): F {\n    fastener = _super.construct(fastenerClass, fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).labelIndex = 0;\n    (fastener as Mutable<typeof fastener>).labelWidth = null;\n    (fastener as Mutable<typeof fastener>).layoutWidth = 0;\n    return fastener;\n  };\n\n  return DeckButtonLabel;\n})(ViewRef);\n/** @internal */\nexport const DeckButtonLabelRef = ViewRef.define<DeckButton, HtmlView>(\"DeckButtonLabelRef\", {\n  extends: DeckButtonLabel,\n  key: true,\n  type: HtmlView,\n  observes: true,\n});\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class, Timing} from \"@swim/util\";\nimport {Affinity, Property} from \"@swim/component\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport {Look, Feel, MoodVector, ThemeMatrix, ThemeAnimator} from \"@swim/theme\";\nimport {ViewportInsets, ViewContextType, ViewFlags, View} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport {AnyDeckRail, DeckRail} from \"./DeckRail\";\nimport {DeckSlot} from \"./DeckSlot\";\nimport type {DeckBarObserver} from \"./DeckBarObserver\";\n\n/** @public */\nexport class DeckBar extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initBar();\n    this.initTheme();\n  }\n\n  protected initBar(): void {\n    this.addClass(\"deck-bar\");\n    this.position.setState(\"relative\", Affinity.Intrinsic);\n    this.height.setState(this.barHeight.value, Affinity.Intrinsic);\n    this.userSelect.setState(\"none\", Affinity.Intrinsic);\n    this.edgeInsets.setValue({\n      insetTop: 0,\n      insetRight: 0,\n      insetBottom: 0,\n      insetLeft: 0,\n    }, Affinity.Intrinsic);\n  }\n\n  override readonly observerType?: Class<DeckBarObserver>;\n\n  protected initTheme(): void {\n    this.modifyTheme(Feel.default, [[Feel.translucent, 1], [Feel.primary, 1]]);\n  }\n\n  @Property({type: DeckRail, value: null})\n  readonly rail!: Property<this, DeckRail | null, AnyDeckRail | null>;\n\n  @ThemeAnimator({type: Number, inherits: true})\n  readonly deckPhase!: ThemeAnimator<this, number | undefined>;\n\n  @Property({type: Length, value: Length.px(48), updateFlags: View.NeedsLayout})\n  readonly barHeight!: Property<this, Length, AnyLength>;\n\n  @Property({type: Length, value: Length.zero(), updateFlags: View.NeedsResize})\n  readonly itemSpacing!: Property<this, Length | null, AnyLength | null>;\n\n  @Property({type: Object, inherits: true, value: null, updateFlags: View.NeedsResize})\n  readonly edgeInsets!: Property<this, ViewportInsets | null>;\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    if (this.backgroundColor.hasAffinity(Affinity.Intrinsic)) {\n      this.backgroundColor.setState(theme.getOr(Look.backgroundColor, mood, null), timing, Affinity.Intrinsic);\n    }\n  }\n\n  override onInsertChild(childView: View, targetView: View | null): void {\n    super.onInsertChild(childView, targetView);\n    if (childView instanceof DeckSlot) {\n      this.onInsertSlot(childView);\n    }\n  }\n\n  protected onInsertSlot(childView: DeckSlot): void {\n    childView.position.setState(\"absolute\", Affinity.Intrinsic);\n  }\n\n  protected override onResize(viewContext: ViewContextType<this>): void {\n    super.onResize(viewContext);\n    this.resizeBar(viewContext);\n  }\n\n  protected resizeBar(viewContext: ViewContextType<this>): void {\n    const oldRail = !this.rail.inherited ? this.rail.value : null;\n    if (oldRail !== void 0 && oldRail !== null) {\n      const superRail = this.rail.superValue;\n      let width: Length | string | number | null = null;\n      if (superRail !== void 0 && superRail !== null && superRail.width !== null) {\n        width = superRail.width.pxValue();\n      }\n      if (width === null) {\n        const parent = this.parent;\n        if (parent instanceof HtmlView) {\n          width = parent.width.state;\n          width = width instanceof Length ? width.pxValue() : parent.node.offsetWidth;\n        }\n      }\n      if (width === null) {\n        width = this.width.state;\n        width = width instanceof Length ? width.pxValue() : this.node.offsetWidth;\n      }\n      let edgeInsets = this.edgeInsets.superValue;\n      if ((edgeInsets === void 0 || edgeInsets === null) && this.edgeInsets.hasAffinity(Affinity.Intrinsic)) {\n        edgeInsets = viewContext.viewport.safeArea;\n      }\n      const insetTop = edgeInsets !== void 0 && edgeInsets !== null ? edgeInsets.insetTop : 0;\n      const insetLeft = edgeInsets !== void 0 && edgeInsets !== null ? edgeInsets.insetLeft : 0;\n      const insetRight = edgeInsets !== void 0 && edgeInsets !== null ? edgeInsets.insetRight : 0;\n      const spacing = this.itemSpacing.getValueOr(Length.zero()).pxValue(width);\n      const newRail = oldRail.resized(width, insetLeft, insetRight, spacing);\n      this.rail.setValue(newRail);\n      this.height.setState(this.barHeight.value.plus(insetTop), Affinity.Intrinsic);\n    }\n  }\n\n  override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.layoutBar(viewContext);\n  }\n\n  protected layoutBar(viewContext: ViewContextType<this>): void {\n    let edgeInsets = this.edgeInsets.superValue;\n    if ((edgeInsets === void 0 || edgeInsets === null) && this.edgeInsets.hasAffinity(Affinity.Intrinsic)) {\n      edgeInsets = viewContext.viewport.safeArea;\n    }\n    const insetTop = edgeInsets !== void 0 && edgeInsets !== null ? edgeInsets.insetTop : 0;\n    this.height.setState(this.barHeight.value.plus(insetTop), Affinity.Intrinsic);\n  }\n\n  protected override displayChildren(displayFlags: ViewFlags, viewContext: ViewContextType<this>,\n                                     displayChild: (this: this, childView: View, displayFlags: ViewFlags,\n                                                    viewContext: ViewContextType<this>) => void): void {\n    const needsLayout = (displayFlags & View.NeedsLayout) !== 0;\n    if (needsLayout) {\n      this.layoutChildViews(displayFlags, viewContext, displayChild);\n    } else {\n      super.displayChildren(displayFlags, viewContext, displayChild);\n    }\n  }\n\n  protected layoutChildViews(displayFlags: ViewFlags, viewContext: ViewContextType<this>,\n                             displayChild: (this: this, childView: View, displayFlags: ViewFlags,\n                                            viewContext: ViewContextType<this>) => void): void {\n    const rail = this.rail.value;\n    let edgeInsets = this.edgeInsets.superValue;\n    if ((edgeInsets === void 0 || edgeInsets === null) && this.edgeInsets.hasAffinity(Affinity.Intrinsic)) {\n      edgeInsets = viewContext.viewport.safeArea;\n    }\n    let height: Length | number | null = this.height.state;\n    height = height instanceof Length ? height.pxValue() : this.node.offsetHeight;\n    const slotTop = edgeInsets !== void 0 && edgeInsets !== null ? edgeInsets.insetTop : 0;\n    const slotHeight = this.barHeight.value;\n    type self = this;\n    function layoutChildView(this: self, childView: View, displayFlags: ViewFlags,\n                             viewContext: ViewContextType<self>): void {\n      if (childView instanceof DeckSlot) {\n        const key = childView.key;\n        const postIndex = rail !== null && key !== void 0 ? rail.lookupPost(key) : void 0;\n        if (postIndex !== void 0) {\n          const post = rail!.getPost(postIndex)!;\n          const nextPost = rail!.getPost(postIndex + 1);\n          const prevPost = rail!.getPost(postIndex - 1);\n          childView.display.setState(\"flex\", Affinity.Intrinsic);\n          childView.left.setState(post.left, Affinity.Intrinsic);\n          childView.top.setState(slotTop, Affinity.Intrinsic);\n          childView.width.setState(post.width, Affinity.Intrinsic);\n          childView.height.setState(slotHeight, Affinity.Intrinsic);\n          childView.post.setValue(post, Affinity.Intrinsic);\n          childView.nextPost.setValue(nextPost, Affinity.Intrinsic);\n          childView.prevPost.setValue(prevPost, Affinity.Intrinsic);\n        } else {\n          childView.display.setState(\"none\", Affinity.Intrinsic);\n          childView.left.setState(null, Affinity.Intrinsic);\n          childView.top.setState(null, Affinity.Intrinsic);\n          childView.width.setState(null, Affinity.Intrinsic);\n          childView.height.setState(null, Affinity.Intrinsic);\n          childView.post.setValue(null, Affinity.Intrinsic);\n          childView.nextPost.setValue(null, Affinity.Intrinsic);\n          childView.prevPost.setValue(null, Affinity.Intrinsic);\n        }\n      }\n      displayChild.call(this, childView, displayFlags, viewContext);\n    }\n    super.displayChildren(displayFlags, viewContext, layoutChildView);\n  }\n\n  /** @internal */\n  didPressBackButton(event: Event | null): void {\n    this.forEachObserver(function (observer: DeckBarObserver): void {\n      if (observer.deckBarDidPressBackButton !== void 0) {\n        observer.deckBarDidPressBackButton(event, this);\n      }\n    });\n  }\n\n  /** @internal */\n  didPressCloseButton(event: Event | null): void {\n    this.forEachObserver(function (observer: DeckBarObserver): void {\n      if (observer.deckBarDidPressCloseButton !== void 0) {\n        observer.deckBarDidPressCloseButton(event, this);\n      }\n    });\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Timing} from \"@swim/util\";\nimport {Affinity, Property} from \"@swim/component\";\nimport {Look, MoodVector, ThemeMatrix} from \"@swim/theme\";\nimport {ViewportInsets, ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\n\n/** @public */\nexport class DeckCard extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initCard();\n  }\n\n  protected initCard(): void {\n    this.addClass(\"deck-card\");\n    this.position.setState(\"relative\", Affinity.Intrinsic);\n    this.overflowX.setState(\"auto\", Affinity.Intrinsic);\n    this.overflowY.setState(\"auto\", Affinity.Intrinsic);\n    this.overflowScrolling.setState(\"touch\", Affinity.Intrinsic);\n  }\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    if (this.backgroundColor.hasAffinity(Affinity.Intrinsic)) {\n      this.backgroundColor.setState(theme.getOr(Look.backgroundColor, mood, null), timing, Affinity.Intrinsic);\n    }\n  }\n\n  @Property({type: Object, inherits: true, value: null})\n  readonly edgeInsets!: Property<this, ViewportInsets | null>;\n\n  @Property({type: String})\n  readonly cardTitle!: Property<this, string | undefined>;\n\n  @ViewRef({type: HtmlView})\n  readonly backItem!: ViewRef<this, HtmlView>;\n\n  @ViewRef({type: HtmlView})\n  readonly titleView!: ViewRef<this, HtmlView>;\n\n  @ViewRef({type: HtmlView})\n  readonly leftItem!: ViewRef<this, HtmlView>;\n\n  @ViewRef({type: HtmlView})\n  readonly rightItem!: ViewRef<this, HtmlView>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, FastenerOwner, Property} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {Look, Mood, ThemeAnimator} from \"@swim/theme\";\nimport {ViewportInsets, ViewContextType, ViewContext, View, ViewRefFactory, ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport {DeckBar} from \"./DeckBar\";\nimport {DeckCard} from \"./DeckCard\";\nimport type {DeckViewObserver} from \"./DeckViewObserver\";\n\n/** @public */\nexport class DeckView extends HtmlView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.cardCount = 0;\n    this.card = null;\n    this.initDeck();\n  }\n\n  protected initDeck(): void {\n    this.addClass(\"deck\");\n    this.position.setState(\"relative\", Affinity.Intrinsic);\n    this.overflowX.setState(\"hidden\", Affinity.Intrinsic);\n    this.overflowY.setState(\"hidden\", Affinity.Intrinsic);\n  }\n\n  override readonly observerType?: Class<DeckViewObserver>;\n\n  @ThemeAnimator({type: Number, value: 0, updateFlags: View.NeedsLayout})\n  readonly deckPhase!: ThemeAnimator<this, number>;\n\n  @Property({type: Number, value: 1})\n  readonly inAlign!: Property<this, number>;\n\n  @Property({type: Number, value: 1 / 3})\n  readonly outAlign!: Property<this, number>;\n\n  @Property({type: Object, inherits: true, value: null, updateFlags: View.NeedsResize})\n  readonly edgeInsets!: Property<this, ViewportInsets | null>;\n\n  /** @internal */\n  readonly bar!: DeckViewBar<this, DeckBar>; // defined by DeckViewBar\n\n  /** @internal */\n  cardCount: number;\n\n  card: ViewRef<this, DeckCard> | null;\n\n  pushCard(newCardView: DeckCard, timing?: AnyTiming | boolean): void {\n    if (this.deckPhase.tweening) {\n      return;\n    }\n\n    const oldCardCount = this.cardCount;\n    const newCardCount = oldCardCount + 1;\n    this.cardCount = newCardCount;\n\n    const oldCardKey = \"card\" + oldCardCount;\n    const oldCardRef = this.getFastener(oldCardKey, ViewRef) as DeckViewCard<this, DeckCard> | null;\n    const oldCardView = oldCardRef !== null ? oldCardRef.view : null;\n\n    const newCardKey = \"card\" + newCardCount;\n    const newCardRef = DeckViewCardRef.create(this) as DeckViewCard<this, DeckCard>;\n    Object.defineProperty(newCardRef, \"name\", {\n      value: newCardKey,\n      configurable: true,\n    })\n    newCardRef.cardIndex = newCardCount;\n    this.willPushCard(newCardView, oldCardView);\n    this.card = newCardRef;\n\n    this.setFastener(newCardKey, newCardRef);\n    newCardRef.setView(newCardView);\n    newCardRef.insertView();\n\n    if (timing === void 0 && oldCardCount === 0) {\n      timing = false;\n    } else if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, Mood.navigating, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n\n    this.deckPhase.setState(newCardCount, timing);\n    this.onPushCard(newCardView, oldCardView);\n    if (timing === false) {\n      this.didPushCard(newCardView, oldCardView);\n    }\n  }\n\n  protected willPushCard(newCardView: DeckCard, oldCardView: DeckCard | null): void {\n    this.forEachObserver(function (observer: DeckViewObserver): void {\n      if (observer.deckWillPushCard !== void 0) {\n        observer.deckWillPushCard(newCardView, oldCardView, this);\n      }\n    });\n  }\n\n  protected onPushCard(newCardView: DeckCard, oldCardView: DeckCard | null): void {\n    // hook\n  }\n\n  protected didPushCard(newCardView: DeckCard, oldCardView: DeckCard | null): void {\n    if (oldCardView !== null && oldCardView.parent === this) {\n      oldCardView.remove();\n    }\n    this.forEachObserver(function (observer: DeckViewObserver): void {\n      if (observer.deckDidPushCard !== void 0) {\n        observer.deckDidPushCard(newCardView, oldCardView, this);\n      }\n    });\n  }\n\n  popCard(timing?: AnyTiming | boolean): DeckCard | null {\n    if (this.deckPhase.tweening) {\n      return null;\n    }\n\n    const oldCardCount = this.cardCount;\n    const newCardCount = oldCardCount - 1;\n    this.cardCount = newCardCount;\n\n    const oldCardKey = \"card\" + oldCardCount;\n    const oldCardRef = this.getFastener(oldCardKey, ViewRef) as DeckViewCard<this, DeckCard> | null;\n    const oldCardView = oldCardRef !== null ? oldCardRef.view : null;\n\n    if (oldCardView !== null) {\n      const newCardKey = \"card\" + newCardCount;\n      const newCardRef = this.getFastener(newCardKey, ViewRef) as DeckViewCard<this, DeckCard> | null;\n      const newCardView = newCardRef !== null ? newCardRef.view : null;\n      this.willPopCard(newCardView, oldCardView);\n      this.card = newCardRef;\n      if (newCardRef !== null) {\n        newCardRef.insertView();\n      }\n\n      if (timing === void 0 || timing === true) {\n        timing = this.getLookOr(Look.timing, Mood.navigating, false);\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n\n      this.deckPhase.setState(newCardCount, timing);\n      this.onPopCard(newCardView, oldCardView);\n      if (timing === false) {\n        this.didPopCard(newCardView, oldCardView);\n      }\n    }\n\n    return oldCardView;\n  }\n\n  protected willPopCard(newCardView: DeckCard | null, oldCardView: DeckCard): void {\n    this.forEachObserver(function (observer: DeckViewObserver): void {\n      if (observer.deckWillPopCard !== void 0) {\n        observer.deckWillPopCard(newCardView, oldCardView, this);\n      }\n    });\n  }\n\n  protected onPopCard(newCardView: DeckCard | null, oldCardView: DeckCard): void {\n    // hook\n  }\n\n  protected didPopCard(newCardView: DeckCard | null, oldCardView: DeckCard): void {\n    const oldCardKey = oldCardView.key;\n    oldCardView.remove();\n    if (oldCardKey !== void 0) {\n      const oldCardRef = this.getFastener(oldCardKey, ViewRef) as DeckViewCard<this, DeckCard> | null;\n      if (oldCardRef !== null && oldCardRef.cardIndex > this.cardCount) {\n        this.setFastener(oldCardKey, null);\n      }\n    }\n    this.forEachObserver(function (observer: DeckViewObserver): void {\n      if (observer.deckDidPopCard !== void 0) {\n        observer.deckDidPopCard(newCardView, oldCardView, this);\n      }\n    });\n  }\n\n  protected override didLayout(viewContext: ViewContextType<this>): void {\n    if (!this.deckPhase.tweening) {\n      const deckPhase = this.deckPhase.value;\n      if (deckPhase !== void 0) {\n        const nextCardIndex = Math.round(deckPhase + 1);\n        const nextCardKey = \"card\" + nextCardIndex;\n        const nextCardRef = this.getFastener(nextCardKey, ViewRef) as DeckViewCard<this, DeckCard> | null;\n        const nextCardView = nextCardRef !== null ? nextCardRef.view : null;\n        if (nextCardView !== null) {\n          this.didPopCard(this.card !== null ? this.card.view : null, nextCardView);\n        } else if (this.card !== null && this.card.view !== null && Math.round(deckPhase) > 0) {\n          const prevCardIndex = Math.round(deckPhase - 1);\n          const prevCardKey = \"card\" + prevCardIndex;\n          const prevCardRef = this.getFastener(prevCardKey, ViewRef) as DeckViewCard<this, DeckCard> | null;\n          const catdCardView = prevCardRef !== null ? prevCardRef.view : null;\n          this.didPushCard(this.card.view, catdCardView);\n        }\n      }\n    }\n    super.didLayout(viewContext);\n  }\n\n  /** @internal */\n  didPressBackButton(event: Event | null): void {\n    this.forEachObserver(function (observer: DeckViewObserver): void {\n      if (observer.deckDidPressBackButton !== void 0) {\n        observer.deckDidPressBackButton(event, this);\n      }\n    });\n  }\n\n  /** @internal */\n  didPressCloseButton(event: Event | null): void {\n    this.forEachObserver(function (observer: DeckViewObserver): void {\n      if (observer.deckDidPressCloseButton !== void 0) {\n        observer.deckDidPressCloseButton(event, this);\n      }\n    });\n  }\n}\n\n/** @internal */\nexport interface DeckViewBar<O extends DeckView = DeckView, V extends DeckBar = DeckBar> extends ViewRef<O, V> {\n  /** @override */\n  didAttachView(barView: V): void;\n\n  /** @override */\n  insertChild(parent: View, child: V, target: View | number | null, key: string | undefined): void;\n\n  viewDidResize(viewContext: ViewContext, barView: V): void;\n\n  /** @protected */\n  initBar(barView: V): void;\n\n  /** @protected */\n  resizeBar(barView: V): void;\n\n  deckBarDidPressBackButton(event: Event | null, view: O): void;\n\n  deckBarDidPressCloseButton(event: Event | null, view: O): void;\n}\n/** @internal */\nexport const DeckViewBar = (function (_super: typeof ViewRef) {\n  const DeckViewBar = _super.extend(\"DeckSliderItem\") as ViewRefFactory<DeckViewBar<any, any>>;\n\n  DeckViewBar.prototype.didAttachView = function (this: DeckViewBar, barView: DeckBar): void {\n    this.initBar(barView);\n  };\n\n  DeckViewBar.prototype.insertChild = function (this: DeckViewBar, parent: View, child: DeckBar, target: View | number | null, key: string | undefined): void {\n    parent.prependChild(child, key);\n  };\n\n  DeckViewBar.prototype.viewDidResize = function (this: DeckViewBar, viewContext: ViewContext, barView: DeckBar): void {\n    this.resizeBar(barView);\n  };\n\n  DeckViewBar.prototype.initBar = function (this: DeckViewBar, barView: DeckBar): void {\n    let deckWidth = this.owner.width.state;\n    deckWidth = deckWidth instanceof Length ? deckWidth : Length.px(this.owner.node.offsetWidth);\n    barView.position.setState(\"absolute\", Affinity.Intrinsic);\n    barView.left.setState(0, Affinity.Intrinsic);\n    barView.top.setState(0, Affinity.Intrinsic);\n    barView.width.setState(deckWidth, Affinity.Intrinsic);\n    barView.zIndex.setState(1, Affinity.Intrinsic);\n  };\n\n  DeckViewBar.prototype.resizeBar = function (this: DeckViewBar, barView: DeckBar): void {\n    let deckWidth = this.owner.width.state;\n    deckWidth = deckWidth instanceof Length ? deckWidth : Length.px(this.owner.node.offsetWidth);\n    barView.width.setState(deckWidth, Affinity.Intrinsic);\n  };\n\n  DeckViewBar.prototype.deckBarDidPressBackButton = function (this: DeckViewBar, event: Event | null): void {\n    this.owner.didPressBackButton(event);\n  };\n\n  DeckViewBar.prototype.deckBarDidPressCloseButton = function (this: DeckViewBar, event: Event | null): void {\n    this.owner.didPressCloseButton(event);\n  };\n\n  return DeckViewBar;\n})(ViewRef);\nViewRef({\n  extends: DeckViewBar,\n  key: true,\n  type: DeckBar,\n  binds: true,\n  observes: true,\n})(DeckView.prototype, \"bar\");\n\n/** @internal */\nexport interface DeckViewCard<O extends DeckView = DeckView, V extends DeckCard = DeckCard> extends ViewRef<O, V> {\n  cardIndex: number;\n\n  /** @override */\n  didAttachView(cardView: V): void;\n\n  /** @override */\n  insertChild(parent: View, child: V, target: View | number | null, key: string | undefined): void;\n\n  viewDidResize(viewContext: ViewContext, cardView: V): void;\n\n  viewDidLayout(viewContext: ViewContext, cardView: V): void;\n\n  /** @protected */\n  initCard(cardView: V): void;\n\n  /** @protected */\n  resizeCard(cardView: V, viewContext: ViewContext): void;\n\n  /** @protected */\n  layoutCard(cardView: V, viewContext: ViewContext): void;\n}\n/** @internal */\nexport const DeckViewCard = (function (_super: typeof ViewRef) {\n  const DeckViewCard = _super.extend(\"DeckSliderItem\") as ViewRefFactory<DeckViewCard<any, any>>;\n\n  DeckViewCard.prototype.didAttachView = function (this: DeckViewCard, cardView: DeckCard): void {\n    this.initCard(cardView);\n  };\n\n  DeckViewCard.prototype.insertChild = function (this: DeckViewCard, parent: View, child: DeckCard, target: View | number | null, key: string | undefined): void {\n    const targetKey = \"card\" + (this.cardIndex + 1);\n    target = parent.getChild(targetKey);\n    parent.insertChild(child, target, key);\n  };\n\n  DeckViewCard.prototype.viewDidResize = function (this: DeckViewCard, viewContext: ViewContext, cardView: DeckCard): void {\n    this.resizeCard(cardView, viewContext);\n  };\n\n  DeckViewCard.prototype.viewDidLayout = function (this: DeckViewCard, viewContext: ViewContext, cardView: DeckCard): void {\n    this.layoutCard(cardView, viewContext);\n  };\n\n  DeckViewCard.prototype.initCard = function (this: DeckViewCard, cardView: DeckCard): void {\n    let edgeInsets = this.owner.edgeInsets.value;\n    if (edgeInsets === void 0 && this.owner.edgeInsets.hasAffinity(Affinity.Intrinsic)) {\n      edgeInsets = this.owner.viewport.safeArea;\n    }\n\n    let deckWidth = this.owner.width.state;\n    deckWidth = deckWidth instanceof Length ? deckWidth : Length.px(this.owner.node.offsetWidth);\n    let deckHeight = this.owner.height.state;\n    deckHeight = deckHeight instanceof Length ? deckHeight : Length.px(this.owner.node.offsetHeight);\n\n    let barHeight: Length | null = null;\n    const barView = this.owner.bar.view;\n    if (barView !== null) {\n      barHeight = barView.height.state;\n      barHeight = barHeight instanceof Length ? barHeight : Length.px(barView.node.offsetHeight);\n      if (edgeInsets !== null) {\n        edgeInsets = {\n          insetTop: 0,\n          insetRight: edgeInsets.insetRight,\n          insetBottom: edgeInsets.insetBottom,\n          insetLeft: edgeInsets.insetLeft,\n        };\n      }\n    }\n\n    cardView.edgeInsets.setValue(edgeInsets, Affinity.Intrinsic);\n    cardView.position.setState(\"absolute\", Affinity.Intrinsic);\n    cardView.left.setState(deckWidth, Affinity.Intrinsic);\n    cardView.top.setState(0, Affinity.Intrinsic);\n    cardView.width.setState(deckWidth, Affinity.Intrinsic);\n    cardView.height.setState(deckHeight, Affinity.Intrinsic);\n    cardView.paddingTop.setState(barHeight, Affinity.Intrinsic);\n    cardView.boxSizing.setState(\"border-box\", Affinity.Intrinsic);\n    cardView.zIndex.setState(0, Affinity.Intrinsic);\n    cardView.visibility.setState(\"hidden\", Affinity.Intrinsic);\n  };\n\n  DeckViewCard.prototype.resizeCard = function (this: DeckViewCard, cardView: DeckCard, viewContext: ViewContext): void {\n    let edgeInsets = this.owner.edgeInsets.value;\n    if (edgeInsets === void 0 && this.owner.edgeInsets.hasAffinity(Affinity.Intrinsic)) {\n      edgeInsets = viewContext.viewport.safeArea;\n    }\n\n    let deckWidth = this.owner.width.state;\n    deckWidth = deckWidth instanceof Length ? deckWidth : Length.px(this.owner.node.offsetWidth);\n    let deckHeight = this.owner.height.state;\n    deckHeight = deckHeight instanceof Length ? deckHeight : Length.px(this.owner.node.offsetHeight);\n\n    let barHeight: Length | null = null;\n    const barView = this.owner.bar.view;\n    if (barView !== null) {\n      barHeight = barView.height.state;\n      barHeight = barHeight instanceof Length ? barHeight : Length.px(barView.node.offsetHeight);\n      if (edgeInsets !== null) {\n        edgeInsets = {\n          insetTop: 0,\n          insetRight: edgeInsets.insetRight,\n          insetBottom: edgeInsets.insetBottom,\n          insetLeft: edgeInsets.insetLeft,\n        };\n      }\n    }\n\n    cardView.edgeInsets.setValue(edgeInsets, Affinity.Intrinsic);\n    cardView.width.setState(deckWidth, Affinity.Intrinsic);\n    cardView.height.setState(deckHeight, Affinity.Intrinsic);\n    cardView.paddingTop.setState(barHeight, Affinity.Intrinsic);\n  };\n\n  DeckViewCard.prototype.layoutCard = function (this: DeckViewCard, cardView: DeckCard, viewContext: ViewContext): void {\n    let cardWidth = cardView.width.state;\n    cardWidth = cardWidth instanceof Length ? cardWidth : Length.px(cardView.node.offsetWidth);\n\n    const inAlign = this.owner.inAlign.value;\n    const outAlign = this.owner.outAlign.value;\n    const deckPhase = this.owner.deckPhase.getValue();\n    const nextIndex = Math.max(this.owner.cardCount, Math.ceil(deckPhase));\n    const prevIndex = nextIndex - 1;\n    const cardPhase = deckPhase - prevIndex;\n\n    const cardIndex = this.cardIndex;\n    if (cardIndex < prevIndex || cardIndex === prevIndex && cardPhase === 1) { // under\n      cardView.left.setState(-cardWidth.pxValue() * outAlign, Affinity.Intrinsic);\n      cardView.visibility.setState(\"hidden\", Affinity.Intrinsic);\n      cardView.setCulled(true);\n    } else if (cardIndex === prevIndex) { // out\n      cardView.left.setState(-cardWidth.pxValue() * outAlign * cardPhase, Affinity.Intrinsic);\n      cardView.visibility.setState(void 0, Affinity.Intrinsic);\n      cardView.setCulled(false);\n    } else if (cardIndex === nextIndex) { // in\n      cardView.left.setState(cardWidth.pxValue() * inAlign * (1 - cardPhase), Affinity.Intrinsic);\n      cardView.visibility.setState(void 0, Affinity.Intrinsic);\n      cardView.setCulled(false);\n    } else { // over\n      cardView.left.setState(cardWidth.pxValue() * inAlign, Affinity.Intrinsic);\n      cardView.visibility.setState(\"hidden\", Affinity.Intrinsic);\n      cardView.setCulled(true);\n    }\n  };\n\n  DeckViewCard.construct = function <F extends DeckViewCard<any, any>>(fastenerClass: {prototype: F}, fastener: F | null, owner: FastenerOwner<F>): F {\n    fastener = _super.construct(fastenerClass, fastener, owner) as F;\n    (fastener as Mutable<typeof fastener>).cardIndex = 0;\n    return fastener;\n  };\n\n  return DeckViewCard;\n})(ViewRef);\n/** @internal */\nexport const DeckViewCardRef = ViewRef.define<DeckView, DeckCard>(\"DeckViewCardRef\", {\n  extends: DeckViewCard,\n  key: true,\n  type: DeckCard,\n  observes: true,\n});\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Lazy, AnyTiming} from \"@swim/util\";\nimport {Affinity} from \"@swim/component\";\nimport {Length} from \"@swim/math\";\nimport {Look} from \"@swim/theme\";\nimport {ViewContextType, ViewRef} from \"@swim/view\";\nimport type {HtmlView} from \"@swim/dom\";\nimport {Graphics, VectorIcon, SvgIconView} from \"@swim/graphics\";\nimport {ButtonMembrane} from \"@swim/button\";\nimport {DeckPost} from \"./DeckPost\";\nimport {DeckRail} from \"./DeckRail\";\nimport {DeckSlider, DeckSliderItem} from \"./DeckSlider\";\nimport {DeckButton} from \"./DeckButton\";\nimport {DeckBar} from \"./DeckBar\";\n\n/** @public */\nexport class TitleDeckBar extends DeckBar {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.onBackButtonClick = this.onBackButtonClick.bind(this);\n    this.initRail();\n  }\n\n  protected initRail(): void {\n    const backPost = DeckPost.create(\"backButton\", 0, 0, 48);\n    const titlePost = DeckPost.create(\"titleSlider\", 1, 1);\n    const morePost = DeckPost.create(\"moreSlider\", 0, 0, 48);\n    const rail = DeckRail.create([backPost, titlePost, morePost]);\n    this.rail.setValue(rail, Affinity.Intrinsic);\n\n    this.backMembrane.insertView();\n    this.backButton.insertView();\n    this.titleSlider.insertView();\n    this.moreSlider.insertView();\n  }\n\n  get closeIcon(): Graphics {\n    return TitleDeckBar.closeIcon;\n  }\n\n  createCloseIcon(): SvgIconView | null {\n    const closeIcon = SvgIconView.create();\n    closeIcon.width.setState(24, Affinity.Intrinsic);\n    closeIcon.height.setState(24, Affinity.Intrinsic);\n    closeIcon.iconWidth.setState(24, Affinity.Intrinsic);\n    closeIcon.iconHeight.setState(24, Affinity.Intrinsic);\n    closeIcon.graphics.setState(this.closeIcon, Affinity.Intrinsic);\n    return closeIcon;\n  }\n\n  protected initBackMembrane(backMembrane: ButtonMembrane): void {\n    backMembrane.display.setState(\"none\", Affinity.Intrinsic);\n    backMembrane.position.setState(\"absolute\", Affinity.Intrinsic);\n    backMembrane.left.setState(0, Affinity.Intrinsic);\n    backMembrane.top.setState(0, Affinity.Intrinsic);\n    backMembrane.borderTopLeftRadius.setState(4, Affinity.Intrinsic);\n    backMembrane.borderTopRightRadius.setState(4, Affinity.Intrinsic);\n    backMembrane.borderBottomLeftRadius.setState(4, Affinity.Intrinsic);\n    backMembrane.borderBottomRightRadius.setState(4, Affinity.Intrinsic);\n    backMembrane.overflowX.setState(\"hidden\", Affinity.Intrinsic);\n    backMembrane.overflowY.setState(\"hidden\", Affinity.Intrinsic);\n    backMembrane.cursor.setState(\"pointer\", Affinity.Intrinsic);\n  }\n\n  get backIcon(): Graphics {\n    return TitleDeckBar.backIcon;\n  }\n\n  createBackIcon(): SvgIconView | null {\n    const backIcon = SvgIconView.create();\n    backIcon.width.setState(24, Affinity.Intrinsic);\n    backIcon.height.setState(24, Affinity.Intrinsic);\n    backIcon.iconWidth.setState(24, Affinity.Intrinsic);\n    backIcon.iconHeight.setState(24, Affinity.Intrinsic);\n    backIcon.graphics.setState(this.backIcon, Affinity.Intrinsic);\n    return backIcon;\n  }\n\n  createBackButton(): DeckButton {\n    const backButton = DeckButton.create();\n    backButton.backIcon.setView(this.createBackIcon());\n    backButton.backIcon.insertView();\n    return backButton;\n  }\n\n  protected initBackButton(backButton: DeckButton): void {\n    backButton.pointerEvents.setState(\"none\", Affinity.Intrinsic);\n  }\n\n  protected initTitleSlider(titleSlider: DeckSlider): void {\n    titleSlider.pointerEvents.setState(\"none\", Affinity.Intrinsic);\n  }\n\n  protected initMoreSlider(moreSlider: DeckSlider): void {\n    // hook\n  }\n\n  pushTitle(title: string, timing?: AnyTiming | boolean): void {\n    const titleSlider = this.titleSlider.view;\n    const backButton = this.backButton.view;\n    if (titleSlider !== null && backButton !== null) {\n      const titleRef = titleSlider.item;\n      let titleView: HtmlView | null = null;\n      if (titleRef !== null) {\n        titleView = titleRef.view;\n        titleRef.setView(null);\n        titleSlider.item = null;\n      }\n      titleSlider.pushItem(title, timing);\n      if (titleView !== null) {\n        backButton.pushLabel(titleView, timing);\n      } else {\n        backButton.labelCount = titleSlider.itemCount;\n      }\n      //if (!this.deckPhase.inherited) {\n      //  this.deckPhase.setState(titleSlider.itemCount, timing);\n      //}\n    }\n  }\n\n  popTitle(timing?: AnyTiming | boolean): void {\n    const titleSlider = this.titleSlider.view;\n    const backButton = this.backButton.view;\n    if (titleSlider !== null && backButton !== null) {\n      titleSlider.popItem(timing);\n      backButton.popLabel(timing);\n      //if (!this.deckPhase.inherited) {\n      //  this.deckPhase.setState(titleSlider.itemCount, timing);\n      //}\n    }\n  }\n\n  didPopBackButton(newLabelView: HtmlView | null, oldLabelView: HtmlView, backButton: DeckButton): void {\n    const backRef = backButton.getFastener(oldLabelView.key!, ViewRef);\n    if (backRef !== null) {\n      backRef.setView(null);\n      backButton.setFastener(backRef.key!, null);\n    }\n    const titleSlider = this.titleSlider.view;\n    if (titleSlider !== null) {\n      const titleKey = \"item\" + titleSlider.itemCount;\n      const titleRef = titleSlider.getFastener(titleKey, ViewRef) as DeckSliderItem<DeckSlider, HtmlView> | null;\n      if (titleRef !== null) {\n        titleRef.setView(oldLabelView);\n      }\n      titleSlider.item = titleRef;\n      titleSlider.appendChild(oldLabelView, titleKey);\n    }\n  }\n\n  @ViewRef<TitleDeckBar, ButtonMembrane>({\n    key: true,\n    type: ButtonMembrane,\n    binds: true,\n    didAttachView(backMembrane: ButtonMembrane): void {\n      this.owner.initBackMembrane(backMembrane);\n      backMembrane.on(\"click\", this.owner.onBackButtonClick);\n    },\n    willDetachView(backMembrane: ButtonMembrane): void {\n      backMembrane.off(\"click\", this.owner.onBackButtonClick);\n    },\n  })\n  readonly backMembrane!: ViewRef<this, ButtonMembrane>;\n\n  @ViewRef<TitleDeckBar, DeckButton>({\n    key: true,\n    type: DeckButton,\n    binds: true,\n    observes: true,\n    didAttachView(backButton: DeckButton): void {\n      this.owner.initBackButton(backButton);\n    },\n    createView(): DeckButton {\n      return this.owner.createBackButton();\n    },\n    deckButtonDidPopLabel(newLabelView: HtmlView | null, oldLabelView: HtmlView, backButton: DeckButton): void {\n      this.owner.didPopBackButton(newLabelView, oldLabelView, backButton);\n    },\n  })\n  readonly backButton!: ViewRef<this, DeckButton>;\n\n  @ViewRef<TitleDeckBar, DeckSlider>({\n    key: true,\n    type: DeckSlider,\n    binds: true,\n    didAttachView(titleSlider: DeckSlider): void {\n      this.owner.initTitleSlider(titleSlider);\n    },\n  })\n  readonly titleSlider!: ViewRef<this, DeckSlider>;\n\n  @ViewRef<TitleDeckBar, DeckSlider>({\n    key: true,\n    type: DeckSlider,\n    binds: true,\n    didAttachView(moreSlider: DeckSlider): void {\n      this.owner.initMoreSlider(moreSlider);\n    },\n  })\n  readonly moreSlider!: ViewRef<this, DeckSlider>;\n\n  protected override didLayout(viewContext: ViewContextType<this>): void {\n    const backMembrane = this.backMembrane.view;\n    const backButton = this.backButton.view;\n    if (backMembrane !== null && backButton !== null) {\n      if (backMembrane.width.hasAffinity(Affinity.Intrinsic)) {\n        let backButtonLeft: Length | number | null = backButton.left.state;\n        backButtonLeft = backButtonLeft instanceof Length ? backButtonLeft.pxValue() : backButton.node.offsetLeft;\n        if (backButton.label !== null) {\n          backMembrane.width.setState(backButtonLeft + backButton.label.layoutWidth, Affinity.Intrinsic);\n        } else {\n          let backButtonWidth: Length | number | null = backButton.height.state;\n          backButtonWidth = backButtonWidth instanceof Length ? backButtonWidth.pxValue() : backButton.node.offsetWidth;\n          backMembrane.width.setState(backButtonLeft + backButtonWidth, Affinity.Intrinsic);\n        }\n      }\n      if (backMembrane.height.hasAffinity(Affinity.Intrinsic)) {\n        let backButtonTop: Length | number | null = backButton.top.state;\n        backButtonTop = backButtonTop instanceof Length ? backButtonTop.pxValue() : backButton.node.offsetTop;\n        let backButtonHeight: Length | number | null = backButton.height.state;\n        backButtonHeight = backButtonHeight instanceof Length ? backButtonHeight.pxValue() : backButton.node.offsetHeight;\n        backMembrane.height.setState(backButtonTop + backButtonHeight, Affinity.Intrinsic);\n      }\n      const backIcon = backButton.backIcon.view;\n      if (backIcon !== null) {\n        const closeIcon = backButton.closeIcon.view;\n        const deckPhase = backButton.deckPhase.getValueOr(0);\n        const iconPhase = Math.min(Math.max(0, deckPhase - 1), 1);\n        backMembrane.display.setState(closeIcon === null && iconPhase === 0 ? \"none\" : \"block\", Affinity.Intrinsic);\n      }\n    }\n    super.didLayout(viewContext);\n  }\n\n  protected onBackButtonClick(event: MouseEvent): void {\n    event.stopPropagation();\n    const deckPhase = this.deckPhase.getStateOr(0);\n    if (deckPhase > 1) {\n      this.didPressBackButton(event);\n    } else {\n      this.didPressCloseButton(event);\n    }\n  }\n\n  @Lazy\n  static get closeIcon(): Graphics {\n    return VectorIcon.create(24, 24, \"M19,6.4L17.6,5L12,10.6L6.4,5L5,6.4L10.6,12L5,17.6L6.4,19L12,13.4L17.6,19L19,17.6L13.4,12Z\");\n  }\n\n  @Lazy\n  static get backIcon(): Graphics {\n    return VectorIcon.create(24, 24, \"M11.7,3.9L9.9,2.1L0,12L9.9,21.9L11.7,20.1L3.5,12Z\").withFillLook(Look.accentColor);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, Equivalent, Initable} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Property, Animator} from \"@swim/component\";\nimport {AnyLength, Length, AnyAngle, Angle, AnyR2Point, R2Point, R2Box} from \"@swim/math\";\nimport {AnyFont, Font, AnyColor, Color} from \"@swim/style\";\nimport {Look, ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, AnyView, View, ViewRef} from \"@swim/view\";\nimport {\n  GraphicsViewInit,\n  GraphicsView,\n  CanvasContext,\n  CanvasRenderer,\n  FillView,\n  Arc,\n  TypesetView,\n  TextRunView,\n} from \"@swim/graphics\";\nimport type {DialViewObserver} from \"./DialViewObserver\";\n\n/** @public */\nexport type DialViewArrangement = \"auto\" | \"manual\";\n\n/** @public */\nexport type AnyDialView = DialView | DialViewInit;\n\n/** @public */\nexport interface DialViewInit extends GraphicsViewInit {\n  value?: number;\n  limit?: number;\n  center?: AnyR2Point;\n  innerRadius?: AnyLength;\n  outerRadius?: AnyLength;\n  startAngle?: AnyAngle;\n  sweepAngle?: AnyAngle;\n  cornerRadius?: AnyLength;\n  dialColor?: AnyColor;\n  meterColor?: AnyColor;\n  labelPadding?: AnyLength;\n  tickAlign?: number;\n  tickRadius?: AnyLength;\n  tickLength?: AnyLength;\n  tickWidth?: AnyLength;\n  tickPadding?: AnyLength;\n  tickColor?: AnyColor;\n  font?: AnyFont;\n  textColor?: AnyColor;\n  arrangement?: DialViewArrangement;\n  label?: GraphicsView | string;\n  legend?: GraphicsView | string;\n}\n\n/** @public */\nexport class DialView extends GraphicsView {\n  override readonly observerType?: Class<DialViewObserver>;\n\n  @Animator<DialView, number>({\n    type: Number,\n    value: 0,\n    updateFlags: View.NeedsRender,\n    willSetValue(newValue: number, oldValue: number): void {\n      this.owner.callObservers(\"viewWillSetDialValue\", newValue, oldValue, this.owner);\n    },\n    didSetValue(newValue: number, oldValue: number): void {\n      this.owner.callObservers(\"viewDidSetDialValue\", newValue, oldValue, this.owner);\n    },\n  })\n  readonly value!: Animator<this, number>;\n\n  @Animator<DialView, number>({\n    type: Number,\n    value: 1,\n    updateFlags: View.NeedsRender,\n    willSetValue(newLimit: number, oldLimit: number): void {\n      this.owner.callObservers(\"viewWillSetDialLimit\", newLimit, oldLimit, this.owner);\n    },\n    didSetValue(newLimit: number, oldLimit: number): void {\n      this.owner.callObservers(\"viewDidSetDialLimit\", newLimit, oldLimit, this.owner);\n    },\n  })\n  readonly limit!: Animator<this, number>;\n\n  @Animator({type: R2Point, inherits: true, value: R2Point.origin(), updateFlags: View.NeedsRender})\n  readonly center!: Animator<this, R2Point, AnyR2Point>;\n\n  @ThemeAnimator({type: Length, inherits: true, value: Length.pct(30), updateFlags: View.NeedsRender})\n  readonly innerRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, inherits: true, value: Length.pct(40), updateFlags: View.NeedsRender})\n  readonly outerRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Angle, inherits: true, value: Angle.rad(-Math.PI / 2), updateFlags: View.NeedsRender})\n  readonly startAngle!: ThemeAnimator<this, Angle, AnyAngle>;\n\n  @ThemeAnimator({type: Angle, inherits: true, value: Angle.rad(2 * Math.PI), updateFlags: View.NeedsRender})\n  readonly sweepAngle!: ThemeAnimator<this, Angle, AnyAngle>;\n\n  @ThemeAnimator({type: Length, inherits: true, value: Length.pct(50), updateFlags: View.NeedsRender})\n  readonly cornerRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Color, inherits: true, value: null, look: Look.subduedColor, updateFlags: View.NeedsRender})\n  readonly dialColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Color, inherits: true, value: null, look: Look.accentColor, updateFlags: View.NeedsRender})\n  readonly meterColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Length, inherits: true, value: Length.pct(25), updateFlags: View.NeedsRender})\n  readonly labelPadding!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Number, inherits: true, value: 1.0, updateFlags: View.NeedsRender})\n  readonly tickAlign!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Length, inherits: true, value: Length.pct(45), updateFlags: View.NeedsRender})\n  readonly tickRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, inherits: true, value: Length.pct(50), updateFlags: View.NeedsRender})\n  readonly tickLength!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, inherits: true, value: Length.px(1), updateFlags: View.NeedsRender})\n  readonly tickWidth!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, inherits: true, value: Length.px(2), updateFlags: View.NeedsRender})\n  readonly tickPadding!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Color, inherits: true, value: null, look: Look.neutralColor, updateFlags: View.NeedsRender})\n  readonly tickColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Font, inherits: true, updateFlags: View.NeedsRender})\n  readonly font!: ThemeAnimator<this, Font | null, AnyFont | null>;\n\n  @ThemeAnimator({type: Color, inherits: true, look: Look.mutedColor, updateFlags: View.NeedsRender})\n  readonly textColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ViewRef<DialView, GraphicsView & Initable<GraphicsViewInit | string>>({\n    key: true,\n    type: TextRunView,\n    binds: true,\n    willAttachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"viewWillAttachDialLabel\", labelView, this.owner);\n    },\n    didDetachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"viewDidDetachDialLabel\", labelView, this.owner);\n    },\n    fromAny(value: AnyView<GraphicsView> | string): GraphicsView {\n      if (typeof value === \"string\") {\n        if (this.view instanceof TextRunView) {\n          this.view.text(value);\n          return this.view;\n        } else {\n          return TextRunView.fromAny(value);\n        }\n      } else {\n        return GraphicsView.fromAny(value);\n      }\n    },\n  })\n  readonly label!: ViewRef<this, GraphicsView & Initable<GraphicsViewInit | string>>;\n  static readonly label: MemberFastenerClass<DialView, \"label\">;\n\n  @ViewRef<DialView, GraphicsView & Initable<GraphicsViewInit | string>>({\n    key: true,\n    type: TextRunView,\n    binds: true,\n    willAttachView(legendView: GraphicsView): void {\n      this.owner.callObservers(\"viewWillAttachDialLegend\", legendView, this.owner);\n    },\n    didDetachView(legendView: GraphicsView): void {\n      this.owner.callObservers(\"viewDidDetachDialLegend\", legendView, this.owner);\n    },\n    fromAny(value: AnyView<GraphicsView> | string): GraphicsView {\n      if (typeof value === \"string\") {\n        if (this.view instanceof TextRunView) {\n          this.view.text(value);\n          return this.view;\n        } else {\n          return TextRunView.fromAny(value);\n        }\n      } else {\n        return GraphicsView.fromAny(value);\n      }\n    },\n  })\n  readonly legend!: ViewRef<this, GraphicsView & Initable<GraphicsViewInit | string>>;\n  static readonly legend: MemberFastenerClass<DialView, \"legend\">;\n\n  @Property({type: String, value: \"auto\"})\n  readonly arrangement!: Property<this, DialViewArrangement>;\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.center.recohere(viewContext.updateTime);\n  }\n\n  protected override onRender(viewContext: ViewContextType<this>): void {\n    super.onRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer && !this.hidden && !this.culled) {\n      const context = renderer.context;\n      context.save();\n      this.renderDial(context, this.viewFrame);\n      context.restore();\n    }\n  }\n\n  protected renderDial(context: CanvasContext, frame: R2Box): void {\n    const width = frame.width;\n    const height = frame.height;\n    const size = Math.min(width, height);\n    const value = this.value.getValue();\n    const limit = this.limit.getValue();\n    const delta = limit !== 0 ? value / limit : 0;\n\n    const center = this.center.getValue();\n    const innerRadius = this.innerRadius.getValue().px(size);\n    const outerRadius = this.outerRadius.getValue().px(size);\n    const deltaRadius = outerRadius.value - innerRadius.value;\n    const startAngle = this.startAngle.getValue().rad();\n    const sweepAngle = this.sweepAngle.getValue().rad();\n    const cornerRadius = this.cornerRadius.getValue().px(deltaRadius);\n    const dial = new Arc(center, innerRadius, outerRadius, startAngle,\n                         sweepAngle, Angle.zero(), null, cornerRadius);\n    const meter = dial.withSweepAngle(sweepAngle.times(delta));\n\n    context.save();\n\n    context.beginPath();\n    const dialColor = this.dialColor.value;\n    if (dialColor !== null) {\n      context.fillStyle = dialColor.toString();\n    }\n    dial.draw(context, frame);\n    if (dialColor !== null) {\n      context.fill();\n    }\n    context.clip();\n\n    const meterColor = this.meterColor.value;\n    if (meterColor !== null) {\n      context.beginPath();\n      context.fillStyle = meterColor.toString();\n      meter.draw(context, frame);\n      context.fill();\n    }\n\n    context.restore();\n\n    const labelView = this.label.view;\n    if (labelView !== null && !labelView.hidden) {\n      const r = (innerRadius.value + outerRadius.value) / 2;\n      const rx = r * Math.cos(startAngle.value + Equivalent.Epsilon);\n      const ry = r * Math.sin(startAngle.value + Equivalent.Epsilon);\n\n      let textAlign: CanvasTextAlign;\n      if (rx >= 0) {\n        if (ry >= 0) { // top-right\n          textAlign = \"start\";\n        } else { // bottom-right\n          textAlign = \"end\";\n        }\n      } else {\n        if (ry < 0) { // bottom-left\n          textAlign = \"end\";\n        } else { // top-left\n          textAlign = \"start\";\n        }\n      }\n      const padAngle = startAngle.value - Math.PI / 2;\n      const labelPadding = this.labelPadding.getValue().pxValue(deltaRadius);\n      const dx = labelPadding * Math.cos(padAngle);\n      const dy = labelPadding * Math.sin(padAngle);\n\n      if (TypesetView.is(labelView)) {\n        labelView.textAlign.setState(textAlign, Affinity.Intrinsic);\n        labelView.textBaseline.setState(\"middle\", Affinity.Intrinsic);\n        labelView.textOrigin.setState(new R2Point(center.x + rx + dx, center.y + ry + dy), Affinity.Intrinsic);\n      }\n    }\n\n    const legendView = this.legend.view;\n    if (legendView !== null && !legendView.hidden) {\n      const tickAlign = this.tickAlign.getValue();\n      const tickAngle = startAngle.value + sweepAngle.value * delta * tickAlign;\n      const tickRadius = this.tickRadius.getValue().pxValue(size);\n      const tickLength = this.tickLength.getValue().pxValue(width);\n      const tickWidth = this.tickWidth.getValue().pxValue(size);\n      const tickColor = this.tickColor.value;\n\n      const cx = center.x;\n      const cy = center.y;\n      const r1x = outerRadius.value * Math.cos(tickAngle + Equivalent.Epsilon);\n      const r1y = outerRadius.value * Math.sin(tickAngle + Equivalent.Epsilon);\n      const r2x = tickRadius * Math.cos(tickAngle + Equivalent.Epsilon);\n      const r2y = tickRadius * Math.sin(tickAngle + Equivalent.Epsilon);\n      let dx = 0;\n\n      if (tickColor !== null) {\n        context.beginPath();\n        context.lineWidth = tickWidth;\n        context.strokeStyle = tickColor.toString();\n        context.moveTo(cx + r1x, cy + r1y);\n        context.lineTo(cx + r2x, cy + r2y);\n        if (tickLength !== 0) {\n          if (r2x >= 0) {\n            context.lineTo(cx + tickLength, cy + r2y);\n            dx = tickLength - r2x;\n          } else if (r2x < 0) {\n            context.lineTo(cx - tickLength, cy + r2y);\n            dx = tickLength + r2x;\n          }\n        }\n        context.stroke();\n      }\n\n      let textAlign: CanvasTextAlign;\n      if (r2x >= 0) {\n        if (r2y >= 0) { // top-right\n          textAlign = \"end\";\n        } else { // bottom-right\n          textAlign = \"end\";\n        }\n      } else {\n        dx = -dx;\n        if (r2y < 0) { // bottom-left\n          textAlign = \"start\";\n        } else { // top-left\n          textAlign = \"start\";\n        }\n      }\n\n      if (TypesetView.is(legendView)) {\n        const tickPadding = this.tickPadding.getValue().pxValue(size);\n        if (FillView.is(legendView)) {\n          legendView.fill.setState(tickColor, Affinity.Intrinsic);\n        }\n        legendView.textAlign.setState(textAlign, Affinity.Intrinsic);\n        legendView.textBaseline.setState(\"alphabetic\", Affinity.Intrinsic);\n        legendView.textOrigin.setState(new R2Point(cx + r2x + dx, cy + r2y - tickPadding), Affinity.Intrinsic);\n      }\n    }\n  }\n\n  protected override hitTest(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const p = renderer.transform.transform(x, y);\n      return this.hitTestDial(p.x, p.y, renderer.context, this.viewFrame);\n    }\n    return null;\n  }\n\n  protected hitTestDial(x: number, y: number, context: CanvasContext, frame: R2Box): GraphicsView | null {\n    const size = Math.min(frame.width, frame.height);\n    const center = this.center.getValue();\n    const innerRadius = this.innerRadius.getValue().px(size);\n    const outerRadius = this.outerRadius.getValue().px(size);\n    const deltaRadius = outerRadius.value - innerRadius.value;\n    const startAngle = this.startAngle.getValue();\n    const sweepAngle = this.sweepAngle.getValue();\n    const cornerRadius = this.cornerRadius.getValue().px(deltaRadius);\n    const dial = new Arc(center, innerRadius, outerRadius, startAngle,\n                         sweepAngle, Angle.zero(), null, cornerRadius);\n\n    context.beginPath();\n    dial.draw(context, frame);\n    if (context.isPointInPath(x, y)) {\n      return this;\n    }\n    return null;\n  }\n\n  override init(init: DialViewInit): void {\n    super.init(init);\n    if (init.value !== void 0) {\n      this.value(init.value);\n    }\n    if (init.limit !== void 0) {\n      this.limit(init.limit);\n    }\n    if (init.center !== void 0) {\n      this.center(init.center);\n    }\n    if (init.innerRadius !== void 0) {\n      this.innerRadius(init.innerRadius);\n    }\n    if (init.outerRadius !== void 0) {\n      this.outerRadius(init.outerRadius);\n    }\n    if (init.startAngle !== void 0) {\n      this.startAngle(init.startAngle);\n    }\n    if (init.sweepAngle !== void 0) {\n      this.sweepAngle(init.sweepAngle);\n    }\n    if (init.cornerRadius !== void 0) {\n      this.cornerRadius(init.cornerRadius);\n    }\n    if (init.dialColor !== void 0) {\n      this.dialColor(init.dialColor);\n    }\n    if (init.meterColor !== void 0) {\n      this.meterColor(init.meterColor);\n    }\n    if (init.labelPadding !== void 0) {\n      this.labelPadding(init.labelPadding);\n    }\n    if (init.tickAlign !== void 0) {\n      this.tickAlign(init.tickAlign);\n    }\n    if (init.tickRadius !== void 0) {\n      this.tickRadius(init.tickRadius);\n    }\n    if (init.tickLength !== void 0) {\n      this.tickLength(init.tickLength);\n    }\n    if (init.tickWidth !== void 0) {\n      this.tickWidth(init.tickWidth);\n    }\n    if (init.tickPadding !== void 0) {\n      this.tickPadding(init.tickPadding);\n    }\n    if (init.tickColor !== void 0) {\n      this.tickColor(init.tickColor);\n    }\n    if (init.font !== void 0) {\n      this.font(init.font);\n    }\n    if (init.textColor !== void 0) {\n      this.textColor(init.textColor);\n    }\n    if (init.arrangement !== void 0) {\n      this.arrangement(init.arrangement);\n    }\n    if (init.label !== void 0) {\n      this.label(init.label);\n    }\n    if (init.legend !== void 0) {\n      this.legend(init.legend);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Trait} from \"@swim/model\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport type {DialTraitObserver} from \"./DialTraitObserver\";\n\n/** @public */\nexport type DialLabel = DialLabelFunction | string;\n/** @public */\nexport type DialLabelFunction = (dialTrait: DialTrait | null) => GraphicsView | string | null;\n\n/** @public */\nexport type DialLegend = DialLegendFunction | string;\n/** @public */\nexport type DialLegendFunction = (dialTrait: DialTrait | null) => GraphicsView | string | null;\n\n/** @public */\nexport class DialTrait extends Trait {\n  override readonly observerType?: Class<DialTraitObserver>;\n\n  @Property<DialTrait, number>({\n    type: Number,\n    value: 0,\n    willSetValue(newValue: number, oldValue: number): void {\n      this.owner.callObservers(\"traitWillSetDialValue\", newValue, oldValue, this.owner);\n    },\n    didSetValue(newValue: number, oldValue: number): void {\n      this.owner.callObservers(\"traitDidSetDialValue\", newValue, oldValue, this.owner);\n    },\n  })\n  readonly value!: Property<this, number>;\n\n  @Property<DialTrait, number>({\n    type: Number,\n    value: 1,\n    willSetValue(newLimit: number, oldLimit: number): void {\n      this.owner.callObservers(\"traitWillSetDialLimit\", newLimit, oldLimit, this.owner);\n    },\n    didSetValue(newLimit: number, oldLimit: number): void {\n      this.owner.callObservers(\"traitDidSetDialLimit\", newLimit, oldLimit, this.owner);\n    },\n  })\n  readonly limit!: Property<this, number>;\n\n  @Property<DialTrait, Look<Color> | Color | null, Look<Color> | AnyColor | null>({\n    value: null,\n    willSetValue(newDialColor: Look<Color> | Color | null, oldDialColor: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"traitWillSetDialColor\", newDialColor, oldDialColor, this.owner);\n    },\n    didSetValue(newDialColor: Look<Color> | Color | null, oldDialColor: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"traitDidSetDialColor\", newDialColor, oldDialColor, this.owner);\n    },\n    fromAny(dialColor: Look<Color> | AnyColor | null): Look<Color> | Color | null {\n      if (dialColor !== null && !(dialColor instanceof Look)) {\n        dialColor = Color.fromAny(dialColor);\n      }\n      return dialColor;\n    },\n  })\n  readonly dialColor!: Property<this, Look<Color> | Color | null, Look<Color> | AnyColor | null>;\n\n  @Property<DialTrait, Look<Color> | Color | null, Look<Color> | AnyColor | null>({\n    value: null,\n    willSetValue(newMeterColor: Look<Color> | Color | null, oldMeterColor: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"traitWillSetMeterColor\", newMeterColor, oldMeterColor, this.owner);\n    },\n    didSetValue(newMeterColor: Look<Color> | Color | null, oldMeterColor: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"traitDidSetMeterColor\", newMeterColor, oldMeterColor, this.owner);\n    },\n    fromAny(meterColor: Look<Color> | AnyColor | null): Look<Color> | Color | null {\n      if (meterColor !== null && !(meterColor instanceof Look)) {\n        meterColor = Color.fromAny(meterColor);\n      }\n      return meterColor;\n    },\n  })\n  readonly meterColor!: Property<this, Look<Color> | Color | null, Look<Color> | AnyColor | null>;\n\n  formatLabel(value: number, limit: number): string | undefined {\n    return void 0;\n  }\n\n  @Property<DialTrait, DialLabel | null>({\n    value: null,\n    willSetValue(newLabel: DialLabel | null, oldLabel: DialLabel | null): void {\n      this.owner.callObservers(\"traitWillSetDialLabel\", newLabel, oldLabel, this.owner);\n    },\n    didSetValue(newLabel: DialLabel | null, oldLabel: DialLabel | null): void {\n      this.owner.callObservers(\"traitDidSetDialLabel\", newLabel, oldLabel, this.owner);\n    },\n  })\n  readonly label!: Property<this, DialLabel | null>;\n\n  formatLegend(value: number, limit: number): string | undefined {\n    return void 0;\n  }\n\n  @Property<DialTrait, DialLegend | null>({\n    value: null,\n    willSetValue(newLegend: DialLegend | null, oldLegend: DialLegend | null): void {\n      this.owner.callObservers(\"traitWillSetDialLegend\", newLegend, oldLegend, this.owner);\n    },\n    didSetValue(newLegend: DialLegend | null, oldLegend: DialLegend | null): void {\n      this.owner.callObservers(\"traitDidSetDialLegend\", newLegend, oldLegend, this.owner);\n    },\n  })\n  readonly legend!: Property<this, DialLegend | null>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Property} from \"@swim/component\";\nimport type {Color} from \"@swim/style\";\nimport {Look, Mood} from \"@swim/theme\";\nimport {ViewRef} from \"@swim/view\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport {Controller, TraitViewRef} from \"@swim/controller\";\nimport {DialView} from \"./DialView\";\nimport {DialLabel, DialLegend, DialTrait} from \"./DialTrait\";\nimport type {DialControllerObserver} from \"./DialControllerObserver\";\n\n/** @public */\nexport class DialController extends Controller {\n  override readonly observerType?: Class<DialControllerObserver>;\n\n  protected updateLabel(value: number, limit: number, dialTrait: DialTrait): void {\n    if (dialTrait.label.hasAffinity(Affinity.Intrinsic)) {\n      const label = dialTrait.formatLabel(value, limit);\n      if (label !== void 0) {\n        dialTrait.label.setValue(label, Affinity.Intrinsic);\n      }\n    }\n  }\n\n  protected updateLegend(value: number, limit: number, dialTrait: DialTrait): void {\n    if (dialTrait.legend.hasAffinity(Affinity.Intrinsic)) {\n      const legend = dialTrait.formatLegend(value, limit);\n      if (legend !== void 0) {\n        dialTrait.legend.setValue(legend, Affinity.Intrinsic);\n      }\n    }\n  }\n\n  protected setValue(value: number, timing?: AnyTiming | boolean): void {\n    const dialView = this.dial.view;\n    if (dialView !== null && dialView.value.hasAffinity(Affinity.Intrinsic)) {\n      if (timing === void 0 || timing === true) {\n        timing = this.dialTiming.value;\n        if (timing === true) {\n          timing = dialView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      dialView.value.setState(value, timing, Affinity.Intrinsic);\n    }\n  }\n\n  protected setLimit(limit: number, timing?: AnyTiming | boolean): void {\n    const dialView = this.dial.view;\n    if (dialView !== null && dialView.limit.hasAffinity(Affinity.Intrinsic)) {\n      if (timing === void 0 || timing === true) {\n        timing = this.dialTiming.value;\n        if (timing === true) {\n          timing = dialView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      dialView.limit.setState(limit, timing, Affinity.Intrinsic);\n    }\n  }\n\n  protected setDialColor(dialColor: Look<Color> | Color | null, timing?: AnyTiming | boolean): void {\n    const dialView = this.dial.view;\n    if (dialView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.dialTiming.value;\n        if (timing === true) {\n          timing = dialView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      if (dialColor instanceof Look) {\n        dialView.dialColor.setLook(dialColor, timing, Affinity.Intrinsic);\n      } else {\n        dialView.dialColor.setState(dialColor, timing, Affinity.Intrinsic);\n      }\n    }\n  }\n\n  protected setMeterColor(meterColor: Look<Color> | Color | null, timing?: AnyTiming | boolean): void {\n    const dialView = this.dial.view;\n    if (dialView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.dialTiming.value;\n        if (timing === true) {\n          timing = dialView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      if (meterColor instanceof Look) {\n        dialView.meterColor.setLook(meterColor, timing, Affinity.Intrinsic);\n      } else {\n        dialView.meterColor.setState(meterColor, timing, Affinity.Intrinsic);\n      }\n    }\n  }\n\n  protected createLabelView(label: DialLabel): GraphicsView | string | null {\n    if (typeof label === \"function\") {\n      return label(this.dial.trait);\n    } else {\n      return label;\n    }\n  }\n\n  protected setLabelView(label: DialLabel | null): void {\n    const dialView = this.dial.view;\n    if (dialView !== null) {\n      const labelView = label !== null ? this.createLabelView(label) : null;\n      dialView.label.setView(labelView);\n    }\n  }\n\n  protected createLegendView(legend: DialLegend): GraphicsView | string | null {\n    if (typeof legend === \"function\") {\n      return legend(this.dial.trait);\n    } else {\n      return legend;\n    }\n  }\n\n  protected setLegendView(legend: DialLegend | null): void {\n    const dialView = this.dial.view;\n    if (dialView !== null) {\n      const legendView = legend !== null ? this.createLegendView(legend) : null;\n      dialView.legend.setView(legendView);\n    }\n  }\n\n  @Property({type: Timing, inherits: true})\n  readonly dialTiming!: Property<this, Timing | boolean | undefined, AnyTiming>;\n\n  @TraitViewRef<DialController, DialTrait, DialView>({\n    traitType: DialTrait,\n    observesTrait: true,\n    willAttachTrait(dialTrait: DialTrait): void {\n      this.owner.callObservers(\"controllerWillAttachDialTrait\", dialTrait, this.owner);\n    },\n    didAttachTrait(dialTrait: DialTrait): void {\n      const dialView = this.view;\n      if (dialView !== null) {\n        this.owner.setValue(dialTrait.value.value);\n        this.owner.setLimit(dialTrait.limit.value);\n        const dialColor = dialTrait.dialColor.value;\n        if (dialColor !== null) {\n          this.owner.setDialColor(dialColor);\n        }\n        const meterColor = dialTrait.meterColor.value;\n        if (meterColor !== null) {\n          this.owner.setMeterColor(meterColor);\n        }\n        this.owner.setLabelView(dialTrait.label.value);\n        this.owner.setLegendView(dialTrait.legend.value);\n      }\n    },\n    didDetachTrait(dialTrait: DialTrait): void {\n      this.owner.callObservers(\"controllerDidDetachDialTrait\", dialTrait, this.owner);\n    },\n    traitDidSetDialValue(newValue: number, oldValue: number): void {\n      this.owner.setValue(newValue);\n    },\n    traitDidSetDialLimit(newLimit: number, oldLimit: number): void {\n      this.owner.setLimit(newLimit);\n    },\n    traitDidSetDialColor(newDialColor: Look<Color> | Color | null, oldDialColor: Look<Color> | Color | null): void {\n      this.owner.setDialColor(newDialColor);\n    },\n    traitDidSetMeterColor(newMeterColor: Look<Color> | Color | null, oldMeterColor: Look<Color> | Color | null): void {\n      this.owner.setMeterColor(newMeterColor);\n    },\n    traitDidSetDialLabel(newLabel: DialLabel | null, oldLabel: DialLabel | null): void {\n      this.owner.setLabelView(newLabel);\n    },\n    traitDidSetDialLegend(newLegend: DialLegend | null, oldLegend: DialLegend | null): void {\n      this.owner.setLegendView(newLegend);\n    },\n    viewType: DialView,\n    observesView: true,\n    willAttachView(dialView: DialView): void {\n      this.owner.callObservers(\"controllerWillAttachDialView\", dialView, this.owner);\n    },\n    didAttachView(dialView: DialView): void {\n      const dialTrait = this.trait;\n      if (dialTrait !== null) {\n        const dialColor = dialTrait.dialColor.value;\n        if (dialColor !== null) {\n          this.owner.setDialColor(dialColor);\n        }\n        const meterColor = dialTrait.meterColor.value;\n        if (meterColor !== null) {\n          this.owner.setMeterColor(meterColor);\n        }\n      }\n      this.owner.label.setView(dialView.label.view);\n      this.owner.legend.setView(dialView.legend.view);\n      if (dialTrait !== null) {\n        const value = dialView.value.value;\n        const limit = dialView.limit.value;\n        this.owner.updateLabel(value, limit, dialTrait);\n        this.owner.updateLegend(value, limit, dialTrait);\n        this.owner.setValue(dialTrait.value.value);\n        this.owner.setLimit(dialTrait.limit.value);\n        this.owner.setLabelView(dialTrait.label.value);\n        this.owner.setLegendView(dialTrait.legend.value);\n      }\n    },\n    willDetachView(dialView: DialView): void {\n      this.owner.label.setView(null);\n      this.owner.legend.setView(null);\n    },\n    didDetachView(dialView: DialView): void {\n      this.owner.callObservers(\"controllerDidDetachDialView\", dialView, this.owner);\n    },\n    viewWillSetDialValue(newValue: number, oldValue: number, dialView: DialView): void {\n      this.owner.callObservers(\"controllerWillSetDialValue\", newValue, oldValue, this.owner);\n    },\n    viewDidSetDialValue(newValue: number, oldValue: number, dialView: DialView): void {\n      const dialTrait = this.trait;\n      if (dialTrait !== null) {\n        const limit = dialView.limit.value;\n        this.owner.updateLabel(newValue, limit, dialTrait);\n        this.owner.updateLegend(newValue, limit, dialTrait);\n      }\n      this.owner.callObservers(\"controllerDidSetDialValue\", newValue, oldValue, this.owner);\n    },\n    viewWillSetDialLimit(newLimit: number, oldLimit: number, dialView: DialView): void {\n      this.owner.callObservers(\"controllerWillSetDialLimit\", newLimit, oldLimit, this.owner);\n    },\n    viewDidSetDialLimit(newLimit: number, oldLimit: number, dialView: DialView): void {\n      const dialTrait = this.trait;\n      if (dialTrait !== null) {\n        const value = dialView.value.value;\n        this.owner.updateLabel(value, newLimit, dialTrait);\n        this.owner.updateLegend(value, newLimit, dialTrait);\n      }\n      this.owner.callObservers(\"controllerDidSetDialLimit\", newLimit, oldLimit, this.owner);\n    },\n    viewWillAttachDialLabel(labelView: GraphicsView): void {\n      this.owner.label.setView(labelView);\n    },\n    viewDidDetachDialLabel(labelView: GraphicsView): void {\n      this.owner.label.setView(null);\n    },\n    viewWillAttachDialLegend(legendView: GraphicsView): void {\n      this.owner.legend.setView(legendView);\n    },\n    viewDidDetachDialLegend(legendView: GraphicsView): void {\n      this.owner.legend.setView(null);\n    },\n  })\n  readonly dial!: TraitViewRef<this, DialTrait, DialView>;\n  static readonly dial: MemberFastenerClass<DialController, \"dial\">;\n\n  @ViewRef<DialController, GraphicsView>({\n    key: true,\n    willAttachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"controllerWillAttachDialLabelView\", labelView, this.owner);\n    },\n    didDetachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"controllerDidDetachDialLabelView\", labelView, this.owner);\n    },\n  })\n  readonly label!: ViewRef<this, GraphicsView>;\n  static readonly label: MemberFastenerClass<DialController, \"label\">;\n\n  @ViewRef<DialController, GraphicsView>({\n    key: true,\n    willAttachView(legendView: GraphicsView): void {\n      this.owner.callObservers(\"controllerWillAttachDialLegendView\", legendView, this.owner);\n    },\n    didDetachView(legendView: GraphicsView): void {\n      this.owner.callObservers(\"controllerDidDetachDialLegendView\", legendView, this.owner);\n    },\n  })\n  readonly legend!: ViewRef<this, GraphicsView>;\n  static readonly legend: MemberFastenerClass<DialController, \"legend\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class, Initable} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Animator} from \"@swim/component\";\nimport {AnyLength, Length, AnyAngle, Angle, AnyR2Point, R2Point, R2Box} from \"@swim/math\";\nimport {AnyFont, Font, AnyColor, Color} from \"@swim/style\";\nimport {Look, ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, AnyView, View, ViewRef, ViewSet} from \"@swim/view\";\nimport {GraphicsViewInit, GraphicsView, TypesetView, TextRunView} from \"@swim/graphics\";\nimport {AnyDialView, DialView} from \"../dial/DialView\";\nimport type {GaugeViewObserver} from \"./GaugeViewObserver\";\n\n/** @public */\nexport type AnyGaugeView = GaugeView | GaugeViewInit;\n\n/** @public */\nexport interface GaugeViewInit extends GraphicsViewInit {\n  limit?: number;\n  center?: AnyR2Point;\n  innerRadius?: AnyLength;\n  outerRadius?: AnyLength;\n  startAngle?: AnyAngle;\n  sweepAngle?: AnyAngle;\n  cornerRadius?: AnyLength;\n  dialSpacing?: AnyLength;\n  dialColor?: AnyColor;\n  meterColor?: AnyColor;\n  labelPadding?: AnyLength;\n  tickAlign?: number;\n  tickRadius?: AnyLength;\n  tickLength?: AnyLength;\n  tickWidth?: AnyLength;\n  tickPadding?: AnyLength;\n  tickColor?: AnyColor;\n  font?: AnyFont;\n  textColor?: AnyColor;\n  title?: GraphicsView | string;\n  dials?: AnyDialView[];\n}\n\n/** @public */\nexport interface GaugeViewDialExt {\n  attachLabelView(labelView: GraphicsView): void;\n  detachLabelView(labelView: GraphicsView): void;\n  attachLegendView(legendView: GraphicsView): void;\n  detachLegendView(legendView: GraphicsView): void;\n}\n\n/** @public */\nexport class GaugeView extends GraphicsView {\n  override readonly observerType?: Class<GaugeViewObserver>;\n\n  @Animator({type: Number, value: 0, updateFlags: View.NeedsLayout})\n  readonly limit!: Animator<this, number>;\n\n  @Animator({type: R2Point, value: R2Point.origin(), updateFlags: View.NeedsLayout})\n  readonly center!: Animator<this, R2Point, AnyR2Point>;\n\n  @ThemeAnimator({type: Length, value: Length.pct(30), updateFlags: View.NeedsLayout})\n  readonly innerRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, value: Length.pct(40), updateFlags: View.NeedsLayout})\n  readonly outerRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Angle, value: Angle.rad(-Math.PI / 2), updateFlags: View.NeedsLayout})\n  readonly startAngle!: ThemeAnimator<this, Angle, AnyAngle>;\n\n  @ThemeAnimator({type: Angle, value: Angle.rad(2 * Math.PI), updateFlags: View.NeedsLayout})\n  readonly sweepAngle!: ThemeAnimator<this, Angle, AnyAngle>;\n\n  @ThemeAnimator({type: Length, value: Length.pct(50)})\n  readonly cornerRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, value: Length.px(1), updateFlags: View.NeedsLayout})\n  readonly dialSpacing!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Color, value: null, look: Look.subduedColor})\n  readonly dialColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Color, value: null, look: Look.accentColor})\n  readonly meterColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Length, value: Length.pct(25)})\n  readonly labelPadding!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Number, value: 1.0})\n  readonly tickAlign!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Length, value: Length.pct(45)})\n  readonly tickRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, value: Length.pct(50)})\n  readonly tickLength!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, value: Length.px(1)})\n  readonly tickWidth!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, value: Length.px(2)})\n  readonly tickPadding!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Color, value: null, look: Look.neutralColor})\n  readonly tickColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Font, value: null, inherits: true})\n  readonly font!: ThemeAnimator<this, Font | null, AnyFont | null>;\n\n  @ThemeAnimator({type: Color, value: null, look: Look.mutedColor})\n  readonly textColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ViewRef<GaugeView, GraphicsView & Initable<GraphicsViewInit | string>>({\n    key: true,\n    type: TextRunView,\n    binds: true,\n    initView(titleView: GraphicsView): void {\n      if (TypesetView.is(titleView)) {\n        titleView.textAlign.setState(\"center\", Affinity.Intrinsic);\n        titleView.textBaseline.setState(\"middle\", Affinity.Intrinsic);\n        titleView.textOrigin.setState(this.owner.center.state, Affinity.Intrinsic);\n      }\n    },\n    willAttachView(titleView: GraphicsView): void {\n      this.owner.callObservers(\"viewWillAttachGaugeTitle\", titleView, this.owner);\n    },\n    didDetachView(titleView: GraphicsView): void {\n      this.owner.callObservers(\"viewDidDetachGaugeTitle\", titleView, this.owner);\n    },\n    fromAny(value: AnyView<GraphicsView> | string): GraphicsView {\n      if (typeof value === \"string\") {\n        if (this.view instanceof TextRunView) {\n          this.view.text(value);\n          return this.view;\n        } else {\n          return TextRunView.fromAny(value);\n        }\n      } else {\n        return GraphicsView.fromAny(value);\n      }\n    },\n  })\n  readonly title!: ViewRef<this, GraphicsView & Initable<GraphicsViewInit | string>>;\n  static readonly title: MemberFastenerClass<GaugeView, \"title\">;\n\n  @ViewSet<GaugeView, DialView, GaugeViewDialExt>({\n    implements: true,\n    type: DialView,\n    binds: true,\n    observes: true,\n    willAttachView(dialView: DialView, targetView: View | null): void {\n      this.owner.callObservers(\"viewWillAttachDial\", dialView, targetView, this.owner);\n    },\n    didAttachView(dialView: DialView): void {\n      const labelView = dialView.label.view;\n      if (labelView !== null) {\n        this.attachLabelView(labelView);\n      }\n      const legendView = dialView.legend.view;\n      if (legendView !== null) {\n        this.attachLegendView(legendView);\n      }\n    },\n    willDetachView(dialView: DialView): void {\n      const legendView = dialView.legend.view;\n      if (legendView !== null) {\n        this.detachLegendView(legendView);\n      }\n      const labelView = dialView.label.view;\n      if (labelView !== null) {\n        this.detachLabelView(labelView);\n      }\n    },\n    didDetachView(dialView: DialView): void {\n      this.owner.callObservers(\"viewDidDetachDial\", dialView, this.owner);\n    },\n    viewDidSetDialValue(newValue: number, oldValue: number): void {\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    viewWillAttachDialLabel(labelView: GraphicsView): void {\n      this.attachLabelView(labelView);\n    },\n    viewDidDetachDialLabel(labelView: GraphicsView): void {\n      this.detachLabelView(labelView);\n    },\n    attachLabelView(labelView: GraphicsView): void {\n      // hook\n    },\n    detachLabelView(labelView: GraphicsView): void {\n      // hook\n    },\n    viewWillAttachDialLegend(legendView: GraphicsView): void {\n      this.attachLegendView(legendView);\n    },\n    viewDidDetachDialLegend(legendView: GraphicsView): void {\n      this.detachLegendView(legendView);\n    },\n    attachLegendView(legendView: GraphicsView): void {\n      // hook\n    },\n    detachLegendView(legendView: GraphicsView): void {\n      // hook\n    },\n  })\n  readonly dials!: ViewSet<this, DialView> & GaugeViewDialExt;\n  static readonly dials: MemberFastenerClass<GaugeView, \"dials\">;\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.layoutGauge(this.viewFrame);\n  }\n\n  protected layoutGauge(frame: R2Box): void {\n    if (this.center.hasAffinity(Affinity.Intrinsic)) {\n      const cx = (frame.xMin + frame.xMax) / 2;\n      const cy = (frame.yMin + frame.yMax) / 2;\n      this.center.setState(new R2Point(cx, cy), Affinity.Intrinsic);\n    }\n\n    const dialViews = this.dials.views;\n\n    let autoCount = 0;\n    for (const viewId in dialViews) {\n      const dialView = dialViews[viewId]!;\n      if (dialView.arrangement.value === \"auto\") {\n        autoCount += 1;\n      }\n    }\n\n    const size = Math.min(frame.width, frame.height);\n    const gaugeLimit = this.limit.getValue();\n    const startAngle = this.startAngle.getValue();\n    const sweepAngle = this.sweepAngle.getValue();\n    let r0 = this.innerRadius.getValue().pxValue(size);\n    const r1 = this.outerRadius.getValue().pxValue(size);\n    const rs = this.dialSpacing.getValue().pxValue(size);\n    const dr = autoCount > 1 ? (r1 - r0 - rs * (autoCount - 1)) / autoCount : r1 - r0;\n\n    for (const viewId in dialViews) {\n      const dialView = dialViews[viewId]!;\n      if (dialView.arrangement.value === \"auto\") {\n        if (isFinite(gaugeLimit)) {\n          const dialLimit = dialView.limit.getValue();\n          dialView.limit.setState(Math.max(dialLimit, gaugeLimit), Affinity.Intrinsic);\n        }\n        dialView.startAngle.setState(startAngle, Affinity.Intrinsic);\n        dialView.sweepAngle.setState(sweepAngle, Affinity.Intrinsic);\n        dialView.innerRadius.setState(Length.px(r0), Affinity.Intrinsic);\n        dialView.outerRadius.setState(Length.px(r0 + dr), Affinity.Intrinsic);\n        r0 = r0 + dr + rs;\n      }\n    }\n\n    const titleView = this.title.view;\n    if (TypesetView.is(titleView)) {\n      titleView.textOrigin.setState(this.center.state, Affinity.Intrinsic);\n    }\n  }\n\n  override init(init: GaugeViewInit): void {\n    super.init(init);\n    if (init.limit !== void 0) {\n      this.limit(init.limit);\n    }\n    if (init.innerRadius !== void 0) {\n      this.innerRadius(init.innerRadius);\n    }\n    if (init.outerRadius !== void 0) {\n      this.outerRadius(init.outerRadius);\n    }\n    if (init.startAngle !== void 0) {\n      this.startAngle(init.startAngle);\n    }\n    if (init.sweepAngle !== void 0) {\n      this.sweepAngle(init.sweepAngle);\n    }\n    if (init.cornerRadius !== void 0) {\n      this.cornerRadius(init.cornerRadius);\n    }\n    if (init.dialSpacing !== void 0) {\n      this.dialSpacing(init.dialSpacing);\n    }\n    if (init.dialColor !== void 0) {\n      this.dialColor(init.dialColor);\n    }\n    if (init.meterColor !== void 0) {\n      this.meterColor(init.meterColor);\n    }\n    if (init.labelPadding !== void 0) {\n      this.labelPadding(init.labelPadding);\n    }\n    if (init.tickAlign !== void 0) {\n      this.tickAlign(init.tickAlign);\n    }\n    if (init.tickRadius !== void 0) {\n      this.tickRadius(init.tickRadius);\n    }\n    if (init.tickLength !== void 0) {\n      this.tickLength(init.tickLength);\n    }\n    if (init.tickWidth !== void 0) {\n      this.tickWidth(init.tickWidth);\n    }\n    if (init.tickPadding !== void 0) {\n      this.tickPadding(init.tickPadding);\n    }\n    if (init.tickColor !== void 0) {\n      this.tickColor(init.tickColor);\n    }\n    if (init.font !== void 0) {\n      this.font(init.font);\n    }\n    if (init.textColor !== void 0) {\n      this.textColor(init.textColor);\n    }\n    if (init.title !== void 0) {\n      this.title(init.title);\n    }\n    const dials = init.dials;\n    if (dials !== void 0) {\n      for (let i = 0, n = dials.length; i < n; i += 1) {\n        const dial = dials[i]!;\n        this.appendChild(DialView.fromAny(dial), dial.key);\n      }\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {MemberFastenerClass, Property} from \"@swim/component\";\nimport {Model, Trait, TraitSet} from \"@swim/model\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport {DialTrait} from \"../dial/DialTrait\";\nimport type {GaugeTraitObserver} from \"./GaugeTraitObserver\";\n\n/** @public */\nexport type GaugeTitle = GaugeTitleFunction | string;\n/** @public */\nexport type GaugeTitleFunction = (gaugeTrait: GaugeTrait) => GraphicsView | string | null;\n\n/** @public */\nexport class GaugeTrait extends Trait {\n  override readonly observerType?: Class<GaugeTraitObserver>;\n\n  @Property<GaugeTrait, GaugeTitle | null>({\n    value: null,\n    willSetValue(newTitle: GaugeTitle | null, oldTitle: GaugeTitle | null): void {\n      this.owner.callObservers(\"traitWillSetGaugeTitle\", newTitle, oldTitle, this.owner);\n    },\n    didSetValue(newTitle: GaugeTitle | null, oldTitle: GaugeTitle | null): void {\n      this.owner.callObservers(\"traitDidSetGaugeTitle\", newTitle, oldTitle, this.owner);\n    },\n  })\n  readonly title!: Property<this, GaugeTitle | null>;\n  static readonly title: MemberFastenerClass<GaugeTrait, \"title\">;\n\n  @Property<GaugeTrait, number>({\n    value: 0,\n    willSetValue(newLimit: number, oldLimit: number): void {\n      this.owner.callObservers(\"traitWillSetGaugeLimit\", newLimit, oldLimit, this.owner);\n    },\n    didSetValue(newLimit: number, oldLimit: number): void {\n      this.owner.callObservers(\"traitDidSetGaugeLimit\", newLimit, oldLimit, this.owner);\n    },\n  })\n  readonly limit!: Property<this, number>;\n  static readonly limit: MemberFastenerClass<GaugeTrait, \"limit\">;\n\n  @TraitSet<GaugeTrait, DialTrait>({\n    type: DialTrait,\n    binds: true,\n    willAttachTrait(dialTrait: DialTrait, targetTrait: Trait | null): void {\n      this.owner.callObservers(\"traitWillAttachDial\", dialTrait, targetTrait, this.owner);\n    },\n    didAttachTrait(dialTrait: DialTrait): void {\n      if (this.owner.consuming) {\n        dialTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(dialTrait: DialTrait): void {\n      if (this.owner.consuming) {\n        dialTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(dialTrait: DialTrait): void {\n      this.owner.callObservers(\"traitDidDetachDial\", dialTrait, this.owner);\n    },\n    detectModel(model: Model): DialTrait | null {\n      return model.getTrait(DialTrait);\n    },\n  })\n  readonly dials!: TraitSet<this, DialTrait>;\n  static readonly dials: MemberFastenerClass<GaugeTrait, \"dials\">;\n\n  /** @internal */\n  protected startConsumingDials(): void {\n    const dialTraits = this.dials.traits;\n    for (const traitId in dialTraits) {\n      const dialTrait = dialTraits[traitId]!;\n      dialTrait.consume(this);\n    }\n  }\n\n  /** @internal */\n  protected stopConsumingDials(): void {\n    const dialTraits = this.dials.traits;\n    for (const traitId in dialTraits) {\n      const dialTrait = dialTraits[traitId]!;\n      dialTrait.unconsume(this);\n    }\n  }\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    this.startConsumingDials();\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    this.stopConsumingDials();\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, AnyTiming, Timing} from \"@swim/util\";\nimport {MemberFastenerClass, Property} from \"@swim/component\";\nimport type {Trait} from \"@swim/model\";\nimport {ViewRef} from \"@swim/view\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport {Controller, TraitViewRef, TraitViewControllerSet} from \"@swim/controller\";\nimport type {DialView} from \"../dial/DialView\";\nimport type {DialTrait} from \"../dial/DialTrait\";\nimport {DialController} from \"../dial/DialController\";\nimport {GaugeView} from \"./GaugeView\";\nimport {GaugeTitle, GaugeTrait} from \"./GaugeTrait\";\nimport type {GaugeControllerObserver} from \"./GaugeControllerObserver\";\n\n/** @public */\nexport interface GaugeControllerDialExt {\n  attachDialTrait(dialTrait: DialTrait, dialController: DialController): void;\n  detachDialTrait(dialTrait: DialTrait, dialController: DialController): void;\n  attachDialView(dialView: DialView, dialController: DialController): void;\n  detachDialView(dialView: DialView, dialController: DialController): void;\n  attachDialLabelView(labelView: GraphicsView, dialController: DialController): void;\n  detachDialLabelView(labelView: GraphicsView, dialController: DialController): void;\n  attachDialLegendView(legendView: GraphicsView, dialController: DialController): void;\n  detachDialLegendView(legendView: GraphicsView, dialController: DialController): void;\n}\n\n/** @public */\nexport class GaugeController extends Controller {\n  override readonly observerType?: Class<GaugeControllerObserver>;\n\n  protected createTitleView(title: GaugeTitle, gaugeTrait: GaugeTrait): GraphicsView | string | null {\n    if (typeof title === \"function\") {\n      return title(gaugeTrait);\n    } else {\n      return title;\n    }\n  }\n\n  protected setTitleView(title: GaugeTitle | null, gaugeTrait: GaugeTrait): void {\n    const gaugeView = this.gauge.view;\n    if (gaugeView !== null) {\n      const titleView = title !== null ? this.createTitleView(title, gaugeTrait) : null;\n      gaugeView.title.setView(titleView);\n    }\n  }\n\n  protected setLimit(limit: number): void {\n    const gaugeView = this.gauge.view;\n    if (gaugeView !== null) {\n      gaugeView.limit.setState(limit);\n    }\n  }\n\n  @TraitViewRef<GaugeController, GaugeTrait, GaugeView>({\n    traitType: GaugeTrait,\n    observesTrait: true,\n    willAttachTrait(gaugeTrait: GaugeTrait): void {\n      this.owner.callObservers(\"controllerWillAttachGaugeTrait\", gaugeTrait, this.owner);\n    },\n    didAttachTrait(gaugeTrait: GaugeTrait): void {\n      const dialTraits = gaugeTrait.dials.traits;\n      for (const traitId in dialTraits) {\n        const dialTrait = dialTraits[traitId]!;\n        this.owner.dials.addTraitController(dialTrait);\n      }\n      const gaugeView = this.view;\n      if (gaugeView !== null) {\n        this.owner.setTitleView(gaugeTrait.title.value, gaugeTrait);\n        this.owner.setLimit(gaugeTrait.limit.value);\n      }\n    },\n    willDetachTrait(gaugeTrait: GaugeTrait): void {\n      const gaugeView = this.view;\n      if (gaugeView !== null) {\n        this.owner.setTitleView(null, gaugeTrait);\n        this.owner.setLimit(0);\n      }\n      const dialTraits = gaugeTrait.dials.traits;\n      for (const traitId in dialTraits) {\n        const dialTrait = dialTraits[traitId]!;\n        this.owner.dials.deleteTraitController(dialTrait);\n      }\n    },\n    didDetachTrait(gaugeTrait: GaugeTrait): void {\n      this.owner.callObservers(\"controllerDidDetachGaugeTrait\", gaugeTrait, this.owner);\n    },\n    traitDidSetGaugeTitle(newTitle: GaugeTitle | null, oldTitle: GaugeTitle | null, gaugeTrait: GaugeTrait): void {\n      this.owner.setTitleView(newTitle, gaugeTrait);\n    },\n    traitDidSetGaugeLimit(newLimit: number, oldLimit: number, gaugeTrait: GaugeTrait): void {\n      this.owner.setLimit(newLimit);\n    },\n    traitWillAttachDial(dialTrait: DialTrait, targetTrait: Trait): void {\n      this.owner.dials.addTraitController(dialTrait, targetTrait);\n    },\n    traitDidDetachDial(dialTrait: DialTrait): void {\n      this.owner.dials.deleteTraitController(dialTrait);\n    },\n    viewType: GaugeView,\n    observesView: true,\n    initView(gaugeView: GaugeView): void {\n      const dialControllers = this.owner.dials.controllers;\n      for (const controllerId in dialControllers) {\n        const dialController = dialControllers[controllerId]!;\n        const dialView = dialController.dial.view;\n        if (dialView !== null && dialView.parent === null) {\n          dialController.dial.insertView(gaugeView);\n        }\n      }\n      this.owner.title.setView(gaugeView.title.view);\n      const gaugeTrait = this.trait;\n      if (gaugeTrait !== null) {\n        this.owner.setTitleView(gaugeTrait.title.value, gaugeTrait);\n        this.owner.setLimit(gaugeTrait.limit.value);\n      }\n    },\n    deinitView(gaugeView: GaugeView): void {\n      this.owner.title.setView(null);\n    },\n    willAttachView(gaugeView: GaugeView): void {\n      this.owner.callObservers(\"controllerWillAttachGaugeView\", gaugeView, this.owner);\n    },\n    didDetachView(gaugeView: GaugeView): void {\n      this.owner.callObservers(\"controllerDidDetachGaugeView\", gaugeView, this.owner);\n    },\n    viewWillAttachGaugeTitle(titleView: GraphicsView): void {\n      this.owner.title.setView(titleView);\n    },\n    viewDidDetachGaugeTitle(titleView: GraphicsView): void {\n      this.owner.title.setView(null);\n    },\n  })\n  readonly gauge!: TraitViewRef<this, GaugeTrait, GaugeView>;\n  static readonly gauge: MemberFastenerClass<GaugeController, \"gauge\">;\n\n  @ViewRef<GaugeController, GraphicsView>({\n    key: true,\n    willAttachView(titleView: GraphicsView): void {\n      this.owner.callObservers(\"controllerWillAttachGaugeTitleView\", titleView, this.owner);\n    },\n    didDetachView(titleView: GraphicsView): void {\n      this.owner.callObservers(\"controllerDidDetachGaugeTitleView\", titleView, this.owner);\n    },\n  })\n  readonly title!: ViewRef<this, GraphicsView>;\n  static readonly title: MemberFastenerClass<GaugeController, \"title\">;\n\n  @Property({type: Timing, value: true})\n  readonly dialTiming!: Property<this, Timing | boolean | undefined, AnyTiming>;\n\n  @TraitViewControllerSet<GaugeController, DialTrait, DialView, DialController, GaugeControllerDialExt>({\n    implements: true,\n    type: DialController,\n    binds: true,\n    observes: true,\n    get parentView(): GaugeView | null {\n      return this.owner.gauge.view;\n    },\n    getTraitViewRef(dialController: DialController): TraitViewRef<unknown, DialTrait, DialView> {\n      return dialController.dial;\n    },\n    willAttachController(dialController: DialController): void {\n      this.owner.callObservers(\"controllerWillAttachDial\", dialController, this.owner);\n    },\n    didAttachController(dialController: DialController): void {\n      const dialTrait = dialController.dial.trait;\n      if (dialTrait !== null) {\n        this.attachDialTrait(dialTrait, dialController);\n      }\n      const dialView = dialController.dial.view;\n      if (dialView !== null) {\n        this.attachDialView(dialView, dialController);\n      }\n    },\n    willDetachController(dialController: DialController): void {\n      const dialView = dialController.dial.view;\n      if (dialView !== null) {\n        this.detachDialView(dialView, dialController);\n      }\n      const dialTrait = dialController.dial.trait;\n      if (dialTrait !== null) {\n        this.detachDialTrait(dialTrait, dialController);\n      }\n    },\n    didDetachController(dialController: DialController): void {\n      this.owner.callObservers(\"controllerDidDetachDial\", dialController, this.owner);\n    },\n    controllerWillAttachDialTrait(dialTrait: DialTrait, dialController: DialController): void {\n      this.owner.callObservers(\"controllerWillAttachDialTrait\", dialTrait, dialController, this.owner);\n      this.attachDialTrait(dialTrait, dialController);\n    },\n    controllerDidDetachDialTrait(dialTrait: DialTrait, dialController: DialController): void {\n      this.detachDialTrait(dialTrait, dialController);\n      this.owner.callObservers(\"controllerDidDetachDialTrait\", dialTrait, dialController, this.owner);\n    },\n    attachDialTrait(dialTrait: DialTrait, dialController: DialController): void {\n      // hook\n    },\n    detachDialTrait(dialTrait: DialTrait, dialController: DialController): void {\n      // hook\n    },\n    controllerWillAttachDialView(dialView: DialView, dialController: DialController): void {\n      this.owner.callObservers(\"controllerWillAttachDialView\", dialView, dialController, this.owner);\n      this.attachDialView(dialView, dialController);\n    },\n    controllerDidDetachDialView(dialView: DialView, dialController: DialController): void {\n      this.detachDialView(dialView, dialController);\n      this.owner.callObservers(\"controllerDidDetachDialView\", dialView, dialController, this.owner);\n    },\n    attachDialView(dialView: DialView, dialController: DialController): void {\n      const labelView = dialView.label.view;\n      if (labelView !== null) {\n        this.attachDialLabelView(labelView, dialController);\n      }\n      const legendView = dialView.legend.view;\n      if (legendView !== null) {\n        this.attachDialLegendView(legendView, dialController);\n      }\n    },\n    detachDialView(dialView: DialView, dialController: DialController): void {\n      const legendView = dialView.legend.view;\n      if (legendView !== null) {\n        this.detachDialLegendView(legendView, dialController);\n      }\n      const labelView = dialView.label.view;\n      if (labelView !== null) {\n        this.detachDialLabelView(labelView, dialController);\n      }\n      dialView.remove();\n    },\n    controllerWillSetDialValue(newValue: number, oldValue: number, dialController: DialController): void {\n      this.owner.callObservers(\"controllerWillSetDialValue\", newValue, oldValue, dialController, this.owner);\n    },\n    controllerDidSetDialValue(newValue: number, oldValue: number, dialController: DialController): void {\n      this.owner.callObservers(\"controllerDidSetDialValue\", newValue, oldValue, dialController, this.owner);\n    },\n    controllerWillSetDialLimit(newLimit: number, oldLimit: number, dialController: DialController): void {\n      this.owner.callObservers(\"controllerWillSetDialLimit\", newLimit, oldLimit, dialController, this.owner);\n    },\n    controllerDidSetDialLimit(newLimit: number, oldLimit: number, dialController: DialController): void {\n      this.owner.callObservers(\"controllerDidSetDialLimit\", newLimit, oldLimit, dialController, this.owner);\n    },\n    controllerWillAttachDialLabelView(labelView: GraphicsView, dialController: DialController): void {\n      this.owner.callObservers(\"controllerWillAttachDialLabelView\", labelView, dialController, this.owner);\n      this.attachDialLabelView(labelView, dialController);\n    },\n    controllerDidDetachDialLabelView(labelView: GraphicsView, dialController: DialController): void {\n      this.detachDialLabelView(labelView, dialController);\n      this.owner.callObservers(\"controllerDidDetachDialLabelView\", labelView, dialController, this.owner);\n    },\n    attachDialLabelView(labelView: GraphicsView, dialController: DialController): void {\n      // hook\n    },\n    detachDialLabelView(labelView: GraphicsView, dialController: DialController): void {\n      // hook\n    },\n    controllerWillAttachDialLegendView(legendView: GraphicsView, dialController: DialController): void {\n      this.owner.callObservers(\"controllerWillAttachDialLegendView\", legendView, dialController, this.owner);\n      this.attachDialLegendView(legendView, dialController);\n    },\n    controllerDidDetachDialLegendView(legendView: GraphicsView, dialController: DialController): void {\n      this.detachDialLegendView(legendView, dialController);\n      this.owner.callObservers(\"controllerDidDetachDialLegendView\", legendView, dialController, this.owner);\n    },\n    attachDialLegendView(legendView: GraphicsView, dialController: DialController): void {\n      // hook\n    },\n    detachDialLegendView(legendView: GraphicsView, dialController: DialController): void {\n      // hook\n    },\n  })\n  readonly dials!: TraitViewControllerSet<this, DialTrait, DialView, DialController> & GaugeControllerDialExt;\n  static readonly dials: MemberFastenerClass<GaugeController, \"dials\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, Equivalent, Initable} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Animator} from \"@swim/component\";\nimport {AnyLength, Length, AnyAngle, Angle, AnyR2Point, R2Point, R2Box} from \"@swim/math\";\nimport {AnyFont, Font, AnyColor, Color} from \"@swim/style\";\nimport {Look, ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, AnyView, View, ViewRef} from \"@swim/view\";\nimport {\n  GraphicsViewInit,\n  GraphicsView,\n  PaintingContext,\n  PaintingRenderer,\n  CanvasContext,\n  CanvasRenderer,\n  FillView,\n  Arc,\n  TypesetView,\n  TextRunView,\n} from \"@swim/graphics\";\nimport type {SliceViewObserver} from \"./SliceViewObserver\";\n\n/** @public */\nexport type AnySliceView = SliceView | SliceViewInit;\n\n/** @public */\nexport interface SliceViewInit extends GraphicsViewInit {\n  value?: number;\n  total?: number;\n  center?: AnyR2Point;\n  innerRadius?: AnyLength;\n  outerRadius?: AnyLength;\n  phaseAngle?: AnyAngle;\n  padAngle?: AnyAngle;\n  padRadius?: AnyLength | null;\n  cornerRadius?: AnyLength;\n  labelRadius?: AnyLength;\n  sliceColor?: AnyColor;\n  tickAlign?: number;\n  tickRadius?: AnyLength;\n  tickLength?: AnyLength;\n  tickWidth?: AnyLength;\n  tickPadding?: AnyLength;\n  tickColor?: AnyColor;\n  font?: AnyFont;\n  textColor?: AnyColor;\n  label?: GraphicsView | string;\n  legend?: GraphicsView | string;\n}\n\n/** @public */\nexport class SliceView extends GraphicsView {\n  override readonly observerType?: Class<SliceViewObserver>;\n\n  @Animator<SliceView, number>({\n    type: Number,\n    value: 0,\n    updateFlags: View.NeedsRender,\n    willSetValue(newValue: number, oldValue: number): void {\n      this.owner.callObservers(\"viewWillSetSliceValue\", newValue, oldValue, this.owner);\n    },\n    didSetValue(newValue: number, oldValue: number): void {\n      this.owner.callObservers(\"viewDidSetSliceValue\", newValue, oldValue, this.owner);\n    },\n  })\n  readonly value!: Animator<this, number>;\n\n  @Animator({type: Number, value: 1, updateFlags: View.NeedsRender})\n  readonly total!: Animator<this, number>;\n\n  @Animator({type: R2Point, inherits: true, value: R2Point.origin(), updateFlags: View.NeedsRender})\n  readonly center!: Animator<this, R2Point, AnyR2Point>;\n\n  @ThemeAnimator({type: Length, inherits: true, value: Length.pct(3), updateFlags: View.NeedsRender})\n  readonly innerRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, inherits: true, value: Length.pct(25), updateFlags: View.NeedsRender})\n  readonly outerRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Angle, value: Angle.zero(), updateFlags: View.NeedsRender})\n  readonly phaseAngle!: ThemeAnimator<this, Angle, AnyAngle>;\n\n  @ThemeAnimator({type: Angle, inherits: true, value: Angle.deg(2), updateFlags: View.NeedsRender})\n  readonly padAngle!: ThemeAnimator<this, Angle, AnyAngle>;\n\n  @ThemeAnimator({type: Length, inherits: true, value: null, updateFlags: View.NeedsRender})\n  readonly padRadius!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator({type: Length, inherits: true, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly cornerRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, inherits: true, value: Length.pct(50), updateFlags: View.NeedsRender})\n  readonly labelRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Color, inherits: true, value: null, look: Look.accentColor, updateFlags: View.NeedsRender})\n  readonly sliceColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Number, inherits: true, value: 0.5, updateFlags: View.NeedsRender})\n  readonly tickAlign!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Length, inherits: true, value: Length.pct(30), updateFlags: View.NeedsRender})\n  readonly tickRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, inherits: true, value: Length.pct(50), updateFlags: View.NeedsRender})\n  readonly tickLength!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, inherits: true, value: Length.px(1), updateFlags: View.NeedsRender})\n  readonly tickWidth!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, inherits: true, value: Length.px(2), updateFlags: View.NeedsRender})\n  readonly tickPadding!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Color, inherits: true, value: null, look: Look.neutralColor, updateFlags: View.NeedsRender})\n  readonly tickColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Font, inherits: true, value: null, updateFlags: View.NeedsRender})\n  readonly font!: ThemeAnimator<this, Font | null, AnyFont | null>;\n\n  @ThemeAnimator({type: Color, inherits: true, value: null, look: Look.mutedColor, updateFlags: View.NeedsRender})\n  readonly textColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ViewRef<SliceView, GraphicsView & Initable<GraphicsViewInit | string>>({\n    key: true,\n    type: TextRunView,\n    binds: true,\n    willAttachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"viewWillAttachSliceLabel\", labelView, this.owner);\n    },\n    didDetachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"viewDidDetachSliceLabel\", labelView, this.owner);\n    },\n    fromAny(value: AnyView<GraphicsView> | string): GraphicsView {\n      if (typeof value === \"string\") {\n        if (this.view instanceof TextRunView) {\n          this.view.text(value);\n          return this.view;\n        } else {\n          return TextRunView.fromAny(value);\n        }\n      } else {\n        return GraphicsView.fromAny(value);\n      }\n    },\n  })\n  readonly label!: ViewRef<this, GraphicsView & Initable<GraphicsViewInit | string>>;\n  static readonly label: MemberFastenerClass<SliceView, \"label\">;\n\n  @ViewRef<SliceView, GraphicsView & Initable<GraphicsViewInit | string>>({\n    key: true,\n    type: TextRunView,\n    binds: true,\n    willAttachView(legendView: GraphicsView): void {\n      this.owner.callObservers(\"viewWillAttachSliceLegend\", legendView, this.owner);\n    },\n    didDetachView(legendView: GraphicsView): void {\n      this.owner.callObservers(\"viewDidDetachSliceLegend\", legendView, this.owner);\n    },\n    fromAny(value: AnyView<GraphicsView> | string): GraphicsView {\n      if (typeof value === \"string\") {\n        if (this.view instanceof TextRunView) {\n          this.view.text(value);\n          return this.view;\n        } else {\n          return TextRunView.fromAny(value);\n        }\n      } else {\n        return GraphicsView.fromAny(value);\n      }\n    },\n  })\n  readonly legend!: ViewRef<this, GraphicsView & Initable<GraphicsViewInit | string>>;\n  static readonly legend: MemberFastenerClass<SliceView, \"legend\">;\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.center.recohere(viewContext.updateTime);\n  }\n\n  protected override onRender(viewContext: ViewContextType<this>): void {\n    super.onRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      this.renderSlice(renderer.context, this.viewFrame);\n    }\n  }\n\n  protected renderSlice(context: PaintingContext, frame: R2Box): void {\n    const width = frame.width;\n    const height = frame.height;\n    const size = Math.min(width, height);\n    const value = this.value.getValue();\n    const total = this.total.getValue();\n    const delta = total !== 0 ? value / total : 0;\n\n    const center = this.center.getValue();\n    const innerRadius = this.innerRadius.getValue().px(size);\n    const outerRadius = this.outerRadius.getValue().px(size);\n    const deltaRadius = outerRadius.value - innerRadius.value;\n    const startAngle = this.phaseAngle.getValue().rad();\n    const sweepAngle = Angle.rad(2 * Math.PI * delta);\n    const padAngle = this.padAngle.getValue();\n    const padRadius = this.padRadius.getValueOr(null);\n    const cornerRadius = this.cornerRadius.getValue().px(deltaRadius);\n    const arc = new Arc(center, innerRadius, outerRadius, startAngle,\n                        sweepAngle, padAngle, padRadius, cornerRadius);\n\n    const sliceColor = this.sliceColor.value;\n    if (sliceColor !== null) {\n      // save\n      const contextFillStyle = context.fillStyle;\n\n      context.beginPath();\n      context.fillStyle = sliceColor.toString();\n      arc.draw(context, frame);\n      context.fill();\n\n      // restore\n      context.fillStyle = contextFillStyle;\n    }\n\n    const labelView = this.label.view;\n    if (labelView !== null && !labelView.hidden) {\n      const labelRadius = this.labelRadius.getValue().pxValue(deltaRadius);\n      const labelAngle = startAngle.value + sweepAngle.value / 2;\n      const r = innerRadius.value + labelRadius;\n      const rx = r * Math.cos(labelAngle);\n      const ry = r * Math.sin(labelAngle);\n\n      if (TypesetView.is(labelView)) {\n        labelView.textAlign.setState(\"center\", Affinity.Intrinsic);\n        labelView.textBaseline.setState(\"middle\", Affinity.Intrinsic);\n        labelView.textOrigin.setState(new R2Point(center.x + rx, center.y + ry), Affinity.Intrinsic);\n      }\n    }\n\n    const legendView = this.legend.view;\n    if (legendView !== null && !legendView.hidden) {\n      const tickAlign = this.tickAlign.getValue();\n      const tickAngle = startAngle.value + sweepAngle.value * tickAlign;\n      const tickRadius = this.tickRadius.getValue().pxValue(size);\n      const tickLength = this.tickLength.getValue().pxValue(width);\n      const tickWidth = this.tickWidth.getValue().pxValue(size);\n      const tickColor = this.tickColor.value;\n\n      const cx = center.x;\n      const cy = center.y;\n      const r1x = outerRadius.value * Math.cos(tickAngle + Equivalent.Epsilon);\n      const r1y = outerRadius.value * Math.sin(tickAngle + Equivalent.Epsilon);\n      const r2x = tickRadius * Math.cos(tickAngle + Equivalent.Epsilon);\n      const r2y = tickRadius * Math.sin(tickAngle + Equivalent.Epsilon);\n      let dx = 0;\n\n      if (tickColor !== null && tickWidth !== 0) {\n        // save\n        const contextLineWidth = context.lineWidth;\n        const contextStrokeStyle = context.strokeStyle;\n\n        context.beginPath();\n        context.lineWidth = tickWidth;\n        context.strokeStyle = tickColor.toString();\n        context.moveTo(cx + r1x, cy + r1y);\n        context.lineTo(cx + r2x, cy + r2y);\n        if (tickLength !== 0) {\n          if (r2x >= 0) {\n            context.lineTo(cx + tickLength, cy + r2y);\n            dx = tickLength - r2x;\n          } else if (r2x < 0) {\n            context.lineTo(cx - tickLength, cy + r2y);\n            dx = tickLength + r2x;\n          }\n        }\n        context.stroke();\n\n        // restore\n        context.lineWidth = contextLineWidth;\n        context.strokeStyle = contextStrokeStyle;\n      }\n\n      let textAlign: CanvasTextAlign;\n      if (r2x >= 0) {\n        if (r2y >= 0) { // top-right\n          textAlign = \"end\";\n        } else { // bottom-right\n          textAlign = \"end\";\n        }\n      } else {\n        dx = -dx;\n        if (r2y < 0) { // bottom-left\n          textAlign = \"start\";\n        } else { // top-left\n          textAlign = \"start\";\n        }\n      }\n\n      if (TypesetView.is(legendView)) {\n        const tickPadding = this.tickPadding.getValue().pxValue(size);\n        if (FillView.is(legendView)) {\n          legendView.fill.setState(tickColor, Affinity.Intrinsic);\n        }\n        legendView.textAlign.setState(textAlign, Affinity.Intrinsic);\n        legendView.textBaseline.setState(\"alphabetic\", Affinity.Intrinsic);\n        legendView.textOrigin.setState(new R2Point(cx + r2x + dx, cy + r2y - tickPadding), Affinity.Intrinsic);\n      }\n    }\n  }\n\n  protected override hitTest(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const p = renderer.transform.transform(x, y);\n      return this.hitTestSlice(p.x, p.y, renderer.context, this.viewFrame);\n    }\n    return null;\n  }\n\n  protected hitTestSlice(x: number, y: number, context: CanvasContext, frame: R2Box): GraphicsView | null {\n    const size = Math.min(frame.width, frame.height);\n    const value = this.value.getValue();\n    const total = this.total.getValue();\n    const delta = total !== 0 ? value / total : 0;\n\n    const center = this.center.getValue();\n    const innerRadius = this.innerRadius.getValue().px(size);\n    const outerRadius = this.outerRadius.getValue().px(size);\n    const deltaRadius = outerRadius.value - innerRadius.value;\n    const startAngle = this.phaseAngle.getValue().rad();\n    const sweepAngle = Angle.rad(2 * Math.PI * delta);\n    const padAngle = this.padAngle.getValue();\n    const padRadius = this.padRadius.getValueOr(null);\n    const cornerRadius = this.cornerRadius.getValue().px(deltaRadius);\n    const arc = new Arc(center, innerRadius, outerRadius, startAngle,\n                        sweepAngle, padAngle, padRadius, cornerRadius);\n\n    context.beginPath();\n    arc.draw(context, frame);\n    if (context.isPointInPath(x, y)) {\n      return this;\n    }\n    return null;\n  }\n\n  override init(init: SliceViewInit): void {\n    super.init(init);\n    if (init.value !== void 0) {\n      this.value(init.value);\n    }\n    if (init.total !== void 0) {\n      this.total(init.total);\n    }\n    if (init.center !== void 0) {\n      this.center(init.center);\n    }\n    if (init.innerRadius !== void 0) {\n      this.innerRadius(init.innerRadius);\n    }\n    if (init.outerRadius !== void 0) {\n      this.outerRadius(init.outerRadius);\n    }\n    if (init.phaseAngle !== void 0) {\n      this.phaseAngle(init.phaseAngle);\n    }\n    if (init.padAngle !== void 0) {\n      this.padAngle(init.padAngle);\n    }\n    if (init.padRadius !== void 0) {\n      this.padRadius(init.padRadius);\n    }\n    if (init.cornerRadius !== void 0) {\n      this.cornerRadius(init.cornerRadius);\n    }\n    if (init.labelRadius !== void 0) {\n      this.labelRadius(init.labelRadius);\n    }\n    if (init.sliceColor !== void 0) {\n      this.sliceColor(init.sliceColor);\n    }\n    if (init.tickAlign !== void 0) {\n      this.tickAlign(init.tickAlign);\n    }\n    if (init.tickRadius !== void 0) {\n      this.tickRadius(init.tickRadius);\n    }\n    if (init.tickLength !== void 0) {\n      this.tickLength(init.tickLength);\n    }\n    if (init.tickWidth !== void 0) {\n      this.tickWidth(init.tickWidth);\n    }\n    if (init.tickPadding !== void 0) {\n      this.tickPadding(init.tickPadding);\n    }\n    if (init.tickColor !== void 0) {\n      this.tickColor(init.tickColor);\n    }\n    if (init.font !== void 0) {\n      this.font(init.font);\n    }\n    if (init.textColor !== void 0) {\n      this.textColor(init.textColor);\n    }\n    if (init.label !== void 0) {\n      this.label(init.label);\n    }\n    if (init.legend !== void 0) {\n      this.legend(init.legend);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Trait} from \"@swim/model\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport type {SliceTraitObserver} from \"./SliceTraitObserver\";\n\n/** @public */\nexport type SliceLabel = SliceLabelFunction | string;\n/** @public */\nexport type SliceLabelFunction = (sliceTrait: SliceTrait | null) => GraphicsView | string | null;\n\n/** @public */\nexport type SliceLegend = SliceLegendFunction | string;\n/** @public */\nexport type SliceLegendFunction = (sliceTrait: SliceTrait | null) => GraphicsView | string | null;\n\n/** @public */\nexport class SliceTrait extends Trait {\n  override readonly observerType?: Class<SliceTraitObserver>;\n\n  @Property<SliceTrait, number>({\n    type: Number,\n    value: 0,\n    willSetValue(newValue: number, oldValue: number): void {\n      this.owner.callObservers(\"traitWillSetSliceValue\", newValue, oldValue, this.owner);\n    },\n    didSetValue(newValue: number, oldValue: number): void {\n      this.owner.callObservers(\"traitDidSetSliceValue\", newValue, oldValue, this.owner);\n    },\n  })\n  readonly value!: Property<this, number>;\n\n  @Property<SliceTrait, Look<Color> | Color | null, Look<Color> | AnyColor | null>({\n    value: null,\n    willSetValue(newSliceColor: Look<Color> | Color | null, oldSliceColor: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"traitWillSetSliceColor\", newSliceColor, oldSliceColor, this.owner);\n    },\n    didSetValue(newSliceColor: Look<Color> | Color | null, oldSliceColor: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"traitDidSetSliceColor\", newSliceColor, oldSliceColor, this.owner);\n    },\n    fromAny(sliceColor: Look<Color> | AnyColor | null): Look<Color> | Color | null {\n      if (sliceColor !== null && !(sliceColor instanceof Look)) {\n        sliceColor = Color.fromAny(sliceColor);\n      }\n      return sliceColor;\n    },\n  })\n  readonly sliceColor!: Property<this, Look<Color> | Color | null, Look<Color> | AnyColor | null>;\n\n  formatLabel(value: number): string | undefined {\n    return void 0;\n  }\n\n  @Property<SliceTrait, SliceLabel | null>({\n    value: null,\n    willSetValue(newLabel: SliceLabel | null, oldLabel: SliceLabel | null): void {\n      this.owner.callObservers(\"traitWillSetSliceLabel\", newLabel, oldLabel, this.owner);\n    },\n    didSetValue(newLabel: SliceLabel | null, oldLabel: SliceLabel | null): void {\n      this.owner.callObservers(\"traitDidSetSliceLabel\", newLabel, oldLabel, this.owner);\n    },\n  })\n  readonly label!: Property<this, SliceLabel | null>;\n\n  formatLegend(value: number): string | undefined {\n    return void 0;\n  }\n\n  @Property<SliceTrait, SliceLegend | null>({\n    value: null,\n    willSetValue(newLegend: SliceLegend | null, oldLegend: SliceLegend | null): void {\n      this.owner.callObservers(\"traitWillSetSliceLegend\", newLegend, oldLegend, this.owner);\n    },\n    didSetValue(newLegend: SliceLegend | null, oldLegend: SliceLegend | null): void {\n      this.owner.callObservers(\"traitDidSetSliceLegend\", newLegend, oldLegend, this.owner);\n    },\n  })\n  readonly legend!: Property<this, SliceLegend | null>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Property} from \"@swim/component\";\nimport type {Color} from \"@swim/style\";\nimport {Look, Mood} from \"@swim/theme\";\nimport {ViewRef} from \"@swim/view\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport {Controller, TraitViewRef} from \"@swim/controller\";\nimport {SliceView} from \"./SliceView\";\nimport {SliceLabel, SliceLegend, SliceTrait} from \"./SliceTrait\";\nimport type {SliceControllerObserver} from \"./SliceControllerObserver\";\n\n/** @public */\nexport class SliceController extends Controller {\n  override readonly observerType?: Class<SliceControllerObserver>;\n\n  protected updateLabel(value: number, sliceTrait: SliceTrait): void {\n    if (sliceTrait.label.hasAffinity(Affinity.Intrinsic)) {\n      const label = sliceTrait.formatLabel(value);\n      if (label !== void 0) {\n        sliceTrait.label.setValue(label, Affinity.Intrinsic);\n      }\n    }\n  }\n\n  protected updateLegend(value: number, sliceTrait: SliceTrait): void {\n    if (sliceTrait.legend.hasAffinity(Affinity.Intrinsic)) {\n      const legend = sliceTrait.formatLegend(value);\n      if (legend !== void 0) {\n        sliceTrait.legend.setValue(legend, Affinity.Intrinsic);\n      }\n    }\n  }\n\n  protected setValue(value: number, timing?: AnyTiming | boolean): void {\n    const sliceView = this.slice.view;\n    if (sliceView !== null && sliceView.value.hasAffinity(Affinity.Intrinsic)) {\n      if (timing === void 0 || timing === true) {\n        timing = this.sliceTiming.value;\n        if (timing === true) {\n          timing = sliceView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      sliceView.value.setState(value, timing, Affinity.Intrinsic);\n    }\n  }\n\n  protected setSliceColor(sliceColor: Look<Color> | Color | null, timing?: AnyTiming | boolean): void {\n    const sliceView = this.slice.view;\n    if (sliceView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.sliceTiming.value;\n        if (timing === true) {\n          timing = sliceView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      if (sliceColor instanceof Look) {\n        sliceView.sliceColor.setLook(sliceColor, timing, Affinity.Intrinsic);\n      } else {\n        sliceView.sliceColor.setState(sliceColor, timing, Affinity.Intrinsic);\n      }\n    }\n  }\n\n  protected createLabelView(label: SliceLabel): GraphicsView | string | null {\n    if (typeof label === \"function\") {\n      return label(this.slice.trait);\n    } else {\n      return label;\n    }\n  }\n\n  protected setLabelView(label: SliceLabel | null): void {\n    const sliceView = this.slice.view;\n    if (sliceView !== null) {\n      const labelView = label !== null ? this.createLabelView(label) : null;\n      sliceView.label.setView(labelView);\n    }\n  }\n\n  protected createLegendView(legend: SliceLegend): GraphicsView | string | null {\n    if (typeof legend === \"function\") {\n      return legend(this.slice.trait);\n    } else {\n      return legend;\n    }\n  }\n\n  protected setLegendView(legend: SliceLegend | null): void {\n    const sliceView = this.slice.view;\n    if (sliceView !== null) {\n      const legendView = legend !== null ? this.createLegendView(legend) : null;\n      sliceView.legend.setView(legendView);\n    }\n  }\n\n  @Property({type: Timing, inherits: true})\n  readonly sliceTiming!: Property<this, Timing | boolean | undefined, AnyTiming>;\n\n  @TraitViewRef<SliceController, SliceTrait, SliceView>({\n    traitType: SliceTrait,\n    observesTrait: true,\n    willAttachTrait(sliceTrait: SliceTrait): void {\n      this.owner.callObservers(\"controllerWillAttachSliceTrait\", sliceTrait, this.owner);\n    },\n    didAttachTrait(sliceTrait: SliceTrait): void {\n      const sliceView = this.view;\n      if (sliceView !== null) {\n        this.owner.setValue(sliceTrait.value.value);\n        const sliceColor = sliceTrait.sliceColor.value;\n        if (sliceColor !== null) {\n          this.owner.setSliceColor(sliceColor);\n        }\n        this.owner.setLabelView(sliceTrait.label.value);\n        this.owner.setLegendView(sliceTrait.legend.value);\n      }\n    },\n    didDetachTrait(sliceTrait: SliceTrait): void {\n      this.owner.callObservers(\"controllerDidDetachSliceTrait\", sliceTrait, this.owner);\n    },\n    traitDidSetSliceValue(newValue: number, oldValue: number): void {\n      this.owner.setValue(newValue);\n    },\n    traitDidSetSliceColor(newSliceColor: Look<Color> | Color | null, oldSliceColor: Look<Color> | Color | null): void {\n      this.owner.setSliceColor(newSliceColor);\n    },\n    traitDidSetSliceLabel(newLabel: SliceLabel | null, oldLabel: SliceLabel | null): void {\n      this.owner.setLabelView(newLabel);\n    },\n    traitDidSetSliceLegend(newLegend: SliceLegend | null, oldLegend: SliceLegend | null): void {\n      this.owner.setLegendView(newLegend);\n    },\n    viewType: SliceView,\n    observesView: true,\n    willAttachView(sliceView: SliceView): void {\n      this.owner.callObservers(\"controllerWillAttachSliceView\", sliceView, this.owner);\n    },\n    didAttachView(sliceView: SliceView): void {\n      const sliceTrait = this.trait;\n      if (sliceTrait !== null) {\n        const sliceColor = sliceTrait.sliceColor.value;\n        if (sliceColor !== null) {\n          this.owner.setSliceColor(sliceColor);\n        }\n      }\n      this.owner.label.setView(sliceView.label.view);\n      this.owner.legend.setView(sliceView.legend.view);\n      const value = sliceView.value.value;\n      sliceView.setHidden(value === 0);\n      if (sliceTrait !== null) {\n        this.owner.updateLabel(value, sliceTrait);\n        this.owner.updateLegend(value, sliceTrait);\n        this.owner.setValue(sliceTrait.value.value);\n        this.owner.setLabelView(sliceTrait.label.value);\n        this.owner.setLegendView(sliceTrait.legend.value);\n      }\n    },\n    willDetachView(sliceView: SliceView): void {\n      this.owner.label.setView(null);\n      this.owner.legend.setView(null);\n    },\n    didDetachView(sliceView: SliceView): void {\n      this.owner.callObservers(\"controllerDidDetachSliceView\", sliceView, this.owner);\n    },\n    viewWillSetSliceValue(newValue: number, oldValue: number, sliceView: SliceView): void {\n      this.owner.callObservers(\"controllerWillSetSliceValue\", newValue, oldValue, this.owner);\n    },\n    viewDidSetSliceValue(newValue: number, oldValue: number, sliceView: SliceView): void {\n      sliceView.setHidden(newValue === 0);\n      const sliceTrait = this.trait;\n      if (sliceTrait !== null) {\n        this.owner.updateLabel(newValue, sliceTrait);\n        this.owner.updateLegend(newValue, sliceTrait);\n      }\n      this.owner.callObservers(\"controllerDidSetSliceValue\", newValue, oldValue, this.owner);\n    },\n    viewWillAttachSliceLabel(labelView: GraphicsView): void {\n      this.owner.label.setView(labelView);\n    },\n    viewDidDetachSliceLabel(labelView: GraphicsView): void {\n      this.owner.label.setView(null);\n    },\n    viewWillAttachSliceLegend(legendView: GraphicsView): void {\n      this.owner.legend.setView(legendView);\n    },\n    viewDidDetachSliceLegend(legendView: GraphicsView): void {\n      this.owner.legend.setView(null);\n    },\n  })\n  readonly slice!: TraitViewRef<this, SliceTrait, SliceView>;\n  static readonly slice: MemberFastenerClass<SliceController, \"slice\">;\n\n  @ViewRef<SliceController, GraphicsView>({\n    key: true,\n    willAttachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"controllerWillAttachSliceLabelView\", labelView, this.owner);\n    },\n    didDetachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"controllerDidDetachSliceLabelView\", labelView, this.owner);\n    },\n  })\n  readonly label!: ViewRef<this, GraphicsView>;\n  static readonly label: MemberFastenerClass<SliceController, \"label\">;\n\n  @ViewRef<SliceController, GraphicsView>({\n    key: true,\n    willAttachView(legendView: GraphicsView): void {\n      this.owner.callObservers(\"controllerWillAttachSliceLegendView\", legendView, this.owner);\n    },\n    didDetachView(legendView: GraphicsView): void {\n      this.owner.callObservers(\"controllerDidDetachSliceLegendView\", legendView, this.owner);\n    },\n  })\n  readonly legend!: ViewRef<this, GraphicsView>;\n  static readonly legend: MemberFastenerClass<SliceController, \"legend\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class, Initable} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Animator} from \"@swim/component\";\nimport {AnyLength, Length, AnyAngle, Angle, AnyR2Point, R2Point, R2Box} from \"@swim/math\";\nimport {AnyFont, Font, AnyColor, Color} from \"@swim/style\";\nimport {Look, ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, AnyView, View, ViewRef, ViewSet} from \"@swim/view\";\nimport {GraphicsViewInit, GraphicsView, TypesetView, TextRunView} from \"@swim/graphics\";\nimport {AnySliceView, SliceView} from \"../slice/SliceView\";\nimport type {PieViewObserver} from \"./PieViewObserver\";\n\n/** @public */\nexport type AnyPieView = PieView | PieViewInit;\n\n/** @public */\nexport interface PieViewInit extends GraphicsViewInit {\n  limit?: number;\n  center?: AnyR2Point;\n  baseAngle?: AnyAngle;\n  innerRadius?: AnyLength;\n  outerRadius?: AnyLength;\n  padAngle?: AnyAngle;\n  padRadius?: AnyLength | null;\n  cornerRadius?: AnyLength;\n  labelRadius?: AnyLength;\n  sliceColor?: AnyColor;\n  tickAlign?: number;\n  tickRadius?: AnyLength;\n  tickLength?: AnyLength;\n  tickWidth?: AnyLength;\n  tickPadding?: AnyLength;\n  tickColor?: AnyColor;\n  font?: AnyFont;\n  textColor?: AnyColor;\n  title?: GraphicsView | string;\n  slices?: AnySliceView[];\n}\n\n/** @public */\nexport interface PieViewSliceExt {\n  attachLabelView(labelView: GraphicsView): void;\n  detachLabelView(labelView: GraphicsView): void;\n  attachLegendView(legendView: GraphicsView): void;\n  detachLegendView(legendView: GraphicsView): void;\n}\n\n/** @public */\nexport class PieView extends GraphicsView {\n  override readonly observerType?: Class<PieViewObserver>;\n\n  @Animator({type: Number, value: 0, updateFlags: View.NeedsLayout})\n  readonly limit!: Animator<this, number>;\n\n  @Animator({type: R2Point, value: R2Point.origin(), updateFlags: View.NeedsLayout})\n  readonly center!: Animator<this, R2Point, AnyR2Point>;\n\n  @ThemeAnimator({type: Angle, value: Angle.rad(-Math.PI / 2), updateFlags: View.NeedsLayout})\n  readonly baseAngle!: ThemeAnimator<this, Angle, AnyAngle>;\n\n  @ThemeAnimator({type: Length, value: Length.pct(3)})\n  readonly innerRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, value: Length.pct(25)})\n  readonly outerRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Angle, value: Angle.deg(2)})\n  readonly padAngle!: ThemeAnimator<this, Angle, AnyAngle>;\n\n  @ThemeAnimator({type: Length, value: null})\n  readonly padRadius!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator({type: Length, value: Length.zero()})\n  readonly cornerRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, value: Length.pct(50)})\n  readonly labelRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Color, value: null, look: Look.accentColor})\n  readonly sliceColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Number, value: 0.5})\n  readonly tickAlign!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Length, value: Length.pct(30)})\n  readonly tickRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, value: Length.pct(50)})\n  readonly tickLength!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, value: Length.px(1)})\n  readonly tickWidth!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, value: Length.px(2)})\n  readonly tickPadding!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Color, value: null, look: Look.neutralColor})\n  readonly tickColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Font, value: null, inherits: true})\n  readonly font!: ThemeAnimator<this, Font | null, AnyFont | null>;\n\n  @ThemeAnimator({type: Color, value: null, look: Look.mutedColor})\n  readonly textColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ViewRef<PieView, GraphicsView & Initable<GraphicsViewInit | string>>({\n    key: true,\n    type: TextRunView,\n    binds: true,\n    initView(titleView: GraphicsView): void {\n      if (TypesetView.is(titleView)) {\n        titleView.textAlign.setState(\"center\", Affinity.Intrinsic);\n        titleView.textBaseline.setState(\"middle\", Affinity.Intrinsic);\n        titleView.textOrigin.setState(this.owner.center.state, Affinity.Intrinsic);\n      }\n    },\n    willAttachView(titleView: GraphicsView): void {\n      this.owner.callObservers(\"viewWillAttachPieTitle\", titleView, this.owner);\n    },\n    didDetachView(titleView: GraphicsView): void {\n      this.owner.callObservers(\"viewDidDetachPieTitle\", titleView, this.owner);\n    },\n    fromAny(value: AnyView<GraphicsView> | string): GraphicsView {\n      if (typeof value === \"string\") {\n        if (this.view instanceof TextRunView) {\n          this.view.text(value);\n          return this.view;\n        } else {\n          return TextRunView.fromAny(value);\n        }\n      } else {\n        return GraphicsView.fromAny(value);\n      }\n    },\n  })\n  readonly title!: ViewRef<this, GraphicsView & Initable<GraphicsViewInit | string>>;\n  static readonly title: MemberFastenerClass<PieView, \"title\">;\n\n  @ViewSet<PieView, SliceView, PieViewSliceExt>({\n    implements: true,\n    type: SliceView,\n    binds: true,\n    observes: true,\n    willAttachView(sliceView: SliceView, targetView: View | null): void {\n      this.owner.callObservers(\"viewWillAttachSlice\", sliceView, targetView, this.owner);\n    },\n    didAttachView(sliceView: SliceView): void {\n      const labelView = sliceView.label.view;\n      if (labelView !== null) {\n        this.attachLabelView(labelView);\n      }\n      const legendView = sliceView.legend.view;\n      if (legendView !== null) {\n        this.attachLegendView(legendView);\n      }\n    },\n    willDetachView(sliceView: SliceView): void {\n      const legendView = sliceView.legend.view;\n      if (legendView !== null) {\n        this.detachLegendView(legendView);\n      }\n      const labelView = sliceView.label.view;\n      if (labelView !== null) {\n        this.detachLabelView(labelView);\n      }\n    },\n    didDetachView(sliceView: SliceView): void {\n      this.owner.callObservers(\"viewDidDetachSlice\", sliceView, this.owner);\n    },\n    viewDidSetSliceValue(newValue: number, oldValue: number): void {\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    viewWillAttachSliceLabel(labelView: GraphicsView): void {\n      this.attachLabelView(labelView);\n    },\n    viewDidDetachSliceLabel(labelView: GraphicsView): void {\n      this.detachLabelView(labelView);\n    },\n    attachLabelView(labelView: GraphicsView): void {\n      // hook\n    },\n    detachLabelView(labelView: GraphicsView): void {\n      // hook\n    },\n    viewWillAttachSliceLegend(legendView: GraphicsView): void {\n      this.attachLegendView(legendView);\n    },\n    viewDidDetachSliceLegend(legendView: GraphicsView): void {\n      this.detachLegendView(legendView);\n    },\n    attachLegendView(legendView: GraphicsView): void {\n      // hook\n    },\n    detachLegendView(legendView: GraphicsView): void {\n      // hook\n    },\n  })\n  readonly slices!: ViewSet<this, SliceView> & PieViewSliceExt;\n  static readonly slices: MemberFastenerClass<PieView, \"slices\">;\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.layoutPie(this.viewFrame);\n  }\n\n  protected layoutPie(frame: R2Box): void {\n    if (this.center.hasAffinity(Affinity.Intrinsic)) {\n      const cx = (frame.xMin + frame.xMax) / 2;\n      const cy = (frame.yMin + frame.yMax) / 2;\n      this.center.setState(new R2Point(cx, cy), Affinity.Intrinsic);\n    }\n\n    const sliceViews = this.slices.views;\n\n    let total = 0;\n    for (const viewId in sliceViews) {\n      const sliceView = sliceViews[viewId]!;\n      const value = sliceView.value.getValue();\n      if (isFinite(value)) {\n        total += value;\n      }\n    }\n    total = Math.max(total, this.limit.getValue());\n\n    let baseAngle = this.baseAngle.getValue().rad();\n    for (const viewId in sliceViews) {\n      const sliceView = sliceViews[viewId]!;\n      sliceView.total.setState(total, Affinity.Intrinsic);\n      sliceView.phaseAngle.setState(baseAngle, Affinity.Intrinsic);\n      const value = sliceView.value.getValue();\n      if (isFinite(value)) {\n        const delta = total !== 0 ? value / total : 0;\n        baseAngle = Angle.rad(baseAngle.value + 2 * Math.PI * delta);\n      }\n    }\n\n    const titleView = this.title.view;\n    if (TypesetView.is(titleView)) {\n      titleView.textOrigin.setState(this.center.value, Affinity.Intrinsic);\n    }\n  }\n\n  override init(init: PieViewInit): void {\n    super.init(init);\n    if (init.limit !== void 0) {\n      this.limit(init.limit);\n    }\n    if (init.center !== void 0) {\n      this.center(init.center);\n    }\n    if (init.baseAngle !== void 0) {\n      this.baseAngle(init.baseAngle);\n    }\n    if (init.innerRadius !== void 0) {\n      this.innerRadius(init.innerRadius);\n    }\n    if (init.outerRadius !== void 0) {\n      this.outerRadius(init.outerRadius);\n    }\n    if (init.padAngle !== void 0) {\n      this.padAngle(init.padAngle);\n    }\n    if (init.padRadius !== void 0) {\n      this.padRadius(init.padRadius);\n    }\n    if (init.cornerRadius !== void 0) {\n      this.cornerRadius(init.cornerRadius);\n    }\n    if (init.labelRadius !== void 0) {\n      this.labelRadius(init.labelRadius);\n    }\n    if (init.sliceColor !== void 0) {\n      this.sliceColor(init.sliceColor);\n    }\n    if (init.tickAlign !== void 0) {\n      this.tickAlign(init.tickAlign);\n    }\n    if (init.tickRadius !== void 0) {\n      this.tickRadius(init.tickRadius);\n    }\n    if (init.tickLength !== void 0) {\n      this.tickLength(init.tickLength);\n    }\n    if (init.tickWidth !== void 0) {\n      this.tickWidth(init.tickWidth);\n    }\n    if (init.tickPadding !== void 0) {\n      this.tickPadding(init.tickPadding);\n    }\n    if (init.tickColor !== void 0) {\n      this.tickColor(init.tickColor);\n    }\n    if (init.font !== void 0) {\n      this.font(init.font);\n    }\n    if (init.textColor !== void 0) {\n      this.textColor(init.textColor);\n    }\n    if (init.title !== void 0) {\n      this.title(init.title);\n    }\n    const slices = init.slices;\n    if (slices !== void 0) {\n      for (let i = 0, n = slices.length; i < n; i += 1) {\n        const slice = slices[i]!;\n        this.appendChild(SliceView.fromAny(slice), slice.key);\n      }\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {MemberFastenerClass, Property} from \"@swim/component\";\nimport {Model, Trait, TraitSet} from \"@swim/model\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport {SliceTrait} from \"../slice/SliceTrait\";\nimport type {PieTraitObserver} from \"./PieTraitObserver\";\n\n/** @public */\nexport type PieTitle = PieTitleFunction | string;\n/** @public */\nexport type PieTitleFunction = (pieTrait: PieTrait) => GraphicsView | string | null;\n\n/** @public */\nexport class PieTrait extends Trait {\n  override readonly observerType?: Class<PieTraitObserver>;\n\n  @Property<PieTrait, PieTitle | null>({\n    value: null,\n    willSetValue(newTitle: PieTitle | null, oldTitle: PieTitle | null): void {\n      this.owner.callObservers(\"traitWillSetPieTitle\", newTitle, oldTitle, this.owner);\n    },\n    didSetValue(newTitle: PieTitle | null, oldTitle: PieTitle | null): void {\n      this.owner.callObservers(\"traitDidSetPieTitle\", newTitle, oldTitle, this.owner);\n    },\n  })\n  readonly title!: Property<this, PieTitle | null>;\n  static readonly title: MemberFastenerClass<PieTrait, \"title\">;\n\n  @TraitSet<PieTrait, SliceTrait>({\n    type: SliceTrait,\n    binds: true,\n    willAttachTrait(sliceTrait: SliceTrait, targetTrait: Trait | null): void {\n      this.owner.callObservers(\"traitWillAttachSlice\", sliceTrait, targetTrait, this.owner);\n    },\n    didAttachTrait(sliceTrait: SliceTrait): void {\n      if (this.owner.consuming) {\n        sliceTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(sliceTrait: SliceTrait): void {\n      if (this.owner.consuming) {\n        sliceTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(sliceTrait: SliceTrait): void {\n      this.owner.callObservers(\"traitDidDetachSlice\", sliceTrait, this.owner);\n    },\n    detectModel(model: Model): SliceTrait | null {\n      return model.getTrait(SliceTrait);\n    },\n  })\n  readonly slices!: TraitSet<this, SliceTrait>;\n  static readonly slices: MemberFastenerClass<PieTrait, \"slices\">;\n\n  /** @internal */\n  protected startConsumingSlices(): void {\n    const sliceTraits = this.slices.traits;\n    for (const traitId in sliceTraits) {\n      const sliceTrait = sliceTraits[traitId]!;\n      sliceTrait.consume(this);\n    }\n  }\n\n  /** @internal */\n  protected stopConsumingSlices(): void {\n    const sliceTraits = this.slices.traits;\n    for (const traitId in sliceTraits) {\n      const sliceTrait = sliceTraits[traitId]!;\n      sliceTrait.unconsume(this);\n    }\n  }\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    this.startConsumingSlices();\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    this.stopConsumingSlices();\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, AnyTiming, Timing} from \"@swim/util\";\nimport {MemberFastenerClass, Property} from \"@swim/component\";\nimport type {Trait} from \"@swim/model\";\nimport {ViewRef} from \"@swim/view\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport {Controller, TraitViewRef, TraitViewControllerSet} from \"@swim/controller\";\nimport type {SliceView} from \"../slice/SliceView\";\nimport type {SliceTrait} from \"../slice/SliceTrait\";\nimport {SliceController} from \"../slice/SliceController\";\nimport {PieView} from \"./PieView\";\nimport {PieTitle, PieTrait} from \"./PieTrait\";\nimport type {PieControllerObserver} from \"./PieControllerObserver\";\n\n/** @public */\nexport interface PieControllerSliceExt {\n  attachSliceTrait(sliceTrait: SliceTrait, sliceController: SliceController): void;\n  detachSliceTrait(sliceTrait: SliceTrait, sliceController: SliceController): void;\n  attachSliceView(sliceView: SliceView, sliceController: SliceController): void;\n  detachSliceView(sliceView: SliceView, sliceController: SliceController): void;\n  attachSliceLabelView(labelView: GraphicsView, sliceController: SliceController): void;\n  detachSliceLabelView(labelView: GraphicsView, sliceController: SliceController): void;\n  attachSliceLegendView(legendView: GraphicsView, sliceController: SliceController): void;\n  detachSliceLegendView(legendView: GraphicsView, sliceController: SliceController): void;\n}\n\n/** @public */\nexport class PieController extends Controller {\n  override readonly observerType?: Class<PieControllerObserver>;\n\n  protected createTitleView(title: PieTitle, pieTrait: PieTrait): GraphicsView | string | null {\n    if (typeof title === \"function\") {\n      return title(pieTrait);\n    } else {\n      return title;\n    }\n  }\n\n  protected setTitleView(title: PieTitle | null, pieTrait: PieTrait): void {\n    const pieView = this.pie.view;\n    if (pieView !== null) {\n      const titleView = title !== null ? this.createTitleView(title, pieTrait) : null;\n      pieView.title.setView(titleView);\n    }\n  }\n\n  @TraitViewRef<PieController, PieTrait, PieView>({\n    traitType: PieTrait,\n    observesTrait: true,\n    willAttachTrait(pieTrait: PieTrait): void {\n      this.owner.callObservers(\"controllerWillAttachPieTrait\", pieTrait, this.owner);\n    },\n    didAttachTrait(pieTrait: PieTrait): void {\n      const sliceTraits = pieTrait.slices.traits;\n      for (const traitId in sliceTraits) {\n        const sliceTrait = sliceTraits[traitId]!;\n        this.owner.slices.addTraitController(sliceTrait);\n      }\n      const pieView = this.view;\n      if (pieView !== null) {\n        this.owner.setTitleView(pieTrait.title.value, pieTrait);\n      }\n    },\n    willDetachTrait(pieTrait: PieTrait): void {\n      const pieView = this.view;\n      if (pieView !== null) {\n        this.owner.setTitleView(pieTrait.title.value, pieTrait);\n      }\n      const sliceTraits = pieTrait.slices.traits;\n      for (const traitId in sliceTraits) {\n        const sliceTrait = sliceTraits[traitId]!;\n        this.owner.slices.deleteTraitController(sliceTrait);\n      }\n    },\n    didDetachTrait(pieTrait: PieTrait): void {\n      this.owner.callObservers(\"controllerDidDetachPieTrait\", pieTrait, this.owner);\n    },\n    traitDidSetPieTitle(newTitle: PieTitle | null, oldTitle: PieTitle | null, pieTrait: PieTrait): void {\n      this.owner.setTitleView(newTitle, pieTrait);\n    },\n    traitWillAttachSlice(sliceTrait: SliceTrait, targetTrait: Trait): void {\n      this.owner.slices.addTraitController(sliceTrait);\n    },\n    traitDidDetachSlice(sliceTrait: SliceTrait): void {\n      this.owner.slices.deleteTraitController(sliceTrait);\n    },\n    viewType: PieView,\n    observesView: true,\n    initView(pieView: PieView): void {\n      const sliceControllers = this.owner.slices.controllers;\n      for (const controllerId in sliceControllers) {\n        const sliceController = sliceControllers[controllerId]!;\n        const sliceView = sliceController.slice.view;\n        if (sliceView !== null && sliceView.parent === null) {\n          sliceController.slice.insertView(pieView);\n        }\n      }\n      this.owner.title.setView(pieView.title.view);\n      const pieTrait = this.trait;\n      if (pieTrait !== null) {\n        this.owner.setTitleView(pieTrait.title.value, pieTrait);\n      }\n    },\n    deinitView(pieView: PieView): void {\n      this.owner.title.setView(null);\n    },\n    willAttachView(pieView: PieView): void {\n      this.owner.callObservers(\"controllerWillAttachPieView\", pieView, this.owner);\n    },\n    didDetachView(pieView: PieView): void {\n      this.owner.callObservers(\"controllerDidDetachPieView\", pieView, this.owner);\n    },\n    viewWillAttachPieTitle(titleView: GraphicsView): void {\n      this.owner.title.setView(titleView);\n    },\n    viewDidDetachPieTitle(titleView: GraphicsView): void {\n      this.owner.title.setView(titleView);\n    },\n  })\n  readonly pie!: TraitViewRef<this, PieTrait, PieView>;\n  static readonly pie: MemberFastenerClass<PieController, \"pie\">;\n\n  @ViewRef<PieController, GraphicsView>({\n    key: true,\n    willAttachView(titleView: GraphicsView): void {\n      this.owner.callObservers(\"controllerWillAttachPieTitleView\", titleView, this.owner);\n    },\n    didDetachView(titleView: GraphicsView): void {\n      this.owner.callObservers(\"controllerDidDetachPieTitleView\", titleView, this.owner);\n    },\n  })\n  readonly title!: ViewRef<this, GraphicsView>;\n  static readonly title: MemberFastenerClass<PieController, \"title\">;\n\n  @Property({type: Timing, value: true})\n  readonly sliceTiming!: Property<this, Timing | boolean | undefined, AnyTiming>;\n\n  @TraitViewControllerSet<PieController, SliceTrait, SliceView, SliceController, PieControllerSliceExt>({\n    implements: true,\n    type: SliceController,\n    binds: true,\n    observes: true,\n    get parentView(): PieView | null {\n      return this.owner.pie.view;\n    },\n    getTraitViewRef(sliceController: SliceController): TraitViewRef<unknown, SliceTrait, SliceView> {\n      return sliceController.slice;\n    },\n    willAttachController(sliceController: SliceController): void {\n      this.owner.callObservers(\"controllerWillAttachSlice\", sliceController, this.owner);\n    },\n    didAttachController(sliceController: SliceController): void {\n      const sliceTrait = sliceController.slice.trait;\n      if (sliceTrait !== null) {\n        this.attachSliceTrait(sliceTrait, sliceController);\n      }\n      const sliceView = sliceController.slice.view;\n      if (sliceView !== null) {\n        this.attachSliceView(sliceView, sliceController);\n      }\n    },\n    willDetachController(sliceController: SliceController): void {\n      const sliceView = sliceController.slice.view;\n      if (sliceView !== null) {\n        this.detachSliceView(sliceView, sliceController);\n      }\n      const sliceTrait = sliceController.slice.trait;\n      if (sliceTrait !== null) {\n        this.detachSliceTrait(sliceTrait, sliceController);\n      }\n    },\n    didDetachController(sliceController: SliceController): void {\n      this.owner.callObservers(\"controllerDidDetachSlice\", sliceController, this.owner);\n    },\n    controllerWillAttachSliceTrait(sliceTrait: SliceTrait, sliceController: SliceController): void {\n      this.owner.callObservers(\"controllerWillAttachSliceTrait\", sliceTrait, sliceController, this.owner);\n      this.attachSliceTrait(sliceTrait, sliceController);\n    },\n    controllerDidDetachSliceTrait(sliceTrait: SliceTrait, sliceController: SliceController): void {\n      this.detachSliceTrait(sliceTrait, sliceController);\n      this.owner.callObservers(\"controllerDidDetachSliceTrait\", sliceTrait, sliceController, this.owner);\n    },\n    attachSliceTrait(sliceTrait: SliceTrait, sliceController: SliceController): void {\n      // hook\n    },\n    detachSliceTrait(sliceTrait: SliceTrait, sliceController: SliceController): void {\n      // hook\n    },\n    controllerWillAttachSliceView(sliceView: SliceView, sliceController: SliceController): void {\n      this.owner.callObservers(\"controllerWillAttachSliceView\", sliceView, sliceController, this.owner);\n      this.attachSliceView(sliceView, sliceController);\n    },\n    controllerDidDetachSliceView(sliceView: SliceView, sliceController: SliceController): void {\n      this.detachSliceView(sliceView, sliceController);\n      this.owner.callObservers(\"controllerDidDetachSliceView\", sliceView, sliceController, this.owner);\n    },\n    attachSliceView(sliceView: SliceView, sliceController: SliceController): void {\n      const labelView = sliceView.label.view;\n      if (labelView !== null) {\n        this.attachSliceLabelView(labelView, sliceController);\n      }\n      const legendView = sliceView.legend.view;\n      if (legendView !== null) {\n        this.attachSliceLegendView(legendView, sliceController);\n      }\n    },\n    detachSliceView(sliceView: SliceView, sliceController: SliceController): void {\n      const legendView = sliceView.legend.view;\n      if (legendView !== null) {\n        this.detachSliceLegendView(legendView, sliceController);\n      }\n      const labelView = sliceView.label.view;\n      if (labelView !== null) {\n        this.detachSliceLabelView(labelView, sliceController);\n      }\n      sliceView.remove();\n    },\n    controllerWillSetSliceValue(newValue: number, oldValue: number, sliceController: SliceController): void {\n      this.owner.callObservers(\"controllerWillSetSliceValue\", newValue, oldValue, sliceController, this.owner);\n    },\n    controllerDidSetSliceValue(newValue: number, oldValue: number, sliceController: SliceController): void {\n      this.owner.callObservers(\"controllerDidSetSliceValue\", newValue, oldValue, sliceController, this.owner);\n    },\n    controllerWillAttachSliceLabelView(labelView: GraphicsView, sliceController: SliceController): void {\n      this.owner.callObservers(\"controllerWillAttachSliceLabelView\", labelView, sliceController, this.owner);\n      this.attachSliceLabelView(labelView, sliceController);\n    },\n    controllerDidDetachSliceLabelView(labelView: GraphicsView, sliceController: SliceController): void {\n      this.detachSliceLabelView(labelView, sliceController);\n      this.owner.callObservers(\"controllerDidDetachSliceLabelView\", labelView, sliceController, this.owner);\n    },\n    attachSliceLabelView(labelView: GraphicsView, sliceController: SliceController): void {\n      // hook\n    },\n    detachSliceLabelView(labelView: GraphicsView, sliceController: SliceController): void {\n      // hook\n    },\n    controllerWillAttachSliceLegendView(legendView: GraphicsView, sliceController: SliceController): void {\n      this.owner.callObservers(\"controllerWillAttachSliceLegendView\", legendView, sliceController, this.owner);\n      this.attachSliceLegendView(legendView, sliceController);\n    },\n    controllerDidDetachSliceLegendView(legendView: GraphicsView, sliceController: SliceController): void {\n      this.detachSliceLegendView(legendView, sliceController);\n      this.owner.callObservers(\"controllerDidDetachSliceLegendView\", legendView, sliceController, this.owner);\n    },\n    attachSliceLegendView(legendView: GraphicsView, sliceController: SliceController): void {\n      // hook\n    },\n    detachSliceLegendView(legendView: GraphicsView, sliceController: SliceController): void {\n      // hook\n    },\n  })\n  readonly slices!: TraitViewControllerSet<this, SliceTrait, SliceView, SliceController> & PieControllerSliceExt;\n  static readonly slices: MemberFastenerClass<PieController, \"slices\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Class, Initable, AnyTiming} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Property, Animator} from \"@swim/component\";\nimport {AnyLength, Length, R2Point, R2Box} from \"@swim/math\";\nimport {AnyFont, Font, AnyColor, Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, AnyView, View, ViewRef} from \"@swim/view\";\nimport {\n  GraphicsViewInit,\n  GraphicsView,\n  CanvasContext,\n  CanvasRenderer,\n  TypesetView,\n  TextRunView,\n} from \"@swim/graphics\";\nimport type {DataPointCategory, DataPointLabelPlacement} from \"./DataPoint\";\nimport type {DataPointViewObserver} from \"./DataPointViewObserver\";\n\n/** @public */\nexport type AnyDataPointView<X = unknown, Y = unknown> = DataPointView<X, Y> | DataPointViewInit<X, Y>;\n\n/** @public */\nexport interface DataPointViewInit<X = unknown, Y = unknown> extends GraphicsViewInit {\n  x: X;\n  y: Y;\n  y2?: Y;\n  radius?: AnyLength;\n  hitRadius?: number;\n\n  color?: AnyColor;\n  opacity?: number;\n\n  font?: AnyFont;\n  textColor?: AnyColor;\n\n  category?: DataPointCategory;\n\n  labelPadding?: AnyLength;\n  labelPlacement?: DataPointLabelPlacement;\n  label?: GraphicsView | string;\n}\n\n/** @public */\nexport class DataPointView<X = unknown, Y = unknown> extends GraphicsView {\n  constructor() {\n    super();\n    this.xCoord = NaN;\n    this.yCoord = NaN;\n    this.y2Coord = void 0;\n    this.gradientStop = false;\n  }\n\n  override readonly observerType?: Class<DataPointViewObserver<X, Y>>;\n\n  readonly xCoord: number\n\n  /** @internal */\n  setXCoord(xCoord: number): void {\n    (this as Mutable<this>).xCoord = xCoord;\n  }\n\n  readonly yCoord: number\n\n  /** @internal */\n  setYCoord(yCoord: number): void {\n    (this as Mutable<this>).yCoord = yCoord;\n  }\n\n  readonly y2Coord: number | undefined;\n\n  /** @internal */\n  setY2Coord(y2Coord: number | undefined): void {\n    (this as Mutable<this>).y2Coord = y2Coord;\n  }\n\n  @Animator<DataPointView<X, Y>, X | undefined>({\n    willSetValue(newX: X | undefined, oldX: X | undefined): void {\n      this.owner.callObservers(\"viewWillSetDataPointX\", newX, oldX, this.owner);\n    },\n    didSetValue(newX: X | undefined, oldX: X | undefined): void {\n      this.owner.callObservers(\"viewDidSetDataPointX\", newX, oldX, this.owner);\n    },\n  })\n  readonly x!: Animator<this, X | undefined>;\n\n  @Animator<DataPointView<X, Y>, Y>({\n    willSetValue(newY: Y | undefined, oldY: Y | undefined): void {\n      this.owner.callObservers(\"viewWillSetDataPointY\", newY, oldY, this.owner);\n    },\n    didSetValue(newY: Y | undefined, oldY: Y | undefined): void {\n      this.owner.callObservers(\"viewDidSetDataPointY\", newY, oldY, this.owner);\n    },\n  })\n  readonly y!: Animator<this, Y>;\n\n  @Animator<DataPointView<X, Y>, Y | undefined>({\n    willSetValue(newY2: Y | undefined, oldY2: Y | undefined): void {\n      this.owner.callObservers(\"viewWillSetDataPointY2\", newY2, oldY2, this.owner);\n    },\n    didSetValue(newY2: Y | undefined, oldY2: Y | undefined): void {\n      this.owner.callObservers(\"viewDidSetDataPointY2\", newY2, oldY2, this.owner);\n    },\n  })\n  readonly y2!: Animator<this, Y | undefined>;\n\n  @ThemeAnimator<DataPointView<X, Y>, Length | null, AnyLength | null>({\n    type: Length,\n    value: null,\n    willSetValue(newRadius: Length | null, oldRadius: Length | null): void {\n      this.owner.callObservers(\"viewWillSetDataPointRadius\", newRadius, oldRadius, this.owner);\n    },\n    didSetValue(newRadius: Length | null, oldRadius: Length | null): void {\n      this.owner.callObservers(\"viewDidSetDataPointRadius\", newRadius, oldRadius, this.owner);\n    },\n  })\n  readonly radius!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @Property({type: Number, value: 5})\n  readonly hitRadius!: Property<this, number>;\n\n  @ThemeAnimator<DataPointView<X, Y>, Color | null, AnyColor | null>({\n    type: Color,\n    value: null,\n    willSetValue(newColor: Color | null, oldColor: Color | null): void {\n      this.owner.callObservers(\"viewWillSetDataPointColor\", newColor, oldColor, this.owner);\n    },\n    didSetValue(newColor: Color | null, oldColor: Color | null): void {\n      this.owner.updateGradientStop();\n      this.owner.callObservers(\"viewDidSetDataPointColor\", newColor, oldColor, this.owner);\n    },\n  })\n  readonly color!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator<DataPointView<X, Y>, number | undefined>({\n    type: Number,\n    willSetValue(newOpacity: number | undefined, oldOpacity: number | undefined): void {\n      this.owner.callObservers(\"viewWillSetDataPointOpacity\", newOpacity, oldOpacity, this.owner);\n    },\n    didSetValue(newOpacity: number | undefined, oldOpacity: number | undefined): void {\n      this.owner.updateGradientStop();\n      this.owner.callObservers(\"viewDidSetDataPointOpacity\", newOpacity, oldOpacity, this.owner);\n    },\n  })\n  readonly opacity!: ThemeAnimator<this, number | undefined>;\n\n  @ThemeAnimator({type: Font, inherits: true})\n  readonly font!: ThemeAnimator<this, Font | undefined, AnyFont | undefined>;\n\n  @ThemeAnimator({type: Color, inherits: true})\n  readonly textColor!: ThemeAnimator<this, Color | undefined, AnyColor | undefined>;\n\n  @Property({type: String})\n  readonly category!: Property<this, DataPointCategory | undefined>;\n\n  @ThemeAnimator({type: Length, value: Length.zero(), updateFlags: View.NeedsLayout})\n  readonly labelPadding!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ViewRef<DataPointView<X, Y>, GraphicsView & Initable<GraphicsViewInit | string>>({\n    key: true,\n    type: TextRunView,\n    binds: true,\n    willAttachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"viewWillAttachDataPointLabel\", labelView, this.owner);\n    },\n    didDetachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"viewDidDetachDataPointLabel\", labelView, this.owner);\n    },\n    fromAny(value: AnyView<GraphicsView> | string): GraphicsView {\n      if (typeof value === \"string\") {\n        if (this.view instanceof TextRunView) {\n          this.view.text(value);\n          return this.view;\n        } else {\n          return TextRunView.fromAny(value);\n        }\n      } else {\n        return GraphicsView.fromAny(value);\n      }\n    },\n  })\n  readonly label!: ViewRef<this, GraphicsView & Initable<GraphicsViewInit | string>>;\n  static readonly label: MemberFastenerClass<DataPointView, \"label\">;\n\n  @Property({type: String, value: \"auto\"})\n  readonly labelPlacement!: Property<this, DataPointLabelPlacement>;\n\n  setState(point: DataPointViewInit<X, Y>, timing?: AnyTiming | boolean): void {\n    if (point.x !== void 0) {\n      this.x(point.x, timing);\n    }\n    if (point.y !== void 0) {\n      this.y(point.y, timing);\n    }\n    if (point.y2 !== void 0) {\n      this.y2(point.y2, timing);\n    }\n    if (point.radius !== void 0) {\n      this.radius(point.radius, timing);\n    }\n    if (point.hitRadius !== void 0) {\n      this.hitRadius(point.hitRadius);\n    }\n\n    if (point.color !== void 0) {\n      this.color(point.color, timing);\n    }\n    if (point.opacity !== void 0) {\n      this.opacity(point.opacity, timing);\n    }\n\n    if (point.font !== void 0) {\n      this.font(point.font, timing);\n    }\n    if (point.textColor !== void 0) {\n      this.textColor(point.textColor, timing);\n    }\n\n    if (point.category !== void 0) {\n      this.category(point.category);\n    }\n\n    if (point.labelPadding !== void 0) {\n      this.labelPadding(point.labelPadding, timing);\n    }\n    if (point.labelPlacement !== void 0) {\n      this.labelPlacement(point.labelPlacement);\n    }\n    if (point.label !== void 0) {\n      this.label(point.label);\n    }\n  }\n\n  /** @internal */\n  readonly gradientStop: boolean;\n\n  isGradientStop(): boolean {\n    return this.gradientStop;\n  }\n\n  protected updateGradientStop(): void {\n    (this as Mutable<this>).gradientStop = this.color.value !== null || this.opacity.value !== void 0;\n  }\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.layoutDataPoint(this.viewFrame);\n  }\n\n  protected layoutDataPoint(frame: R2Box): void {\n    const labelView = this.label.view;\n    if (labelView !== null) {\n      this.layoutLabel(labelView, frame);\n    }\n  }\n\n  protected layoutLabel(labelView: GraphicsView, frame: R2Box): void {\n    let placement = this.labelPlacement.value;\n    if (placement !== \"above\" && placement !== \"below\" && placement !== \"middle\") {\n      const category = this.category.value;\n      if (category === \"increasing\" || category === \"maxima\") {\n        placement = \"above\";\n      } else if (category === \"decreasing\" || category === \"minima\") {\n        placement = \"below\";\n      } else {\n        placement = \"above\";\n      }\n    }\n\n    const x = this.xCoord;\n    const y0 = this.yCoord;\n    let y1 = y0;\n    if (placement === \"above\") {\n      y1 -= this.labelPadding.getValue().pxValue(Math.min(frame.width, frame.height));\n    } else if (placement === \"below\") {\n      y1 += this.labelPadding.getValue().pxValue(Math.min(frame.width, frame.height));\n    }\n\n    if (TypesetView.is(labelView)) {\n      labelView.textAlign.setState(\"center\", Affinity.Intrinsic);\n      if (placement === \"above\") {\n        labelView.textBaseline.setState(\"bottom\", Affinity.Intrinsic);\n      } else if (placement === \"below\") {\n        labelView.textBaseline.setState(\"top\", Affinity.Intrinsic);\n      } else if (placement === \"middle\") {\n        labelView.textBaseline.setState(\"middle\", Affinity.Intrinsic);\n      }\n      labelView.textOrigin.setState(new R2Point(x, y1), Affinity.Intrinsic);\n    }\n  }\n\n  protected override hitTest(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      return this.hitTestPoint(x, y, renderer.context, this.viewFrame);\n    }\n    return null;\n  }\n\n  protected hitTestPoint(x: number, y: number, context: CanvasContext, frame: R2Box): GraphicsView | null {\n    let hitRadius = this.hitRadius.value;\n    const radius = this.radius.value;\n    if (radius !== null) {\n      const size = Math.min(frame.width, frame.height);\n      hitRadius = Math.max(hitRadius, radius.pxValue(size));\n    }\n\n    const dx = this.xCoord - x;\n    const dy = this.yCoord - y;\n    if (dx * dx + dy * dy < hitRadius * hitRadius) {\n      return this;\n    }\n    return null;\n  }\n\n  override init(init: DataPointViewInit<X, Y>): void {\n    super.init(init);\n    this.setState(init);\n  }\n\n  static override fromAny<X, Y>(value: AnyDataPointView<X, Y>): DataPointView<X, Y>;\n  static override fromAny<S extends abstract new (...args: any) => InstanceType<S>>(this: S, value: AnyView<InstanceType<S>>): InstanceType<S>;\n  static override fromAny<S extends abstract new (...args: any) => InstanceType<S>>(this: S, value: AnyView<InstanceType<S>>): InstanceType<S> {\n    return super.fromAny(value as any) as InstanceType<S>;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport {Trait} from \"@swim/model\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport type {DataPointTraitObserver} from \"./DataPointTraitObserver\";\n\n/** @public */\nexport type DataPointLabel<X = unknown, Y = unknown> = DataPointLabelFunction<X, Y> | string;\n/** @public */\nexport type DataPointLabelFunction<X, Y> = (dataPointTrait: DataPointTrait<X, Y>) => GraphicsView | string | null;\n\n/** @public */\nexport class DataPointTrait<X = unknown, Y = unknown> extends Trait {\n  constructor(x: X, y: Y) {\n    super();\n    this.x.setValue(x);\n    this.y.setValue(y);\n  }\n\n  override readonly observerType?: Class<DataPointTraitObserver<X, Y>>;\n\n  @Property<DataPointTrait<X, Y>, X>({\n    willSetValue(newX: X, oldX: X): void {\n      this.owner.callObservers(\"traitWillSetDataPointX\", newX, oldX, this.owner);\n    },\n    didSetValue(newX: X, oldX: X): void {\n      this.owner.callObservers(\"traitDidSetDataPointX\", newX, oldX, this.owner);\n    },\n  })\n  readonly x!: Property<this, X>;\n\n  @Property<DataPointTrait<X, Y>, Y>({\n    willSetValue(newY: Y, oldY: Y): void {\n      this.owner.callObservers(\"traitWillSetDataPointY\", newY, oldY, this.owner);\n    },\n    didSetValue(newY: Y, oldY: Y): void {\n      this.owner.callObservers(\"traitDidSetDataPointY\", newY, oldY, this.owner);\n    },\n  })\n  readonly y!: Property<this, Y>;\n\n  @Property<DataPointTrait<X, Y>, Y | undefined>({\n    willSetValue(newY2: Y | undefined, oldY2: Y | undefined): void {\n      this.owner.callObservers(\"traitWillSetDataPointY2\", newY2, oldY2, this.owner);\n    },\n    didSetValue(newY2: Y | undefined, oldY2: Y | undefined): void {\n      this.owner.callObservers(\"traitDidSetDataPointY2\", newY2, oldY2, this.owner);\n    },\n  })\n  readonly y2!: Property<this, Y | undefined>;\n\n  @Property<DataPointTrait<X, Y>, Length | null, AnyLength | null>({\n    type: Length,\n    value: null,\n    willSetValue(newRadius: Length | null, oldRadius: Length | null): void {\n      this.owner.callObservers(\"traitWillSetDataPointRadius\", newRadius, oldRadius, this.owner);\n    },\n    didSetValue(newRadius: Length | null, oldRadius: Length | null): void {\n      this.owner.callObservers(\"traitDidSetDataPointRadius\", newRadius, oldRadius, this.owner);\n    },\n  })\n  readonly radius!: Property<this, Length | null, AnyLength | null>;\n\n  @Property<DataPointTrait<X, Y>, Look<Color> | Color | null, Look<Color> | AnyColor | null>({\n    value: null,\n    willSetValue(newColor: Look<Color> | Color | null, oldColor: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"traitWillSetDataPointColor\", newColor, oldColor, this.owner);\n    },\n    didSetValue(newColor: Look<Color> | Color | null, oldColor: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"traitDidSetDataPointColor\", newColor, oldColor, this.owner);\n    },\n    fromAny(color: Look<Color> | AnyColor | null): Look<Color> | Color | null {\n      if (color !== null && !(color instanceof Look)) {\n        color = Color.fromAny(color);\n      }\n      return color;\n    },\n  })\n  readonly color!: Property<this, Look<Color> | Color | null, Look<Color> | AnyColor | null>;\n\n  @Property<DataPointTrait<X, Y>, number | undefined>({\n    type: Number,\n    willSetValue(newOpacity: number | undefined, oldOpacity: number | undefined): void {\n      this.owner.callObservers(\"traitWillSetDataPointOpacity\", newOpacity, oldOpacity, this.owner);\n    },\n    didSetValue(newOpacity: number | undefined, oldOpacity: number | undefined): void {\n      this.owner.callObservers(\"traitDidSetDataPointOpacity\", newOpacity, oldOpacity, this.owner);\n    },\n  })\n  readonly opacity!: Property<this, number | undefined>;\n\n  formatLabel(x: X | undefined, y: Y | undefined): string | undefined {\n    return void 0;\n  }\n\n  @Property<DataPointTrait<X, Y>, DataPointLabel<X, Y> | null>({\n    value: null,\n    willSetValue(newLabel: DataPointLabel<X, Y> | null, oldLabel: DataPointLabel<X, Y> | null): void {\n      this.owner.callObservers(\"traitWillSetDataPointLabel\", newLabel, oldLabel, this.owner);\n    },\n    didSetValue(newLabel: DataPointLabel<X, Y> | null, oldLabel: DataPointLabel<X, Y> | null): void {\n      this.owner.callObservers(\"traitDidSetDataPointLabel\", newLabel, oldLabel, this.owner);\n    },\n  })\n  readonly label!: Property<this, DataPointLabel<X, Y> | null>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {Model, Trait, TraitSet} from \"@swim/model\";\nimport {DataPointTrait} from \"./DataPointTrait\";\nimport type {DataSetTraitObserver} from \"./DataSetTraitObserver\";\n\n/** @public */\nexport class DataSetTrait<X = unknown, Y = unknown> extends Trait {\n  override readonly observerType?: Class<DataSetTraitObserver<X, Y>>;\n\n  @TraitSet<DataSetTrait<X, Y>, DataPointTrait<X, Y>>({\n    type: DataPointTrait,\n    binds: true,\n    willAttachTrait(dataPointTrait: DataPointTrait<X, Y>, targetTrait: Trait | null): void {\n      this.owner.callObservers(\"traitWillAttachDataPoint\", dataPointTrait, targetTrait, this.owner);\n    },\n    didAttachTrait(dataPointTrait: DataPointTrait<X, Y>): void {\n      if (this.owner.consuming) {\n        dataPointTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(dataPointTrait: DataPointTrait<X, Y>): void {\n      if (this.owner.consuming) {\n        dataPointTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(dataPointTrait: DataPointTrait<X, Y>): void {\n      this.owner.callObservers(\"traitDidDetachDataPoint\", dataPointTrait, this.owner);\n    },\n    detectModel(model: Model): DataPointTrait<X, Y> | null {\n      return model.getTrait(DataPointTrait) as DataPointTrait<X, Y>;\n    },\n  })\n  readonly dataPoints!: TraitSet<this, DataPointTrait<X, Y>>;\n  static readonly dataPoints: MemberFastenerClass<DataSetTrait, \"dataPoints\">;\n\n  /** @internal */\n  protected startConsumingDataPoints(): void {\n    const dataPointTraits = this.dataPoints.traits;\n    for (const traitId in dataPointTraits) {\n      const dataPointTrait = dataPointTraits[traitId]!;\n      dataPointTrait.consume(this);\n    }\n  }\n\n  /** @internal */\n  protected stopConsumingDataPoints(): void {\n    const dataPointTraits = this.dataPoints.traits;\n    for (const traitId in dataPointTraits) {\n      const dataPointTrait = dataPointTraits[traitId]!;\n      dataPointTrait.unconsume(this);\n    }\n  }\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    this.startConsumingDataPoints();\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    this.stopConsumingDataPoints();\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Property} from \"@swim/component\";\nimport type {AnyLength, Length} from \"@swim/math\";\nimport type {AnyColor, Color} from \"@swim/style\";\nimport {Look, Mood} from \"@swim/theme\";\nimport {ViewRef} from \"@swim/view\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport {Controller, TraitViewRef} from \"@swim/controller\";\nimport {DataPointView} from \"./DataPointView\";\nimport {DataPointLabel, DataPointTrait} from \"./DataPointTrait\";\nimport type {DataPointControllerObserver} from \"./DataPointControllerObserver\";\n\n/** @public */\nexport class DataPointController<X = unknown, Y = unknown> extends Controller {\n  override readonly observerType?: Class<DataPointControllerObserver<X, Y>>;\n\n  protected updateLabel(x: X | undefined, y: Y | undefined, dataPointTrait: DataPointTrait<X, Y>): void {\n    const label = dataPointTrait.formatLabel(x, y);\n    if (label !== void 0) {\n      dataPointTrait.label.setValue(label, Affinity.Intrinsic);\n    }\n  }\n\n  protected setX(x: X, dataPointTrait: DataPointTrait<X, Y>, timing?: AnyTiming | boolean): void {\n    const dataPointView = this.dataPoint.view;\n    if (dataPointView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.dataPointTiming.value;\n        if (timing === true) {\n          timing = dataPointView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      dataPointView.x.setState(x, timing, Affinity.Intrinsic);\n    }\n  }\n\n  protected setY(y: Y, dataPointTrait: DataPointTrait<X, Y>, timing?: AnyTiming | boolean): void {\n    const dataPointView = this.dataPoint.view;\n    if (dataPointView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.dataPointTiming.value;\n        if (timing === true) {\n          timing = dataPointView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      dataPointView.y.setState(y, timing, Affinity.Intrinsic);\n    }\n  }\n\n  protected setY2(y2: Y | undefined, dataPointTrait: DataPointTrait<X, Y>, timing?: AnyTiming | boolean): void {\n    const dataPointView = this.dataPoint.view;\n    if (dataPointView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.dataPointTiming.value;\n        if (timing === true) {\n          timing = dataPointView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      dataPointView.y2.setState(y2, timing, Affinity.Intrinsic);\n    }\n  }\n\n  protected setRadius(radius: AnyLength | null, dataPointTrait: DataPointTrait<X, Y>, timing?: AnyTiming | boolean): void {\n    const dataPointView = this.dataPoint.view;\n    if (dataPointView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.dataPointTiming.value;\n        if (timing === true) {\n          timing = dataPointView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      dataPointView.radius.setState(radius, timing, Affinity.Intrinsic);\n    }\n  }\n\n  protected setColor(color: Look<Color> | AnyColor | null, dataPointTrait: DataPointTrait<X, Y>, timing?: AnyTiming | boolean): void {\n    const dataPointView = this.dataPoint.view;\n    if (dataPointView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.dataPointTiming.value;\n        if (timing === true) {\n          timing = dataPointView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      if (color instanceof Look) {\n        dataPointView.color.setLook(color, timing, Affinity.Intrinsic);\n      } else {\n        dataPointView.color.setState(color, timing, Affinity.Intrinsic);\n      }\n    }\n  }\n\n  protected setOpacity(opacity: number | undefined, dataPointTrait: DataPointTrait<X, Y>, timing?: AnyTiming | boolean): void {\n    const dataPointView = this.dataPoint.view;\n    if (dataPointView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.dataPointTiming.value;\n        if (timing === true) {\n          timing = dataPointView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      dataPointView.opacity.setState(opacity, timing, Affinity.Intrinsic);\n    }\n  }\n\n  protected createLabelView(label: DataPointLabel<X, Y>, dataPointTrait: DataPointTrait<X, Y>): GraphicsView | string | null {\n    if (typeof label === \"function\") {\n      return label(dataPointTrait);\n    } else {\n      return label;\n    }\n  }\n\n  protected setLabelView(label: DataPointLabel<X, Y> | null, dataPointTrait: DataPointTrait<X, Y>): void {\n    const dataPointView = this.dataPoint.view;\n    if (dataPointView !== null) {\n      const labelView = label !== null ? this.createLabelView(label, dataPointTrait) : null;\n      dataPointView.label.setView(labelView);\n    }\n  }\n\n  @Property({type: Timing, inherits: true})\n  readonly dataPointTiming!: Property<this, Timing | boolean | undefined, AnyTiming>;\n\n  @TraitViewRef<DataPointController<X, Y>, DataPointTrait<X, Y>, DataPointView<X, Y>>({\n    traitType: DataPointTrait,\n    observesTrait: true,\n    willAttachTrait(dataPointTrait: DataPointTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataPointTrait\", dataPointTrait, this.owner);\n    },\n    didAttachTrait(dataPointTrait: DataPointTrait<X, Y>): void {\n      const dataPointView = this.view;\n      if (dataPointView !== null) {\n        this.owner.setX(dataPointTrait.x.value, dataPointTrait);\n        this.owner.setY(dataPointTrait.y.value, dataPointTrait);\n        this.owner.setY2(dataPointTrait.y2.value, dataPointTrait);\n        this.owner.setRadius(dataPointTrait.radius.value, dataPointTrait);\n        this.owner.setColor(dataPointTrait.color.value, dataPointTrait);\n        this.owner.setOpacity(dataPointTrait.opacity.value, dataPointTrait);\n        this.owner.setLabelView(dataPointTrait.label.value, dataPointTrait);\n      }\n    },\n    willDetachTrait(dataPointTrait: DataPointTrait<X, Y>): void {\n      const dataPointView = this.view;\n      if (dataPointView !== null) {\n        this.owner.setLabelView(null, dataPointTrait);\n      }\n    },\n    didDetachTrait(dataPointTrait: DataPointTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachDataPointTrait\", dataPointTrait, this.owner);\n    },\n    traitDidSetDataPointX(newX: X , oldX: X, dataPointTrait: DataPointTrait<X, Y>): void {\n      this.owner.setX(newX, dataPointTrait);\n    },\n    traitDidSetDataPointY(newY: Y, oldY: Y, dataPointTrait: DataPointTrait<X, Y>): void {\n      this.owner.setY(newY, dataPointTrait);\n    },\n    traitDidSetDataPointY2(newY2: Y | undefined, oldY2: Y | undefined, dataPointTrait: DataPointTrait<X, Y>): void {\n      this.owner.setY2(newY2, dataPointTrait);\n    },\n    traitDidSetDataPointRadius(newRadius: Length | null, oldRadius: Length | null, dataPointTrait: DataPointTrait<X, Y>): void {\n      this.owner.setRadius(newRadius, dataPointTrait);\n    },\n    traitDidSetDataPointColor(newColor: Look<Color> | Color | null, oldColor: Look<Color> | Color | null, dataPointTrait: DataPointTrait<X, Y>): void {\n      this.owner.setColor(newColor, dataPointTrait);\n    },\n    traitDidSetDataPointOpacity(newOpacity: number | undefined, oldOpacity: number | undefined, dataPointTrait: DataPointTrait<X, Y>): void {\n      this.owner.setOpacity(newOpacity, dataPointTrait);\n    },\n    traitDidSetDataPointLabel(newLabel: DataPointLabel<X, Y> | null, oldLabel: DataPointLabel<X, Y> | null, dataPointTrait: DataPointTrait<X, Y>): void {\n      this.owner.setLabelView(newLabel, dataPointTrait);\n    },\n    viewType: DataPointView,\n    observesView: true,\n    willAttachView(dataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataPointView\", dataPointView, this.owner);\n    },\n    didAttachView(dataPointView: DataPointView<X, Y>): void {\n      this.owner.label.setView(dataPointView.label.view);\n      const dataPointTrait = this.trait;\n      if (dataPointTrait !== null) {\n        this.owner.setX(dataPointTrait.x.value, dataPointTrait);\n        this.owner.setY(dataPointTrait.y.value, dataPointTrait);\n        this.owner.setY2(dataPointTrait.y2.value, dataPointTrait);\n        this.owner.setRadius(dataPointTrait.radius.value, dataPointTrait);\n        this.owner.setColor(dataPointTrait.color.value, dataPointTrait);\n        this.owner.setOpacity(dataPointTrait.opacity.value, dataPointTrait);\n        this.owner.setLabelView(dataPointTrait.label.value, dataPointTrait);\n        const x = dataPointView.x.value;\n        const y = dataPointView.y.value;\n        this.owner.updateLabel(x, y, dataPointTrait);\n      }\n    },\n    willDetachView(dataPointView: DataPointView<X, Y>): void {\n      this.owner.label.setView(null);\n    },\n    didDetachView(dataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachDataPointView\", dataPointView, this.owner);\n    },\n    viewWillSetDataPointX(newX: X | undefined, oldX: X | undefined, dataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillSetDataPointX\", newX, oldX, this.owner);\n    },\n    viewDidSetDataPointX(newX: X | undefined, oldX: X | undefined, dataPointView: DataPointView<X, Y>): void {\n      const dataPointTrait = this.trait;\n      if (dataPointTrait !== null) {\n        const y = dataPointView.y.value;\n        this.owner.updateLabel(newX, y, dataPointTrait);\n      }\n      this.owner.callObservers(\"controllerDidSetDataPointX\", newX, oldX, this.owner);\n    },\n    viewWillSetDataPointY(newY: Y | undefined, oldY: Y | undefined, dataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillSetDataPointY\", newY, oldY, this.owner);\n    },\n    viewDidSetDataPointY(newY: Y | undefined, oldY: Y | undefined, dataPointView: DataPointView<X, Y>): void {\n      const dataPointTrait = this.trait;\n      if (dataPointTrait !== null) {\n        const x = dataPointView.x.value;\n        this.owner.updateLabel(x, newY, dataPointTrait);\n      }\n      this.owner.callObservers(\"controllerDidSetDataPointY\", newY, oldY, this.owner);\n    },\n    viewWillSetDataPointY2(newY2: Y | undefined, oldY2: Y | undefined, dataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillSetDataPointY2\", newY2, oldY2, this.owner);\n    },\n    viewDidSetDataPointY2(newY2: Y | undefined, oldY2: Y | undefined, dataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetDataPointY2\", newY2, oldY2, this.owner);\n    },\n    viewWillSetDataPointRadius(newRadius: Length | null, oldRadius: Length | null, dataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillSetDataPointRadius\", newRadius, oldRadius, this.owner);\n    },\n    viewDidSetDataPointRadius(newRadius: Length | null, oldRadius: Length | null, dataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetDataPointRadius\", newRadius, oldRadius, this.owner);\n    },\n    viewWillSetDataPointColor(newColor: Color | null, oldColor: Color | null, dataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillSetDataPointColor\", newColor, oldColor, this.owner);\n    },\n    viewDidSetDataPointColor(newColor: Color | null, oldColor: Color | null, dataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetDataPointColor\", newColor, oldColor, this.owner);\n    },\n    viewWillSetDataPointOpacity(newOpacity: number | undefined, oldOpacity: number | undefined, dataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillSetDataPointOpacity\", newOpacity, oldOpacity, this.owner);\n    },\n    viewDidSetDataPointOpacity(newOpacity: number | undefined, oldOpacity: number | undefined, dataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetDataPointOpacity\", newOpacity, oldOpacity, this.owner);\n    },\n    viewWillAttachDataPointLabel(labelView: GraphicsView): void {\n      this.owner.label.setView(labelView);\n    },\n    viewDidDetachDataPointLabel(labelView: GraphicsView): void {\n      this.owner.label.setView(null);\n    },\n    createView(): DataPointView<X, Y> {\n      const dataPointView = new DataPointView<X, Y>();\n      const dataPointTrait = this.trait;\n      if (dataPointTrait !== null) {\n        dataPointView.x.setState(dataPointTrait.x.value, Affinity.Intrinsic);\n        dataPointView.y.setState(dataPointTrait.y.value, Affinity.Intrinsic);\n        dataPointView.y2.setState(dataPointTrait.y2.value, Affinity.Intrinsic);\n        dataPointView.radius.setState(dataPointTrait.radius.value, Affinity.Intrinsic);\n      }\n      return dataPointView;\n    },\n  })\n  readonly dataPoint!: TraitViewRef<this, DataPointTrait<X, Y>, DataPointView<X, Y>>;\n  static readonly dataPoint: MemberFastenerClass<DataPointController, \"dataPoint\">;\n\n  @ViewRef<DataPointController<X, Y>, GraphicsView>({\n    key: true,\n    willAttachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"controllerWillAttachDataPointLabelView\", labelView, this.owner);\n    },\n    didDetachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"controllerDidDetachDataPointLabelView\", labelView, this.owner);\n    },\n  })\n  readonly label!: ViewRef<this, GraphicsView>;\n  static readonly label: MemberFastenerClass<DataPointController, \"label\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, AnyTiming, Timing} from \"@swim/util\";\nimport {MemberFastenerClass, Property} from \"@swim/component\";\nimport type {Length} from \"@swim/math\";\nimport {Trait, TraitRef} from \"@swim/model\";\nimport type {Color} from \"@swim/style\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport {Controller, TraitViewRef, TraitViewControllerSet} from \"@swim/controller\";\nimport type {DataPointView} from \"./DataPointView\";\nimport type {DataPointTrait} from \"./DataPointTrait\";\nimport {DataPointController} from \"./DataPointController\";\nimport {DataSetTrait} from \"./DataSetTrait\";\nimport type {DataSetControllerObserver} from \"./DataSetControllerObserver\";\n\n/** @public */\nexport interface DataSetControllerDataPointExt<X = unknown, Y = unknown> {\n  attachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>): void;\n  detachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>): void;\n  attachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>): void;\n  detachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>): void;\n  attachDataPointLabelView(labelView: GraphicsView, dataPointController: DataPointController<X, Y>): void;\n  detachDataPointLabelView(labelView: GraphicsView, dataPointController: DataPointController<X, Y>): void;\n}\n\n/** @public */\nexport class DataSetController<X = unknown, Y = unknown> extends Controller {\n  override readonly observerType?: Class<DataSetControllerObserver<X, Y>>;\n\n  @TraitRef<DataSetController<X, Y>, DataSetTrait<X, Y>>({\n    type: DataSetTrait,\n    observes: true,\n    willAttachTrait(dataSetTrait: DataSetTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataSetTrait\", dataSetTrait, this.owner);\n    },\n    didAttachTrait(dataSetTrait: DataSetTrait<X, Y>): void {\n      const dataPointTraits = dataSetTrait.dataPoints.traits;\n      for (const traitId in dataPointTraits) {\n        const dataPointTrait = dataPointTraits[traitId]!;\n        this.owner.dataPoints.addTraitController(dataPointTrait);\n      }\n    },\n    willDetachTrait(dataSetTrait: DataSetTrait<X, Y>): void {\n      const dataPointTraits = dataSetTrait.dataPoints.traits;\n      for (const traitId in dataPointTraits) {\n        const dataPointTrait = dataPointTraits[traitId]!;\n        this.owner.dataPoints.deleteTraitController(dataPointTrait);\n      }\n    },\n    didDetachTrait(dataSetTrait: DataSetTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachDataSetTrait\", dataSetTrait, this.owner);\n    },\n    traitWillAttachDataPoint(dataPointTrait: DataPointTrait<X, Y>, targetTrait: Trait): void {\n      this.owner.dataPoints.addTraitController(dataPointTrait, targetTrait);\n    },\n    traitDidDetachDataPoint(dataPointTrait: DataPointTrait<X, Y>): void {\n      this.owner.dataPoints.deleteTraitController(dataPointTrait);\n    },\n  })\n  readonly dataSet!: TraitRef<this, DataSetTrait<X, Y>>;\n  static readonly dataSet: MemberFastenerClass<DataSetController, \"dataSet\">;\n\n  @Property({type: Timing, value: true})\n  readonly dataPointTiming!: Property<this, Timing | boolean | undefined, AnyTiming>;\n\n  @TraitViewControllerSet<DataSetController<X, Y>, DataPointTrait<X, Y>, DataPointView<X, Y>, DataPointController<X, Y>, DataSetControllerDataPointExt<X, Y>>({\n    implements: true,\n    type: DataPointController,\n    binds: true,\n    observes: true,\n    getTraitViewRef(dataPointController: DataPointController<X, Y>): TraitViewRef<unknown, DataPointTrait<X, Y>, DataPointView<X, Y>> {\n      return dataPointController.dataPoint;\n    },\n    willAttachController(dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataPoint\", dataPointController, this.owner);\n    },\n    didAttachController(dataPointController: DataPointController<X, Y>): void {\n      const dataPointTrait = dataPointController.dataPoint.trait;\n      if (dataPointTrait !== null) {\n        this.attachDataPointTrait(dataPointTrait, dataPointController);\n      }\n      const dataPointView = dataPointController.dataPoint.view;\n      if (dataPointView !== null) {\n        this.attachDataPointView(dataPointView, dataPointController);\n      }\n      const parentView = this.parentView;\n      if (parentView !== null) {\n        dataPointController.dataPoint.insertView(parentView);\n      }\n    },\n    willDetachController(dataPointController: DataPointController<X, Y>): void {\n      const dataPointView = dataPointController.dataPoint.view;\n      if (dataPointView !== null) {\n        this.detachDataPointView(dataPointView, dataPointController);\n      }\n      const dataPointTrait = dataPointController.dataPoint.trait;\n      if (dataPointTrait !== null) {\n        this.detachDataPointTrait(dataPointTrait, dataPointController);\n      }\n    },\n    didDetachController(dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachDataPoint\", dataPointController, this.owner);\n    },\n    controllerWillAttachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataPointTrait\", dataPointTrait, dataPointController, this.owner);\n      this.attachDataPointTrait(dataPointTrait, dataPointController);\n    },\n    controllerDidDetachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>): void {\n      this.detachDataPointTrait(dataPointTrait, dataPointController);\n      this.owner.callObservers(\"controllerDidDetachDataPointTrait\", dataPointTrait, dataPointController, this.owner);\n    },\n    attachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>): void {\n      // hook\n    },\n    detachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>): void {\n      // hook\n    },\n    controllerWillAttachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataPointView\", dataPointView, dataPointController, this.owner);\n      this.attachDataPointView(dataPointView, dataPointController);\n    },\n    controllerDidDetachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>): void {\n      this.detachDataPointView(dataPointView, dataPointController);\n      this.owner.callObservers(\"controllerDidDetachDataPointView\", dataPointView, dataPointController, this.owner);\n    },\n    attachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>): void {\n      const labelView = dataPointView.label.view;\n      if (labelView !== null) {\n        this.attachDataPointLabelView(labelView, dataPointController);\n      }\n    },\n    detachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>): void {\n      const labelView = dataPointView.label.view;\n      if (labelView !== null) {\n        this.detachDataPointLabelView(labelView, dataPointController);\n      }\n      dataPointView.remove();\n    },\n    controllerWillSetDataPointX(newX: X | undefined, oldX: X | undefined, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillSetDataPointX\", newX, oldX, dataPointController, this.owner);\n    },\n    controllerDidSetDataPointX(newX: X | undefined, oldX: X | undefined, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetDataPointX\", newX, oldX, dataPointController, this.owner);\n    },\n    controllerWillSetDataPointY(newY: Y | undefined, oldY: Y | undefined, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillSetDataPointY\", newY, oldY, dataPointController, this.owner);\n    },\n    controllerDidSetDataPointY(newY: Y | undefined, oldY: Y | undefined, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetDataPointY\", newY, oldY, dataPointController, this.owner);\n    },\n    controllerWillSetDataPointY2(newY2: Y | undefined, oldY2: Y | undefined, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillSetDataPointY2\", newY2, oldY2, dataPointController, this.owner);\n    },\n    controllerDidSetDataPointY2(newY2: Y | undefined, oldY2: Y | undefined, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetDataPointY2\", newY2, oldY2, dataPointController, this.owner);\n    },\n    controllerWillSetDataPointRadius(newRadius: Length | null, oldRadius: Length | null, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillSetDataPointRadius\", newRadius, oldRadius, dataPointController, this.owner);\n    },\n    controllerDidSetDataPointRadius(newRadius: Length | null, oldRadius: Length | null, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetDataPointRadius\", newRadius, oldRadius, dataPointController, this.owner);\n    },\n    controllerWillSetDataPointColor(newColor: Color | null, oldColor: Color | null, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillSetDataPointColor\", newColor, oldColor, dataPointController, this.owner);\n    },\n    controllerDidSetDataPointColor(newColor: Color | null, oldColor: Color | null, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetDataPointColor\", newColor, oldColor, dataPointController, this.owner);\n    },\n    controllerWillSetDataPointOpacity(newOpacity: number | undefined, oldOpacity: number | undefined, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillSetDataPointOpacity\", newOpacity, oldOpacity, dataPointController, this.owner);\n    },\n    controllerDidSetDataPointOpacity(newOpacity: number | undefined, oldOpacity: number | undefined, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetDataPointOpacity\", newOpacity, oldOpacity, dataPointController, this.owner);\n    },\n    controllerWillAttachDataPointLabelView(labelView: GraphicsView, dataPointController: DataPointController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataPointLabelView\", labelView, dataPointController, this.owner);\n      this.attachDataPointLabelView(labelView, dataPointController);\n    },\n    controllerDidDetachDataPointLabelView(labelView: GraphicsView, dataPointController: DataPointController<X, Y>): void {\n      this.detachDataPointLabelView(labelView, dataPointController);\n      this.owner.callObservers(\"controllerDidDetachDataPointLabelView\", labelView, dataPointController, this.owner);\n    },\n    attachDataPointLabelView(labelView: GraphicsView, dataPointController: DataPointController<X, Y>): void {\n      // hook\n    },\n    detachDataPointLabelView(labelView: GraphicsView, dataPointController: DataPointController<X, Y>): void {\n      // hook\n    },\n  })\n  readonly dataPoints!: TraitViewControllerSet<this, DataPointTrait<X, Y>, DataPointView<X, Y>, DataPointController<X, Y>> & DataSetControllerDataPointExt<X, Y>;\n  static readonly dataPoints: MemberFastenerClass<DataSetController, \"dataPoints\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Domain, Range, AnyTiming, ContinuousScale} from \"@swim/util\";\nimport {Affinity, AnimatorFactory, Animator} from \"@swim/component\"\nimport type {View} from \"@swim/view\";\nimport {ScaledView} from \"../\"; // forward import\n\n/** @public */\nexport interface ContinuousScaleAnimator<O extends View = View, X = unknown, Y = unknown, T extends ContinuousScale<X, Y> | null | undefined = ContinuousScale<X, Y> | null, U extends string = string> extends Animator<O, T, U> {\n  setScale(domain: Domain<X> | string, range: Range<Y>, timing?: AnyTiming | boolean | null): void;\n  setScale(xMin: X, xMax: X, yMin: Y, yMax: Y, timing?: AnyTiming | boolean | null): void;\n\n  setDomain(domain: Domain<X> | string, timing?: AnyTiming | boolean | null): void;\n  setDomain(xMin: X, xMax: X, timing?: AnyTiming | boolean | null): void;\n\n  setRange(range: Range<Y>, timing?: AnyTiming | boolean | null): void;\n  setRange(yMin: Y, yMax: Y, timing?: AnyTiming | boolean | null): void;\n\n  setBaseScale(domain: Domain<X> | string, range: Range<Y>, timing?: AnyTiming | boolean | null): void;\n  setBaseScale(xMin: X, xMax: X, yMin: Y, yMax: Y, timing?: AnyTiming | boolean | null): void;\n\n  setBaseDomain(domain: Domain<X> | string, timing?: AnyTiming | boolean | null): void;\n  setBaseDomain(xMin: X, xMax: X, timing?: AnyTiming | boolean | null): void;\n\n  setBaseRange(range: Range<Y>, timing?: AnyTiming | boolean | null): void;\n  setBaseRange(yMin: Y, yMax: Y, timing?: AnyTiming | boolean | null): void;\n\n  /** @override */\n  fromAny(value: T | U): T;\n}\n\n/** @public */\nexport const ContinuousScaleAnimator = (function (_super: typeof Animator) {\n  const ContinuousScaleAnimator = _super.extend(\"ContinuousScaleAnimator\") as AnimatorFactory<ContinuousScaleAnimator<any, any, any, any, any>>;\n\n  ContinuousScaleAnimator.prototype.setScale = function <X, Y>(this: ContinuousScaleAnimator<View, X, Y>, xMin?: Domain<X> | X | string, xMax?: Range<Y> | X,\n                                                               yMin?: Y | AnyTiming | boolean | null, yMax?: Y, timing?: AnyTiming | boolean | null): void {\n    if (typeof xMin === \"string\") {\n      xMin = ScaledView.parseScale<X, Y>(xMin).domain;\n    }\n    if (xMin instanceof Domain) {\n      timing = yMin as AnyTiming | boolean | null;\n      if (xMax instanceof Domain) {\n        yMax = (xMax as Domain<Y>)[1];\n        yMin = (xMax as Domain<Y>)[0];\n      }\n      xMax = (xMin as Domain<X>)[1];\n      xMin = (xMin as Domain<X>)[0];\n    }\n    const oldState = this.state;\n    let newState: ContinuousScale<X, Y>;\n    if (oldState !== void 0 && oldState !== null) {\n      newState = oldState.withDomain(xMin as X, xMax as X);\n      if (yMin !== void 0 && yMax !== void 0) {\n        newState = newState.overRange(yMin as Y, yMax);\n      }\n      if ((timing === void 0 || timing === null || timing === false) && (this.flags & Animator.TweeningFlag) !== 0) {\n        const oldValue = this.getValue();\n        const newValue = oldValue.withDomain(xMin as X, xMax as X);\n        this.setValue(newValue, Affinity.Extrinsic);\n        timing = true;\n      }\n    } else {\n      newState = ScaledView.createScale(xMin as X, xMax as X, yMin as Y, yMax as Y);\n    }\n    this.setState(newState, timing, Affinity.Extrinsic);\n  };\n\n  ContinuousScaleAnimator.prototype.setDomain = function <X, Y>(this: ContinuousScaleAnimator<View, X, Y>, xMin?: Domain<X> | X | string, xMax?: X | AnyTiming | boolean | null, timing?: AnyTiming | boolean | null): void {\n    if (typeof xMin === \"string\") {\n      xMin = ScaledView.parseScale<X, Y>(xMin).domain;\n    }\n    if (xMin instanceof Domain) {\n      timing = xMax as AnyTiming | boolean | null;\n      xMax = (xMin as Domain<X>)[1];\n      xMin = (xMin as Domain<X>)[0];\n    }\n    const oldState = this.state;\n    let newState: ContinuousScale<X, Y>;\n    if (oldState !== void 0 && oldState !== null) {\n      newState = oldState.withDomain(xMin as X, xMax as X);\n      if ((timing === void 0 || timing === null || timing === false) && (this.flags & Animator.TweeningFlag) !== 0) {\n        const oldValue = this.getValue();\n        const newValue = oldValue.withDomain(xMin as X, xMax as X);\n        this.setValue(newValue, Affinity.Extrinsic);\n        timing = true;\n      }\n    } else {\n      newState = ScaledView.createScale(xMin as X, xMax as X, 0 as unknown as Y, 1 as unknown as Y);\n    }\n    this.setState(newState, timing, Affinity.Extrinsic);\n  };\n\n  ContinuousScaleAnimator.prototype.setRange = function <X, Y>(this: ContinuousScaleAnimator<View, X, Y>, yMin?: Range<Y> | Y, yMax?: Y | AnyTiming | boolean | null, timing?: AnyTiming | boolean | null): void {\n    const oldState = this.state;\n    if (oldState !== void 0 && oldState !== null) {\n      if (yMin instanceof Range) {\n        timing = yMax as AnyTiming | boolean | null;\n        yMax = (yMin as Range<Y>)[1];\n        yMin = (yMin as Range<Y>)[0];\n      }\n      const newState = oldState.overRange(yMin as Y, yMax as Y);\n      if ((timing === void 0 || timing === null || timing === false) && (this.flags & Animator.TweeningFlag) !== 0) {\n        const oldValue = this.getValue();\n        const newValue = oldValue.overRange(yMin as Y, yMax as Y);\n        this.setValue(newValue, Affinity.Extrinsic);\n        timing = true;\n      }\n      this.setState(newState, timing, Affinity.Extrinsic);\n    }\n  };\n\n  ContinuousScaleAnimator.prototype.setBaseScale = function <X, Y>(this: ContinuousScaleAnimator<View, X, Y>, xMin?: Domain<X> | X | string, xMax?: Range<Y> | X,\n                                                                   yMin?: Y | AnyTiming | boolean | null, yMax?: Y, timing?: AnyTiming | boolean | null): void {\n    if (this.inherited && this.superFastener instanceof ContinuousScaleAnimator) {\n      this.superFastener.setBaseScale(xMin as any, xMax as any, yMin as any, yMax as any, timing);\n    } else {\n      this.setScale(xMin as any, xMax as any, yMin as any, yMax as any, timing);\n    }\n  };\n\n  ContinuousScaleAnimator.prototype.setBaseDomain = function <X, Y>(this: ContinuousScaleAnimator<View, X, Y>, xMin?: Domain<X> | X | string, xMax?: X | AnyTiming | boolean | null, timing?: AnyTiming | boolean | null): void {\n    if (this.inherited && this.superFastener instanceof ContinuousScaleAnimator) {\n      this.superFastener.setBaseDomain(xMin as any, xMax as any, timing);\n    } else {\n      this.setDomain(xMin as any, xMax as any, timing);\n    }\n  };\n\n  ContinuousScaleAnimator.prototype.setBaseRange = function <X, Y>(this: ContinuousScaleAnimator<View, X, Y>, yMin?: Range<Y> | Y, yMax?: Y | AnyTiming | boolean | null, timing?: AnyTiming | boolean | null): void {\n    if (this.inherited && this.superFastener instanceof ContinuousScaleAnimator) {\n      this.superFastener.setBaseRange(yMin as any, yMax as any, timing);\n    } else {\n      this.setRange(yMin as any, yMax as any, timing);\n    }\n  };\n\n  ContinuousScaleAnimator.prototype.fromAny = function <X, Y>(this: ContinuousScaleAnimator<View, X, Y>, value: ContinuousScale<X, Y> | string | null): ContinuousScale<X, Y> | null {\n    if (typeof value === \"string\") {\n      value = ScaledView.parseScale(value);\n    }\n    return value;\n  };\n\n  return ContinuousScaleAnimator;\n})(Animator);\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class, Domain, Range, AnyTiming, ContinuousScale} from \"@swim/util\";\nimport type {Animator} from \"@swim/component\";\nimport {GraphicsView} from \"@swim/graphics\";\nimport type {ScaledXViewObserver} from \"./ScaledXViewObserver\";\nimport {ScaledView} from \"../\"; // forward import\n\n/** @public */\nexport interface ScaledXView<X = unknown> extends GraphicsView {\n  /** @override */\n  readonly observerType?: Class<ScaledXViewObserver<X>>;\n\n  readonly xScale: Animator<this, ContinuousScale<X, number> | null, string>;\n\n  xDomain(): Domain<X> | null;\n  xDomain(xDomain: Domain<X> | null, timing?: AnyTiming | boolean): this;\n  xDomain(xMin: X, xMax: X, timing: AnyTiming | boolean): this;\n\n  xRange(): Range<number> | null;\n\n  xRangePadding(): readonly [number, number];\n\n  readonly xDataDomain: Domain<X> | null;\n\n  readonly xDataRange: Range<number> | null;\n}\n\n/** @public */\nexport const ScaledXView = (function () {\n  const ScaledXView = {} as {\n    is<X>(object: unknown): object is ScaledXView<X>;\n  };\n\n  ScaledXView.is = function <X>(object: unknown): object is ScaledXView<X> {\n    if (typeof object === \"object\" && object !== null) {\n      const view = object as ScaledXView<X>;\n      return view instanceof ScaledView\n          || view instanceof GraphicsView && \"xScale\" in view;\n    }\n    return false;\n  };\n\n  return ScaledXView;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class, Domain, Range, AnyTiming, ContinuousScale} from \"@swim/util\";\nimport type {Animator} from \"@swim/component\";\nimport {GraphicsView} from \"@swim/graphics\";\nimport type {ScaledYViewObserver} from \"./ScaledYViewObserver\";\nimport {ScaledView} from \"../\"; // forward import\n\n/** @public */\nexport interface ScaledYView<Y = unknown> extends GraphicsView {\n  /** @override */\n  readonly observerType?: Class<ScaledYViewObserver<Y>>;\n\n  readonly yScale: Animator<this, ContinuousScale<Y, number> | null, string>;\n\n  yDomain(): Domain<Y> | null;\n  yDomain(yDomain: Domain<Y> | null, timing?: AnyTiming | boolean): this;\n  yDomain(yMin: Y, yMax: Y, timing: AnyTiming | boolean): this;\n\n  yRange(): Range<number> | null;\n\n  yRangePadding(): readonly [number, number];\n\n  readonly yDataDomain: Domain<Y> | null;\n\n  readonly yDataRange: Range<number> | null;\n}\n\n/** @public */\nexport const ScaledYView = (function () {\n  const ScaledYView = {} as {\n    is<Y>(object: unknown): object is ScaledYView<Y>\n  };\n\n  ScaledYView.is = function <Y>(object: unknown): object is ScaledYView<Y> {\n    if (typeof object === \"object\" && object !== null) {\n      const view = object as ScaledYView<Y>;\n      return view instanceof ScaledView\n          || view instanceof GraphicsView && \"yScale\" in view;\n    }\n    return false;\n  };\n\n  return ScaledYView;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {GraphicsView} from \"@swim/graphics\";\nimport type {ScaledXView} from \"./ScaledXView\";\nimport type {ScaledYView} from \"./ScaledYView\";\nimport type {ScaledXYViewObserver} from \"./ScaledXYViewObserver\";\nimport {ScaledView} from \"../\"; // forward import\n\n/** @public */\nexport interface ScaledXYView<X = unknown, Y = unknown> extends GraphicsView, ScaledXView<X>, ScaledYView<Y> {\n  /** @override */\n  readonly observerType?: Class<ScaledXYViewObserver<X, Y>>;\n}\n\n/** @public */\nexport const ScaledXYView = (function () {\n  const ScaledXYView = {} as {\n    is<X, Y>(object: unknown): object is ScaledXYView<X, Y>;\n  };\n\n  ScaledXYView.is = function <X, Y>(object: unknown): object is ScaledXYView<X, Y> {\n    if (typeof object === \"object\" && object !== null) {\n      const view = object as ScaledXYView<X, Y>;\n      return view instanceof ScaledView\n          || view instanceof GraphicsView && \"xScale\" in view && \"yScale\" in view;\n    }\n    return false;\n  };\n\n  return ScaledXYView;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  Mutable,\n  Class,\n  Equals,\n  Equivalent,\n  Arrays,\n  Values,\n  Domain,\n  Range,\n  AnyTiming,\n  Timing,\n  Easing,\n  LinearDomain,\n  LinearRange,\n  ContinuousScale,\n  LinearScale,\n} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Property, Animator} from \"@swim/component\";\nimport {DateTime, TimeDomain, TimeScale} from \"@swim/time\";\nimport {ScaleGestureInput, ScaleGesture, ViewContextType, ViewFlags, View, ViewSet} from \"@swim/view\";\nimport {GraphicsViewInit, GraphicsView} from \"@swim/graphics\";\nimport {ScaledXView} from \"./ScaledXView\";\nimport {ScaledYView} from \"./ScaledYView\";\nimport type {ScaledXYView} from \"./ScaledXYView\";\nimport {ContinuousScaleAnimator} from \"./ContinuousScaleAnimator\";\nimport type {ScaledViewObserver} from \"./ScaledViewObserver\";\n\n/** @internal */\nexport type ScaledFlags = number;\n\n/** @public */\nexport interface ScaledViewInit<X = unknown, Y = unknown> extends GraphicsViewInit {\n  xScale?: ContinuousScale<X, number>;\n  yScale?: ContinuousScale<Y, number>;\n\n  xDomainBounds?: [X | boolean, X | boolean];\n  yDomainBounds?: [Y | boolean, Y | boolean];\n  xZoomBounds?: [number | boolean, number | boolean];\n  yZoomBounds?: [number | boolean, number | boolean];\n\n  xDomainPadding?: [X | boolean, X | boolean];\n  yDomainPadding?: [Y | boolean, Y | boolean];\n  xRangePadding?: [number, number];\n  yRangePadding?: [number, number];\n\n  fitAlign?: [number, number] | number;\n  xFitAlign?: number;\n  yFitAlign?: number;\n  fitAspectRatio?: number;\n  preserveAspectRatio?: boolean;\n\n  domainTracking?: [boolean, boolean] | boolean;\n  xDomainTracking?: boolean;\n  yDomainTracking?: boolean;\n\n  scaleGestures?: [boolean, boolean] | boolean;\n  xScaleGestures?: boolean;\n  yScaleGestures?: boolean;\n\n  rescaleTransition?: AnyTiming | boolean;\n  reboundTransition?: AnyTiming | boolean;\n}\n\n/** @public */\nexport abstract class ScaledView<X = unknown, Y = unknown> extends GraphicsView implements ScaledXYView<X, Y> {\n  constructor() {\n    super();\n    this.scaledFlags = 0;\n    this.xDataDomain = null;\n    this.yDataDomain = null;\n    this.xDataRange = null;\n    this.yDataRange = null;\n    this.xDataDomainPadded = null;\n    this.yDataDomainPadded = null;\n  }\n\n  override readonly observerType?: Class<ScaledViewObserver<X, Y>>;\n\n  /** @internal */\n  readonly scaledFlags: ScaledFlags;\n\n  /** @internal */\n  setScaledFlags(scaledFlags: ScaledFlags): void {\n    (this as Mutable<this>).scaledFlags = scaledFlags;\n  }\n\n  @Animator<ScaledView<X, Y>, ContinuousScale<X, number> | null>({\n    extends: ContinuousScaleAnimator,\n    type: ContinuousScale,\n    inherits: true,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    willSetValue(newXScale: ContinuousScale<X, number> | null, oldXScale: ContinuousScale<X, number> | null): void {\n      this.owner.callObservers(\"viewWillSetXScale\", newXScale, oldXScale, this.owner);\n    },\n    didSetValue(newXScale: ContinuousScale<X, number> | null, oldXScale: ContinuousScale<X, number> | null): void {\n      this.owner.updateXDataRange();\n      this.owner.callObservers(\"viewDidSetXScale\", newXScale, oldXScale, this.owner);\n    },\n    willTransition(xScale: ContinuousScale<X, number>): void {\n      if ((this.owner.scaledFlags & ScaledView.XBoundingFlag) !== 0) {\n        this.owner.onBeginBoundingXScale(xScale);\n      }\n    },\n    didTransition(xScale: ContinuousScale<X, number>): void {\n      if ((this.owner.scaledFlags & ScaledView.XBoundingFlag) !== 0) {\n        this.owner.onEndBoundingXScale(xScale);\n      }\n    },\n    didInterrupt(xScale: ContinuousScale<X, number>): void {\n      if ((this.owner.scaledFlags & ScaledView.XBoundingFlag) !== 0) {\n        this.owner.onInterruptBoundingXScale(xScale);\n      }\n    },\n  })\n  readonly xScale!: ContinuousScaleAnimator<this, X, number>;\n\n  @Animator<ScaledView<X, Y>, ContinuousScale<Y, number> | null>({\n    extends: ContinuousScaleAnimator,\n    type: ContinuousScale,\n    inherits: true,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    willSetValue(newYScale: ContinuousScale<Y, number> | null, oldYScale: ContinuousScale<Y, number> | null): void {\n      this.owner.callObservers(\"viewWillSetYScale\", newYScale, oldYScale, this.owner);\n    },\n    didSetValue(newYScale: ContinuousScale<Y, number> | null, oldYScale: ContinuousScale<Y, number> | null): void {\n      this.owner.updateYDataRange();\n      this.owner.callObservers(\"viewDidSetYScale\", newYScale, oldYScale, this.owner);\n    },\n    willTransition(yScale: ContinuousScale<Y, number>): void {\n      if ((this.owner.scaledFlags & ScaledView.YBoundingFlag) !== 0) {\n        this.owner.onBeginBoundingYScale(yScale);\n      }\n    },\n    didTransition(yScale: ContinuousScale<Y, number>): void {\n      if ((this.owner.scaledFlags & ScaledView.YBoundingFlag) !== 0) {\n        this.owner.onEndBoundingYScale(yScale);\n      }\n    },\n    didInterrupt(yScale: ContinuousScale<Y, number>): void {\n      if ((this.owner.scaledFlags & ScaledView.YBoundingFlag) !== 0) {\n        this.owner.onInterruptBoundingYScale(yScale);\n      }\n    },\n  })\n  readonly yScale!: ContinuousScaleAnimator<this, Y, number>;\n\n  xDomain(): Domain<X> | null;\n  xDomain(xDomain: Domain<X> | string | null, timing?: AnyTiming | boolean): this;\n  xDomain(xMin: X, xMax: X, timing?: AnyTiming | boolean): this;\n  xDomain(xMin?: Domain<X> | X | string | null, xMax?: X | AnyTiming | boolean,\n          timing?: AnyTiming | boolean): Domain<X> | null | this {\n    if (xMin === void 0) {\n      const xScale = this.xScale.value;\n      return xScale !== null ? xScale.domain : null;\n    } else {\n      if (xMin instanceof Domain || typeof xMin === \"string\") {\n        timing = xMax as AnyTiming | boolean;\n      }\n      if (timing === true) {\n        timing = this.rescaleTransition.value;\n      }\n      const xRange = this.xRange();\n      if (xMin instanceof Domain || typeof xMin === \"string\") {\n        if (xRange !== null) {\n          this.xScale.setBaseScale(xMin as Domain<X> | string, xRange, timing);\n        } else {\n          this.xScale.setBaseDomain(xMin as Domain<X> | string, timing);\n        }\n      } else {\n        if (xRange !== null) {\n          this.xScale.setBaseScale(xMin as X, xMax as X, xRange[0], xRange[1], timing);\n        } else {\n          this.xScale.setBaseDomain(xMin as X, xMax as X, timing);\n        }\n      }\n      return this;\n    }\n  }\n\n  yDomain(): Domain<Y> | null;\n  yDomain(yDomain: Domain<Y> | string | null, timing?: AnyTiming | boolean): this;\n  yDomain(yMin: Y, yMax: Y, timing?: AnyTiming | boolean): this;\n  yDomain(yMin?: Domain<Y> | Y | string | null, yMax?: Y | AnyTiming | boolean,\n          timing?: AnyTiming | boolean): Domain<Y> | null | this {\n    if (yMin === void 0) {\n      const yScale = this.yScale.value;\n      return yScale !== null ? yScale.domain : null;\n    } else {\n      if (yMin instanceof Domain || typeof yMin === \"string\") {\n        timing = yMax as AnyTiming | boolean;\n      }\n      if (timing === true) {\n        timing = this.rescaleTransition.value;\n      }\n      const yRange = this.yRange();\n      if (yMin instanceof Domain || typeof yMin === \"string\") {\n        if (yRange !== null) {\n          this.yScale.setBaseScale(yMin as Domain<Y> | string, yRange, timing);\n        } else {\n          this.yScale.setBaseDomain(yMin as Domain<Y>| string, timing);\n        }\n      } else {\n        if (yRange !== null) {\n          this.yScale.setBaseScale(yMin as Y, yMax as Y, yRange[0], yRange[1], timing);\n        } else {\n          this.yScale.setBaseDomain(yMin as Y, yMax as Y, timing);\n        }\n      }\n      return this;\n    }\n  }\n\n  xRange(): Range<number> | null {\n    const width = this.viewFrame.width;\n    if (isFinite(width)) {\n      const xRangePadding = this.xRangePadding.value;\n      const xRangeMin = xRangePadding[0];\n      const xRangeMax = width - xRangePadding[1];\n      return LinearRange(xRangeMin, xRangeMax);\n    } else {\n      return null;\n    }\n  }\n\n  yRange(): Range<number> | null {\n    const height = this.viewFrame.height;\n    if (isFinite(height)) {\n      const yRangePadding = this.yRangePadding.value;\n      const yRangeMin = yRangePadding[0];\n      const yRangeMax = height - yRangePadding[1];\n      return LinearRange(yRangeMax, yRangeMin);\n    } else {\n      return null;\n    }\n  }\n\n  readonly xDataDomain: Domain<X> | null;\n\n  protected setXDataDomain(newXDataDomain: Domain<X> | null): void {\n    const oldXDataDomain = this.xDataDomain;\n    if (!Equals(newXDataDomain, oldXDataDomain)) {\n      this.willSetXDataDomain(newXDataDomain, oldXDataDomain);\n      (this as Mutable<this>).xDataDomain = newXDataDomain;\n      this.onSetXDataDomain(newXDataDomain, oldXDataDomain);\n      this.didSetXDataDomain(newXDataDomain, oldXDataDomain);\n    }\n  }\n\n  protected willSetXDataDomain(newXDataDomain: Domain<X> | null, oldXDataDomain: Domain<X> | null): void {\n    this.callObservers(\"viewWillSetXDataDomain\", newXDataDomain, oldXDataDomain, this);\n  }\n\n  protected onSetXDataDomain(newXDataDomain: Domain<X> | null, oldXDataDomain: Domain<X> | null): void {\n    this.updateXDataRange();\n    this.updateXDataDomainPadded();\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected didSetXDataDomain(newXDataDomain: Domain<X> | null, oldXDataDomain: Domain<X> | null): void {\n    this.callObservers(\"viewDidSetXDataDomain\", newXDataDomain, oldXDataDomain, this);\n  }\n\n  protected updateXDataDomain(xScaledDomain: Domain<X> | null): void {\n    let xDataDomain = this.xDataDomain;\n    if (xDataDomain === null || this.scaled.viewCount === 1) {\n      xDataDomain = xScaledDomain;\n    } else if (xScaledDomain !== null) {\n      if (Values.compare(xScaledDomain[0], xDataDomain[0]) < 0) {\n        xDataDomain = Domain(xScaledDomain[0], xDataDomain[1]);\n      }\n      if (Values.compare(xDataDomain[1], xScaledDomain[1]) < 0) {\n        xDataDomain = Domain(xDataDomain[0], xScaledDomain[1]);\n      }\n    }\n    this.setXDataDomain(xDataDomain);\n  }\n\n  readonly yDataDomain: Domain<Y> | null;\n\n  protected setYDataDomain(newYDataDomain: Domain<Y> | null): void {\n    const oldYDataDomain = this.yDataDomain;\n    if (!Equals(newYDataDomain, oldYDataDomain)) {\n      this.willSetYDataDomain(newYDataDomain, oldYDataDomain);\n      (this as Mutable<this>).yDataDomain = newYDataDomain;\n      this.onSetYDataDomain(newYDataDomain, oldYDataDomain);\n      this.didSetYDataDomain(newYDataDomain, oldYDataDomain);\n    }\n  }\n\n  protected willSetYDataDomain(newYDataDomain: Domain<Y> | null, oldYDataDomain: Domain<Y> | null): void {\n    this.callObservers(\"viewWillSetYDataDomain\", newYDataDomain, oldYDataDomain, this);\n  }\n\n  protected onSetYDataDomain(newYDataDomain: Domain<Y> | null, oldYDataDomain: Domain<Y> | null): void {\n    this.updateYDataRange();\n    this.updateYDataDomainPadded();\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected didSetYDataDomain(newYDataDomain: Domain<Y> | null, oldYDataDomain: Domain<Y> | null): void {\n    this.callObservers(\"viewDidSetYDataDomain\", newYDataDomain, oldYDataDomain, this);\n  }\n\n  protected updateYDataDomain(yScaledDomain: Domain<Y> | null): void {\n    let yDataDomain = this.yDataDomain;\n    if (yDataDomain === null || this.scaled.viewCount === 1) {\n      yDataDomain = yScaledDomain;\n    } else if (yScaledDomain !== null) {\n      if (Values.compare(yScaledDomain[0], yDataDomain[0]) < 0) {\n        yDataDomain = Domain(yScaledDomain[0], yDataDomain[1]);\n      }\n      if (Values.compare(yDataDomain[1], yScaledDomain[1]) < 0) {\n        yDataDomain = Domain(yDataDomain[0], yScaledDomain[1]);\n      }\n    }\n    this.setYDataDomain(yDataDomain);\n  }\n\n  readonly xDataRange: Range<number> | null;\n\n  protected setXDataRange(xDataRange: Range<number> | null): void {\n    (this as Mutable<this>).xDataRange = xDataRange;\n  }\n\n  protected updateXDataRange(): void {\n    const xDataDomain = this.xDataDomain;\n    if (xDataDomain !== null) {\n      const xScale = this.xScale.value;\n      if (xScale !== null) {\n        this.setXDataRange(LinearRange(xScale(xDataDomain[0]), xScale(xDataDomain[1])));\n      } else {\n        this.setXDataRange(null);\n      }\n    }\n  }\n\n  readonly yDataRange: Range<number> | null;\n\n  protected setYDataRange(yDataRange: Range<number> | null): void {\n    (this as Mutable<this>).yDataRange = yDataRange;\n  }\n\n  protected updateYDataRange(): void {\n    const yDataDomain = this.yDataDomain;\n    if (yDataDomain !== null) {\n      const yScale = this.yScale.value;\n      if (yScale !== null) {\n        this.setYDataRange(LinearRange(yScale(yDataDomain[0]), yScale(yDataDomain[1])));\n      } else {\n        this.setYDataRange(null);\n      }\n    }\n  }\n\n  readonly xDataDomainPadded: Domain<X> | null;\n\n  protected setXDataDomainPadded(xDataDomainPadded: Domain<X> | null): void {\n    (this as Mutable<this>).xDataDomainPadded = xDataDomainPadded;\n  }\n\n  protected updateXDataDomainPadded(): void {\n    let xDataDomainPadded: Domain<X> | null;\n    const xDataDomain = this.xDataDomain;\n    if (xDataDomain !== null) {\n      let xDataDomainPaddedMin = xDataDomain[0];\n      let xDataDomainPaddedMax = xDataDomain[1];\n      const xDomainPadding = this.xDomainPadding.value;\n      if (typeof xDomainPadding[0] !== \"boolean\") {\n        xDataDomainPaddedMin = (+xDataDomainPaddedMin - +xDomainPadding[0]) as unknown as X;\n      }\n      if (typeof xDomainPadding[1] !== \"boolean\") {\n        xDataDomainPaddedMax = (+xDataDomainPaddedMax + +xDomainPadding[1]) as unknown as X;\n      }\n      xDataDomainPadded = Domain(xDataDomainPaddedMin, xDataDomainPaddedMax);\n    } else {\n      xDataDomainPadded = null;\n    }\n    this.setXDataDomainPadded(xDataDomainPadded);\n  }\n\n  readonly yDataDomainPadded: Domain<Y> | null;\n\n  protected setYDataDomainPadded(yDataDomainPadded: Domain<Y> | null): void {\n    (this as Mutable<this>).yDataDomainPadded = yDataDomainPadded;\n  }\n\n  protected updateYDataDomainPadded(): void {\n    let yDataDomainPadded: Domain<Y> | null;\n    const yDataDomain = this.yDataDomain;\n    if (yDataDomain !== null) {\n      let yDataDomainPaddedMin = yDataDomain[0];\n      let yDataDomainPaddedMax = yDataDomain[1];\n      const yDomainPadding = this.yDomainPadding.value;\n      if (typeof yDomainPadding[0] !== \"boolean\") {\n        yDataDomainPaddedMin = (+yDataDomainPaddedMin - +yDomainPadding[0]) as unknown as Y;\n      }\n      if (typeof yDomainPadding[1] !== \"boolean\") {\n        yDataDomainPaddedMax = (+yDataDomainPaddedMax + +yDomainPadding[1]) as unknown as Y;\n      }\n      yDataDomainPadded = Domain(yDataDomainPaddedMin, yDataDomainPaddedMax);\n    } else {\n      yDataDomainPadded = null;\n    }\n    this.setYDataDomainPadded(yDataDomainPadded);\n  }\n\n  @Property<ScaledView<X, Y>, readonly [X | boolean, X | boolean]>({\n    updateFlags: View.NeedsLayout,\n    initValue(): readonly [X | boolean, X | boolean] {\n      return [true, true];\n    },\n    equalValues(newXDomainBounds: readonly [X | boolean, X | boolean], oldXDomainBounds: readonly [X | boolean, X | boolean]): boolean {\n      return Arrays.equal(newXDomainBounds, oldXDomainBounds);\n    },\n  })\n  readonly xDomainBounds!: Property<this, readonly [X | boolean, X | boolean]>\n\n  @Property<ScaledView<X, Y>, readonly [Y | boolean, Y | boolean]>({\n    updateFlags: View.NeedsLayout,\n    initValue(): readonly [Y | boolean, Y | boolean] {\n      return [true, true];\n    },\n    equalValues(newYDomainBounds: readonly [Y | boolean, Y | boolean], oldYDomainBounds: readonly [Y | boolean, Y | boolean]): boolean {\n      return Arrays.equal(newYDomainBounds, oldYDomainBounds);\n    },\n  })\n  readonly yDomainBounds!: Property<this, readonly [Y | boolean, Y | boolean]>\n\n  @Property<ScaledView<X, Y>, readonly [number | boolean, number | boolean]>({\n    updateFlags: View.NeedsLayout,\n    initValue(): readonly [number | boolean, number | boolean] {\n      return [true, true];\n    },\n    equalValues(newXZoomBounds: readonly [number | boolean, number | boolean], oldXZoomBounds: readonly [number | boolean, number | boolean]): boolean {\n      return Arrays.equal(newXZoomBounds, oldXZoomBounds);\n    },\n  })\n  readonly xZoomBounds!: Property<this, readonly [number | boolean, number | boolean]>\n\n  @Property<ScaledView<X, Y>, readonly [number | boolean, number | boolean]>({\n    updateFlags: View.NeedsLayout,\n    initValue(): readonly [number | boolean, number | boolean] {\n      return [true, true];\n    },\n    equalValues(newYDomainBounds: readonly [number | boolean, number | boolean], oldYDomainBounds: readonly [number | boolean, number | boolean]): boolean {\n      return Arrays.equal(newYDomainBounds, oldYDomainBounds);\n    },\n  })\n  readonly yZoomBounds!: Property<this, readonly [number | boolean, number | boolean]>\n\n  @Property<ScaledView<X, Y>, readonly [X | boolean, X | boolean]>({\n    updateFlags: View.NeedsLayout,\n    initValue(): readonly [X | boolean, X | boolean] {\n      return [false, false];\n    },\n    equalValues(newXDomainPadding: readonly [X | boolean, X | boolean], oldXDomainPadding: readonly [X | boolean, X | boolean]): boolean {\n      return Arrays.equal(newXDomainPadding, oldXDomainPadding);\n    },\n  })\n  readonly xDomainPadding!: Property<this, readonly [X | boolean, X | boolean]>\n\n  @Property<ScaledView<X, Y>, readonly [Y | boolean, Y | boolean]>({\n    updateFlags: View.NeedsLayout,\n    initValue(): readonly [Y | boolean, Y | boolean] {\n      return [false, false];\n    },\n    equalValues(newYDomainPadding: readonly [Y | boolean, Y | boolean], oldYDomainPadding: readonly [Y | boolean, Y | boolean]): boolean {\n      return Arrays.equal(newYDomainPadding, oldYDomainPadding);\n    },\n  })\n  readonly yDomainPadding!: Property<this, readonly [Y | boolean, Y | boolean]>\n\n  protected updateXRangePadding(xScaledRangePadding: readonly [number, number]): void {\n    if (this.xRangePadding.hasAffinity(Affinity.Intrinsic)) {\n      let xRangePadding = this.xRangePadding.value;\n      if (xRangePadding === null || this.scaled.viewCount === 1) {\n        xRangePadding = xScaledRangePadding;\n      } else if (xScaledRangePadding !== null) {\n        xRangePadding = [Math.max(xRangePadding[0], xScaledRangePadding[0]), Math.max(xRangePadding[1], xScaledRangePadding[1])];\n      }\n      this.xRangePadding.setValue(xRangePadding, Affinity.Intrinsic);\n    }\n  }\n\n  @Property<ScaledView<X, Y>, readonly [number, number]>({\n    updateFlags: View.NeedsLayout,\n    initValue(): readonly [number, number] {\n      return [0, 0];\n    },\n    willSetValue(newXRangePadding: readonly [number, number], oldXRangePadding: readonly [number, number]): void {\n      this.owner.callObservers(\"viewWillSetXRangePadding\", newXRangePadding, oldXRangePadding, this.owner);\n    },\n    didSetValue(newXRangePadding: readonly [number, number], oldXRangePadding: readonly [number, number]): void {\n      this.owner.callObservers(\"viewDidSetXRangePadding\", newXRangePadding, oldXRangePadding, this.owner);\n    },\n    equalValues(newXRangePadding: readonly [number, number], oldXRangePadding: readonly [number, number]): boolean {\n      return Arrays.equal(newXRangePadding, oldXRangePadding);\n    },\n  })\n  readonly xRangePadding!: Property<this, readonly [number, number]>\n\n  protected updateYRangePadding(yScaledRangePadding: readonly [number, number]): void {\n    if (this.yRangePadding.hasAffinity(Affinity.Intrinsic)) {\n      let yRangePadding = this.yRangePadding.value;\n      if (yRangePadding === null || this.scaled.viewCount === 1) {\n        yRangePadding = yScaledRangePadding;\n      } else if (yScaledRangePadding !== null) {\n        yRangePadding = [Math.max(yRangePadding[0], yScaledRangePadding[0]), Math.max(yRangePadding[1], yScaledRangePadding[1])];\n      }\n      this.yRangePadding.setValue(yRangePadding, Affinity.Intrinsic);\n    }\n  }\n\n  @Property<ScaledView<X, Y>, readonly [number, number]>({\n    updateFlags: View.NeedsLayout,\n    initValue(): readonly [number, number] {\n      return [0, 0];\n    },\n    willSetValue(newYRangePadding: readonly [number, number], oldYRangePadding: readonly [number, number]): void {\n      this.owner.callObservers(\"viewWillSetYRangePadding\", newYRangePadding, oldYRangePadding, this.owner);\n    },\n    didSetValue(newYRangePadding: readonly [number, number], oldYRangePadding: readonly [number, number]): void {\n      this.owner.callObservers(\"viewDidSetYRangePadding\", newYRangePadding, oldYRangePadding, this.owner);\n    },\n    equalValues(newYRangePadding: readonly [number, number], oldYRangePadding: readonly [number, number]): boolean {\n      return Arrays.equal(newYRangePadding, oldYRangePadding);\n    },\n  })\n  readonly yRangePadding!: Property<this, readonly [number, number]>\n\n  @Property<ScaledView<X, Y>, readonly [number, number], number>({\n    type: Object,\n    initValue(): readonly [number, number] {\n      return [1.0, 0.5];\n    },\n    equalValues(newFitAlign: readonly [number, number], oldFitAlign: readonly [number, number]): boolean {\n      return Arrays.equal(newFitAlign, oldFitAlign);\n    },\n    fromAny(value: readonly [number, number] | number): readonly [number, number] {\n      if (typeof value === \"number\") {\n        return [value, value];\n      } else {\n        return value;\n      }\n    },\n  })\n  readonly fitAlign!: Property<this, readonly [number, number], number>;\n\n  xFitAlign(): number;\n  xFitAlign(xFitAlign: number): this;\n  xFitAlign(xFitAlign?: number): number | this {\n    const fitAlign = this.fitAlign.value;\n    if (xFitAlign === void 0) {\n      return fitAlign[0];\n    } else {\n      this.fitAlign.setValue([xFitAlign, fitAlign[1]]);\n      return this;\n    }\n  }\n\n  yFitAlign(): number;\n  yFitAlign(yFitAlign: number): this;\n  yFitAlign(yFitAlign?: number): number | this {\n    const fitAlign = this.fitAlign.value;\n    if (yFitAlign === void 0) {\n      return fitAlign[0];\n    } else {\n      this.fitAlign.setValue([fitAlign[0], yFitAlign]);\n      return this;\n    }\n  }\n\n  @Property({type: Number})\n  readonly fitAspectRatio!: Property<this, number | undefined>;\n\n  preserveAspectRatio(): boolean;\n  preserveAspectRatio(preserveAspectRatio: boolean): this;\n  preserveAspectRatio(preserveAspectRatio?: boolean): boolean | this {\n    if (preserveAspectRatio === void 0) {\n      return this.gesture.preserveAspectRatio;\n    } else {\n      this.gesture.preserveAspectRatio = preserveAspectRatio;\n      return this;\n    }\n  }\n\n  domainTracking(): readonly [boolean, boolean];\n  domainTracking(domainTracking: readonly [boolean, boolean] | boolean): this;\n  domainTracking(xDomainTracking: boolean, yDomainTracking: boolean): this;\n  domainTracking(xDomainTracking?: readonly [boolean, boolean] | boolean,\n                 yDomainTracking?: boolean): readonly [boolean, boolean] | this {\n    if (xDomainTracking === void 0) {\n      return [(this.scaledFlags & ScaledView.XDomainTrackingFlag) !== 0,\n              (this.scaledFlags & ScaledView.YDomainTrackingFlag) !== 0];\n    } else {\n      if (Array.isArray(xDomainTracking)) {\n        yDomainTracking = xDomainTracking[1] as boolean;\n        xDomainTracking = xDomainTracking[0] as boolean;\n      } else if (yDomainTracking === void 0) {\n        yDomainTracking = xDomainTracking as boolean;\n      }\n      if (xDomainTracking as boolean) {\n        this.setScaledFlags(this.scaledFlags | ScaledView.XDomainTrackingFlag);\n      } else {\n        this.setScaledFlags(this.scaledFlags & ~ScaledView.XDomainTrackingFlag);\n      }\n      if (yDomainTracking) {\n        this.setScaledFlags(this.scaledFlags | ScaledView.YDomainTrackingFlag);\n      } else {\n        this.setScaledFlags(this.scaledFlags & ~ScaledView.YDomainTrackingFlag);\n      }\n      return this;\n    }\n  }\n\n  xDomainTracking(): boolean;\n  xDomainTracking(xDomainTracking: boolean): this;\n  xDomainTracking(xDomainTracking?: boolean): boolean | this {\n    if (xDomainTracking === void 0) {\n      return (this.scaledFlags & ScaledView.XDomainTrackingFlag) !== 0;\n    } else {\n      if (xDomainTracking) {\n        this.setScaledFlags(this.scaledFlags | ScaledView.XDomainTrackingFlag);\n      } else {\n        this.setScaledFlags(this.scaledFlags & ~ScaledView.XDomainTrackingFlag);\n      }\n      return this;\n    }\n  }\n\n  yDomainTracking(): boolean;\n  yDomainTracking(yDomainTracking: boolean): this;\n  yDomainTracking(yDomainTracking?: boolean): boolean | this {\n    if (yDomainTracking === void 0) {\n      return (this.scaledFlags & ScaledView.YDomainTrackingFlag) !== 0;\n    } else {\n      if (yDomainTracking) {\n        this.setScaledFlags(this.scaledFlags | ScaledView.YDomainTrackingFlag);\n      } else {\n        this.setScaledFlags(this.scaledFlags & ~ScaledView.YDomainTrackingFlag);\n      }\n      return this;\n    }\n  }\n\n  scaleGestures(): readonly [boolean, boolean];\n  scaleGestures(scaleGestures: readonly [boolean, boolean] | boolean): this;\n  scaleGestures(xScaleGestures: boolean, yScaleGestures: boolean): this;\n  scaleGestures(xScaleGestures?: readonly [boolean, boolean] | boolean,\n                yScaleGestures?: boolean): readonly [boolean, boolean] | this {\n    if (xScaleGestures === void 0) {\n      return [(this.scaledFlags & ScaledView.XScaleGesturesFlag) !== 0,\n              (this.scaledFlags & ScaledView.YScaleGesturesFlag) !== 0];\n    } else {\n      if (Array.isArray(xScaleGestures)) {\n        yScaleGestures = xScaleGestures[1] as boolean;\n        xScaleGestures = xScaleGestures[0] as boolean;\n      } else if (yScaleGestures === void 0) {\n        yScaleGestures = xScaleGestures as boolean;\n      }\n      if (xScaleGestures as boolean) {\n        this.setScaledFlags(this.scaledFlags | ScaledView.XScaleGesturesFlag);\n      } else {\n        this.setScaledFlags(this.scaledFlags & ~ScaledView.XScaleGesturesFlag);\n      }\n      if (yScaleGestures) {\n        this.setScaledFlags(this.scaledFlags | ScaledView.YScaleGesturesFlag);\n      } else {\n        this.setScaledFlags(this.scaledFlags & ~ScaledView.YScaleGesturesFlag);\n      }\n      return this;\n    }\n  }\n\n  xScaleGestures(): boolean;\n  xScaleGestures(xScaleGestures: boolean): this;\n  xScaleGestures(xScaleGestures?: boolean): boolean | this {\n    if (xScaleGestures === void 0) {\n      return (this.scaledFlags & ScaledView.XScaleGesturesFlag) !== 0;\n    } else {\n      if (xScaleGestures) {\n        this.setScaledFlags(this.scaledFlags | ScaledView.XScaleGesturesFlag);\n      } else {\n        this.setScaledFlags(this.scaledFlags & ~ScaledView.XScaleGesturesFlag);\n      }\n      return this;\n    }\n  }\n\n  yScaleGestures(): boolean;\n  yScaleGestures(yScaleGestures: boolean): this;\n  yScaleGestures(yScaleGestures?: boolean): boolean | this {\n    if (yScaleGestures === void 0) {\n      return (this.scaledFlags & ScaledView.YScaleGesturesFlag) !== 0;\n    } else {\n      if (yScaleGestures) {\n        this.setScaledFlags(this.scaledFlags | ScaledView.YScaleGesturesFlag);\n      } else {\n        this.setScaledFlags(this.scaledFlags & ~ScaledView.YScaleGesturesFlag);\n      }\n      return this;\n    }\n  }\n\n  @Property<ScaledView<X, Y>, Timing | boolean | undefined, AnyTiming>({\n    type: Timing,\n    inherits: true,\n    initValue(): Timing | boolean | undefined {\n      return Easing.linear.withDuration(250);\n    },\n  })\n  readonly rescaleTransition!: Property<this, Timing | boolean | undefined, AnyTiming>;\n\n  @Property<ScaledView<X, Y>, Timing | boolean | undefined, AnyTiming>({\n    type: Timing,\n    inherits: true,\n    initValue(): Timing | boolean | undefined {\n      return Easing.cubicOut.withDuration(250);\n    },\n  })\n  readonly reboundTransition!: Property<this, Timing | boolean | undefined, AnyTiming>;\n\n  fitX(tween: boolean = false): void {\n    this.setScaledFlags(this.scaledFlags | ScaledView.XFitFlag);\n    if (tween === true) {\n      this.setScaledFlags(this.scaledFlags | ScaledView.XFitTweenFlag);\n    }\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  fitY(tween: boolean = false): void {\n    this.setScaledFlags(this.scaledFlags | ScaledView.YFitFlag);\n    if (tween === true) {\n      this.setScaledFlags(this.scaledFlags | ScaledView.YFitTweenFlag);\n    }\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  fit(tween: boolean = false): void {\n    this.setScaledFlags(this.scaledFlags | (ScaledView.XFitFlag | ScaledView.YFitFlag));\n    if (tween === true) {\n      this.setScaledFlags(this.scaledFlags | ScaledView.FitTweenMask);\n    }\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  /** @internal */\n  @ViewSet<ScaledView<X, Y>, ScaledXView<X> | ScaledYView<Y>>({\n    binds: true,\n    observes: true,\n    willAttachView(scaledView: ScaledXView<X> | ScaledYView<Y>, targetView: View | null): void {\n      this.owner.callObservers(\"viewWillAttachScaled\", scaledView, targetView, this.owner);\n    },\n    didAttachView(newScaledView: ScaledXView<X> | ScaledYView<Y>): void {\n      if (ScaledXView.is<X>(newScaledView)) {\n        this.owner.updateXDataDomain(newScaledView.xDataDomain);\n      }\n      if (ScaledYView.is<Y>(newScaledView)) {\n        this.owner.updateYDataDomain(newScaledView.yDataDomain);\n      }\n    },\n    didDetachView(scaledView: ScaledXView<X> | ScaledYView<Y>): void {\n      this.owner.callObservers(\"viewDidDetachScaled\", scaledView, this.owner);\n    },\n    viewDidSetXRangePadding(newXRangePadding: readonly [number, number], oldXRangePadding: readonly [number, number]): void {\n      this.owner.updateXRangePadding(newXRangePadding);\n    },\n    viewDidSetYRangePadding(newYRangePadding: readonly [number, number], oldYRangePadding: readonly [number, number]): void {\n      this.owner.updateYRangePadding(newYRangePadding);\n    },\n    viewDidSetXDataDomain(newXDataDomain: Domain<X> | null, oldXDataDomain: Domain<X> | null): void {\n      this.owner.updateXDataDomain(newXDataDomain);\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    viewDidSetYDataDomain(newYDataDomain: Domain<Y> | null, oldYDataDomain: Domain<Y> | null): void {\n      this.owner.updateYDataDomain(newYDataDomain);\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    detectView(view: View): ScaledXView<X> | ScaledYView<Y> | null {\n     return ScaledXView.is<X>(view) || ScaledYView.is<Y>(view) ? view : null;\n    },\n  })\n  readonly scaled!: ViewSet<this, ScaledXView<X> | ScaledYView<Y>>;\n  static readonly scaled: MemberFastenerClass<ScaledView, \"scaled\">;\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.xScale.recohere(viewContext.updateTime);\n    this.yScale.recohere(viewContext.updateTime);\n    this.resizeScales();\n    this.updateScales();\n  }\n\n  /**\n   * Updates own scale ranges to project onto view frame. Infers own scales\n   * from child view data domains if inherited x/y scales are undefined.\n   */\n  protected resizeScales(): void {\n    let xScale: ContinuousScale<X, number> | null;\n    const xRange = this.xRange();\n    if (xRange !== null) {\n      xScale = !this.xScale.inherited ? this.xScale.state : null;\n      if (xScale !== null) {\n        if (!xScale.range.equals(xRange)) {\n          this.xScale.setRange(xRange);\n          this.setScaledFlags(this.scaledFlags | ScaledView.RescaleFlag);\n        }\n      } else if (this.xScale.superFastener === null || this.xScale.superValue === null) {\n        const xDataDomainPadded = this.xDataDomainPadded;\n        if (xDataDomainPadded !== null) {\n          xScale = ScaledView.createScale(xDataDomainPadded[0], xDataDomainPadded[1], xRange[0], xRange[1]);\n          this.xScale.setState(xScale);\n          this.setScaledFlags(this.scaledFlags | ScaledView.XFitFlag);\n        }\n      }\n    }\n\n    let yScale: ContinuousScale<Y, number> | null;\n    const yRange = this.yRange();\n    if (yRange !== null) {\n      yScale = !this.yScale.inherited ? this.yScale.state : null;\n      if (yScale !== null) {\n        if (!yScale.range.equals(yRange)) {\n          this.yScale.setRange(yRange);\n          this.setScaledFlags(this.scaledFlags | ScaledView.RescaleFlag);\n        }\n      } else if (this.yScale.superFastener === null || this.yScale.superValue === null) {\n        const yDataDomainPadded = this.yDataDomainPadded;\n        if (yDataDomainPadded !== null) {\n          yScale = ScaledView.createScale(yDataDomainPadded[0], yDataDomainPadded[1], yRange[0], yRange[1]);\n          this.yScale.setState(yScale);\n          this.setScaledFlags(this.scaledFlags | ScaledView.YFitFlag);\n        }\n      }\n    }\n  }\n\n  protected updateScales(): void {\n    const xScale = !this.xScale.inherited ? this.xScale.state : null;\n    const yScale = !this.yScale.inherited ? this.yScale.state : null;\n    if (xScale !== null && yScale !== null) {\n      const isPressing = this.gesture.pressing;\n      if (!isPressing) {\n        const isCoasting = this.gesture.coasting;\n        this.boundScales(xScale, yScale, isCoasting);\n      }\n    }\n  }\n\n  /**\n   * Clamps scales to domain bounds and corrects aspect ratio.\n   */\n  protected boundScales(oldXScale: ContinuousScale<X, number>,\n                        oldYScale: ContinuousScale<Y, number>,\n                        isCoasting: boolean): void {\n    const oldXDomain = oldXScale.domain;\n    const oldYDomain = oldYScale.domain;\n    let newXDomain: Domain<X> = oldXDomain;\n    let newYDomain: Domain<Y> = oldYDomain;\n\n    // fit x domain\n    const xDataDomainPadded = this.xDataDomainPadded;\n    if (xDataDomainPadded !== null && (this.scaledFlags & ScaledView.XFitFlag) !== 0) {\n      newXDomain = xDataDomainPadded;\n      this.setScaledFlags(this.scaledFlags | ScaledView.XInRangeMask);\n    } else {\n      newXDomain = oldXDomain;\n    }\n\n    // fit y domain\n    const yDataDomainPadded = this.yDataDomainPadded;\n    if (yDataDomainPadded !== null && (this.scaledFlags & ScaledView.YFitFlag) !== 0) {\n      newYDomain = yDataDomainPadded;\n      this.setScaledFlags(this.scaledFlags | ScaledView.YInRangeMask);\n    } else {\n      newYDomain = oldYDomain;\n    }\n\n    // clamp x domain\n    const xDomainPadded = xDataDomainPadded !== null ? xDataDomainPadded : oldXDomain;\n    const xDomainBounds = this.xDomainBounds.value;\n    const xDomainMin = xDomainBounds[0] === false ? void 0\n                     : xDomainBounds[0] === true ? xDomainPadded[0]\n                     : xDomainBounds[0];\n    const xDomainMax = xDomainBounds[1] === false ? void 0\n                     : xDomainBounds[1] === true ? xDomainPadded[1]\n                     : xDomainBounds[1];\n    const xZoomBounds = this.xZoomBounds.value;\n    let xZoomMin: number | boolean | undefined = xZoomBounds[0];\n    let xZoomMax: number | boolean | undefined = xZoomBounds[1];\n    if (xZoomMin === true) {\n      if (oldXScale instanceof LinearScale) {\n        xZoomMin = ScaledView.LinearZoomMin;\n      } else if (oldXScale instanceof TimeScale) {\n        xZoomMin = ScaledView.TimeZoomMin;\n      } else {\n        xZoomMin = void 0;\n      }\n    } else if (xZoomMin === false) {\n      xZoomMin = void 0;\n    }\n    if (xZoomMax === true) {\n      if (oldXScale instanceof LinearScale) {\n        xZoomMax = ScaledView.LinearZoomMax;\n      } else if (oldXScale instanceof TimeScale) {\n        xZoomMax = ScaledView.TimeZoomMax;\n      } else {\n        xZoomMax = void 0;\n      }\n    } else if (xZoomMax === false) {\n      xZoomMax = void 0;\n    }\n    newXDomain = oldXScale.clampDomain(xDomainMin, xDomainMax, xZoomMin, xZoomMax).domain;\n\n    // clamp y domain\n    const yDomainPadded = yDataDomainPadded !== null ? yDataDomainPadded : oldYDomain;\n    const yDomainBounds = this.yDomainBounds.value;\n    const yDomainMin = yDomainBounds[0] === false ? void 0\n                     : yDomainBounds[0] === true ? yDomainPadded[0]\n                     : yDomainBounds[0];\n    const yDomainMax = yDomainBounds[1] === false ? void 0\n                     : yDomainBounds[1] === true ? yDomainPadded[1]\n                     : yDomainBounds[1];\n    const yZoomBounds = this.yZoomBounds.value;\n    let yZoomMin: number | boolean | undefined = yZoomBounds[0];\n    let yZoomMax: number | boolean | undefined = yZoomBounds[1];\n    if (yZoomMin === true) {\n      if (oldYScale instanceof LinearScale) {\n        yZoomMin = ScaledView.LinearZoomMin;\n      } else if (oldYScale instanceof TimeScale) {\n        yZoomMin = ScaledView.TimeZoomMin;\n      } else {\n        yZoomMin = void 0;\n      }\n    } else if (yZoomMin === false) {\n      yZoomMin = void 0;\n    }\n    if (yZoomMax === true) {\n      if (oldYScale instanceof LinearScale) {\n        yZoomMax = ScaledView.LinearZoomMax;\n      } else if (oldYScale instanceof TimeScale) {\n        yZoomMax = ScaledView.TimeZoomMax;\n      } else {\n        yZoomMax = void 0;\n      }\n    } else if (yZoomMax === false) {\n      yZoomMax = void 0;\n    }\n    newYDomain = oldYScale.clampDomain(yDomainMin, yDomainMax, yZoomMin, yZoomMax).domain;\n\n    // track x domain\n    if (xDataDomainPadded !== null && !isCoasting &&\n        (this.scaledFlags & ScaledView.XDomainTrackingFlag) !== 0 &&\n        (this.scaledFlags & ScaledView.XInRangeMask) !== 0) {\n      if ((this.scaledFlags & ScaledView.XInRangeMask) === ScaledView.XInRangeMask) {\n        newXDomain = xDataDomainPadded;\n      } else {\n        const xDomainWidth = +newXDomain[1] - +newXDomain[0] as unknown as X;\n        if ((this.scaledFlags & ScaledView.XMinInRangeFlag) !== 0) {\n          newXDomain = Domain(xDataDomainPadded[0], +xDataDomainPadded[0] + +xDomainWidth as unknown as X);\n        } else {\n          newXDomain = Domain(+xDataDomainPadded[1] - +xDomainWidth as unknown as X, xDataDomainPadded[1]);\n        }\n      }\n    }\n\n    // track y domain\n    if (yDataDomainPadded !== null && !isCoasting &&\n        (this.scaledFlags & ScaledView.YDomainTrackingFlag) !== 0 &&\n        (this.scaledFlags & ScaledView.YInRangeMask) !== 0) {\n      if ((this.scaledFlags & ScaledView.YInRangeMask) === ScaledView.YInRangeMask) {\n        newYDomain = yDataDomainPadded;\n      } else {\n        const yDomainWidth = +newYDomain[1] - +newYDomain[0] as unknown as Y;\n        if ((this.scaledFlags & ScaledView.YMinInRangeFlag) !== 0) {\n          newYDomain = Domain(yDataDomainPadded[0], +yDataDomainPadded[0] + +yDomainWidth as unknown as Y);\n        } else {\n          newYDomain = Domain(+yDataDomainPadded[1] - +yDomainWidth as unknown as Y, yDataDomainPadded[1]);\n        }\n      }\n    }\n\n    // fit aspect ratio\n    const fitAspectRatio = this.fitAspectRatio.value;\n    if (fitAspectRatio !== void 0 && (this.gesture.preserveAspectRatio || (this.scaledFlags & ScaledView.FitMask) !== 0)) {\n      const xRange = oldXScale.range;\n      const yRange = oldYScale.range;\n      const oldDomainWidth = +newXDomain[1] - +newXDomain[0];\n      const oldDomainHeight = +newYDomain[1] - +newYDomain[0];\n      const domainAspectRatio = oldDomainWidth / oldDomainHeight;\n      const rangeAspectRatio = (xRange[1] - xRange[0]) / (yRange[0] - yRange[1]);\n      const anamorphicAspectRatio = Math.abs(fitAspectRatio * rangeAspectRatio);\n      if (!Equivalent(domainAspectRatio, anamorphicAspectRatio)) {\n        const fitAlign = this.fitAlign.value;\n        if (fitAspectRatio < 0 && domainAspectRatio < anamorphicAspectRatio ||\n            fitAspectRatio > 0 && domainAspectRatio > anamorphicAspectRatio) {\n          const newDomainWidth = oldDomainHeight * anamorphicAspectRatio;\n          const dx = newDomainWidth - oldDomainWidth;\n          newXDomain = Domain(+newXDomain[0] - dx * fitAlign[0] as unknown as X,\n                              +newXDomain[1] + dx * (1 - fitAlign[0]) as unknown as X);\n        } else {\n          const newDomainHeight = oldDomainWidth / anamorphicAspectRatio;\n          const dy = newDomainHeight - oldDomainHeight;\n          newYDomain = Domain(+newYDomain[0] - dy * fitAlign[1] as unknown as Y,\n                              +newYDomain[1] + dy * (1 - fitAlign[1]) as unknown as Y);\n        }\n      }\n    }\n\n    // update x domain\n    if ((this.scaledFlags & ScaledView.XBoundingFlag) === 0 && !Equivalent(newXDomain, oldXDomain)) {\n      let timing: Timing | boolean | undefined;\n      if ((this.scaledFlags & (ScaledView.XFitFlag | ScaledView.RescaleFlag)) === 0 ||\n          (this.scaledFlags & ScaledView.XFitTweenFlag) !== 0) {\n        timing = (this.scaledFlags & ScaledView.InteractingMask) !== 0\n               ? this.reboundTransition.value : this.rescaleTransition.value;\n        if (timing !== void 0 && timing !== false) {\n          this.setScaledFlags(this.scaledFlags | ScaledView.XBoundingFlag);\n        }\n      }\n      this.willReboundX(oldXScale);\n      this.xDomain(newXDomain, timing);\n      if (timing === void 0 && timing !== false) {\n        this.didReboundX(this.xScale.getState());\n      }\n      if (xDataDomainPadded !== null && (this.scaledFlags & ScaledView.XFitFlag) !== 0) {\n        this.setScaledFlags(this.scaledFlags & ~ScaledView.XFitFlag);\n      }\n    }\n\n    // update y domain\n    if ((this.scaledFlags & ScaledView.YBoundingFlag) === 0 && !Equivalent(newYDomain, oldYDomain)) {\n      let timing: Timing | boolean | undefined;\n      if ((this.scaledFlags & (ScaledView.YFitFlag | ScaledView.RescaleFlag)) === 0 ||\n          (this.scaledFlags & ScaledView.YFitTweenFlag) !== 0) {\n        timing = (this.scaledFlags & ScaledView.InteractingMask) !== 0\n               ? this.reboundTransition.value : this.rescaleTransition.value;\n        if (timing !== void 0 && timing !== false) {\n          this.setScaledFlags(this.scaledFlags | ScaledView.YBoundingFlag);\n        }\n      }\n      this.willReboundY(oldYScale);\n      this.yDomain(newYDomain, timing);\n      if (timing === void 0 && timing !== false) {\n        this.didReboundY(this.yScale.getState());\n      }\n      if (yDataDomainPadded !== null && (this.scaledFlags & ScaledView.YFitFlag) !== 0) {\n        this.setScaledFlags(this.scaledFlags & ~ScaledView.YFitFlag);\n      }\n    }\n\n    this.setScaledFlags(this.scaledFlags & ~(ScaledView.InteractedFlag | ScaledView.RescaleFlag));\n  }\n\n  protected override displayChildren(displayFlags: ViewFlags, viewContext: ViewContextType<this>,\n                                     displayChild: (this: this, childView: View, displayFlags: ViewFlags,\n                                                    viewContext: ViewContextType<this>) => void): void {\n    let xScale: ContinuousScale<X, number> | null;\n    let yScale: ContinuousScale<Y, number> | null;\n    if ((displayFlags & View.NeedsLayout) !== 0 &&\n        (xScale = this.xScale.value, xScale !== null) &&\n        (yScale = this.yScale.value, yScale !== null)) {\n      this.layoutChildViews(xScale, yScale, displayFlags, viewContext, displayChild);\n    } else {\n      super.displayChildren(displayFlags, viewContext, displayChild);\n    }\n  }\n\n  protected layoutChildViews(xScale: ContinuousScale<X, number>,\n                             yScale: ContinuousScale<Y, number>,\n                             displayFlags: ViewFlags, viewContext: ViewContextType<this>,\n                             displayChild: (this: this, childView: View, displayFlags: ViewFlags,\n                                            viewContext: ViewContextType<this>) => void): void {\n    // Recompute extrema when laying out child views.\n    let xDataDomainMin: X | undefined;\n    let xDataDomainMax: X | undefined;\n    let yDataDomainMin: Y | undefined;\n    let yDataDomainMax: Y | undefined;\n    let xRangePaddingMin = 0;\n    let xRangePaddingMax = 0;\n    let yRangePaddingMin = 0;\n    let yRangePaddingMax = 0;\n    let xCount = 0;\n    let yCount = 0;\n\n    type self = this;\n    function layoutChildView(this: self, childView: View, displayFlags: ViewFlags,\n                             viewContext: ViewContextType<self>): void {\n      displayChild.call(this, childView, displayFlags, viewContext);\n      if (ScaledXView.is<X>(childView) && childView.xScale.inherited) {\n        const childXDataDomain = childView.xDataDomain;\n        if (childXDataDomain !== null) {\n          if (xCount !== 0) {\n            if (Values.compare(childXDataDomain[0], xDataDomainMin) < 0) {\n              xDataDomainMin = childXDataDomain[0];\n            }\n            if (Values.compare(xDataDomainMax, childXDataDomain[1]) < 0) {\n              xDataDomainMax = childXDataDomain[1];\n            }\n          } else {\n            xDataDomainMin = childXDataDomain[0];\n            xDataDomainMax = childXDataDomain[1];\n          }\n          const childXRangePadding = childView.xRangePadding();\n          xRangePaddingMin = Math.max(childXRangePadding[0], xRangePaddingMin);\n          xRangePaddingMax = Math.max(childXRangePadding[1], xRangePaddingMax);\n          xCount += 1;\n        }\n      }\n      if (ScaledYView.is<Y>(childView) && childView.yScale.inherited) {\n        const childYDataDomain = childView.yDataDomain;\n        if (childYDataDomain !== null) {\n          if (yCount !== 0) {\n            if (Values.compare(childYDataDomain[0], yDataDomainMin) < 0) {\n              yDataDomainMin = childYDataDomain[0];\n            }\n            if (Values.compare(yDataDomainMax, childYDataDomain[1]) < 0) {\n              yDataDomainMax = childYDataDomain[1];\n            }\n          } else {\n            yDataDomainMin = childYDataDomain[0];\n            yDataDomainMax = childYDataDomain[1];\n          }\n          const childYRangePadding = childView.yRangePadding();\n          yRangePaddingMin = Math.max(childYRangePadding[0], yRangePaddingMin);\n          yRangePaddingMax = Math.max(childYRangePadding[1], yRangePaddingMax);\n          yCount += 1;\n        }\n      }\n    }\n    super.displayChildren(displayFlags, viewContext, layoutChildView);\n\n    this.setXDataDomain(xCount !== 0 ? Domain<X>(xDataDomainMin!, xDataDomainMax!) : null);\n    this.setYDataDomain(yCount !== 0 ? Domain<Y>(yDataDomainMin!, yDataDomainMax!) : null);\n    this.xRangePadding.setValue([xRangePaddingMin, xRangePaddingMax], Affinity.Intrinsic);\n    this.yRangePadding.setValue([yRangePaddingMin, yRangePaddingMax], Affinity.Intrinsic);\n  }\n\n  protected onBeginBoundingXScale(xScale: ContinuousScale<X, number>): void {\n    // hook\n  }\n\n  protected onEndBoundingXScale(xScale: ContinuousScale<X, number>): void {\n    this.setScaledFlags(this.scaledFlags & ~ScaledView.XBoundingFlag);\n    this.didReboundX(xScale);\n  }\n\n  protected onInterruptBoundingXScale(xScale: ContinuousScale<X, number>): void {\n    this.setScaledFlags(this.scaledFlags & ~ScaledView.XBoundingFlag);\n    this.didReboundX(xScale);\n  }\n\n  protected onBeginBoundingYScale(yScale: ContinuousScale<Y, number>): void {\n    // hook\n  }\n\n  protected onEndBoundingYScale(yScale: ContinuousScale<Y, number>): void {\n    this.setScaledFlags(this.scaledFlags & ~ScaledView.YBoundingFlag);\n    this.didReboundY(yScale);\n  }\n\n  protected onInterruptBoundingYScale(yScale: ContinuousScale<Y, number>): void {\n    this.setScaledFlags(this.scaledFlags & ~ScaledView.YBoundingFlag);\n    this.didReboundY(yScale);\n  }\n\n  protected willReboundX(xScale: ContinuousScale<X, number>): void {\n    this.gesture.neutralizeX();\n  }\n\n  protected didReboundX(xScale: ContinuousScale<X, number>): void {\n    // hook\n  }\n\n  protected willReboundY(yScale: ContinuousScale<Y, number>): void {\n    this.gesture.neutralizeY();\n  }\n\n  protected didReboundY(yScale: ContinuousScale<Y, number>): void {\n    // hook\n  }\n\n  @ScaleGesture<ScaledView, ScaledView, unknown, unknown>({\n    self: true,\n    getXScale(): ContinuousScale<unknown, number> | null {\n      if ((this.owner.scaledFlags & ScaledView.XScaleGesturesFlag) !== 0) {\n        return this.owner.xScale();\n      } else {\n        return null;\n      }\n    },\n    setXScale(xScale: ContinuousScale<unknown, number> | null, timing?: AnyTiming | boolean): void {\n      if ((this.owner.scaledFlags & ScaledView.XScaleGesturesFlag) !== 0) {\n        this.owner.xScale(xScale, timing);\n      }\n    },\n    getYScale(): ContinuousScale<unknown, number> | null {\n      if ((this.owner.scaledFlags & ScaledView.YScaleGesturesFlag) !== 0) {\n        return this.owner.yScale();\n      } else {\n        return null;\n      }\n    },\n    setYScale(yScale: ContinuousScale<unknown, number> | null, timing?: AnyTiming | boolean): void {\n      if ((this.owner.scaledFlags & ScaledView.YScaleGesturesFlag) !== 0) {\n        this.owner.yScale(yScale, timing);\n      }\n    },\n    willStartInteracting(): void {\n      this.owner.setScaledFlags(this.owner.scaledFlags & ~ScaledView.BoundingMask | ScaledView.InteractingFlag);\n    },\n    didStopInteracting(): void {\n      const xScale = this.owner.xScale.value;\n      const xDataDomain = this.owner.xDataDomain;\n      if (xScale !== null && xDataDomain !== null) {\n        const xDomain = xScale.domain;\n        if (xDomain.contains(xDataDomain[0])) {\n          this.owner.setScaledFlags(this.owner.scaledFlags | ScaledView.XMinInRangeFlag);\n        } else {\n          this.owner.setScaledFlags(this.owner.scaledFlags & ~ScaledView.XMinInRangeFlag);\n        }\n        if (xDomain.contains(xDataDomain[1])) {\n          this.owner.setScaledFlags(this.owner.scaledFlags | ScaledView.XMaxInRangeFlag);\n        } else {\n          this.owner.setScaledFlags(this.owner.scaledFlags & ~ScaledView.XMaxInRangeFlag);\n        }\n      }\n      const yScale = this.owner.yScale.value;\n      const yDataDomain = this.owner.yDataDomain;\n      if (yScale !== null && yDataDomain !== null) {\n        const yDomain = yScale.domain;\n        if (yDomain.contains(yDataDomain[0])) {\n          this.owner.setScaledFlags(this.owner.scaledFlags | ScaledView.YMinInRangeFlag);\n        } else {\n          this.owner.setScaledFlags(this.owner.scaledFlags & ~ScaledView.YMinInRangeFlag);\n        }\n        if (yDomain.contains(yDataDomain[1])) {\n          this.owner.setScaledFlags(this.owner.scaledFlags | ScaledView.YMaxInRangeFlag);\n        } else {\n          this.owner.setScaledFlags(this.owner.scaledFlags & ~ScaledView.YMaxInRangeFlag);\n        }\n      }\n      this.owner.setScaledFlags(this.owner.scaledFlags & ~ScaledView.InteractingFlag | ScaledView.InteractedFlag);\n    },\n    didStopPressing(): void {\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    willBeginCoast(input: ScaleGestureInput, event: Event | null): boolean | void {\n      if ((this.owner.scaledFlags & ScaledView.XScaleGesturesFlag) === 0) {\n        input.disableX = true;\n        input.vx = 0;\n        input.ax = 0;\n      }\n      if ((this.owner.scaledFlags & ScaledView.YScaleGesturesFlag) === 0) {\n        input.disableY = true;\n        input.vy = 0;\n        input.ay = 0;\n      }\n    },\n  })\n  readonly gesture!: ScaleGesture<this, ScaledView<X, Y>, X, Y>;\n  static readonly gesture: MemberFastenerClass<ScaledView, \"gesture\">;\n\n  override init(init: ScaledViewInit<X, Y>): void {\n    super.init(init);\n    if (init.xScale !== void 0) {\n      this.xScale(init.xScale);\n    }\n    if (init.yScale !== void 0) {\n      this.yScale(init.yScale);\n    }\n\n    if (init.xDomainBounds !== void 0) {\n      this.xDomainBounds(init.xDomainBounds);\n    }\n    if (init.yDomainBounds !== void 0) {\n      this.yDomainBounds(init.yDomainBounds);\n    }\n    if (init.xZoomBounds !== void 0) {\n      this.xZoomBounds(init.xZoomBounds);\n    }\n    if (init.yZoomBounds !== void 0) {\n      this.yZoomBounds(init.yZoomBounds);\n    }\n\n    if (init.xDomainPadding !== void 0) {\n      this.xDomainPadding(init.xDomainPadding);\n    }\n    if (init.yDomainPadding !== void 0) {\n      this.yDomainPadding(init.yDomainPadding);\n    }\n    if (init.xRangePadding !== void 0) {\n      this.xRangePadding(init.xRangePadding);\n    }\n    if (init.yRangePadding !== void 0) {\n      this.yRangePadding(init.yRangePadding);\n    }\n\n    if (init.fitAlign !== void 0) {\n      this.fitAlign(init.fitAlign);\n    }\n    if (init.xFitAlign !== void 0) {\n      this.xFitAlign(init.xFitAlign);\n    }\n    if (init.yFitAlign !== void 0) {\n      this.yFitAlign(init.yFitAlign);\n    }\n    if (init.fitAspectRatio !== void 0) {\n      this.fitAspectRatio(init.fitAspectRatio);\n    }\n    if (init.preserveAspectRatio !== void 0) {\n      this.preserveAspectRatio(init.preserveAspectRatio);\n    }\n\n    if (init.domainTracking !== void 0) {\n      this.domainTracking(init.domainTracking);\n    }\n    if (init.xDomainTracking !== void 0) {\n      this.xDomainTracking(init.xDomainTracking);\n    }\n    if (init.yDomainTracking !== void 0) {\n      this.yDomainTracking(init.yDomainTracking);\n    }\n\n    if (init.scaleGestures !== void 0) {\n      this.scaleGestures(init.scaleGestures);\n    }\n    if (init.xScaleGestures !== void 0) {\n      this.xScaleGestures(init.xScaleGestures);\n    }\n    if (init.yScaleGestures !== void 0) {\n      this.yScaleGestures(init.yScaleGestures);\n    }\n\n    if (init.rescaleTransition !== void 0) {\n      this.rescaleTransition.setValue(init.rescaleTransition);\n    }\n    if (init.reboundTransition !== void 0) {\n      this.reboundTransition.setValue(init.reboundTransition);\n    }\n  }\n\n  /** @internal */\n  static createScale<X, Y>(x0: X, x1: X, y0: Y | undefined, y1: Y | undefined): ContinuousScale<X, Y> {\n    let range: LinearRange;\n    if (typeof y0 === \"number\" && typeof y1 === \"number\") {\n      range = LinearRange(y0, y1);\n    } else {\n      range = LinearRange(0, 1);\n    }\n    if (typeof x0 === \"number\" && typeof x1 === \"number\") {\n      return LinearScale(LinearDomain(x0, x1), range) as unknown as ContinuousScale<X, Y>;\n    } else if (x0 instanceof DateTime && x1 instanceof DateTime) {\n      return TimeScale(TimeDomain(x0, x1), range) as unknown as ContinuousScale<X, Y>;\n    } else {\n      throw new TypeError(x0 + \", \" + x1 + \", \" + y0 + \", \" + y1);\n    }\n  }\n\n  /** @internal */\n  static parseScale<X, Y>(string: string): ContinuousScale<X, Y> {\n    if (string === \"linear\") {\n      return LinearScale(LinearDomain(0, 1), LinearRange(0, 1)) as unknown as ContinuousScale<X, Y>;\n    } else if (string === \"time\") {\n      const d1 = DateTime.current();\n      const d0 = d1.withDay(d1.day - 1);\n      return TimeScale(TimeDomain(d0, d1), LinearRange(0, 1)) as unknown as ContinuousScale<X, Y>;\n    } else {\n      const domain = string.split(\"...\");\n      const x0 = +domain[0]!;\n      const x1 = +domain[1]!;\n      if (isFinite(x0) && isFinite(x1)) {\n        return LinearScale(LinearDomain(x0, x1), LinearRange(0, 1)) as unknown as ContinuousScale<X, Y>;\n      } else {\n        const d0 = DateTime.parse(domain[0]!);\n        const d1 = DateTime.parse(domain[1]!);\n        return TimeScale(TimeDomain(d0, d1), LinearRange(0, 1)) as unknown as ContinuousScale<X, Y>;\n      }\n    }\n    throw new TypeError(\"\" + string);\n  }\n\n  /** @internal */\n  static readonly XDomainTrackingFlag: ScaledFlags = 1 << 0;\n  /** @internal */\n  static readonly YDomainTrackingFlag: ScaledFlags = 1 << 1;\n  /** @internal */\n  static readonly XScaleGesturesFlag: ScaledFlags = 1 << 2;\n  /** @internal */\n  static readonly YScaleGesturesFlag: ScaledFlags = 1 << 3;\n  /** @internal */\n  static readonly XMinInRangeFlag: ScaledFlags = 1 << 4;\n  /** @internal */\n  static readonly XMaxInRangeFlag: ScaledFlags = 1 << 5;\n  /** @internal */\n  static readonly YMinInRangeFlag: ScaledFlags = 1 << 6;\n  /** @internal */\n  static readonly YMaxInRangeFlag: ScaledFlags = 1 << 7;\n  /** @internal */\n  static readonly InteractingFlag: ScaledFlags = 1 << 8;\n  /** @internal */\n  static readonly InteractedFlag: ScaledFlags = 1 << 9;\n  /** @internal */\n  static readonly XBoundingFlag: ScaledFlags = 1 << 10;\n  /** @internal */\n  static readonly YBoundingFlag: ScaledFlags = 1 << 11;\n  /** @internal */\n  static readonly XFitFlag: ScaledFlags = 1 << 12;\n  /** @internal */\n  static readonly YFitFlag: ScaledFlags = 1 << 13;\n  /** @internal */\n  static readonly XFitTweenFlag: ScaledFlags = 1 << 14;\n  /** @internal */\n  static readonly YFitTweenFlag: ScaledFlags = 1 << 15;\n  /** @internal */\n  static readonly RescaleFlag: ScaledFlags = 1 << 16;\n\n  /** @internal */\n  static readonly DomainTrackingMask: ScaledFlags = ScaledView.XDomainTrackingFlag\n                                                  | ScaledView.YDomainTrackingFlag;\n  /** @internal */\n  static readonly ScaleGesturesMask: ScaledFlags = ScaledView.XScaleGesturesFlag\n                                                 | ScaledView.YScaleGesturesFlag;\n  /** @internal */\n  static readonly XInRangeMask: ScaledFlags = ScaledView.XMinInRangeFlag\n                                            | ScaledView.XMaxInRangeFlag;\n  /** @internal */\n  static readonly YInRangeMask: ScaledFlags = ScaledView.YMinInRangeFlag\n                                            | ScaledView.YMaxInRangeFlag;\n  /** @internal */\n  static readonly InteractingMask: ScaledFlags = ScaledView.InteractingFlag\n                                               | ScaledView.InteractedFlag;\n  /** @internal */\n  static readonly BoundingMask: ScaledFlags = ScaledView.XBoundingFlag\n                                            | ScaledView.YBoundingFlag;\n  /** @internal */\n  static readonly FitMask: ScaledFlags = ScaledView.XFitFlag\n                                       | ScaledView.YFitFlag;\n  /** @internal */\n  static readonly FitTweenMask: ScaledFlags = ScaledView.XFitTweenFlag\n                                            | ScaledView.YFitTweenFlag;\n\n  /** @internal */\n  static LinearZoomMin: number = 1000000;\n  /** @internal */\n  static LinearZoomMax: number = 0.001;\n  /** @internal */\n  static TimeZoomMin: number = 86400000;\n  /** @internal */\n  static TimeZoomMax: number = 1;\n\n  static override readonly InsertChildFlags: ViewFlags = GraphicsView.InsertChildFlags | View.NeedsResize;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, Equals, Values, Domain, Range, AnyTiming, LinearRange, ContinuousScale} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Property, Animator} from \"@swim/component\";\nimport type {R2Box} from \"@swim/math\";\nimport {AnyFont, Font, AnyColor, Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, ViewFlags, View, ViewSet} from \"@swim/view\";\nimport {GraphicsView, CanvasContext, CanvasRenderer} from \"@swim/graphics\";\nimport {AnyDataPointView, DataPointView} from \"../data/DataPointView\";\nimport {ContinuousScaleAnimator} from \"../scaled/ContinuousScaleAnimator\";\nimport type {PlotViewInit, PlotViewDataPointExt, PlotView} from \"./PlotView\";\nimport type {ScatterPlotViewObserver} from \"./ScatterPlotViewObserver\";\n\n/** @public */\nexport type AnyScatterPlotView<X = unknown, Y = unknown> = ScatterPlotView<X, Y> | ScatterPlotViewInit<X, Y>;\n\n/** @public */\nexport interface ScatterPlotViewInit<X = unknown, Y = unknown> extends PlotViewInit<X, Y> {\n}\n\n/** @public */\nexport abstract class ScatterPlotView<X = unknown, Y = unknown> extends GraphicsView implements PlotView<X, Y> {\n  constructor() {\n    super();\n    this.xDataDomain = null;\n    this.yDataDomain = null;\n    this.xDataRange = null;\n    this.yDataRange = null;\n  }\n\n  override readonly observerType?: Class<ScatterPlotViewObserver<X, Y>>;\n\n  @ThemeAnimator({type: Font, value: null, inherits: true})\n  readonly font!: ThemeAnimator<this, Font | null, AnyFont | null>;\n\n  @ThemeAnimator({type: Color, value: null, inherits: true})\n  readonly textColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @Animator<ScatterPlotView<X, Y>, ContinuousScale<X, number> | null>({\n    extends: ContinuousScaleAnimator,\n    type: ContinuousScale,\n    inherits: true,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    willSetValue(newXScale: ContinuousScale<X, number> | null, oldXScale: ContinuousScale<X, number> | null): void {\n      this.owner.callObservers(\"viewWillSetXScale\", newXScale, oldXScale, this.owner);\n    },\n    didSetValue(newXScale: ContinuousScale<X, number> | null, oldXScale: ContinuousScale<X, number> | null): void {\n      this.owner.updateXDataRange();\n      this.owner.callObservers(\"viewDidSetXScale\", newXScale, oldXScale, this.owner);\n    },\n  })\n  readonly xScale!: ContinuousScaleAnimator<this, X, number>;\n\n  @Animator<ScatterPlotView<X, Y>, ContinuousScale<Y, number> | null>({\n    extends: ContinuousScaleAnimator,\n    type: ContinuousScale,\n    inherits: true,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    willSetValue(newYScale: ContinuousScale<Y, number> | null, oldYScale: ContinuousScale<Y, number> | null): void {\n      this.owner.callObservers(\"viewWillSetYScale\", newYScale, oldYScale, this.owner);\n    },\n    didSetValue(newYScale: ContinuousScale<Y, number> | null, oldYScale: ContinuousScale<Y, number> | null): void {\n      this.owner.updateYDataRange();\n      this.owner.callObservers(\"viewDidSetYScale\", newYScale, oldYScale, this.owner);\n    },\n  })\n  readonly yScale!: ContinuousScaleAnimator<this, Y, number>;\n\n  xDomain(): Domain<X> | null;\n  xDomain(xDomain: Domain<X> | string | null, timing?: AnyTiming | boolean): this;\n  xDomain(xMin: X, xMax: X, timing?: AnyTiming | boolean): this;\n  xDomain(xMin?: Domain<X> | X | string | null, xMax?: X | AnyTiming | boolean,\n          timing?: AnyTiming | boolean): Domain<X> | null | this {\n    if (arguments.length === 0) {\n      const xScale = this.xScale.value;\n      return xScale !== null ? xScale.domain : null;\n    } else {\n      this.xScale.setDomain(xMin as any, xMax as any, timing);\n      return this;\n    }\n  }\n\n  yDomain(): Domain<Y> | null;\n  yDomain(yDomain: Domain<Y> | string | null, timing?: AnyTiming | boolean): this;\n  yDomain(yMin: Y, yMax: Y, timing: AnyTiming | boolean): this;\n  yDomain(yMin?: Domain<Y> | Y | string | null, yMax?: Y | AnyTiming | boolean,\n          timing?: AnyTiming | boolean): Domain<Y> | null | this {\n    if (arguments.length === 0) {\n      const yScale = this.yScale.value;\n      return yScale !== null ? yScale.domain : null;\n    } else {\n      this.yScale.setDomain(yMin as any, yMax as any, timing);\n      return this;\n    }\n  }\n\n  xRange(): Range<number> | null {\n    const xScale = this.xScale.value;\n    return xScale !== null ? xScale.range : null;\n  }\n\n  yRange(): Range<number> | null {\n    const yScale = this.yScale.value;\n    return yScale !== null ? yScale.range : null;\n  }\n\n  @Property<ScatterPlotView<X, Y>, readonly [number, number]>({\n    initValue(): readonly [number, number] {\n      return [0, 0];\n    },\n    willSetValue(newXRangePadding: readonly [number, number], oldXRangePadding: readonly [number, number]): void {\n      this.owner.callObservers(\"viewWillSetXRangePadding\", newXRangePadding, oldXRangePadding, this.owner);\n    },\n    didSetValue(newXRangePadding: readonly [number, number], oldXRangePadding: readonly [number, number]): void {\n      this.owner.callObservers(\"viewDidSetXRangePadding\", newXRangePadding, oldXRangePadding, this.owner);\n    },\n  })\n  readonly xRangePadding!: Property<this, readonly [number, number]>\n\n  @Property<ScatterPlotView<X, Y>, readonly [number, number]>({\n    initValue(): readonly [number, number] {\n      return [0, 0];\n    },\n    willSetValue(newYRangePadding: readonly [number, number], oldYRangePadding: readonly [number, number]): void {\n      this.owner.callObservers(\"viewWillSetYRangePadding\", newYRangePadding, oldYRangePadding, this.owner);\n    },\n    didSetValue(newYRangePadding: readonly [number, number], oldYRangePadding: readonly [number, number]): void {\n      this.owner.callObservers(\"viewDidSetYRangePadding\", newYRangePadding, oldYRangePadding, this.owner);\n    },\n  })\n  readonly yRangePadding!: Property<this, readonly [number, number]>\n\n  readonly xDataDomain: Domain<X> | null;\n\n  protected setXDataDomain(newXDataDomain: Domain<X> | null): void {\n    const oldXDataDomain = this.xDataDomain;\n    if (!Equals(newXDataDomain, oldXDataDomain)) {\n      this.willSetXDataDomain(newXDataDomain, oldXDataDomain);\n      (this as Mutable<this>).xDataDomain = newXDataDomain;\n      this.onSetXDataDomain(newXDataDomain, oldXDataDomain);\n      this.didSetXDataDomain(newXDataDomain, oldXDataDomain);\n    }\n  }\n\n  protected willSetXDataDomain(newXDataDomain: Domain<X> | null, oldXDataDomain: Domain<X> | null): void {\n    this.callObservers(\"viewWillSetXDataDomain\", newXDataDomain, oldXDataDomain, this);\n  }\n\n  protected onSetXDataDomain(newXDataDomain: Domain<X> | null, oldXDataDomain: Domain<X> | null): void {\n    this.updateXDataRange();\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected didSetXDataDomain(newXDataDomain: Domain<X> | null, oldXDataDomain: Domain<X> | null): void {\n    this.callObservers(\"viewDidSetXDataDomain\", newXDataDomain, oldXDataDomain, this);\n  }\n\n  protected updateXDataDomain(dataPointView: DataPointView<X, Y>): void {\n    const x: X = dataPointView.x.getValue();\n    let xDataDomain = this.xDataDomain;\n    if (xDataDomain === null) {\n      xDataDomain = Domain(x, x);\n    } else {\n      if (Values.compare(x, xDataDomain[0]) < 0) {\n        xDataDomain = Domain(x, xDataDomain[1]);\n      } else if (Values.compare(xDataDomain[1], x) < 0) {\n        xDataDomain = Domain(xDataDomain[0], x);\n      }\n    }\n    this.setXDataDomain(xDataDomain);\n  }\n\n  readonly yDataDomain: Domain<Y> | null;\n\n  protected setYDataDomain(newYDataDomain: Domain<Y> | null): void {\n    const oldYDataDomain = this.yDataDomain;\n    if (!Equals(newYDataDomain, oldYDataDomain)) {\n      this.willSetYDataDomain(newYDataDomain, oldYDataDomain);\n      (this as Mutable<this>).yDataDomain = newYDataDomain;\n      this.onSetYDataDomain(newYDataDomain, oldYDataDomain);\n      this.didSetYDataDomain(newYDataDomain, oldYDataDomain);\n    }\n  }\n\n  protected willSetYDataDomain(newYDataDomain: Domain<Y> | null, oldYDataDomain: Domain<Y> | null): void {\n    this.callObservers(\"viewWillSetYDataDomain\", newYDataDomain, oldYDataDomain, this);\n  }\n\n  protected onSetYDataDomain(newYDataDomain: Domain<Y> | null, oldYDataDomain: Domain<Y> | null): void {\n    this.updateYDataRange();\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected didSetYDataDomain(newYDataDomain: Domain<Y> | null, oldYDataDomain: Domain<Y> | null): void {\n    this.callObservers(\"viewDidSetYDataDomain\", newYDataDomain, oldYDataDomain, this);\n  }\n\n  protected updateYDataDomain(dataPointView: DataPointView<X, Y>): void {\n    const y = dataPointView.y.value;\n    const y2 = dataPointView.y2.value;\n    let yDataDomain = this.yDataDomain;\n    if (yDataDomain === null) {\n      yDataDomain = Domain(y, y);\n    } else {\n      if (Values.compare(y, yDataDomain[0]) < 0) {\n        yDataDomain = Domain(y, yDataDomain[1]);\n      } else if (Values.compare(yDataDomain[1], y) < 0) {\n        yDataDomain = Domain(yDataDomain[0], y);\n      }\n      if (y2 !== void 0) {\n        if (Values.compare(y2, yDataDomain[0]) < 0) {\n          yDataDomain = Domain(y2, yDataDomain[1]);\n        } else if (Values.compare(yDataDomain[1], y2) < 0) {\n          yDataDomain = Domain(yDataDomain[0], y2);\n        }\n      }\n    }\n    this.setYDataDomain(yDataDomain);\n  }\n\n  readonly xDataRange: Range<number> | null;\n\n  protected setXDataRange(xDataRange: Range<number> | null): void {\n    (this as Mutable<this>).xDataRange = xDataRange;\n  }\n\n  protected updateXDataRange(): void {\n    const xDataDomain = this.xDataDomain;\n    if (xDataDomain !== null) {\n      const xScale = this.xScale.value;\n      if (xScale !== null) {\n        this.setXDataRange(LinearRange(xScale(xDataDomain[0]), xScale(xDataDomain[1])));\n      } else {\n        this.setXDataRange(null);\n      }\n    }\n  }\n\n  readonly yDataRange: Range<number> | null;\n\n  protected setYDataRange(yDataRange: Range<number> | null): void {\n    (this as Mutable<this>).yDataRange = yDataRange;\n  }\n\n  protected updateYDataRange(): void {\n    const yDataDomain = this.yDataDomain;\n    if (yDataDomain !== null) {\n      const yScale = this.yScale.value;\n      if (yScale !== null) {\n        this.setYDataRange(LinearRange(yScale(yDataDomain[0]), yScale(yDataDomain[1])));\n      } else {\n        this.setYDataRange(null);\n      }\n    }\n  }\n\n  @ViewSet<ScatterPlotView, DataPointView, PlotViewDataPointExt>({\n    implements: true,\n    type: DataPointView,\n    binds: true,\n    observes: true,\n    willAttachView(newDataPointView: DataPointView, targetView: View | null): void {\n      this.owner.callObservers(\"viewWillAttachDataPoint\", newDataPointView, targetView, this.owner);\n    },\n    didAttachView(dataPointView: DataPointView): void {\n      this.owner.updateXDataDomain(dataPointView);\n      this.owner.updateYDataDomain(dataPointView);\n      const labelView = dataPointView.label.view;\n      if (labelView !== null) {\n        this.attachDataPointLabelView(labelView);\n      }\n    },\n    willDetachView(dataPointView: DataPointView): void {\n      const labelView = dataPointView.label.view;\n      if (labelView !== null) {\n        this.detachDataPointLabelView(labelView);\n      }\n      // xDataDomain and yDataDomain will be recomputed next layout pass\n    },\n    didDetachView(newDataPointView: DataPointView): void {\n      this.owner.callObservers(\"viewDidDetachDataPoint\", newDataPointView, this.owner);\n    },\n    viewDidSetDataPointX(newX: unknown | undefined, oldX: unknown | undefined, dataPointView: DataPointView): void {\n      this.owner.updateXDataDomain(dataPointView);\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    viewDidSetDataPointY(newY: unknown | undefined, oldY: unknown | undefined, dataPointView: DataPointView): void {\n      this.owner.updateYDataDomain(dataPointView);\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    viewDidSetDataPointY2(newY2: unknown | undefined, oldY2: unknown | undefined, dataPointView: DataPointView): void {\n      this.owner.updateYDataDomain(dataPointView);\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    viewWillAttachDataPointLabel(labelView: GraphicsView): void {\n      this.attachDataPointLabelView(labelView);\n    },\n    viewDidDetachDataPointLabel(labelView: GraphicsView): void {\n      this.detachDataPointLabelView(labelView);\n    },\n    attachDataPointLabelView(labelView: GraphicsView): void {\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    detachDataPointLabelView(labelView: GraphicsView): void {\n      // hook\n    },\n  })\n  readonly dataPoints!: ViewSet<this, DataPointView<X, Y>>;\n  static readonly dataPoints: MemberFastenerClass<ScatterPlotView, \"dataPoints\">;\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.xScale.recohere(viewContext.updateTime);\n    this.yScale.recohere(viewContext.updateTime);\n    this.resizeScales(this.viewFrame);\n  }\n\n  /**\n   * Updates own scale ranges to project onto view frame.\n   */\n  protected resizeScales(frame: R2Box): void {\n    const xScale = !this.xScale.inherited ? this.xScale.value : null;\n    if (xScale !== null && xScale.range[1] !== frame.width) {\n      this.xScale.setRange(0, frame.width);\n    }\n    const yScale = !this.yScale.inherited ? this.yScale.value : null;\n    if (yScale !== null && yScale.range[1] !== frame.height) {\n      this.yScale.setRange(0, frame.height);\n    }\n  }\n\n  protected override displayChildren(displayFlags: ViewFlags, viewContext: ViewContextType<this>,\n                                     displayChild: (this: this, childView: View, displayFlags: ViewFlags,\n                                                    viewContext: ViewContextType<this>) => void): void {\n    let xScale: ContinuousScale<X, number> | null;\n    let yScale: ContinuousScale<Y, number> | null;\n    if ((displayFlags & View.NeedsLayout) !== 0 &&\n        (xScale = this.xScale.value, xScale !== null) &&\n        (yScale = this.yScale.value, yScale !== null)) {\n      this.layoutChildViews(xScale, yScale, displayFlags, viewContext, displayChild);\n    } else {\n      super.displayChildren(displayFlags, viewContext, displayChild);\n    }\n  }\n\n  protected layoutChildViews(xScale: ContinuousScale<X, number>,\n                             yScale: ContinuousScale<Y, number>,\n                             displayFlags: ViewFlags, viewContext: ViewContextType<this>,\n                             displayChild: (this: this, childView: View, displayFlags: ViewFlags,\n                                            viewContext: ViewContextType<this>) => void): void {\n    // Recompute extrema when laying out child views.\n    const frame = this.viewFrame;\n    const size = Math.min(frame.width, frame.height);\n    let xDataDomainMin: X | undefined;\n    let xDataDomainMax: X | undefined;\n    let yDataDomainMin: Y | undefined;\n    let yDataDomainMax: Y | undefined;\n    let xRangePaddingMin = 0;\n    let xRangePaddingMax = 0;\n    let yRangePaddingMin = 0;\n    let yRangePaddingMax = 0;\n\n    let point0 = null as DataPointView<X, Y> | null;\n    type self = this;\n    function layoutChildView(this: self, point1: View, displayFlags: ViewFlags,\n                             viewContext: ViewContextType<self>): void {\n      if (point1 instanceof DataPointView) {\n        const x1 = point1.x.getValue();\n        const y1 = point1.y.getValue();\n        const dy1 = point1.y2.value;\n        const r1 = point1.radius.value;\n        const sx1 = xScale(x1);\n        const sy1 = yScale(y1);\n        point1.setXCoord(frame.xMin + sx1);\n        point1.setYCoord(frame.yMin + sy1);\n\n        if (point0 !== null) {\n          // update extrema\n          if (Values.compare(x1, xDataDomainMin) < 0) {\n            xDataDomainMin = x1;\n          } else if (Values.compare(xDataDomainMax, x1) < 0) {\n            xDataDomainMax = x1;\n          }\n          if (Values.compare(y1, yDataDomainMin) < 0) {\n            yDataDomainMin = y1;\n          } else if (Values.compare(yDataDomainMax, y1) < 0) {\n            yDataDomainMax = y1;\n          }\n          if (dy1 !== void 0) {\n            if (Values.compare(dy1, yDataDomainMin) < 0) {\n              yDataDomainMin = dy1;\n            } else if (Values.compare(yDataDomainMax, dy1) < 0) {\n              yDataDomainMax = dy1;\n            }\n          }\n        } else {\n          xDataDomainMin = x1;\n          xDataDomainMax = x1;\n          yDataDomainMin = y1;\n          yDataDomainMax = y1;\n        }\n\n        if (r1 !== null) {\n          const radius = r1.pxValue(size);\n          xRangePaddingMin = Math.max(radius, xRangePaddingMin);\n          xRangePaddingMax = Math.max(radius, xRangePaddingMax);\n          yRangePaddingMin = Math.max(radius, yRangePaddingMin);\n          yRangePaddingMax = Math.max(radius, yRangePaddingMax);\n        }\n        point0 = point1;\n      }\n\n      displayChild.call(this, point1, displayFlags, viewContext);\n    }\n    super.displayChildren(displayFlags, viewContext, layoutChildView);\n\n    this.setXDataDomain(point0 !== null ? Domain<X>(xDataDomainMin!, xDataDomainMax!) : null);\n    this.setYDataDomain(point0 !== null ? Domain<Y>(yDataDomainMin!, yDataDomainMax!) : null);\n    this.xRangePadding.setValue([xRangePaddingMin, xRangePaddingMax], Affinity.Intrinsic);\n    this.yRangePadding.setValue([yRangePaddingMin, yRangePaddingMax], Affinity.Intrinsic);\n  }\n\n  protected override didRender(viewContext: ViewContextType<this>): void {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer && !this.hidden && !this.culled) {\n      this.renderPlot(renderer.context, this.viewFrame);\n    }\n    super.didRender(viewContext);\n  }\n\n  protected abstract renderPlot(context: CanvasContext, frame: R2Box): void;\n\n  override init(init: ScatterPlotViewInit<X, Y>): void {\n    super.init(init);\n    if (init.xScale !== void 0) {\n      this.xScale(init.xScale);\n    }\n    if (init.yScale !== void 0) {\n      this.yScale(init.yScale);\n    }\n\n    const data = init.data;\n    if (data !== void 0) {\n      for (let i = 0, n = data.length; i < n; i += 1) {\n        this.appendChild(DataPointView.fromAny(data[i]! as AnyDataPointView));\n      }\n    }\n\n    if (init.font !== void 0) {\n      this.font(init.font);\n    }\n    if (init.textColor !== void 0) {\n      this.textColor(init.textColor);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, Equals, Values, Domain, Range, AnyTiming, LinearRange, ContinuousScale} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Property, Animator} from \"@swim/component\";\nimport {BTree} from \"@swim/collections\";\nimport type {R2Box} from \"@swim/math\";\nimport {AnyFont, Font, AnyColor, Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, ViewFlags, AnyView, ViewCreator, View, ViewSet} from \"@swim/view\";\nimport {GraphicsView, CanvasContext, CanvasRenderer} from \"@swim/graphics\";\nimport type {DataPointCategory} from \"../data/DataPoint\";\nimport {AnyDataPointView, DataPointView} from \"../data/DataPointView\";\nimport {ContinuousScaleAnimator} from \"../scaled/ContinuousScaleAnimator\";\nimport type {PlotViewInit, PlotViewDataPointExt, PlotView} from \"./PlotView\";\nimport type {SeriesPlotViewObserver} from \"./SeriesPlotViewObserver\";\n\n/** @public */\nexport type SeriesPlotHitMode = \"domain\" | \"plot\" | \"data\" | \"none\";\n\n/** @public */\nexport type AnySeriesPlotView<X = unknown, Y = unknown> = SeriesPlotView<X, Y> | SeriesPlotViewInit<X, Y>;\n\n/** @public */\nexport interface SeriesPlotViewInit<X = unknown, Y = unknown> extends PlotViewInit<X, Y> {\n  hitMode?: SeriesPlotHitMode;\n}\n\n/** @public */\nexport abstract class SeriesPlotView<X = unknown, Y = unknown> extends GraphicsView implements PlotView<X, Y> {\n  constructor() {\n    super();\n    this.xDataDomain = null;\n    this.yDataDomain = null;\n    this.xDataRange = null;\n    this.yDataRange = null;\n    this.gradientStops = 0;\n    this.dataPointViews = new BTree();\n  }\n\n  override readonly observerType?: Class<SeriesPlotViewObserver<X, Y>>;\n\n  @ThemeAnimator({type: Font, value: null, inherits: true})\n  readonly font!: ThemeAnimator<this, Font | null, AnyFont | null>;\n\n  @ThemeAnimator({type: Color, value: null, inherits: true})\n  readonly textColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @Property({type: String, value: \"domain\"})\n  readonly hitMode!: Property<this, SeriesPlotHitMode>;\n\n  @Animator<SeriesPlotView<X, Y>, ContinuousScale<X, number> | null>({\n    extends: ContinuousScaleAnimator,\n    type: ContinuousScale,\n    inherits: true,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    willSetValue(newXScale: ContinuousScale<X, number> | null, oldXScale: ContinuousScale<X, number> | null): void {\n      this.owner.callObservers(\"viewWillSetXScale\", newXScale, oldXScale, this.owner);\n    },\n    didSetValue(newXScale: ContinuousScale<X, number> | null, oldXScale: ContinuousScale<X, number> | null): void {\n      this.owner.updateXDataRange();\n      this.owner.callObservers(\"viewDidSetXScale\", newXScale, oldXScale, this.owner);\n    },\n  })\n  readonly xScale!: ContinuousScaleAnimator<this, X, number>;\n\n  @Animator<SeriesPlotView<X, Y>, ContinuousScale<Y, number> | null>({\n    extends: ContinuousScaleAnimator,\n    type: ContinuousScale,\n    inherits: true,\n    value: null,\n    updateFlags: View.NeedsLayout,\n    willSetValue(newYScale: ContinuousScale<Y, number> | null, oldYScale: ContinuousScale<Y, number> | null): void {\n      this.owner.callObservers(\"viewWillSetYScale\", newYScale, oldYScale, this.owner);\n    },\n    didSetValue(newYScale: ContinuousScale<Y, number> | null, oldYScale: ContinuousScale<Y, number> | null): void {\n      this.owner.updateYDataRange();\n      this.owner.callObservers(\"viewDidSetYScale\", newYScale, oldYScale, this.owner);\n    },\n  })\n  readonly yScale!: ContinuousScaleAnimator<this, Y, number>;\n\n  xDomain(): Domain<X> | null;\n  xDomain(xDomain: Domain<X> | string | null, timing?: AnyTiming | boolean): this;\n  xDomain(xMin: X, xMax: X, timing: AnyTiming | boolean): this;\n  xDomain(xMin?: Domain<X> | X | string | null, xMax?: X | AnyTiming | boolean,\n          timing?: AnyTiming | boolean): Domain<X> | null | this {\n    if (arguments.length === 0) {\n      const xScale = this.xScale.value;\n      return xScale !== null ? xScale.domain : null;\n    } else {\n      this.xScale.setDomain(xMin as any, xMax as any, timing);\n      return this;\n    }\n  }\n\n  yDomain(): Domain<Y> | null;\n  yDomain(yDomain: Domain<Y> | string | null, timing?: AnyTiming | boolean): this;\n  yDomain(yMin: Y, yMax: Y, timing: AnyTiming | boolean): this;\n  yDomain(yMin?: Domain<Y> | Y | string | null, yMax?: Y | AnyTiming | boolean,\n          timing?: AnyTiming | boolean): Domain<Y> | null | this {\n    if (arguments.length === 0) {\n      const yScale = this.yScale.value;\n      return yScale !== null ? yScale.domain : null;\n    } else {\n      this.yScale.setDomain(yMin as any, yMax as any, timing);\n      return this;\n    }\n  }\n\n  xRange(): Range<number> | null {\n    const xScale = this.xScale.value;\n    return xScale !== null ? xScale.range : null;\n  }\n\n  yRange(): Range<number> | null {\n    const yScale = this.yScale.value;\n    return yScale !== null ? yScale.range : null;\n  }\n\n  @Property<SeriesPlotView<X, Y>, readonly [number, number]>({\n    initValue(): readonly [number, number] {\n      return [0, 0];\n    },\n    willSetValue(newXRangePadding: readonly [number, number], oldXRangePadding: readonly [number, number]): void {\n      this.owner.callObservers(\"viewWillSetXRangePadding\", newXRangePadding, oldXRangePadding, this.owner);\n    },\n    didSetValue(newXRangePadding: readonly [number, number], oldXRangePadding: readonly [number, number]): void {\n      this.owner.callObservers(\"viewDidSetXRangePadding\", newXRangePadding, oldXRangePadding, this.owner);\n    },\n  })\n  readonly xRangePadding!: Property<this, readonly [number, number]>\n\n  @Property<SeriesPlotView<X, Y>, readonly [number, number]>({\n    initValue(): readonly [number, number] {\n      return [0, 0];\n    },\n    willSetValue(newYRangePadding: readonly [number, number], oldYRangePadding: readonly [number, number]): void {\n      this.owner.callObservers(\"viewWillSetYRangePadding\", newYRangePadding, oldYRangePadding, this.owner);\n    },\n    didSetValue(newYRangePadding: readonly [number, number], oldYRangePadding: readonly [number, number]): void {\n      this.owner.callObservers(\"viewDidSetYRangePadding\", newYRangePadding, oldYRangePadding, this.owner);\n    },\n  })\n  readonly yRangePadding!: Property<this, readonly [number, number]>\n\n  readonly xDataDomain: Domain<X> | null;\n\n  protected setXDataDomain(newXDataDomain: Domain<X> | null): void {\n    const oldXDataDomain = this.xDataDomain;\n    if (!Equals(newXDataDomain, oldXDataDomain)) {\n      this.willSetXDataDomain(newXDataDomain, oldXDataDomain);\n      (this as Mutable<this>).xDataDomain = newXDataDomain;\n      this.onSetXDataDomain(newXDataDomain, oldXDataDomain);\n      this.didSetXDataDomain(newXDataDomain, oldXDataDomain);\n    }\n  }\n\n  protected willSetXDataDomain(newXDataDomain: Domain<X> | null, oldXDataDomain: Domain<X> | null): void {\n    this.callObservers(\"viewWillSetXDataDomain\", newXDataDomain, oldXDataDomain, this);\n  }\n\n  protected onSetXDataDomain(newXDataDomain: Domain<X> | null, oldXDataDomain: Domain<X> | null): void {\n    this.updateXDataRange();\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected didSetXDataDomain(newXDataDomain: Domain<X> | null, oldXDataDomain: Domain<X> | null): void {\n    this.callObservers(\"viewDidSetXDataDomain\", newXDataDomain, oldXDataDomain, this);\n  }\n\n  protected updateXDataDomain(dataPointView: DataPointView<X, Y>): void {\n    const dataPointViews = this.dataPointViews;\n    const xMin = dataPointViews.firstKey();\n    const xMax = dataPointViews.lastKey();\n    let xDataDomain: Domain<X> | null;\n    if (xMin !== void 0 && xMax !== void 0) {\n      xDataDomain = Domain<X>(xMin, xMax);\n    } else {\n      const x = dataPointView.x.getValue();\n      xDataDomain = Domain<X>(x, x);\n    }\n    this.setXDataDomain(xDataDomain);\n  }\n\n  readonly yDataDomain: Domain<Y> | null;\n\n  protected setYDataDomain(newYDataDomain: Domain<Y> | null): void {\n    const oldYDataDomain = this.yDataDomain;\n    if (!Equals(newYDataDomain, oldYDataDomain)) {\n      this.willSetYDataDomain(newYDataDomain, oldYDataDomain);\n      (this as Mutable<this>).yDataDomain = newYDataDomain;\n      this.onSetYDataDomain(newYDataDomain, oldYDataDomain);\n      this.didSetYDataDomain(newYDataDomain, oldYDataDomain);\n    }\n  }\n\n  protected willSetYDataDomain(newYDataDomain: Domain<Y> | null, oldYDataDomain: Domain<Y> | null): void {\n    this.callObservers(\"viewWillSetYDataDomain\", newYDataDomain, oldYDataDomain, this);\n  }\n\n  protected onSetYDataDomain(newYDataDomain: Domain<Y> | null, oldYDataDomain: Domain<Y> | null): void {\n    this.updateYDataRange();\n    this.requireUpdate(View.NeedsLayout);\n  }\n\n  protected didSetYDataDomain(newYDataDomain: Domain<Y> | null, oldYDataDomain: Domain<Y> | null): void {\n    this.callObservers(\"viewDidSetYDataDomain\", newYDataDomain, oldYDataDomain, this);\n  }\n\n  protected updateYDataDomain(dataPointView: DataPointView<X, Y>): void {\n    const y = dataPointView.y.value;\n    const y2 = dataPointView.y2.value;\n    let yDataDomain = this.yDataDomain;\n    if (yDataDomain === null) {\n      yDataDomain = Domain(y, y);\n    } else {\n      if (Values.compare(y, yDataDomain[0]) < 0) {\n        yDataDomain = Domain(y, yDataDomain[1]);\n      } else if (Values.compare(yDataDomain[1], y) < 0) {\n        yDataDomain = Domain(yDataDomain[0], y);\n      }\n      if (y2 !== void 0) {\n        if (Values.compare(y2, yDataDomain[0]) < 0) {\n          yDataDomain = Domain(y2, yDataDomain[1]);\n        } else if (Values.compare(yDataDomain[1], y2) < 0) {\n          yDataDomain = Domain(yDataDomain[0], y2);\n        }\n      }\n    }\n    this.setYDataDomain(yDataDomain);\n  }\n\n  readonly xDataRange: Range<number> | null;\n\n  protected setXDataRange(xDataRange: Range<number> | null): void {\n    (this as Mutable<this>).xDataRange = xDataRange;\n  }\n\n  protected updateXDataRange(): void {\n    const xDataDomain = this.xDataDomain;\n    if (xDataDomain !== null) {\n      const xScale = this.xScale.value;\n      if (xScale !== null) {\n        this.setXDataRange(LinearRange(xScale(xDataDomain[0]), xScale(xDataDomain[1])));\n      } else {\n        this.setXDataRange(null);\n      }\n    }\n  }\n\n  readonly yDataRange: Range<number> | null;\n\n  protected setYDataRange(yDataRange: Range<number> | null): void {\n    (this as Mutable<this>).yDataRange = yDataRange;\n  }\n\n  protected updateYDataRange(): void {\n    const yDataDomain = this.yDataDomain;\n    if (yDataDomain !== null) {\n      const yScale = this.yScale.value;\n      if (yScale !== null) {\n        this.setYDataRange(LinearRange(yScale(yDataDomain[0]), yScale(yDataDomain[1])));\n      } else {\n        this.setYDataRange(null);\n      }\n    }\n  }\n\n  /** @internal */\n  readonly gradientStops: number;\n\n  @ViewSet<SeriesPlotView<X, Y>, DataPointView<X, Y>, PlotViewDataPointExt<X, Y>>({\n    implements: true,\n    type: DataPointView,\n    binds: true,\n    observes: true,\n    willAttachView(dataPointView: DataPointView<X, Y>, targetView: View | null): void {\n      this.owner.callObservers(\"viewWillAttachDataPoint\", dataPointView, targetView, this.owner);\n    },\n    didAttachView(dataPointView: DataPointView<X, Y>): void {\n      if (this.owner.dataPointViews.get(dataPointView.x.state!) === void 0) {\n        this.owner.dataPointViews.set(dataPointView.x.state!, dataPointView);\n      }\n      this.owner.updateXDataDomain(dataPointView);\n      this.owner.updateYDataDomain(dataPointView);\n      const labelView = dataPointView.label.view;\n      if (labelView !== null) {\n        this.attachDataPointLabelView(labelView);\n      }\n    },\n    willDetachView(dataPointView: DataPointView<X, Y>): void {\n      if (this.owner.dataPointViews.get(dataPointView.x.state!) === dataPointView) {\n        this.owner.dataPointViews.delete(dataPointView.x.state!);\n      }\n      const labelView = dataPointView.label.view;\n      if (labelView !== null) {\n        this.detachDataPointLabelView(labelView);\n      }\n      this.owner.updateXDataDomain(dataPointView);\n      // yDataDomain will be recomputed next layout pass\n    },\n    didDetachView(dataPointView: DataPointView<X, Y>): void {\n      this.owner.callObservers(\"viewDidDetachDataPoint\", dataPointView, this.owner);\n    },\n    viewDidSetDataPointX(newX: X | undefined, oldX: X | undefined, dataPointView: DataPointView<X, Y>): void {\n      this.owner.updateXDataDomain(dataPointView);\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    viewDidSetDataPointY(newY: Y | undefined, oldY: Y | undefined, dataPointView: DataPointView<X, Y>): void {\n      this.owner.updateYDataDomain(dataPointView);\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    viewDidSetDataPointY2(newY2: Y | undefined, oldY2: Y | undefined, dataPointView: DataPointView<X, Y>): void {\n      this.owner.updateYDataDomain(dataPointView);\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    viewWillAttachDataPointLabel(labelView: GraphicsView): void {\n      this.attachDataPointLabelView(labelView);\n    },\n    viewDidDetachDataPointLabel(labelView: GraphicsView): void {\n      this.detachDataPointLabelView(labelView);\n    },\n    attachDataPointLabelView(labelView: GraphicsView): void {\n      this.owner.requireUpdate(View.NeedsLayout);\n    },\n    detachDataPointLabelView(labelView: GraphicsView): void {\n      // hook\n    },\n  })\n  readonly dataPoints!: ViewSet<this, DataPointView<X, Y>>;\n  static readonly dataPoints: MemberFastenerClass<SeriesPlotView, \"dataPoints\">;\n\n  /** @internal */\n  readonly dataPointViews: BTree<X, DataPointView<X, Y>>;\n\n  getDataPoint(x: X): DataPointView<X, Y> | null {\n    const dataPoint = this.dataPointViews.get(x);\n    return dataPoint !== void 0 ? dataPoint : null;\n  }\n\n  insertDataPoint(dataPointView: AnyDataPointView<X, Y>): DataPointView<X, Y> {\n    return this.insertChild(DataPointView.fromAny(dataPointView), null);\n  }\n\n  insertDataPoints(...dataPointViews: AnyDataPointView<X, Y>[]): void {\n    for (let i = 0, n = dataPointViews.length; i < n; i += 1) {\n      this.insertDataPoint(dataPointViews[i]!);\n    }\n  }\n\n  removeDataPoint(x: X): DataPointView<X, Y> | null {\n    const dataPointView = this.getDataPoint(x);\n    if (dataPointView !== null) {\n      this.removeChild(dataPointView);\n    }\n    return dataPointView;\n  }\n\n  override setChild<V extends View>(key: string, newChild: V): View | null;\n  override setChild<F extends ViewCreator<F>>(key: string, factory: F): View | null;\n  override setChild(key: string, newChild: AnyView | null): View | null;\n  override setChild(key: string, newChild: AnyView | null): View | null {\n    if (newChild !== null) {\n      newChild = View.fromAny(newChild);\n    }\n    if (newChild instanceof DataPointView) {\n      const target = this.dataPointViews.nextValue(newChild.x.state) ?? null;\n      const oldView = this.getChild(key);\n      super.insertChild(newChild, target, key);\n      return oldView;\n    } else {\n      return super.setChild(key, newChild) as View | null;\n    }\n  }\n\n  override appendChild<V extends View>(child: V, key?: string): V;\n  override appendChild<F extends ViewCreator<F>>(factory: F, key?: string): InstanceType<F>;\n  override appendChild(child: AnyView, key?: string): View;\n  override appendChild(child: AnyView, key?: string): View {\n    child = View.fromAny(child);\n    if (child instanceof DataPointView) {\n      const target = this.dataPointViews.nextValue(child.x.state) ?? null;\n      return super.insertChild(child, target, key);\n    } else {\n      return super.appendChild(child, key);\n    }\n  }\n\n  override prependChild<V extends View>(child: V, key?: string): V;\n  override prependChild<F extends ViewCreator<F>>(factory: F, key?: string): InstanceType<F>;\n  override prependChild(child: AnyView, key?: string): View;\n  override prependChild(child: AnyView, key?: string): View {\n    child = View.fromAny(child);\n    if (child instanceof DataPointView) {\n      const target = this.dataPointViews.nextValue(child.x.state) ?? null;\n      return super.insertChild(child, target, key);\n    } else {\n      return super.prependChild(child, key);\n    }\n  }\n\n  override insertChild<V extends View>(child: V, target: View | null, key?: string): V;\n  override insertChild<F extends ViewCreator<F>>(factory: F, target: View | null, key?: string): InstanceType<F>;\n  override insertChild(child: AnyView, target: View | null, key?: string): View;\n  override insertChild(child: AnyView, target: View | null, key?: string): View {\n    child = View.fromAny(child);\n    if (child instanceof DataPointView && target === null) {\n      target = this.dataPointViews.nextValue(child.x.state) ?? null;\n    }\n    return super.insertChild(child, target, key);\n  }\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.xScale.recohere(viewContext.updateTime);\n    this.yScale.recohere(viewContext.updateTime);\n    this.resizeScales(this.viewFrame);\n  }\n\n  /**\n   * Updates own scale ranges to project onto view frame.\n   */\n  protected resizeScales(frame: R2Box): void {\n    const xScale = !this.xScale.inherited ? this.xScale.value : null;\n    if (xScale !== null && xScale.range[1] !== frame.width) {\n      this.xScale.setRange(0, frame.width);\n    }\n    const yScale = !this.yScale.inherited ? this.yScale.value : null;\n    if (yScale !== null && yScale.range[1] !== frame.height) {\n      this.yScale.setRange(0, frame.height);\n    }\n  }\n\n  protected override displayChildren(displayFlags: ViewFlags, viewContext: ViewContextType<this>,\n                                     displayChild: (this: this, child: View, displayFlags: ViewFlags,\n                                                    viewContext: ViewContextType<this>) => void): void {\n    let xScale: ContinuousScale<X, number> | null;\n    let yScale: ContinuousScale<Y, number> | null;\n    if ((displayFlags & View.NeedsLayout) !== 0 &&\n        (xScale = this.xScale.value, xScale !== null) &&\n        (yScale = this.yScale.value, yScale !== null)) {\n      this.layoutChildViews(xScale, yScale, displayFlags, viewContext, displayChild);\n    } else {\n      super.displayChildren(displayFlags, viewContext, displayChild);\n    }\n  }\n\n  protected layoutChildViews(xScale: ContinuousScale<X, number>,\n                             yScale: ContinuousScale<Y, number>,\n                             displayFlags: ViewFlags, viewContext: ViewContextType<this>,\n                             displayChild: (this: this, child: View, displayFlags: ViewFlags,\n                                            viewContext: ViewContextType<this>) => void): void {\n    // Recompute extrema when laying out child views.\n    const frame = this.viewFrame;\n    let xDataDomainMin: X | undefined;\n    let xDataDomainMax: X | undefined;\n    let yDataDomainMin: Y | undefined;\n    let yDataDomainMax: Y | undefined;\n    let gradientStops = 0;\n\n    let point0 = null as DataPointView<X, Y> | null;\n    let point1 = null as DataPointView<X, Y> | null;\n    let y0: Y | undefined;\n    let y1: Y | undefined;\n    type self = this;\n    function layoutChildView(this: self, child: View, displayFlags: ViewFlags,\n                             viewContext: ViewContextType<self>): void {\n      const point2 = child as DataPointView<X, Y>;\n      const x2 = point2.x.getValue();\n      const y2 = point2.y.getValue();\n      const dy2 = point2.y2.value;\n\n      const sx2 = xScale(x2);\n      const sy2 = yScale(y2);\n      point2.setXCoord(frame.xMin + sx2);\n      point2.setYCoord(frame.yMin + sy2);\n\n      const sdy2 = dy2 !== void 0 ? yScale(dy2) : void 0;\n      if (sdy2 !== void 0) {\n        point2.setY2Coord(frame.yMin + sdy2);\n      } else if (point2.y2Coord !== void 0) {\n        point2.setY2Coord(void 0);\n      }\n\n      if (point2.isGradientStop()) {\n        gradientStops += 1;\n      }\n\n      if (point1 !== null) {\n        let category: DataPointCategory;\n        if (point0 !== null) {\n          // categorize mid point\n          if (Values.compare(y0!, y1!) < 0 && Values.compare(y2, y1!) < 0) {\n            category = \"maxima\";\n          } else if (Values.compare(y1!, y0!) < 0 && Values.compare(y1!, y2) < 0) {\n            category = \"minima\";\n          } else if (Values.compare(y0!, y1!) < 0 && Values.compare(y1!, y2) < 0) {\n            category = \"increasing\";\n          } else if (Values.compare(y1!, y0!) < 0 && Values.compare(y2, y1!) < 0) {\n            category = \"decreasing\";\n          } else {\n            category = \"flat\";\n          }\n        } else {\n          // categorize start point\n          if (Values.compare(y1!, y2) < 0) {\n            category = \"increasing\";\n          } else if (Values.compare(y2, y1!) < 0) {\n            category = \"decreasing\";\n          } else {\n            category = \"flat\";\n          }\n        }\n        point1.category.setValue(category, Affinity.Intrinsic);\n\n        // update extrema\n        if (Values.compare(y2, yDataDomainMin) < 0) {\n          yDataDomainMin = y2;\n        } else if (Values.compare(yDataDomainMax, y2) < 0) {\n          yDataDomainMax = y2;\n        }\n        if (dy2 !== void 0) {\n          if (Values.compare(dy2, yDataDomainMin) < 0) {\n            yDataDomainMin = dy2;\n          } else if (Values.compare(yDataDomainMax, dy2) < 0) {\n            yDataDomainMax = dy2;\n          }\n        }\n      } else {\n        xDataDomainMin = x2;\n        xDataDomainMax = x2;\n        yDataDomainMin = y2;\n        yDataDomainMax = y2;\n      }\n\n      point0 = point1;\n      point1 = point2;\n      y0 = y1;\n      y1 = y2;\n      xDataDomainMax = x2;\n\n      displayChild.call(this, child, displayFlags, viewContext);\n    }\n    super.displayChildren(displayFlags, viewContext, layoutChildView);\n\n    if (point1 !== null) {\n      let category: DataPointCategory;\n      if (point0 !== null) {\n        // categorize end point\n        if (Values.compare(y0!, y1!) < 0) {\n          category = \"increasing\";\n        } else if (Values.compare(y1!, y0!) < 0) {\n          category = \"decreasing\";\n        } else {\n          category = \"flat\";\n        }\n      } else {\n        // categorize sole point\n        category = \"flat\";\n      }\n      point1.category.setValue(category, Affinity.Intrinsic);\n    }\n\n    this.setXDataDomain(point0 !== null ? Domain<X>(xDataDomainMin!, xDataDomainMax!) : null);\n    this.setYDataDomain(point0 !== null ? Domain<Y>(yDataDomainMin!, yDataDomainMax!) : null);\n    (this as Mutable<this>).gradientStops = gradientStops;\n  }\n\n  protected override didRender(viewContext: ViewContextType<this>): void {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer && !this.hidden && !this.culled) {\n      this.renderPlot(renderer.context, this.viewFrame);\n    }\n    super.didRender(viewContext);\n  }\n\n  protected abstract renderPlot(context: CanvasContext, frame: R2Box): void;\n\n  protected override hitTest(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    const hitMode = this.hitMode.value;\n    if (hitMode !== \"none\") {\n      const renderer = viewContext.renderer;\n      if (renderer instanceof CanvasRenderer) {\n        let hit: GraphicsView | null;\n        if (hitMode === \"domain\") {\n          const viewFrame = this.viewFrame;\n          hit = this.hitTestDomain(x - viewFrame.x, y - viewFrame.y, renderer);\n        } else {\n          hit = this.hitTestPlot(x, y, renderer);\n        }\n        return hit;\n      }\n    }\n    return null;\n  }\n\n  protected override hitTestChildren(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    return null;\n  }\n\n  protected hitTestDomain(x: number, y: number, renderer: CanvasRenderer): GraphicsView | null {\n    const xScale = this.xScale.value;\n    if (xScale !== null) {\n      const d = xScale.inverse(x);\n      const v0 = this.dataPointViews.previousValue(d);\n      const v1 = this.dataPointViews.nextValue(d);\n      const x0 = v0 !== void 0 ? v0.x.value : void 0;\n      const x1 = v1 !== void 0 ? v1.x.value : void 0;\n      const dx0 = x0 !== void 0 ? +d - +x0 : NaN;\n      const dx1 = x1 !== void 0 ? +x1 - +d : NaN;\n      if (dx0 <= dx1) {\n        return v0!;\n      } else if (dx0 > dx1) {\n        return v1!;\n      } else if (v0 !== void 0) {\n        return v0;\n      } else if (v1 !== void 0) {\n        return v1;\n      }\n    }\n    return null;\n  }\n\n  protected abstract hitTestPlot(x: number, y: number, renderer: CanvasRenderer): GraphicsView | null;\n\n  override init(init: SeriesPlotViewInit<X, Y>): void {\n    super.init(init);\n    if (init.xScale !== void 0) {\n      this.xScale(init.xScale);\n    }\n    if (init.yScale !== void 0) {\n      this.yScale(init.yScale);\n    }\n\n    const data = init.data;\n    if (data !== void 0) {\n      this.insertDataPoints(...data);\n    }\n\n    if (init.font !== void 0) {\n      this.font(init.font);\n    }\n    if (init.textColor !== void 0) {\n      this.textColor(init.textColor);\n    }\n\n    if (init.hitMode !== void 0) {\n      this.hitMode(init.hitMode);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {AnyLength, Length, R2Box} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {Look, ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport type {CanvasContext, FillViewInit, FillView, StrokeViewInit, StrokeView} from \"@swim/graphics\";\nimport {ScatterPlotViewInit, ScatterPlotView} from \"./ScatterPlotView\";\nimport type {BubblePlotViewObserver} from \"./BubblePlotViewObserver\";\n\n/** @public */\nexport type AnyBubblePlotView<X = unknown, Y = unknown> = BubblePlotView<X, Y> | BubblePlotViewInit<X, Y>;\n\n/** @public */\nexport interface BubblePlotViewInit<X = unknown, Y = unknown> extends ScatterPlotViewInit<X, Y>, FillViewInit, StrokeViewInit {\n  radius?: AnyLength;\n}\n\n/** @public */\nexport class BubblePlotView<X = unknown, Y = unknown> extends ScatterPlotView<X, Y> implements FillView, StrokeView {\n  override readonly observerType?: Class<BubblePlotViewObserver<X, Y>>;\n\n  @ThemeAnimator<BubblePlotView<X, Y>, Length | null, AnyLength | null>({\n    type: Length,\n    value: Length.px(5),\n    updateFlags: View.NeedsRender,\n    willSetValue(newRadius: Length | null, oldRadius: Length | null): void {\n      this.owner.callObservers(\"viewWillSetPlotRadius\", newRadius, oldRadius, this.owner);\n    },\n    didSetValue(newRadius: Length | null, oldRadius: Length | null): void {\n      this.owner.callObservers(\"viewDidSetPlotRadius\", newRadius, oldRadius, this.owner);\n    },\n  })\n  readonly radius!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator<BubblePlotView<X, Y>, Color | null, AnyColor | null>({\n    type: Color,\n    value: null,\n    look: Look.accentColor,\n    updateFlags: View.NeedsRender,\n    willSetValue(newFill: Color | null, oldFill: Color | null): void {\n      this.owner.callObservers(\"viewWillSetPlotFill\", newFill, oldFill, this.owner);\n    },\n    didSetValue(newFill: Color | null, oldFill: Color | null): void {\n      this.owner.callObservers(\"viewDidSetPlotFill\", newFill, oldFill, this.owner);\n    },\n  })\n  readonly fill!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Color, value: null, updateFlags: View.NeedsRender})\n  readonly stroke!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Length, value: null, updateFlags: View.NeedsRender})\n  readonly strokeWidth!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  protected renderPlot(context: CanvasContext, frame: R2Box): void {\n    const size = Math.min(frame.width, frame.height);\n    const radius = this.radius.getValueOr(Length.zero());\n    const fill = this.fill.value;\n    const stroke = this.stroke.value;\n    const strokeWidth = this.strokeWidth.value;\n\n    // save\n    const contextFillStyle = context.fillStyle;\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    const dataPointViews = this.dataPoints.views;\n    for (const viewId in dataPointViews) {\n      const p = dataPointViews[viewId]!;\n      context.beginPath();\n      const r = p.radius.getValueOr(radius).pxValue(size);\n      context.arc(p.xCoord, p.yCoord, r, 0, 2 * Math.PI);\n      let fillColor = p.color.getValueOr(fill);\n      if (fillColor !== null) {\n        const opacity = p.opacity.value;\n        if (opacity !== void 0) {\n          fillColor = fillColor.alpha(opacity);\n        }\n        context.fillStyle = fillColor.toString();\n        context.fill();\n      }\n      if (stroke !== null) {\n        if (strokeWidth !== null) {\n          context.lineWidth = strokeWidth.pxValue(size);\n        }\n        context.strokeStyle = stroke.toString();\n        context.stroke();\n      }\n    }\n\n    // restore\n    context.fillStyle = contextFillStyle;\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n\n  override init(init: BubblePlotViewInit<X, Y>): void {\n    super.init(init);\n    if (init.radius !== void 0) {\n      this.radius(init.radius);\n    }\n    if (init.fill !== void 0) {\n      this.fill(init.fill);\n    }\n    if (init.stroke !== void 0) {\n      this.stroke(init.stroke);\n    }\n    if (init.strokeWidth !== void 0) {\n      this.strokeWidth(init.strokeWidth);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Affinity, Property} from \"@swim/component\";\nimport {AnyLength, Length, R2Box} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {Look, ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport type {GraphicsView, CanvasContext, CanvasRenderer, StrokeViewInit, StrokeView} from \"@swim/graphics\";\nimport type {DataPointView} from \"../data/DataPointView\";\nimport {SeriesPlotViewInit, SeriesPlotView} from \"./SeriesPlotView\";\nimport type {LinePlotViewObserver} from \"./LinePlotViewObserver\";\n\n/** @public */\nexport type AnyLinePlotView<X = unknown, Y = unknown> = LinePlotView<X, Y> | LinePlotViewInit<X, Y>;\n\n/** @public */\nexport interface LinePlotViewInit<X = unknown, Y = unknown> extends SeriesPlotViewInit<X, Y>, StrokeViewInit {\n  hitWidth?: number;\n}\n\n/** @public */\nexport class LinePlotView<X = unknown, Y = unknown> extends SeriesPlotView<X, Y> implements StrokeView {\n  override readonly observerType?: Class<LinePlotViewObserver<X, Y>>;\n\n  @ThemeAnimator<LinePlotView<X, Y>, Color | null, AnyColor | null>({\n    type: Color,\n    value: null,\n    look: Look.accentColor,\n    updateFlags: View.NeedsRender,\n    willSetValue(newStroke: Color | null, oldStroke: Color | null): void {\n      this.owner.callObservers(\"viewWillSetPlotStroke\", newStroke, oldStroke, this.owner);\n    },\n    didSetValue(newStroke: Color | null, oldStroke: Color | null): void {\n      this.owner.callObservers(\"viewDidSetPlotStroke\", newStroke, oldStroke, this.owner);\n    },\n  })\n  readonly stroke!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator<LinePlotView<X, Y>, Length | null, AnyLength | null>({\n    type: Length,\n    value: Length.px(1),\n    updateFlags: View.NeedsRender,\n    willSetValue(newStrokeWidth: Length | null, oldStrokeWidth: Length | null): void {\n      this.owner.callObservers(\"viewWillSetPlotStrokeWidth\", newStrokeWidth, oldStrokeWidth, this.owner);\n    },\n    didSetValue(newStrokeWidth: Length | null, oldStrokeWidth: Length | null): void {\n      if (this.owner.xRangePadding.hasAffinity(Affinity.Intrinsic) || this.owner.yRangePadding.hasAffinity(Affinity.Intrinsic)) {\n        const frame = this.owner.viewFrame;\n        const size = Math.min(frame.width, frame.height);\n        const strokeWidth = this.getValueOr(Length.zero()).pxValue(size);\n        const strokeRadius = strokeWidth / 2;\n        this.owner.xRangePadding.setValue([strokeRadius, strokeRadius], Affinity.Intrinsic);\n        this.owner.yRangePadding.setValue([strokeRadius, strokeRadius], Affinity.Intrinsic);\n      }\n      this.owner.callObservers(\"viewDidSetPlotStrokeWidth\", newStrokeWidth, oldStrokeWidth, this.owner);\n    },\n  })\n  readonly strokeWidth!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @Property({type: Number, value: 5})\n  readonly hitWidth!: Property<this, number>;\n\n  protected renderPlot(context: CanvasContext, frame: R2Box): void {\n    const size = Math.min(frame.width, frame.height);\n    const stroke = this.stroke.getValueOr(Color.transparent());\n    const strokeWidth = this.strokeWidth.getValueOr(Length.zero()).pxValue(size);\n    const gradientStops = this.gradientStops;\n    let gradient: CanvasGradient | null = null;\n\n    let x0: number;\n    let x1: number;\n    let dx: number;\n    const dataPointViews = this.dataPointViews;\n    if (!dataPointViews.isEmpty()) {\n      const p0 = dataPointViews.firstValue()!;\n      const p1 = dataPointViews.lastValue()!;\n      x0 = p0.xCoord;\n      x1 = p1.xCoord;\n      dx = x1 - x0;\n      if (gradientStops !== 0) {\n        gradient = context.createLinearGradient(x0, 0, x1, 0);\n      }\n    } else {\n      x0 = NaN;\n      x1 = NaN;\n      dx = NaN;\n    }\n\n    context.beginPath();\n    let i = 0;\n    dataPointViews.forEach(function (x: X, p: DataPointView<X, Y>): void {\n      const xCoord = p.xCoord;\n      const yCoord = p.yCoord;\n      if (i === 0) {\n        context.moveTo(xCoord, yCoord);\n      } else {\n        context.lineTo(xCoord, yCoord);\n      }\n      if (gradient !== null && p.isGradientStop()) {\n        let color = p.color.getValueOr(stroke);\n        const opacity = p.opacity.value;\n        if (opacity !== void 0) {\n          color = color.alpha(opacity);\n        }\n        const offset = (xCoord - x0) / (dx || 1);\n        gradient!.addColorStop(offset, color.toString());\n      }\n      i += 1;\n    }, this);\n\n      // save\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    context.lineWidth = strokeWidth;\n    context.strokeStyle = gradient !== null ? gradient : stroke.toString();\n    context.stroke();\n\n    // restore\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n\n  protected hitTestPlot(x: number, y: number, renderer: CanvasRenderer): GraphicsView | null {\n    const context = renderer.context;\n    let hitWidth = this.hitWidth.value;\n    const strokeWidth = this.strokeWidth.value;\n    if (strokeWidth !== null) {\n      const frame = this.viewFrame;\n      const size = Math.min(frame.width, frame.height);\n      hitWidth = Math.max(hitWidth, strokeWidth.pxValue(size));\n    }\n\n    context.beginPath();\n    let i = 0;\n    this.dataPointViews.forEach(function (x: X, p: DataPointView<X, Y>): void {\n      const xCoord = p.xCoord;\n      const yCoord = p.yCoord;\n      if (i === 0) {\n        context.moveTo(xCoord, yCoord);\n      } else {\n        context.lineTo(xCoord, yCoord);\n      }\n      i += 1;\n    }, this);\n\n    // save\n    const contextLineWidth = context.lineWidth;\n\n    context.lineWidth = hitWidth;\n    const p = renderer.transform.transform(x, y);\n    const pointInStroke = context.isPointInStroke(p.x, p.y);\n\n    // restore\n    context.lineWidth = contextLineWidth;\n\n    if (pointInStroke) {\n      const hitMode = this.hitMode.value;\n      if (hitMode === \"plot\") {\n        return this;\n      } else if (hitMode === \"data\") {\n        return this.hitTestDomain(x, y, renderer);\n      }\n    }\n    return null;\n  }\n\n  override init(init: LinePlotViewInit<X, Y>): void {\n    super.init(init);\n     if (init.hitWidth !== void 0) {\n      this.hitWidth(init.hitWidth);\n    }\n\n    if (init.stroke !== void 0) {\n      this.stroke(init.stroke);\n    }\n    if (init.strokeWidth !== void 0) {\n      this.strokeWidth(init.strokeWidth);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {R2Box} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {Look, ThemeAnimator} from \"@swim/theme\";\nimport {View} from \"@swim/view\";\nimport type {GraphicsView, CanvasContext, CanvasRenderer, FillViewInit, FillView} from \"@swim/graphics\";\nimport {SeriesPlotViewInit, SeriesPlotView} from \"./SeriesPlotView\";\nimport type {AreaPlotViewObserver} from \"./AreaPlotViewObserver\";\n\n/** @public */\nexport type AnyAreaPlotView<X = unknown, Y = unknown> = AreaPlotView<X, Y> | AreaPlotViewInit<X, Y>;\n\n/** @public */\nexport interface AreaPlotViewInit<X = unknown, Y = unknown> extends SeriesPlotViewInit<X, Y>, FillViewInit {\n}\n\n/** @public */\nexport class AreaPlotView<X = unknown, Y = unknown> extends SeriesPlotView<X, Y> implements FillView {\n  override readonly observerType?: Class<AreaPlotViewObserver<X, Y>>;\n\n  @ThemeAnimator<AreaPlotView<X, Y>, Color | null, AnyColor | null>({\n    type: Color,\n    value: null,\n    look: Look.accentColor,\n    updateFlags: View.NeedsRender,\n    willSetValue(newFill: Color | null, oldFill: Color | null): void {\n      this.owner.callObservers(\"viewWillSetPlotFill\", newFill, oldFill, this.owner);\n    },\n    didSetValue(newFill: Color | null, oldFill: Color | null): void {\n      this.owner.callObservers(\"viewDidSetPlotFill\", newFill, oldFill, this.owner);\n    },\n  })\n  readonly fill!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  protected renderPlot(context: CanvasContext, frame: R2Box): void {\n    const fill = this.fill.getValueOr(Color.transparent());\n    const gradientStops = this.gradientStops;\n    let gradient: CanvasGradient | null = null;\n\n    context.beginPath();\n\n    let x0: number;\n    let x1: number;\n    let dx: number;\n    const dataPointViews = this.dataPointViews;\n    if (!dataPointViews.isEmpty()) {\n      const p0 = dataPointViews.firstValue()!;\n      const p1 = dataPointViews.lastValue()!;\n      x0 = p0.xCoord;\n      x1 = p1.xCoord;\n      dx = x1 - x0;\n      context.moveTo(p0.xCoord, p0.yCoord);\n      if (gradientStops !== 0) {\n        gradient = context.createLinearGradient(x0, 0, x1, 0);\n        if (p0.isGradientStop()) {\n          let color = p0.color.getValueOr(fill);\n          const opacity = p0.opacity.value;\n          if (opacity !== void 0) {\n            color = color.alpha(opacity);\n          }\n          gradient.addColorStop(0, color.toString());\n        }\n      }\n    } else {\n      x0 = NaN;\n      x1 = NaN;\n      dx = NaN;\n    }\n\n    const cursor = dataPointViews.values();\n    cursor.next();\n    while (cursor.hasNext()) {\n      const p = cursor.next().value!;\n      context.lineTo(p.xCoord, p.yCoord);\n      if (gradient !== null && p.isGradientStop()) {\n        let color = p.color.value || fill;\n        const opacity = p.opacity.value;\n        if (opacity !== void 0) {\n          color = color.alpha(opacity);\n        }\n        const offset = (p.xCoord - x0) / (dx || 1);\n        gradient.addColorStop(offset, color.toString());\n      }\n    }\n    while (cursor.hasPrevious()) {\n      const p = cursor.previous().value!;\n      context.lineTo(p.xCoord, p.y2Coord!);\n    }\n    if (!dataPointViews.isEmpty()) {\n      context.closePath();\n    }\n\n    // save\n    const contextFillStyle = context.fillStyle;\n\n    context.fillStyle = gradient !== null ? gradient : fill.toString();\n    context.fill();\n\n    // restore\n    context.fillStyle = contextFillStyle;\n  }\n\n  protected hitTestPlot(x: number, y: number, renderer: CanvasRenderer): GraphicsView | null {\n    const context = renderer.context;\n    const dataPointViews = this.dataPointViews;\n\n    context.beginPath();\n    const cursor = dataPointViews.values();\n    if (cursor.hasNext()) {\n      const p = cursor.next().value!;\n      context.moveTo(p.xCoord, p.yCoord);\n    }\n    while (cursor.hasNext()) {\n      const p = cursor.next().value!;\n      context.lineTo(p.xCoord, p.yCoord);\n    }\n    while (cursor.hasPrevious()) {\n      const p = cursor.previous().value!;\n      context.lineTo(p.xCoord, p.y2Coord!);\n    }\n    if (!dataPointViews.isEmpty()) {\n      context.closePath();\n    }\n\n    const p = renderer.transform.transform(x, y);\n    if (context.isPointInPath(p.x, p.y)) {\n      const hitMode = this.hitMode.value;\n      if (hitMode === \"plot\") {\n        return this;\n      } else if (hitMode === \"data\") {\n        return this.hitTestDomain(x, y, renderer);\n      }\n    }\n    return null;\n  }\n\n  override init(init: AreaPlotViewInit<X, Y>): void {\n    super.init(init);\n    if (init.fill !== void 0) {\n      this.fill(init.fill);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {Model, Trait, TraitRef} from \"@swim/model\";\nimport {DataSetTrait} from \"../data/DataSetTrait\";\nimport type {PlotTraitObserver} from \"./PlotTraitObserver\";\n\n/** @public */\nexport class PlotTrait<X = unknown, Y = unknown> extends Trait {\n  override readonly observerType?: Class<PlotTraitObserver<X, Y>>;\n\n  @TraitRef<PlotTrait<X, Y>, DataSetTrait<X, Y>>({\n    type: DataSetTrait,\n    binds: true,\n    willAttachTrait(dataSetTrait: DataSetTrait<X, Y>, targetTrait: Trait | null): void {\n      this.owner.callObservers(\"traitWillAttachDataSet\", dataSetTrait, this.owner);\n    },\n    didAttachTrait(dataSetTrait: DataSetTrait<X, Y>): void {\n      if (this.owner.consuming) {\n        dataSetTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(dataSetTrait: DataSetTrait<X, Y>): void {\n      if (this.owner.consuming) {\n        dataSetTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(dataSetTrait: DataSetTrait<X, Y>): void {\n      this.owner.callObservers(\"traitDidDetachDataSet\", dataSetTrait, this.owner);\n    },\n    detectModel(model: Model): DataSetTrait<X, Y> | null {\n      return null;\n    },\n    detectTrait(trait: Trait): DataSetTrait<X, Y> | null {\n      return trait instanceof DataSetTrait ? trait : null;\n    },\n  })\n  readonly dataSet!: TraitRef<this, DataSetTrait<X, Y>>;\n  static readonly dataSet: MemberFastenerClass<PlotTrait, \"dataSet\">;\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    const dataSetTrait = this.dataSet.trait;\n    if (dataSetTrait !== null) {\n      dataSetTrait.consume(this);\n    }\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    const dataSetTrait = this.dataSet.trait;\n    if (dataSetTrait !== null) {\n      dataSetTrait.unconsume(this);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {PlotTrait} from \"./PlotTrait\";\nimport type {ScatterPlotTraitObserver} from \"./ScatterPlotTraitObserver\";\n\n/** @public */\nexport class ScatterPlotTrait<X = unknown, Y = unknown> extends PlotTrait<X, Y> {\n  override readonly observerType?: Class<ScatterPlotTraitObserver<X, Y>>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {PlotTrait} from \"./PlotTrait\";\nimport type {SeriesPlotTraitObserver} from \"./SeriesPlotTraitObserver\";\n\n/** @public */\nexport class SeriesPlotTrait<X = unknown, Y = unknown> extends PlotTrait<X, Y> {\n  override readonly observerType?: Class<SeriesPlotTraitObserver<X, Y>>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {ScatterPlotTrait} from \"./ScatterPlotTrait\";\nimport type {BubblePlotTraitObserver} from \"./BubblePlotTraitObserver\";\n\n/** @public */\nexport class BubblePlotTrait<X = unknown, Y = unknown> extends ScatterPlotTrait<X, Y> {\n  override readonly observerType?: Class<BubblePlotTraitObserver<X, Y>>;\n\n  @Property<BubblePlotTrait<X, Y>, Length | null, AnyLength | null>({\n    type: Length,\n    value: null,\n    willSetValue(newRadius: Length | null, oldRadius: Length | null): void {\n      this.owner.callObservers(\"traitWillSetPlotRadius\", newRadius, oldRadius, this.owner);\n    },\n    didSetValue(newRadius: Length | null, oldRadius: Length | null): void {\n      this.owner.callObservers(\"traitDidSetPlotRadius\", newRadius, oldRadius, this.owner);\n    },\n  })\n  readonly radius!: Property<this, Length | null, AnyLength | null>;\n\n  @Property<BubblePlotTrait<X, Y>, Look<Color> | Color | null, Look<Color> | AnyColor | null>({\n    value: null,\n    willSetValue(newFill: Look<Color> | Color | null, oldFill: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"traitWillSetPlotFill\", newFill, oldFill, this.owner);\n    },\n    didSetValue(newFill: Look<Color> | Color | null, oldFill: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"traitDidSetPlotFill\", newFill, oldFill, this.owner);\n    },\n    fromAny(fill: Look<Color> | AnyColor | null): Look<Color> | Color | null {\n      if (fill !== null && !(fill instanceof Look)) {\n        fill = Color.fromAny(fill);\n      }\n      return fill;\n    },\n  })\n  readonly fill!: Property<this, Look<Color> | Color | null, Look<Color> | AnyColor | null>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {SeriesPlotTrait} from \"./SeriesPlotTrait\";\nimport type {LinePlotTraitObserver} from \"./LinePlotTraitObserver\";\n\n/** @public */\nexport class LinePlotTrait<X = unknown, Y = unknown> extends SeriesPlotTrait<X, Y> {\n  override readonly observerType?: Class<LinePlotTraitObserver<X, Y>>;\n\n  @Property<LinePlotTrait<X, Y>, Look<Color> | Color | null, Look<Color> | AnyColor | null>({\n    value: null,\n    willSetValue(newStroke: Look<Color> | Color | null, oldStroke: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"traitWillSetPlotStroke\", newStroke, oldStroke, this.owner);\n    },\n    didSetValue(newStroke: Look<Color> | Color | null, oldStroke: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"traitDidSetPlotStroke\", newStroke, oldStroke, this.owner);\n    },\n    fromAny(stroke: Look<Color> | AnyColor | null): Look<Color> | Color | null {\n      if (stroke !== null && !(stroke instanceof Look)) {\n        stroke = Color.fromAny(stroke);\n      }\n      return stroke;\n    },\n  })\n  readonly stroke!: Property<this, Look<Color> | Color | null, Look<Color> | AnyColor | null>;\n\n  @Property<LinePlotTrait<X, Y>, Length | null, AnyLength | null>({\n    type: Length,\n    value: null,\n    willSetValue(newStrokeWidth: Length | null, oldStrokeWidth: Length | null): void {\n      this.owner.callObservers(\"traitWillSetPlotStrokeWidth\", newStrokeWidth, oldStrokeWidth, this.owner);\n    },\n    didSetValue(newStrokeWidth: Length | null, oldStrokeWidth: Length | null): void {\n      this.owner.callObservers(\"traitDidSetPlotStrokeWidth\", newStrokeWidth, oldStrokeWidth, this.owner);\n    },\n  })\n  readonly strokeWidth!: Property<this, Length | null, AnyLength | null>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {SeriesPlotTrait} from \"./SeriesPlotTrait\";\nimport type {AreaPlotTraitObserver} from \"./AreaPlotTraitObserver\";\n\n/** @public */\nexport class AreaPlotTrait<X = unknown, Y = unknown> extends SeriesPlotTrait<X, Y> {\n  override readonly observerType?: Class<AreaPlotTraitObserver<X, Y>>;\n\n  @Property<AreaPlotTrait<X, Y>, Look<Color> | Color | null, Look<Color> | AnyColor | null>({\n    value: null,\n    willSetValue(newFill: Look<Color> | Color | null, oldFill: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"traitWillSetPlotFill\", newFill, oldFill, this.owner);\n    },\n    didSetValue(newFill: Look<Color> | Color | null, oldFill: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"traitDidSetPlotFill\", newFill, oldFill, this.owner);\n    },\n    fromAny(fill: Look<Color> | AnyColor | null): Look<Color> | Color | null {\n      if (fill !== null && !(fill instanceof Look)) {\n        fill = Color.fromAny(fill);\n      }\n      return fill;\n    },\n  })\n  readonly fill!: Property<this, Look<Color> | Color | null, Look<Color> | AnyColor | null>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, AnyTiming, Timing} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport type {TraitViewRef} from \"@swim/controller\";\nimport {DataSetController} from \"../data/DataSetController\";\nimport type {PlotView} from \"./PlotView\";\nimport type {PlotTrait} from \"./PlotTrait\";\nimport {BubblePlotTrait} from \"./BubblePlotTrait\";\nimport {LinePlotTrait} from \"./LinePlotTrait\";\nimport {AreaPlotTrait} from \"./AreaPlotTrait\";\nimport type {PlotControllerObserver} from \"./PlotControllerObserver\";\nimport {BubblePlotController} from \"../\"; // forward import\nimport {LinePlotController} from \"../\"; // forward import\nimport {AreaPlotController} from \"../\"; // forward import\n\n/** @public */\nexport abstract class PlotController<X = unknown, Y = unknown> extends DataSetController<X, Y> {\n  override readonly observerType?: Class<PlotControllerObserver<X, Y>>;\n\n  @Property({type: Timing, inherits: true})\n  readonly plotTiming!: Property<this, Timing | boolean | undefined, AnyTiming>;\n\n  abstract readonly plot: TraitViewRef<this, PlotTrait<X, Y>, PlotView<X, Y>>;\n\n  static fromTrait<X, Y>(plotTrait: PlotTrait<X, Y>): PlotController<X, Y> {\n    if (plotTrait instanceof BubblePlotTrait) {\n      return new BubblePlotController<X, Y>();\n    } else if (plotTrait instanceof LinePlotTrait) {\n      return new LinePlotController<X, Y>();\n    } else if (plotTrait instanceof AreaPlotTrait) {\n      return new AreaPlotController<X, Y>();\n    } else {\n      throw new Error(\"Can't create PlotController from \" + plotTrait);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {TraitViewRef} from \"@swim/controller\";\nimport {PlotController} from \"./PlotController\";\nimport type {ScatterPlotView} from \"./ScatterPlotView\";\nimport type {ScatterPlotTrait} from \"./ScatterPlotTrait\";\nimport type {ScatterPlotControllerObserver} from \"./ScatterPlotControllerObserver\";\n\n/** @public */\nexport abstract class ScatterPlotController<X = unknown, Y = unknown> extends PlotController<X, Y> {\n  override readonly observerType?: Class<ScatterPlotControllerObserver<X, Y>>;\n\n  abstract override readonly plot: TraitViewRef<this, ScatterPlotTrait<X, Y>, ScatterPlotView<X, Y>>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {TraitViewRef} from \"@swim/controller\";\nimport {PlotController} from \"./PlotController\";\nimport type {SeriesPlotView} from \"./SeriesPlotView\";\nimport type {SeriesPlotTrait} from \"./SeriesPlotTrait\";\nimport type {SeriesPlotControllerObserver} from \"./SeriesPlotControllerObserver\";\n\n/** @public */\nexport abstract class SeriesPlotController<X = unknown, Y = unknown> extends PlotController<X, Y> {\n  override readonly observerType?: Class<SeriesPlotControllerObserver<X, Y>>;\n\n  abstract override readonly plot: TraitViewRef<this, SeriesPlotTrait<X, Y>, SeriesPlotView<X, Y>>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass} from \"@swim/component\";\nimport type {Length} from \"@swim/math\";\nimport type {Color} from \"@swim/style\";\nimport {Look, Mood} from \"@swim/theme\";\nimport {TraitViewRef, TraitViewControllerSet} from \"@swim/controller\";\nimport type {DataPointView} from \"../data/DataPointView\";\nimport type {DataPointTrait} from \"../data/DataPointTrait\";\nimport type {DataPointController} from \"../data/DataPointController\";\nimport type {DataSetControllerDataPointExt} from \"../data/DataSetController\";\nimport {DataSetTrait} from \"../data/DataSetTrait\";\nimport {BubblePlotView} from \"./BubblePlotView\";\nimport {BubblePlotTrait} from \"./BubblePlotTrait\";\nimport {ScatterPlotController} from \"./ScatterPlotController\";\nimport type {BubblePlotControllerObserver} from \"./BubblePlotControllerObserver\";\n\n/** @public */\nexport class BubblePlotController<X = unknown, Y = unknown> extends ScatterPlotController<X, Y> {\n  override readonly observerType?: Class<BubblePlotControllerObserver<X, Y>>;\n\n  @TraitViewControllerSet<BubblePlotController<X, Y>, DataPointTrait<X, Y>, DataPointView<X, Y>, DataPointController<X, Y>>({\n    extends: true,\n    get parentView(): BubblePlotView<X, Y> | null {\n      return this.owner.plot.view;\n    },\n  })\n  override readonly dataPoints!: TraitViewControllerSet<this, DataPointTrait<X, Y>, DataPointView<X, Y>, DataPointController<X, Y>> & DataSetControllerDataPointExt<X, Y>;\n  static override readonly dataPoints: MemberFastenerClass<BubblePlotController, \"dataPoints\">;\n\n  protected setPlotRadius(radius: Length | null, timing?: AnyTiming | boolean): void {\n    const plotView = this.plot.view;\n    if (plotView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.plotTiming.value;\n        if (timing === true) {\n          timing = plotView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      plotView.radius.setState(radius, timing, Affinity.Intrinsic);\n    }\n  }\n\n  protected setPlotFill(fill: Look<Color> | Color | null, timing?: AnyTiming | boolean): void {\n    const plotView = this.plot.view;\n    if (plotView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.plotTiming.value;\n        if (timing === true) {\n          timing = plotView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      if (fill instanceof Look) {\n        plotView.fill.setLook(fill, timing, Affinity.Intrinsic);\n      } else {\n        plotView.fill.setState(fill, timing, Affinity.Intrinsic);\n      }\n    }\n  }\n\n  @TraitViewRef<BubblePlotController<X, Y>, BubblePlotTrait<X, Y>, BubblePlotView<X, Y>>({\n    traitType: BubblePlotTrait,\n    observesTrait: true,\n    initTrait(plotTrait: BubblePlotTrait<X, Y>): void {\n      if (this.owner.dataSet.trait === null) {\n        const dataSetTrait = plotTrait.getTrait(DataSetTrait) as DataSetTrait<X, Y>;\n        if (dataSetTrait !== null) {\n          this.owner.dataSet.setTrait(dataSetTrait);\n        }\n      }\n      const plotView = this.view;\n      if (plotView !== null) {\n        this.owner.setPlotRadius(plotTrait.radius.value);\n        this.owner.setPlotFill(plotTrait.fill.value);\n      }\n    },\n    willAttachTrait(plotTrait: BubblePlotTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachPlotTrait\", plotTrait, this.owner);\n    },\n    didDetachTrait(plotTrait: BubblePlotTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachPlotTrait\", plotTrait, this.owner);\n    },\n    traitDidSetPlotRadius(newRadius: Length | null, oldRadius: Length | null): void {\n      this.owner.setPlotRadius(newRadius);\n    },\n    traitDidSetPlotFill(newFill: Look<Color> | Color | null, oldFill: Look<Color> | Color | null): void {\n      this.owner.setPlotFill(newFill);\n    },\n    viewType: BubblePlotView,\n    observesView: true,\n    initView(plotView: BubblePlotView<X, Y>): void {\n      const dataPointControllers = this.owner.dataPoints.controllers;\n      for (const controllerId in dataPointControllers) {\n        const dataPointController = dataPointControllers[controllerId]!;\n        dataPointController.dataPoint.insertView(plotView);\n      }\n      const plotTrait = this.trait;\n      if (plotTrait !== null) {\n        this.owner.setPlotRadius(plotTrait.radius.value);\n        this.owner.setPlotFill(plotTrait.fill.value);\n      }\n    },\n    willAttachView(plotView: BubblePlotView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachPlotView\", plotView, this.owner);\n    },\n    didDetachView(plotView: BubblePlotView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachPlotView\", plotView, this.owner);\n    },\n    viewWillSetPlotRadius(newRadius: Length | null, oldRadius: Length | null, plotView: BubblePlotView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillSetPlotRadius\", newRadius, oldRadius, this.owner);\n    },\n    viewDidSetPlotRadius(newRadius: Length | null, oldRadius: Length | null, plotView: BubblePlotView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetPlotRadius\", newRadius, oldRadius, this.owner);\n    },\n    viewWillSetPlotFill(newFill: Color | null, oldFill: Color | null, plotView: BubblePlotView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillSetPlotFill\", newFill, oldFill, this.owner);\n    },\n    viewDidSetPlotFill(newFill: Color | null, oldFill: Color | null, plotView: BubblePlotView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetPlotFill\", newFill, oldFill, this.owner);\n    },\n  })\n  readonly plot!: TraitViewRef<this, BubblePlotTrait<X, Y>, BubblePlotView<X, Y>>;\n  static readonly plot: MemberFastenerClass<BubblePlotController, \"plot\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass} from \"@swim/component\";\nimport type {Length} from \"@swim/math\";\nimport type {Color} from \"@swim/style\";\nimport {Look, Mood} from \"@swim/theme\";\nimport {TraitViewRef, TraitViewControllerSet} from \"@swim/controller\";\nimport type {DataPointView} from \"../data/DataPointView\";\nimport type {DataPointTrait} from \"../data/DataPointTrait\";\nimport type {DataPointController} from \"../data/DataPointController\";\nimport type {DataSetControllerDataPointExt} from \"../data/DataSetController\";\nimport {DataSetTrait} from \"../data/DataSetTrait\";\nimport {LinePlotView} from \"./LinePlotView\";\nimport {LinePlotTrait} from \"./LinePlotTrait\";\nimport {SeriesPlotController} from \"./SeriesPlotController\";\nimport type {LinePlotControllerObserver} from \"./LinePlotControllerObserver\";\n\n/** @public */\nexport class LinePlotController<X = unknown, Y = unknown> extends SeriesPlotController<X, Y> {\n  override readonly observerType?: Class<LinePlotControllerObserver<X, Y>>;\n\n  @TraitViewControllerSet<LinePlotController<X, Y>, DataPointTrait<X, Y>, DataPointView<X, Y>, DataPointController<X, Y>>({\n    extends: true,\n    get parentView(): LinePlotView<X, Y> | null {\n      return this.owner.plot.view;\n    },\n  })\n  override readonly dataPoints!: TraitViewControllerSet<this, DataPointTrait<X, Y>, DataPointView<X, Y>, DataPointController<X, Y>> & DataSetControllerDataPointExt<X, Y>;\n  static override readonly dataPoints: MemberFastenerClass<LinePlotController, \"dataPoints\">;\n\n  protected setPlotStroke(stroke: Look<Color> | Color | null, timing?: AnyTiming | boolean): void {\n    const plotView = this.plot.view;\n    if (plotView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.plotTiming.value;\n        if (timing === true) {\n          timing = plotView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      if (stroke instanceof Look) {\n        plotView.stroke.setLook(stroke, timing, Affinity.Intrinsic);\n      } else {\n        plotView.stroke.setState(stroke, timing, Affinity.Intrinsic);\n      }\n    }\n  }\n\n  protected setPlotStrokeWidth(strokeWidth: Length | null, timing?: AnyTiming | boolean): void {\n    const plotView = this.plot.view;\n    if (plotView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.plotTiming.value;\n        if (timing === true) {\n          timing = plotView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      plotView.strokeWidth.setState(strokeWidth, timing, Affinity.Intrinsic);\n    }\n  }\n\n  @TraitViewRef<LinePlotController<X, Y>, LinePlotTrait<X, Y>, LinePlotView<X, Y>>({\n    traitType: LinePlotTrait,\n    observesTrait: true,\n    initTrait(plotTrait: LinePlotTrait<X, Y>): void {\n      if (this.owner.dataSet.trait === null) {\n        const dataSetTrait = plotTrait.getTrait(DataSetTrait) as DataSetTrait<X, Y>;\n        if (dataSetTrait !== null) {\n          this.owner.dataSet.setTrait(dataSetTrait);\n        }\n      }\n      const plotView = this.view;\n      if (plotView !== null) {\n        const stroke = plotTrait.stroke.value;\n        if (stroke !== null) {\n          this.owner.setPlotStroke(stroke);\n        }\n        const strokeWidth = plotTrait.strokeWidth.value;\n        if (strokeWidth !== null) {\n          this.owner.setPlotStrokeWidth(strokeWidth);\n        }\n      }\n    },\n    willAttachTrait(plotTrait: LinePlotTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachPlotTrait\", plotTrait, this.owner);\n    },\n    didDetachTrait(plotTrait: LinePlotTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachPlotTrait\", plotTrait, this.owner);\n    },\n    traitDidSetPlotStroke(newStroke: Look<Color> | Color | null, oldStroke: Look<Color> | Color | null): void {\n      this.owner.setPlotStroke(newStroke);\n    },\n    traitDidSetPlotStrokeWidth(newStrokeWidth: Length | null, oldStrokeWidth: Length | null): void {\n      this.owner.setPlotStrokeWidth(newStrokeWidth);\n    },\n    viewType: LinePlotView,\n    observesView: true,\n    initView(plotView: LinePlotView<X, Y>): void {\n      const dataPointControllers = this.owner.dataPoints.controllers;\n      for (const controllerId in dataPointControllers) {\n        const dataPointController = dataPointControllers[controllerId]!;\n        dataPointController.dataPoint.insertView(plotView);\n      }\n      const plotTrait = this.trait;\n      if (plotTrait !== null) {\n        const stroke = plotTrait.stroke.value;\n        if (stroke !== null) {\n          this.owner.setPlotStroke(stroke);\n        }\n        const strokeWidth = plotTrait.strokeWidth.value;\n        if (strokeWidth !== null) {\n          this.owner.setPlotStrokeWidth(strokeWidth);\n        }\n      }\n    },\n    willAttachView(plotView: LinePlotView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachPlotView\", plotView, this.owner);\n    },\n    didDetachView(plotView: LinePlotView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachPlotView\", plotView, this.owner);\n    },\n    viewWillSetPlotStroke(newStroke: Color | null, oldStroke: Color | null, plotView: LinePlotView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillSetPlotStroke\", newStroke, oldStroke, this.owner);\n    },\n    viewDidSetPlotStroke(newStroke: Color | null, oldStroke: Color | null, plotView: LinePlotView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetPlotStroke\", newStroke, oldStroke, this.owner);\n    },\n    viewWillSetPlotStrokeWidth(newStrokeWidth: Length | null, oldStrokeWidth: Length | null, plotView: LinePlotView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillSetPlotStrokeWidth\", newStrokeWidth, oldStrokeWidth, this.owner);\n    },\n    viewDidSetPlotStrokeWidth(newStrokeWidth: Length | null, oldStrokeWidth: Length | null, plotView: LinePlotView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidSetPlotStrokeWidth\", newStrokeWidth, oldStrokeWidth, this.owner);\n    },\n  })\n  readonly plot!: TraitViewRef<this, LinePlotTrait<X, Y>, LinePlotView<X, Y>>;\n  static readonly plot: MemberFastenerClass<LinePlotController, \"plot\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass} from \"@swim/component\";\nimport type {Color} from \"@swim/style\";\nimport {Look, Mood} from \"@swim/theme\";\nimport {TraitViewRef, TraitViewControllerSet} from \"@swim/controller\";\nimport type {DataPointView} from \"../data/DataPointView\";\nimport type {DataPointTrait} from \"../data/DataPointTrait\";\nimport type {DataPointController} from \"../data/DataPointController\";\nimport type {DataSetControllerDataPointExt} from \"../data/DataSetController\";\nimport {DataSetTrait} from \"../data/DataSetTrait\";\nimport {AreaPlotView} from \"./AreaPlotView\";\nimport {AreaPlotTrait} from \"./AreaPlotTrait\";\nimport {SeriesPlotController} from \"./SeriesPlotController\";\nimport type {AreaPlotControllerObserver} from \"./AreaPlotControllerObserver\";\n\n/** @public */\nexport class AreaPlotController<X = unknown, Y = unknown> extends SeriesPlotController<X, Y> {\n  override readonly observerType?: Class<AreaPlotControllerObserver<X, Y>>;\n\n  @TraitViewControllerSet<AreaPlotController<X, Y>, DataPointTrait<X, Y>, DataPointView<X, Y>, DataPointController<X, Y>>({\n    extends: true,\n    get parentView(): AreaPlotView<X, Y> | null {\n      return this.owner.plot.view;\n    },\n  })\n  override readonly dataPoints!: TraitViewControllerSet<this, DataPointTrait<X, Y>, DataPointView<X, Y>, DataPointController<X, Y>> & DataSetControllerDataPointExt<X, Y>;\n  static override readonly dataPoints: MemberFastenerClass<AreaPlotController, \"dataPoints\">;\n\n  protected setPlotFill(fill: Look<Color> | Color | null, timing?: AnyTiming | boolean): void {\n    const plotView = this.plot.view;\n    if (plotView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.plotTiming.value;\n        if (timing === true) {\n          timing = plotView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      if (fill instanceof Look) {\n        plotView.fill.setLook(fill, timing, Affinity.Intrinsic);\n      } else {\n        plotView.fill.setState(fill, timing, Affinity.Intrinsic);\n      }\n    }\n  }\n\n  protected willSetPlotFill(newFill: Color | null, oldFill: Color | null, plotView: AreaPlotView<X, Y>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerWillSetPlotFill !== void 0) {\n        observer.controllerWillSetPlotFill(newFill, oldFill, this);\n      }\n    }\n  }\n\n  protected onSetPlotFill(newFill: Color | null, oldFill: Color | null, plotView: AreaPlotView<X, Y>): void {\n    // hook\n  }\n\n  protected didSetPlotFill(newFill: Color | null, oldFill: Color | null, plotView: AreaPlotView<X, Y>): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.controllerDidSetPlotFill !== void 0) {\n        observer.controllerDidSetPlotFill(newFill, oldFill, this);\n      }\n    }\n  }\n\n  @TraitViewRef<AreaPlotController<X, Y>, AreaPlotTrait<X, Y>, AreaPlotView<X, Y>>({\n    traitType: AreaPlotTrait,\n    observesTrait: true,\n    initTrait(plotTrait: AreaPlotTrait<X, Y>): void {\n      if (this.owner.dataSet.trait === null) {\n        const dataSetTrait = plotTrait.getTrait(DataSetTrait) as DataSetTrait<X, Y>;\n        if (dataSetTrait !== null) {\n          this.owner.dataSet.setTrait(dataSetTrait);\n        }\n      }\n      const plotView = this.view;\n      if (plotView !== null) {\n        const fill = plotTrait.fill.value;\n        if (fill !== null) {\n          this.owner.setPlotFill(fill);\n        }\n      }\n    },\n    willAttachTrait(plotTrait: AreaPlotTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachPlotTrait\", plotTrait, this.owner);\n    },\n    didDetachTrait(plotTrait: AreaPlotTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachPlotTrait\", plotTrait, this.owner);\n    },\n    traitDidSetPlotFill(newFill: Look<Color> | Color | null, oldFill: Look<Color> | Color | null): void {\n      this.owner.setPlotFill(newFill);\n    },\n    viewType: AreaPlotView,\n    observesView: true,\n    initView(plotView: AreaPlotView<X, Y>): void {\n      const dataPointControllers = this.owner.dataPoints.controllers;\n      for (const controllerId in dataPointControllers) {\n        const dataPointController = dataPointControllers[controllerId]!;\n        dataPointController.dataPoint.insertView(plotView);\n      }\n      const plotTrait = this.trait;\n      if (plotTrait !== null) {\n        const fill = plotTrait.fill.value;\n        if (fill !== null) {\n          this.owner.setPlotFill(fill);\n        }\n      }\n    },\n    willAttachView(plotView: AreaPlotView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachPlotView\", plotView, this.owner);\n    },\n    didDetachView(plotView: AreaPlotView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachPlotView\", plotView, this.owner);\n    },\n    viewWillSetPlotFill(newFill: Color | null, oldFill: Color | null, plotView: AreaPlotView<X, Y>): void {\n      this.owner.willSetPlotFill(newFill, oldFill, plotView);\n    },\n    viewDidSetPlotFill(newFill: Color | null, oldFill: Color | null, plotView: AreaPlotView<X, Y>): void {\n      this.owner.onSetPlotFill(newFill, oldFill, plotView);\n      this.owner.didSetPlotFill(newFill, oldFill, plotView);\n    },\n  })\n  readonly plot!: TraitViewRef<this, AreaPlotTrait<X, Y>, AreaPlotView<X, Y>>;\n  static readonly plot: MemberFastenerClass<AreaPlotController, \"plot\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {R2Box} from \"@swim/math\";\nimport {AnyFont, Font, AnyColor, Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, View} from \"@swim/view\";\nimport {GraphicsView, CanvasContext, CanvasRenderer} from \"@swim/graphics\";\nimport {ScaledViewInit, ScaledView} from \"../scaled/ScaledView\";\nimport type {AnyPlotView, PlotView} from \"../plot/PlotView\";\nimport type {GraphViewObserver} from \"./GraphViewObserver\";\n\n/** @public */\nexport type AnyGraphView<X = unknown, Y = unknown> = GraphView<X, Y> | GraphViewInit<X, Y>;\n\n/** @public */\nexport interface GraphViewInit<X = unknown, Y = unknown> extends ScaledViewInit<X, Y> {\n  plots?: AnyPlotView<X, Y>[];\n\n  font?: AnyFont;\n  textColor?: AnyColor;\n}\n\n/** @public */\nexport class GraphView<X = unknown, Y = unknown> extends ScaledView<X, Y> {\n  override readonly observerType?: Class<GraphViewObserver<X, Y>>;\n\n  @ThemeAnimator({type: Font, inherits: true, value: null})\n  readonly font!: ThemeAnimator<this, Font | null, AnyFont | null>;\n\n  @ThemeAnimator({type: Color, inherits: true, value: null})\n  readonly textColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  addPlot(plot: AnyPlotView<X, Y>, key?: string): void {\n    if (key === void 0 && typeof plot === \"object\" && plot !== null) {\n      key = plot.key;\n    }\n    plot = View.fromAny(plot) as PlotView<X, Y>;\n    this.appendChild(plot);\n  }\n\n  protected override willRender(viewContext: ViewContextType<this>): void {\n    super.willRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const context = renderer.context;\n      context.save();\n      this.clipGraph(context, this.viewFrame);\n    }\n  }\n\n  protected override didRender(viewContext: ViewContextType<this>): void {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const context = renderer.context;\n      context.restore();\n    }\n    super.didRender(viewContext);\n  }\n\n  protected clipGraph(context: CanvasContext, frame: R2Box): void {\n    context.beginPath();\n    context.rect(frame.x, frame.y, frame.width, frame.height);\n    context.clip();\n  }\n\n  protected override hitTest(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    return this;\n  }\n\n  override init(init: GraphViewInit<X, Y>): void {\n    super.init(init);\n    const plots = init.plots;\n    if (plots !== void 0) {\n      for (let i = 0, n = plots.length; i < n; i += 1) {\n        this.addPlot(plots[i]!);\n      }\n    }\n\n    if (init.font !== void 0) {\n      this.font(init.font);\n    }\n    if (init.textColor !== void 0) {\n      this.textColor(init.textColor);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {Model, Trait, TraitSet} from \"@swim/model\";\nimport {PlotTrait} from \"../plot/PlotTrait\";\nimport type {GraphTraitObserver} from \"./GraphTraitObserver\";\n\n/** @public */\nexport class GraphTrait<X = unknown, Y = unknown> extends Trait {\n  override readonly observerType?: Class<GraphTraitObserver<X, Y>>;\n\n  @TraitSet<GraphTrait<X, Y>, PlotTrait<X, Y>>({\n    type: PlotTrait,\n    binds: true,\n    willAttachTrait(plotTrait: PlotTrait<X, Y>): void {\n      this.owner.callObservers(\"traitWillAttachPlot\", plotTrait, this.owner);\n    },\n    didAttachTrait(plotTrait: PlotTrait<X, Y>): void {\n      if (this.owner.consuming) {\n        plotTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(plotTrait: PlotTrait<X, Y>): void {\n      if (this.owner.consuming) {\n        plotTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(plotTrait: PlotTrait<X, Y>): void {\n      this.owner.callObservers(\"traitDidDetachPlot\", plotTrait, this.owner);\n    },\n    detectModel(model: Model): PlotTrait<X, Y> | null {\n      return model.getTrait(PlotTrait) as PlotTrait<X, Y>;\n    },\n  })\n  readonly plots!: TraitSet<this, PlotTrait<X, Y>>;\n  static readonly plots: MemberFastenerClass<GraphTrait, \"plots\">;\n\n  /** @internal */\n  protected startConsumingPlots(): void {\n    const plotTraits = this.plots.traits;\n    for (const traitId in plotTraits) {\n      const plotTrait = plotTraits[traitId]!;\n      plotTrait.consume(this);\n    }\n  }\n\n  /** @internal */\n  protected stopConsumingPlots(): void {\n    const plotTraits = this.plots.traits;\n    for (const traitId in plotTraits) {\n      const plotTrait = plotTraits[traitId]!;\n      plotTrait.unconsume(this);\n    }\n  }\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    this.startConsumingPlots();\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    this.stopConsumingPlots();\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport type {Trait} from \"@swim/model\";\nimport type {GraphicsView} from \"@swim/graphics\";\nimport {Controller, TraitViewRef, TraitViewControllerSet} from \"@swim/controller\";\nimport type {DataPointView} from \"../data/DataPointView\";\nimport type {DataPointTrait} from \"../data/DataPointTrait\";\nimport type {DataPointController} from \"../data/DataPointController\";\nimport type {DataSetTrait} from \"../data/DataSetTrait\";\nimport type {PlotView} from \"../plot/PlotView\";\nimport type {PlotTrait} from \"../plot/PlotTrait\";\nimport {PlotController} from \"../plot/PlotController\";\nimport {GraphView} from \"./GraphView\";\nimport {GraphTrait} from \"./GraphTrait\";\nimport type {GraphControllerObserver} from \"./GraphControllerObserver\";\n\n/** @public */\nexport interface GraphControllerPlotExt<X = unknown, Y = unknown> {\n  attachPlotTrait(plotTrait: PlotTrait<X, Y>, plotController: PlotController<X, Y>): void;\n  detachPlotTrait(plotTrait: PlotTrait<X, Y>, plotController: PlotController<X, Y>): void;\n  attachPlotView(plotView: PlotView<X, Y>, plotController: PlotController<X, Y>): void;\n  detachPlotView(plotView: PlotView<X, Y>, plotController: PlotController<X, Y>): void;\n  attachDataSetTrait(dataSetTrait: DataSetTrait<X, Y>, plotController: PlotController<X, Y>): void;\n  detachDataSetTrait(dataSetTrait: DataSetTrait<X, Y>, plotController: PlotController<X, Y>): void;\n  attachDataPoint(dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void;\n  detachDataPoint(dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void;\n  attachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void;\n  detachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void;\n  attachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void;\n  detachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void;\n  attachDataPointLabelView(dataPointLabelView: GraphicsView, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void;\n  detachDataPointLabelView(dataPointLabelView: GraphicsView, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void;\n}\n\n/** @public */\nexport class GraphController<X = unknown, Y = unknown> extends Controller {\n  override readonly observerType?: Class<GraphControllerObserver<X, Y>>;\n\n  @TraitViewRef<GraphController<X, Y>, GraphTrait<X, Y>, GraphView<X, Y>>({\n    traitType: GraphTrait,\n    observesTrait: true,\n    willAttachTrait(graphTrait: GraphTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachGraphTrait\", graphTrait, this.owner);\n    },\n    didAttachTrait(graphTrait: GraphTrait<X, Y>): void {\n      const plotTraits = graphTrait.plots.traits;\n      for (const traitId in plotTraits) {\n        const plotTrait = plotTraits[traitId]!;\n        this.owner.plots.addTraitController(plotTrait);\n      }\n    },\n    willDetachTrait(graphTrait: GraphTrait<X, Y>): void {\n      const plotTraits = graphTrait.plots.traits;\n      for (const traitId in plotTraits) {\n        const plotTrait = plotTraits[traitId]!;\n        this.owner.plots.deleteTraitController(plotTrait);\n      }\n    },\n    didDetachTrait(graphTrait: GraphTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachGraphTrait\", graphTrait, this.owner);\n    },\n    traitWillAttachPlot(plotTrait: PlotTrait<X, Y>, targetTrait: Trait): void {\n      this.owner.plots.addTraitController(plotTrait, targetTrait);\n    },\n    traitDidDetachPlot(plotTrait: PlotTrait<X, Y>): void {\n      this.owner.plots.deleteTraitController(plotTrait);\n    },\n    viewType: GraphView,\n    initView(graphView: GraphView<X, Y>): void {\n      const plotControllers = this.owner.plots.controllers;\n      for (const controllerId in plotControllers) {\n        const plotController = plotControllers[controllerId]!;\n        const plotView = plotController.plot.view;\n        if (plotView !== null && plotView.parent === null) {\n          plotController.plot.insertView(graphView);\n        }\n      }\n    },\n    willAttachView(newGraphView: GraphView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachGraphView\", newGraphView, this.owner);\n    },\n    didDetachView(newGraphView: GraphView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachGraphView\", newGraphView, this.owner);\n    },\n  })\n  readonly graph!: TraitViewRef<this, GraphTrait<X, Y>, GraphView<X, Y>>;\n  static readonly graph: MemberFastenerClass<GraphController, \"graph\">;\n\n  @TraitViewControllerSet<GraphController<X, Y>, PlotTrait<X, Y>, PlotView<X, Y>, PlotController<X, Y>, GraphControllerPlotExt<X, Y>>({\n    implements: true,\n    type: PlotController,\n    binds: true,\n    observes: true,\n    get parentView(): GraphView<X, Y> | null {\n      return this.owner.graph.view;\n    },\n    getTraitViewRef(plotController: PlotController<X, Y>): TraitViewRef<unknown, PlotTrait<X, Y>, PlotView<X, Y>> {\n      return plotController.plot;\n    },\n    willAttachController(plotController: PlotController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachPlot\", plotController, this.owner);\n    },\n    didAttachController(plotController: PlotController<X, Y>): void {\n      const plotTrait = plotController.plot.trait;\n      if (plotTrait !== null) {\n        this.attachPlotTrait(plotTrait, plotController);\n      }\n      const plotView = plotController.plot.view;\n      if (plotView !== null) {\n        this.attachPlotView(plotView, plotController);\n      }\n      const dataSetTrait = plotController.dataSet.trait;\n      if (dataSetTrait !== null) {\n        this.attachDataSetTrait(dataSetTrait, plotController);\n      }\n    },\n    willDetachController(plotController: PlotController<X, Y>): void {\n      const dataSetTrait = plotController.dataSet.trait;\n      if (dataSetTrait !== null) {\n        this.detachDataSetTrait(dataSetTrait, plotController);\n      }\n      const plotView = plotController.plot.view;\n      if (plotView !== null) {\n        this.detachPlotView(plotView, plotController);\n      }\n      const plotTrait = plotController.plot.trait;\n      if (plotTrait !== null) {\n        this.detachPlotTrait(plotTrait, plotController);\n      }\n    },\n    didDetachController(plotController: PlotController<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachPlot\", plotController, this.owner);\n    },\n    controllerWillAttachPlotTrait(plotTrait: PlotTrait<X, Y>, plotController: PlotController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachPlotTrait\", plotTrait, plotController, this.owner);\n      this.attachPlotTrait(plotTrait, plotController);\n    },\n    controllerDidDetachPlotTrait(plotTrait: PlotTrait<X, Y>, plotController: PlotController<X, Y>): void {\n      this.detachPlotTrait(plotTrait, plotController);\n      this.owner.callObservers(\"controllerDidDetachPlotTrait\", plotTrait, plotController, this.owner);\n    },\n    attachPlotTrait(plotTrait: PlotTrait<X, Y>, plotController: PlotController<X, Y>): void {\n      // hook\n    },\n    detachPlotTrait(plotTrait: PlotTrait<X, Y>, plotController: PlotController<X, Y>): void {\n      // hook\n    },\n    controllerWillAttachPlotView(plotView: PlotView<X, Y>, plotController: PlotController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachPlotView\", plotView, plotController, this.owner);\n      this.attachPlotView(plotView, plotController);\n    },\n    controllerDidDetachPlotView(plotView: PlotView<X, Y>, plotController: PlotController<X, Y>): void {\n      this.detachPlotView(plotView, plotController);\n      this.owner.callObservers(\"controllerDidDetachPlotView\", plotView, plotController, this.owner);\n    },\n    attachPlotView(plotView: PlotView<X, Y>, plotController: PlotController<X, Y>): void {\n      // hook\n    },\n    detachPlotView(plotView: PlotView<X, Y>, plotController: PlotController<X, Y>): void {\n      plotView.remove();\n    },\n    controllerWillAttachDataSetTrait(dataSetTrait: DataSetTrait<X, Y>, plotController: PlotController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataSetTrait\", dataSetTrait, plotController, this.owner);\n      this.attachDataSetTrait(dataSetTrait, plotController);\n    },\n    controllerDidDetachDataSetTrait(dataSetTrait: DataSetTrait<X, Y>, plotController: PlotController<X, Y>): void {\n      this.detachDataSetTrait(dataSetTrait, plotController);\n      this.owner.callObservers(\"controllerDidDetachDataSetTrait\", dataSetTrait, plotController, this.owner);\n    },\n    attachDataSetTrait(dataSetTrait: DataSetTrait<X, Y>, plotController: PlotController<X, Y>): void {\n      // hook\n    },\n    detachDataSetTrait(dataSetTrait: DataSetTrait<X, Y>, plotController: PlotController<X, Y>): void {\n      // hook\n    },\n    controllerWillAttachDataPoint(dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataPoint\", dataPointController, plotController, this.owner);\n      this.attachDataPoint(dataPointController, plotController);\n    },\n    controllerDidDetachDataPoint(dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      this.detachDataPoint(dataPointController, plotController);\n      this.owner.callObservers(\"controllerDidDetachDataPoint\", dataPointController, plotController, this.owner);\n    },\n    attachDataPoint(dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      const dataPointTrait = dataPointController.dataPoint.trait;\n      if (dataPointTrait !== null) {\n        this.attachDataPointTrait(dataPointTrait, dataPointController, plotController);\n      }\n      const dataPointView = dataPointController.dataPoint.view;\n      if (dataPointView !== null) {\n        this.attachDataPointView(dataPointView, dataPointController, plotController);\n      }\n    },\n    detachDataPoint(dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      const dataPointTrait = dataPointController.dataPoint.trait;\n      if (dataPointTrait !== null) {\n        this.detachDataPointTrait(dataPointTrait, dataPointController, plotController);\n      }\n      const dataPointView = dataPointController.dataPoint.view;\n      if (dataPointView !== null) {\n        this.detachDataPointView(dataPointView, dataPointController, plotController);\n      }\n    },\n    controllerWillAttachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataPointTrait\", dataPointTrait, dataPointController, plotController, this.owner);\n      this.attachDataPointTrait(dataPointTrait, dataPointController, plotController);\n    },\n    controllerDidDetachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      this.detachDataPointTrait(dataPointTrait, dataPointController, plotController);\n      this.owner.callObservers(\"controllerDidDetachDataPointTrait\", dataPointTrait, dataPointController, plotController, this.owner);\n    },\n    attachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      // hook\n    },\n    detachDataPointTrait(dataPointTrait: DataPointTrait<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      // hook\n    },\n    controllerWillAttachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataPointView\", dataPointView, dataPointController, plotController, this.owner);\n      this.attachDataPointView(dataPointView, dataPointController, plotController);\n    },\n    controllerDidDetachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      this.detachDataPointView(dataPointView, dataPointController, plotController);\n      this.owner.callObservers(\"controllerDidDetachDataPointView\", dataPointView, dataPointController, plotController, this.owner);\n    },\n    attachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      const labelView = dataPointView.label.view;\n      if (labelView !== null) {\n        this.attachDataPointLabelView(labelView, dataPointController, plotController);\n      }\n    },\n    detachDataPointView(dataPointView: DataPointView<X, Y>, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      const labelView = dataPointView.label.view;\n      if (labelView !== null) {\n        this.detachDataPointLabelView(labelView, dataPointController, plotController);\n      }\n    },\n    controllerWillAttachDataPointLabelView(labelView: GraphicsView, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachDataPointLabelView\", labelView, dataPointController, plotController, this.owner);\n      this.attachDataPointLabelView(labelView, dataPointController, plotController);\n    },\n    controllerDidDetachDataPointLabelView(labelView: GraphicsView, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      this.detachDataPointLabelView(labelView, dataPointController, plotController);\n      this.owner.callObservers(\"controllerDidDetachDataPointLabelView\", labelView, dataPointController, plotController, this.owner);\n    },\n    attachDataPointLabelView(dataPointLabelView: GraphicsView, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      // hook\n    },\n    detachDataPointLabelView(dataPointLabelView: GraphicsView, dataPointController: DataPointController<X, Y>, plotController: PlotController<X, Y>): void {\n      // hook\n    },\n    createController(plotTrait?: PlotTrait<X, Y>): PlotController<X, Y> {\n      if (plotTrait !== void 0) {\n        return PlotController.fromTrait(plotTrait);\n      } else {\n        return TraitViewControllerSet.prototype.createController.call(this);\n      }\n    },\n  })\n  readonly plots!: TraitViewControllerSet<this, PlotTrait<X, Y>, PlotView<X, Y>, PlotController<X, Y>>;\n  static readonly plots: MemberFastenerClass<GraphController, \"plots\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyDomain, Domain, LinearDomain, ContinuousScale, LinearScale} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {TimeZone, AnyDateTime, DateTime, TimeDomain, DateTimeFormat, TimeInterval, TimeScale} from \"@swim/time\";\n\nconst ERROR_10 = Math.sqrt(50);\nconst ERROR_5 = Math.sqrt(10);\nconst ERROR_2 = Math.sqrt(2);\n\nconst SECOND = 1000;\nconst MINUTE = 60 * SECOND;\nconst HOUR = 60 * MINUTE;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\nconst YEAR = 365 * DAY;\n\nconst TIME_TICK_INTERVALS = new BTree<number, TimeInterval>()\n  .set(SECOND, TimeInterval.second)\n  .set(5 * SECOND, TimeInterval.second.every(5))\n  .set(15 * SECOND, TimeInterval.second.every(15))\n  .set(30 * SECOND, TimeInterval.second.every(30))\n  .set(MINUTE, TimeInterval.minute)\n  .set(5 * MINUTE, TimeInterval.minute.every(5))\n  .set(15 * MINUTE, TimeInterval.minute.every(15))\n  .set(30 * MINUTE, TimeInterval.minute.every(30))\n  .set(HOUR, TimeInterval.hour)\n  .set(3 * HOUR, TimeInterval.hour.every(3))\n  .set(6 * HOUR, TimeInterval.hour.every(6))\n  .set(12 * HOUR, TimeInterval.hour.every(12))\n  .set(DAY, TimeInterval.day)\n  .set(2 * DAY, TimeInterval.day.every(2))\n  .set(WEEK, TimeInterval.week)\n  .set(MONTH, TimeInterval.month)\n  .set(3 * MONTH, TimeInterval.month.every(3))\n  .set(YEAR, TimeInterval.year);\n\nconst MILLISECOND_FORMAT = DateTimeFormat.pattern(\".%L\");\nconst SECOND_FORMAT = DateTimeFormat.pattern(\":%S\");\nconst MINUTE_FORMAT = DateTimeFormat.pattern(\"%I:%M\");\nconst HOUR_FORMAT = DateTimeFormat.pattern(\"%I %p\");\nconst WEEKDAY_FORMAT = DateTimeFormat.pattern(\"%a %d\");\nconst MONTHDAY_FORMAT = DateTimeFormat.pattern(\"%b %d\");\nconst MONTH_FORMAT = DateTimeFormat.pattern(\"%B\");\nconst YEAR_FORMAT = DateTimeFormat.pattern(\"%Y\");\n\n/** @public */\nexport abstract class TickGenerator<D> {\n  abstract count(): number;\n  abstract count(n: number): this;\n\n  abstract domain(): Domain<D>;\n  abstract domain(xs: AnyDomain<D>): this;\n  abstract domain(x0: D, x1: D): this;\n\n  abstract generate(): D[];\n\n  format(tickValue: D): string {\n    return \"\" + tickValue;\n  }\n\n  static fromScale<D>(scale: ContinuousScale<D, number>, n?: number): TickGenerator<D> {\n    if (n === void 0) {\n      n = 10;\n    }\n    if (scale instanceof TimeScale) {\n      const domain = scale.domain;\n      return new TimeTickGenerator(domain[0], domain[1], n) as unknown as TickGenerator<D>;\n    } else if (scale instanceof LinearScale) {\n      const domain = scale.domain;\n      return new NumberTickGenerator(domain[0], domain[1], n) as unknown as TickGenerator<D>;\n    } else {\n      throw new TypeError(\"\" + scale);\n    }\n  }\n\n  /** @internal */\n  static step(dx: number, n: number): number {\n    const step0 = Math.abs(dx) / n;\n    let step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10));\n    const error = step0 / step1;\n    if (error >= ERROR_10) {\n      step1 *= 10;\n    } else if (error >= ERROR_5) {\n      step1 *= 5;\n    } else if (error >= ERROR_2) {\n      step1 *= 2;\n    }\n    return dx < 0 ? -step1 : step1;\n  }\n}\n\n/** @public */\nexport class NumberTickGenerator extends TickGenerator<number> {\n  /** @internal */\n  protected x0: number;\n  /** @internal */\n  protected dx: number;\n  /** @internal */\n  protected n: number;\n\n  constructor(x0: number, x1: number, n: number) {\n    super();\n    this.x0 = x0;\n    this.dx = x1 - this.x0;\n    this.n = Math.max(0, n);\n  }\n\n  override count(): number;\n  override count(n: number): this;\n  override count(n?: number): number | this {\n    if (n === void 0) {\n      return this.n;\n    } else {\n      this.n = Math.max(0, n);\n      return this;\n    }\n  }\n\n  override domain(): Domain<number>;\n  override domain(xs: AnyDomain<number>): this;\n  override domain(x0: number, x1: number): this;\n  override domain(x0?: AnyDomain<number> | number, x1?: number): Domain<number> | this {\n    if (x0 === void 0) {\n      return LinearDomain(this.x0, this.x0 + this.dx);\n    } else if (x1 === void 0) {\n      this.x0 = (x0 as AnyDomain<number>)[0];\n      this.dx = (x0 as AnyDomain<number>)[1] - this.x0;\n      return this;\n    } else {\n      this.x0 = x0 as number;\n      this.dx = x1 - this.x0;\n      return this;\n    }\n  }\n\n  override generate(): number[] {\n    let x0: number;\n    let x1: number;\n    if (this.dx < 0) {\n      x1 = this.x0;\n      x0 = x1 + this.dx;\n    } else {\n      x0 = this.x0;\n      x1 = x0 + this.dx;\n    }\n\n    const step = NumberTickGenerator.interval(x1 - x0, this.n);\n    if (step === 0 || !isFinite(step)) {\n      return [];\n    }\n\n    let ticks;\n    if (step > 0) {\n      x0 = Math.ceil(x0 / step);\n      x1 = Math.floor(x1 / step);\n      const n = Math.ceil(x1 - x0 + 1);\n      ticks = new Array<number>(n);\n      for (let i = 0; i < n; i += 1) {\n        ticks[i] = (x0 + i) * step;\n      }\n    } else {\n      x0 = Math.floor(x0 * step);\n      x1 = Math.ceil(x1 * step);\n      const n = Math.ceil(x0 - x1 + 1);\n      ticks = new Array<number>(n);\n      for (let i = 0; i < n; i += 1) {\n        ticks[i] = (x0 - i) / step;\n      }\n    }\n\n    if (this.dx < 0) {\n      ticks.reverse();\n    }\n\n    return ticks;\n  }\n\n  /** @internal */\n  static interval(dx: number, n: number = 10): number {\n    const step = dx / n;\n    const power = Math.floor(Math.log(step) / Math.LN10);\n    const power10 = Math.pow(10, power);\n    const error = step / power10;\n    const base = error >= ERROR_10 ? 10 : error >= ERROR_5 ? 5 : error >= ERROR_2 ? 2 : 1;\n    return power >= 0 ? power10 * base : -Math.pow(10, -power) / base;\n  }\n}\n\n/** @public */\nexport class TimeTickGenerator extends TickGenerator<DateTime> {\n  /** @internal */\n  protected t0: number;\n  /** @internal */\n  protected dt: number;\n  /** @internal */\n  protected zone: TimeZone;\n  /** @internal */\n  protected n: number;\n\n  constructor(t0: AnyDateTime, t1: AnyDateTime, n: number, zone?: TimeZone) {\n    super();\n    const d0 = DateTime.fromAny(t0);\n    const d1 = DateTime.fromAny(t1);\n    this.t0 = d0.time;\n    this.dt = d1.time - this.t0;\n    this.zone = zone !== void 0 ? zone : d0.zone;\n    this.n = Math.max(0, n);\n  }\n\n  override count(): number;\n  override count(n: number): this;\n  override count(n?: number): number | this {\n    if (n === void 0) {\n      return this.n;\n    } else {\n      this.n = Math.max(0, n);\n      return this;\n    }\n  }\n\n  override domain(): Domain<DateTime>;\n  override domain(ts: AnyDomain<DateTime>): this;\n  override domain(d0: AnyDateTime, d1: AnyDateTime): this;\n  override domain(d0?: AnyDomain<DateTime> | AnyDateTime,\n                  d1?: AnyDateTime): Domain<DateTime> | this {\n    if (d0 === void 0) {\n      return TimeDomain(new DateTime(this.t0, this.zone), new DateTime(this.t0 + this.dt, this.zone));\n    } else {\n      if (d1 === void 0) {\n        d1 = (d0 as AnyDomain<DateTime>)[1];\n        d0 = (d0 as AnyDomain<DateTime>)[0];\n      } else {\n        d0 = d0 as AnyDateTime;\n      }\n      d0 = DateTime.fromAny(d0);\n      d1 = DateTime.fromAny(d1);\n      this.t0 = (d0 as DateTime).time;\n      this.dt = (d1 as DateTime).time - this.t0;\n      return this;\n    }\n  }\n\n  override generate(interval?: TimeInterval | number): DateTime[] {\n    let t0: number;\n    let t1: number;\n    if (this.dt < 0) {\n      t1 = this.t0;\n      t0 = t1 + this.dt;\n    } else {\n      t0 = this.t0;\n      t1 = t0 + this.dt;\n    }\n\n    if (interval === void 0) {\n      interval = this.n;\n    }\n    interval = TimeTickGenerator.interval(t1 - t0, interval);\n    const ticks = interval.range(new DateTime(t0, this.zone), new DateTime(t1 + 1, this.zone));\n\n    if (this.dt < 0) {\n      ticks.reverse();\n    }\n\n    return ticks;\n  }\n\n  override format(tickValue: DateTime): string {\n    if (TimeInterval.second.floor(tickValue) < tickValue) {\n      return MILLISECOND_FORMAT.format(tickValue);\n    } else if (TimeInterval.minute.floor(tickValue) < tickValue) {\n      return SECOND_FORMAT.format(tickValue);\n    } else if (TimeInterval.hour.floor(tickValue) < tickValue) {\n      return MINUTE_FORMAT.format(tickValue);\n    } else if (TimeInterval.day.floor(tickValue) < tickValue) {\n      return HOUR_FORMAT.format(tickValue);\n    } else if (TimeInterval.month.floor(tickValue) < tickValue) {\n      if (TimeInterval.week.floor(tickValue) < tickValue) {\n        return WEEKDAY_FORMAT.format(tickValue);\n      } else {\n        return MONTHDAY_FORMAT.format(tickValue);\n      }\n    } else if (TimeInterval.year.floor(tickValue) < tickValue) {\n      return MONTH_FORMAT.format(tickValue);\n    } else {\n      return YEAR_FORMAT.format(tickValue);\n    }\n  }\n\n  /** @internal */\n  static interval(dt: number, interval: TimeInterval | number = 10): TimeInterval {\n    if (typeof interval === \"number\") {\n      const t = Math.abs(dt) / interval;\n      const duration = TIME_TICK_INTERVALS.nextKey(t);\n      if (duration === void 0) {\n        const k = TickGenerator.step(dt / YEAR, interval);\n        interval = TimeInterval.year.every(k);\n      } else if (duration > SECOND) {\n        if (t / TIME_TICK_INTERVALS.previousKey(t)! < duration / t) {\n          interval = TIME_TICK_INTERVALS.previousValue(t)!;\n        } else {\n          interval = TIME_TICK_INTERVALS.nextValue(t)!;\n        }\n      } else {\n        const k = Math.max(1, TickGenerator.step(dt, interval));\n        interval = TimeInterval.millisecond.every(k);\n      }\n    }\n    return interval;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Class, Initable, Timing} from \"@swim/util\";\nimport {MemberFastenerClass, Animator} from \"@swim/component\";\nimport {AnyR2Point, R2Point, R2Box} from \"@swim/math\";\nimport {AnyFont, Font, AnyColor, Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, AnyView, View, ViewRef} from \"@swim/view\";\nimport {\n  GraphicsViewInit,\n  GraphicsView,\n  PaintingContext,\n  PaintingRenderer,\n  CanvasRenderer,\n  TextRunView,\n} from \"@swim/graphics\";\nimport type {TickViewObserver} from \"./TickViewObserver\";\nimport {TopTickView} from \"../\"; // forward import\nimport {RightTickView} from \"../\"; // forward import\nimport {BottomTickView} from \"../\"; // forward import\nimport {LeftTickView} from \"../\"; // forward import\n\n/** @internal */\nexport const enum TickState {\n  Excluded,\n  Entering,\n  Included,\n  Leaving,\n}\n\n/** @public */\nexport type TickOrientation = \"top\" | \"right\" | \"bottom\" | \"left\";\n\n/** @public */\nexport type AnyTickView<D = unknown> = TickView<D> | TickViewInit<D>;\n\n/** @public */\nexport interface TickViewInit<D = unknown> extends GraphicsViewInit {\n  value: D;\n  orientation?: TickOrientation;\n\n  tickMarkColor?: AnyColor;\n  tickMarkWidth?: number;\n  tickMarkLength?: number;\n  tickLabelPadding?: number;\n\n  gridLineColor?: AnyColor;\n  gridLineWidth?: number;\n\n  font?: AnyFont;\n  textColor?: AnyColor;\n\n  label?: GraphicsView | string | null;\n}\n\n/** @public */\nexport abstract class TickView<D = unknown> extends GraphicsView {\n  constructor(value: D) {\n    super();\n    this.value = value;\n    this.offset = 0;\n    this.tickState = TickState.Excluded;\n    this.preserved = true;\n  }\n\n  override readonly observerType?: Class<TickViewObserver<D>>;\n\n  abstract readonly orientation: TickOrientation;\n\n  readonly value: D;\n\n  /** @internal */\n  readonly offset: number;\n\n  /** @internal */\n  setOffset(offset: number): void {\n    (this as Mutable<this>).offset = offset;\n  }\n\n  /** @internal */\n  readonly tickState: TickState;\n\n  @Animator({type: R2Point, value: R2Point.origin(), updateFlags: View.NeedsRender})\n  readonly anchor!: Animator<this, R2Point, AnyR2Point>;\n\n  @ThemeAnimator({type: Number, value: 1, updateFlags: View.NeedsRender})\n  readonly opacity!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Color, inherits: true, value: null, updateFlags: View.NeedsRender})\n  readonly tickMarkColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Number, inherits: true, value: 1, updateFlags: View.NeedsRender})\n  readonly tickMarkWidth!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Number, inherits: true, value: 6, updateFlags: View.NeedsRender})\n  readonly tickMarkLength!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Number, inherits: true, value: 2, updateFlags: View.NeedsRender})\n  readonly tickLabelPadding!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Color, inherits: true, value: null, updateFlags: View.NeedsRender})\n  readonly gridLineColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Number, inherits: true, value: 0, updateFlags: View.NeedsRender})\n  readonly gridLineWidth!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Font, inherits: true, value: null})\n  readonly font!: ThemeAnimator<this, Font | null, AnyFont | null>;\n\n  @ThemeAnimator({type: Color, inherits: true, value: null})\n  readonly textColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ViewRef<TickView<D>, GraphicsView & Initable<GraphicsViewInit | string>>({\n    key: true,\n    type: TextRunView,\n    binds: true,\n    willAttachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"viewWillAttachTickLabel\", labelView, this.owner);\n    },\n    didDetachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"viewDidDetachTickLabel\", labelView, this.owner);\n    },\n    fromAny(value: AnyView<GraphicsView> | string): GraphicsView {\n      if (typeof value === \"string\") {\n        if (this.view instanceof TextRunView) {\n          this.view.text(value);\n          return this.view;\n        } else {\n          return TextRunView.fromAny(value);\n        }\n      } else {\n        return GraphicsView.fromAny(value);\n      }\n    },\n  })\n  readonly label!: ViewRef<this, GraphicsView & Initable<GraphicsViewInit | string>>;\n  static readonly label: MemberFastenerClass<TickView, \"label\">;\n\n  /** @internal */\n  readonly preserved: boolean;\n\n  preserve(): boolean;\n  preserve(preserve: boolean): this;\n  preserve(preserve?: boolean): this | boolean {\n    if (preserve === void 0) {\n      return this.preserved;\n    } else {\n      (this as Mutable<this>).preserved = preserve;\n      return this;\n    }\n  }\n\n  fadeIn(timing?: Timing | boolean): void {\n    if (this.tickState === TickState.Excluded || this.tickState === TickState.Leaving) {\n      this.opacity.setState(1, timing);\n      (this as Mutable<this>).tickState = TickState.Entering;\n    }\n  }\n\n  fadeOut(timing?: Timing | boolean): void {\n    if (this.tickState === TickState.Entering || this.tickState === TickState.Included) {\n      this.opacity.setState(0, timing);\n      (this as Mutable<this>).tickState = TickState.Leaving;\n    }\n  }\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    const labelView = this.label.view;\n    if (labelView !== null) {\n      this.layoutLabel(labelView);\n    }\n  }\n\n  /** @internal */\n  private static globalAlpha: number = NaN;\n\n  protected override willRender(viewContext: ViewContextType<this>): void {\n    super.willRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const context = renderer.context;\n      // save\n      TickView.globalAlpha = context.globalAlpha;\n      context.globalAlpha = this.opacity.getValue();\n    }\n  }\n\n  protected override onRender(viewContext: ViewContextType<this>): void {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      this.renderTick(renderer.context, this.viewFrame);\n    }\n  }\n\n  protected override didRender(viewContext: ViewContextType<this>): void {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const context = renderer.context;\n      // restore\n      context.globalAlpha = TickView.globalAlpha;\n      TickView.globalAlpha = NaN;\n    }\n    super.didRender(viewContext);\n  }\n\n  protected abstract layoutLabel(labelView: GraphicsView): void;\n\n  protected abstract renderTick(context: PaintingContext, frame: R2Box): void;\n\n  override init(init: TickViewInit<D>): void {\n    super.init(init);\n    if (init.tickMarkColor !== void 0) {\n      this.tickMarkColor(init.tickMarkColor);\n    }\n    if (init.tickMarkWidth !== void 0) {\n      this.tickMarkWidth(init.tickMarkWidth);\n    }\n    if (init.tickMarkLength !== void 0) {\n      this.tickMarkLength(init.tickMarkLength);\n    }\n    if (init.tickLabelPadding !== void 0) {\n      this.tickLabelPadding(init.tickLabelPadding);\n    }\n\n    if (init.gridLineColor !== void 0) {\n      this.gridLineColor(init.gridLineColor);\n    }\n    if (init.gridLineWidth !== void 0) {\n      this.gridLineWidth(init.gridLineWidth);\n    }\n\n    if (init.font !== void 0) {\n      this.font(init.font);\n    }\n    if (init.textColor !== void 0) {\n      this.textColor(init.textColor);\n    }\n\n    if (init.label !== void 0) {\n      this.label(init.label);\n    }\n  }\n\n  static top<D>(value: D): TopTickView<D> {\n    return new TopTickView(value);\n  }\n\n  static right<D>(value: D): RightTickView<D> {\n    return new RightTickView(value);\n  }\n\n  static bottom<D>(value: D): BottomTickView<D> {\n    return new BottomTickView(value);\n  }\n\n  static left<D>(value: D): LeftTickView<D> {\n    return new LeftTickView(value);\n  }\n\n  static from<D>(value: D, orientation: TickOrientation): TickView<D> {\n    if (orientation === \"top\") {\n      return this.top(value);\n    } else if (orientation === \"right\") {\n      return this.right(value);\n    } else if (orientation === \"bottom\") {\n      return this.bottom(value);\n    } else if (orientation === \"left\") {\n      return this.left(value);\n    } else {\n      throw new TypeError(orientation);\n    }\n  }\n\n  static override fromInit<D>(init: TickViewInit<D>, orientation?: TickOrientation): TickView<D>;\n  static override fromInit(init: TickViewInit, orientation?: TickOrientation): TickView;\n  static override fromInit(init: TickViewInit, orientation?: TickOrientation): TickView {\n    if (init.orientation !== void 0) {\n      orientation = init.orientation;\n    }\n    if (orientation === void 0) {\n      throw new TypeError();\n    }\n    const view = this.from(init.value, orientation);\n    view.init(init);\n    return view;\n  }\n\n  static override fromAny<D>(value: AnyTickView<D>, orientation?: TickOrientation): TickView<D>;\n  static override fromAny(value: AnyTickView, orientation?: TickOrientation): TickView;\n  static override fromAny(value: AnyTickView, orientation?: TickOrientation): TickView {\n    if (value === void 0 || value === null) {\n      return value;\n    } else if (value instanceof View) {\n      if (value instanceof this) {\n        return value;\n      } else {\n        throw new TypeError(value + \" not an instance of \" + this);\n      }\n    } else {\n      return this.fromInit(value, orientation);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Affinity} from \"@swim/component\";\nimport {R2Point, R2Box} from \"@swim/math\";\nimport {GraphicsView, PaintingContext, TypesetView} from \"@swim/graphics\";\nimport {TickOrientation, TickView} from \"./TickView\";\n\n/** @public */\nexport class TopTickView<X = unknown> extends TickView<X> {\n  constructor(value: X) {\n    super(value);\n  }\n\n  override get orientation(): TickOrientation {\n    return \"top\";\n  }\n\n  protected override layoutLabel(labelView: GraphicsView): void {\n    const anchor = this.anchor.getValue();\n    const x = Math.round(anchor.x);\n    const y0 = Math.round(anchor.y);\n    const y1 = y0 - this.tickMarkLength.getValue();\n    const y2 = y1 - this.tickLabelPadding.getValue();\n\n    if (TypesetView.is(labelView)) {\n      labelView.textAlign.setState(\"center\", Affinity.Intrinsic);\n      labelView.textBaseline.setState(\"bottom\", Affinity.Intrinsic);\n      labelView.textOrigin.setState(new R2Point(x, y2), Affinity.Intrinsic);\n    }\n  }\n\n  protected override renderTick(context: PaintingContext, frame: R2Box): void {\n    const anchor = this.anchor.getValue();\n    const x = Math.round(anchor.x);\n    const y0 = Math.round(anchor.y);\n    const tickMarkLength = this.tickMarkLength.getValue();\n    const y1 = y0 - tickMarkLength;\n\n    // save\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    const tickMarkColor = this.tickMarkColor.value;\n    const tickMarkWidth = this.tickMarkWidth.getValue();\n    if (tickMarkColor !== null && tickMarkWidth !== 0 && tickMarkLength !== 0) {\n      context.beginPath();\n      context.lineWidth = tickMarkWidth;\n      context.strokeStyle = tickMarkColor.toString();\n      context.moveTo(x, y0);\n      context.lineTo(x, y1);\n      context.stroke();\n    }\n\n    const gridLineColor = this.gridLineColor.value;\n    const gridLineWidth = this.gridLineWidth.getValue();\n    if (gridLineColor !== null && gridLineWidth !== 0 && frame.xMin < x && x < frame.xMax) {\n      context.beginPath();\n      context.lineWidth = gridLineWidth;\n      context.strokeStyle = gridLineColor.toString();\n      context.moveTo(x, y0);\n      context.lineTo(x, frame.yMax);\n      context.stroke();\n    }\n\n    // restore\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Affinity} from \"@swim/component\";\nimport {R2Point, R2Box} from \"@swim/math\";\nimport {GraphicsView, PaintingContext, TypesetView} from \"@swim/graphics\";\nimport {TickOrientation, TickView} from \"./TickView\";\n\n/** @public */\nexport class RightTickView<Y = unknown> extends TickView<Y> {\n  constructor(value: Y) {\n    super(value);\n  }\n\n  override get orientation(): TickOrientation {\n    return \"right\";\n  }\n\n  protected override layoutLabel(labelView: GraphicsView): void {\n    const anchor = this.anchor.getValue();\n    const x0 = Math.round(anchor.x);\n    const y = Math.round(anchor.y);\n    const x1 = x0 + this.tickMarkLength.getValue();\n    const x2 = x1 + this.tickLabelPadding.getValue();\n\n    if (TypesetView.is(labelView)) {\n      labelView.textAlign.setState(\"left\", Affinity.Intrinsic);\n      labelView.textBaseline.setState(\"middle\", Affinity.Intrinsic);\n      labelView.textOrigin.setState(new R2Point(x2, y), Affinity.Intrinsic);\n    }\n  }\n\n  protected override renderTick(context: PaintingContext, frame: R2Box): void {\n    const anchor = this.anchor.getValue();\n    const x0 = Math.round(anchor.x);\n    const y = Math.round(anchor.y);\n    const tickMarkLength = this.tickMarkLength.getValue();\n    const x1 = x0 + tickMarkLength;\n\n    // save\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    const tickMarkColor = this.tickMarkColor.value;\n    const tickMarkWidth = this.tickMarkWidth.getValue();\n    if (tickMarkColor !== null && tickMarkWidth !== 0 && tickMarkLength !== 0) {\n      context.beginPath();\n      context.lineWidth = tickMarkWidth;\n      context.strokeStyle = tickMarkColor.toString();\n      context.moveTo(x0, y);\n      context.lineTo(x1, y);\n      context.stroke();\n    }\n\n    const gridLineColor = this.gridLineColor.value;\n    const gridLineWidth = this.gridLineWidth.getValue();\n    if (gridLineColor !== null && gridLineWidth !== 0 && frame.yMin < y && y < frame.yMax) {\n      context.beginPath();\n      context.lineWidth = gridLineWidth;\n      context.strokeStyle = gridLineColor.toString();\n      context.moveTo(x0, y);\n      context.lineTo(frame.xMin, y);\n      context.stroke();\n    }\n\n    // restore\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Affinity} from \"@swim/component\";\nimport {R2Point, R2Box} from \"@swim/math\";\nimport {GraphicsView, PaintingContext, TypesetView} from \"@swim/graphics\";\nimport {TickOrientation, TickView} from \"./TickView\";\n\n/** @public */\nexport class BottomTickView<X = unknown> extends TickView<X> {\n  constructor(value: X) {\n    super(value);\n  }\n\n  override get orientation(): TickOrientation {\n    return \"bottom\";\n  }\n\n  protected override layoutLabel(labelView: GraphicsView): void {\n    const anchor = this.anchor.getValue();\n    const x = Math.round(anchor.x);\n    const y0 = Math.round(anchor.y);\n    const y1 = y0 + this.tickMarkLength.getValue();\n    const y2 = y1 + this.tickLabelPadding.getValue();\n\n    if (TypesetView.is(labelView)) {\n      labelView.textAlign.setState(\"center\", Affinity.Intrinsic);\n      labelView.textBaseline.setState(\"top\", Affinity.Intrinsic);\n      labelView.textOrigin.setState(new R2Point(x, y2), Affinity.Intrinsic);\n    }\n  }\n\n  protected override renderTick(context: PaintingContext, frame: R2Box): void {\n    const anchor = this.anchor.getValue();\n    const x = Math.round(anchor.x);\n    const y0 = Math.round(anchor.y);\n    const tickMarkLength = this.tickMarkLength.getValue();\n    const y1 = y0 + tickMarkLength;\n\n    // save\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    const tickMarkColor = this.tickMarkColor.value;\n    const tickMarkWidth = this.tickMarkWidth.getValue();\n    if (tickMarkColor !== null && tickMarkWidth !== 0 && tickMarkLength !== 0) {\n      context.beginPath();\n      context.lineWidth = tickMarkWidth;\n      context.strokeStyle = tickMarkColor.toString();\n      context.moveTo(x, y0);\n      context.lineTo(x, y1);\n      context.stroke();\n    }\n\n    const gridLineColor = this.gridLineColor.value;\n    const gridLineWidth = this.gridLineWidth.getValue();\n    if (gridLineColor !== null && gridLineWidth !== 0 && frame.xMin < x && x < frame.xMax) {\n      context.beginPath();\n      context.lineWidth = gridLineWidth;\n      context.strokeStyle = gridLineColor.toString();\n      context.moveTo(x, y0);\n      context.lineTo(x, frame.yMin);\n      context.stroke();\n    }\n\n    // restore\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Affinity} from \"@swim/component\";\nimport {R2Point, R2Box} from \"@swim/math\";\nimport {GraphicsView, PaintingContext, TypesetView} from \"@swim/graphics\";\nimport {TickOrientation, TickView} from \"./TickView\";\n\n/** @public */\nexport class LeftTickView<Y = unknown> extends TickView<Y> {\n  constructor(value: Y) {\n    super(value);\n  }\n\n  override get orientation(): TickOrientation {\n    return \"left\";\n  }\n\n  protected override layoutLabel(labelView: GraphicsView): void {\n    const anchor = this.anchor.getValue();\n    const x0 = Math.round(anchor.x);\n    const y = Math.round(anchor.y);\n    const x1 = x0 - this.tickMarkLength.getValue();\n    const x2 = x1 - this.tickLabelPadding.getValue();\n\n    if (TypesetView.is(labelView)) {\n      labelView.textAlign.setState(\"right\", Affinity.Intrinsic);\n      labelView.textBaseline.setState(\"middle\", Affinity.Intrinsic);\n      labelView.textOrigin.setState(new R2Point(x2, y), Affinity.Intrinsic);\n    }\n  }\n\n  protected override renderTick(context: PaintingContext, frame: R2Box): void {\n    const anchor = this.anchor.getValue();\n    const x0 = Math.round(anchor.x);\n    const y = Math.round(anchor.y);\n    const tickMarkLength = this.tickMarkLength.getValue();\n    const x1 = x0 - tickMarkLength;\n\n    // save\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    const tickMarkColor = this.tickMarkColor.value;\n    const tickMarkWidth = this.tickMarkWidth.getValue();\n    if (tickMarkColor !== null && tickMarkWidth !== 0 && tickMarkLength !== 0) {\n      context.beginPath();\n      context.strokeStyle = tickMarkColor.toString();\n      context.lineWidth = tickMarkWidth;\n      context.moveTo(x0, y);\n      context.lineTo(x1, y);\n      context.stroke();\n    }\n\n    const gridLineColor = this.gridLineColor.value;\n    const gridLineWidth = this.gridLineWidth.getValue();\n    if (gridLineColor !== null && gridLineWidth !== 0 && frame.yMin < y && y < frame.yMax) {\n      context.beginPath();\n      context.lineWidth = gridLineWidth;\n      context.strokeStyle = gridLineColor.toString();\n      context.moveTo(x0, y);\n      context.lineTo(frame.xMax, y);\n      context.stroke();\n    }\n\n    // restore\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, AnyTiming, Timing, Easing, ContinuousScale} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {BTree} from \"@swim/collections\";\nimport {AnyR2Point, R2Point, R2Box} from \"@swim/math\";\nimport {AnyFont, Font, AnyColor, Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, ViewFlags, View} from \"@swim/view\";\nimport {GraphicsViewInit, GraphicsView, PaintingContext, PaintingRenderer} from \"@swim/graphics\";\nimport type {ContinuousScaleAnimator} from \"../scaled/ContinuousScaleAnimator\";\nimport {AnyTickView, TickView} from \"../tick/TickView\";\nimport {TickGenerator} from \"../tick/TickGenerator\";\nimport type {AxisViewObserver} from \"./AxisViewObserver\";\n\n/** @public */\nexport type AxisOrientation = \"top\" | \"right\" | \"bottom\" | \"left\";\n\n/** @public */\nexport type AnyAxisView<D = unknown> = AxisView<D> | AxisViewInit<D>;\n\n/** @public */\nexport interface AxisViewInit<D = unknown> extends GraphicsViewInit {\n  scale?: ContinuousScale<D, number> | string;\n  ticks?: AnyTickView<D>[];\n  tickGenerator?: TickGenerator<D> | true | null;\n\n  borderColor?: AnyColor;\n  borderWidth?: number;\n  borderSerif?: number;\n\n  tickMarkSpacing?: number;\n  tickMarkColor?: AnyColor;\n  tickMarkWidth?: number;\n  tickMarkLength?: number;\n  tickLabelPadding?: number;\n  tickTransition?: AnyTiming;\n\n  gridLineColor?: AnyColor;\n  gridLineWidth?: number;\n\n  font?: AnyFont;\n  textColor?: AnyColor;\n}\n\n/** @public */\nexport abstract class AxisView<D = unknown> extends GraphicsView {\n  constructor() {\n    super();\n    this.ticks = new BTree();\n  }\n\n  override readonly observerType?: Class<AxisViewObserver<D>>;\n\n  abstract readonly orientation: AxisOrientation;\n\n  abstract readonly scale: ContinuousScaleAnimator<this, D, number>;\n\n  /** @internal */\n  readonly ticks!: BTree<D, TickView<D>>;\n\n  getTick(value: D): TickView<D> | null {\n    const tickView = this.ticks.get(value);\n    return tickView !== void 0 ? tickView : null;\n  }\n\n  insertTick(tickView: AnyTickView<D>): TickView<D> {\n    return this.insertChild(TickView.fromAny(tickView, this.orientation), null);\n  }\n\n  removeTick(value: D): TickView<D> | null {\n    const tickView = this.getTick(value);\n    if (tickView !== null) {\n      tickView.remove();\n    }\n    return tickView;\n  }\n\n  @Property({type: TickGenerator, value: true})\n  readonly tickGenerator!: Property<this, TickGenerator<D> | true | null>;\n\n  @ThemeAnimator({type: R2Point, value: R2Point.origin(), updateFlags: View.NeedsLayout | View.NeedsRender})\n  readonly origin!: ThemeAnimator<this, R2Point, AnyR2Point>;\n\n  @ThemeAnimator({type: Color, inherits: true, value: null, updateFlags: View.NeedsRender})\n  readonly borderColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Number, inherits: true, value: 1, updateFlags: View.NeedsRender})\n  readonly borderWidth!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Number, inherits: true, value: 6, updateFlags: View.NeedsRender})\n  readonly borderSerif!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Number, value: 80, updateFlags: View.NeedsRender})\n  readonly tickMarkSpacing!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Color, inherits: true, value: null, updateFlags: View.NeedsRender})\n  readonly tickMarkColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Number, inherits: true, value: 1, updateFlags: View.NeedsRender})\n  readonly tickMarkWidth!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Number, inherits: true, value: 6, updateFlags: View.NeedsRender})\n  readonly tickMarkLength!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Number, inherits: true, value: 2, updateFlags: View.NeedsRender})\n  readonly tickLabelPadding!: ThemeAnimator<this, number>;\n\n  @Property({\n    type: Timing,\n    inherits: true,\n    initValue(): Timing {\n      return Easing.cubicOut.withDuration(250);\n    },\n  })\n  readonly tickTransition!: Property<this, Timing, AnyTiming>;\n\n  @ThemeAnimator({type: Color, inherits: true, value: null, updateFlags: View.NeedsRender})\n  readonly gridLineColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Number, inherits: true, value: 0, updateFlags: View.NeedsRender})\n  readonly gridLineWidth!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Font, inherits: true, value: null, updateFlags: View.NeedsRender})\n  readonly font!: ThemeAnimator<this, Font | null, AnyFont | null>;\n\n  @ThemeAnimator({type: Color, inherits: true, value: null, updateFlags: View.NeedsRender})\n  readonly textColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  protected updateTicks(): void {\n    const scale = this.scale.value;\n    let tickGenerator = this.tickGenerator.value;\n    if (scale !== null && tickGenerator !== null) {\n      let timing: Timing | boolean = this.tickTransition.value;\n      if (tickGenerator === true) {\n        tickGenerator = TickGenerator.fromScale(scale);\n        this.tickGenerator.setValue(tickGenerator);\n        timing = false;\n      }\n      this.generateTicks(tickGenerator, scale, timing);\n    }\n  }\n\n  protected generateTicks(tickGenerator: TickGenerator<D>,\n                          scale: ContinuousScale<D, number>,\n                          timing: Timing | boolean): void {\n    const tickMarkSpacing = this.tickMarkSpacing.getValue();\n    if (tickMarkSpacing !== 0) {\n      const range = scale.range;\n      const dy = Math.abs(range[1] - range[0]);\n      const n = Math.max(1, Math.floor(dy / tickMarkSpacing));\n      tickGenerator.count(n);\n    }\n    tickGenerator.domain(scale.domain);\n\n    const oldTicks = this.ticks.clone();\n    const tickValues = tickGenerator.generate();\n    for (let i = 0, n = tickValues.length; i < n; i += 1) {\n      const tickValue = tickValues[i]!;\n      const oldTick = oldTicks.get(tickValue);\n      if (oldTick !== void 0) {\n        oldTicks.delete(tickValue);\n        oldTick.fadeIn(timing);\n      } else {\n        const newTick = this.createTickView(tickValue);\n        if (newTick !== null) {\n          this.appendChild(newTick);\n          newTick.opacity.setInterpolatedValue(0, 0);\n          newTick.fadeIn(timing);\n        }\n      }\n    }\n    oldTicks.forEachValue(function (oldTick: TickView<D>): void {\n      if (!oldTick.preserved) {\n        oldTick.fadeOut(timing);\n      }\n    }, this);\n  }\n\n  protected createTickView(tickValue: D): TickView<D> | null {\n    const tickView = TickView.from(tickValue, this.orientation);\n    if (tickView !== null) {\n      const tickLabel = this.createTickLabel(tickValue, tickView);\n      if (tickLabel !== null) {\n        tickView.label(tickLabel);\n        tickView.preserve(false);\n      }\n    }\n    return tickView;\n  }\n\n  protected createTickLabel(tickValue: D, tickView: TickView<D>): GraphicsView | string | null {\n    let tickLabel: GraphicsView | string | null = null;\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n && (tickLabel === void 0 || tickLabel === null); i += 1) {\n      const observer = observers[i]!;\n      if (observer.createTickLabel !== void 0) {\n        tickLabel = observer.createTickLabel(tickValue, tickView, this);\n      }\n    }\n    if (tickLabel === void 0 || tickLabel === null) {\n      const tickGenerator = this.tickGenerator.value;\n      if (tickGenerator instanceof TickGenerator) {\n        tickLabel = tickGenerator.format(tickValue);\n      } else {\n        tickLabel = \"\" + tickValue;\n      }\n    }\n    if (typeof tickLabel === \"string\") {\n      tickLabel = this.formatTickLabel(tickLabel, tickView);\n    }\n    return tickLabel;\n  }\n\n  protected formatTickLabel(tickLabel: string, tickView: TickView<D>): string | null {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.formatTickLabel !== void 0) {\n        const label = observer.formatTickLabel(tickLabel, tickView, this);\n        if (label !== void 0) {\n          return label;\n        }\n      }\n    }\n    return tickLabel;\n  }\n\n  protected override onInsertChild(child: View, target: View | null): void {\n    super.onInsertChild(child, target);\n    if (child instanceof TickView && this.ticks.get(child.value) !== child) {\n      this.ticks.set(child.value, child);\n    }\n  }\n\n  protected override onRemoveChild(child: View): void {\n    super.onRemoveChild(child);\n    if (child instanceof TickView && this.ticks.get(child.value) === child) {\n      this.ticks.delete(child.value);\n    }\n  }\n\n  protected override needsDisplay(displayFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    if ((this.flags & View.NeedsLayout) === 0) {\n      displayFlags &= ~View.NeedsLayout;\n    }\n    return displayFlags;\n  }\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    this.scale.recohere(viewContext.updateTime);\n    this.updateTicks();\n  }\n\n  protected override displayChild(child: View, displayFlags: ViewFlags,\n                                  viewContext: ViewContextType<this>): void {\n    if ((displayFlags & View.NeedsLayout) !== 0 && child instanceof TickView) {\n      const scale = this.scale.value;\n      if (scale !== null) {\n        this.layoutTick(child, this.origin.getValue(), this.viewFrame, scale);\n      }\n    }\n    super.displayChild(child, displayFlags, viewContext);\n  }\n\n  protected abstract layoutTick(tick: TickView<D>, origin: R2Point, frame: R2Box,\n                                scale: ContinuousScale<D, number>): void;\n\n  protected override didRender(viewContext: ViewContextType<this>): void {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof PaintingRenderer) {\n      this.renderDomain(renderer.context, this.origin.getValue(), this.viewFrame);\n    }\n    super.didRender(viewContext);\n  }\n\n  protected abstract renderDomain(context: PaintingContext, origin: R2Point, frame: R2Box): void;\n\n  override init(init: AxisViewInit<D>): void {\n    super.init(init);\n    if (init.scale !== void 0) {\n      this.scale(init.scale);\n    }\n\n    const ticks = init.ticks;\n    if (ticks !== void 0) {\n      for (let i = 0, n = ticks.length; i < n; i += 1) {\n        this.appendChild(TickView.fromAny(ticks[i]!));\n      }\n    }\n    if (init.tickGenerator !== void 0) {\n      this.tickGenerator(init.tickGenerator);\n    }\n\n    if (init.borderColor !== void 0) {\n      this.borderColor(init.borderColor);\n    }\n    if (init.borderWidth !== void 0) {\n      this.borderWidth(init.borderWidth);\n    }\n    if (init.borderSerif !== void 0) {\n      this.borderSerif(init.borderSerif);\n    }\n\n    if (init.tickMarkSpacing !== void 0) {\n      this.tickMarkSpacing(init.tickMarkSpacing);\n    }\n    if (init.tickMarkColor !== void 0) {\n      this.tickMarkColor(init.tickMarkColor);\n    }\n    if (init.tickMarkWidth !== void 0) {\n      this.tickMarkWidth(init.tickMarkWidth);\n    }\n    if (init.tickMarkLength !== void 0) {\n      this.tickMarkLength(init.tickMarkLength);\n    }\n    if (init.tickLabelPadding !== void 0) {\n      this.tickLabelPadding(init.tickLabelPadding);\n    }\n    if (init.tickTransition !== void 0) {\n      this.tickTransition(init.tickTransition);\n    }\n\n    if (init.gridLineColor !== void 0) {\n      this.gridLineColor(init.gridLineColor);\n    }\n    if (init.gridLineWidth !== void 0) {\n      this.gridLineWidth(init.gridLineWidth);\n    }\n\n    if (init.font !== void 0) {\n      this.font(init.font);\n    }\n    if (init.textColor !== void 0) {\n      this.textColor(init.textColor);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ContinuousScale} from \"@swim/util\";\nimport {Affinity, Animator} from \"@swim/component\";\nimport {R2Point, R2Box} from \"@swim/math\";\nimport {View} from \"@swim/view\";\nimport type {PaintingContext} from \"@swim/graphics\";\nimport {ContinuousScaleAnimator} from \"../scaled/ContinuousScaleAnimator\";\nimport type {TickView} from \"../tick/TickView\";\nimport {AxisOrientation, AxisView} from \"./AxisView\";\n\n/** @public */\nexport class TopAxisView<X = unknown> extends AxisView<X> {\n  override get orientation(): AxisOrientation {\n    return \"top\";\n  }\n\n  @Animator({\n    extends: ContinuousScaleAnimator,\n    type: ContinuousScale,\n    inherits: \"xScale\",\n    value: null,\n    updateFlags: View.NeedsLayout,\n  })\n  override readonly scale!: ContinuousScaleAnimator<this, X, number>;\n\n  protected override layoutTick(tick: TickView<X>, origin: R2Point, frame: R2Box,\n                                scale: ContinuousScale<X, number>): void {\n    if (tick.anchor.hasAffinity(Affinity.Intrinsic)) {\n      const offset = scale(tick.value);\n      tick.setOffset(offset);\n      tick.anchor.setState(new R2Point(frame.xMin + offset, origin.y), Affinity.Intrinsic);\n    }\n  }\n\n  protected override renderDomain(context: PaintingContext, origin: R2Point, frame: R2Box): void {\n    const borderColor = this.borderColor.value;\n    const borderWidth = this.borderWidth.getValue();\n    if (borderColor !== null && borderWidth !== 0) {\n      const x0 = frame.xMin;\n      const x1 = frame.xMax;\n      const y = origin.y;\n      const dy = this.borderSerif.getValue();\n\n      // save\n      const contextLineWidth = context.lineWidth;\n      const contextStrokeStyle = context.strokeStyle;\n\n      context.beginPath();\n      context.lineWidth = borderWidth;\n      context.strokeStyle = borderColor.toString();\n      if (dy !== 0) {\n        context.moveTo(x0, y - dy);\n        context.lineTo(x0, y);\n        context.lineTo(x1, y);\n        context.lineTo(x1, y - dy);\n      } else {\n        context.moveTo(x0, y);\n        context.lineTo(x1, y);\n      }\n      context.stroke();\n\n      // restore\n      context.lineWidth = contextLineWidth;\n      context.strokeStyle = contextStrokeStyle;\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ContinuousScale} from \"@swim/util\";\nimport {Affinity, Animator} from \"@swim/component\";\nimport {R2Point, R2Box} from \"@swim/math\";\nimport {View} from \"@swim/view\";\nimport type {PaintingContext} from \"@swim/graphics\";\nimport {ContinuousScaleAnimator} from \"../scaled/ContinuousScaleAnimator\";\nimport type {TickView} from \"../tick/TickView\";\nimport {AxisOrientation, AxisView} from \"./AxisView\";\n\n/** @public */\nexport class RightAxisView<Y = unknown> extends AxisView<Y> {\n  override get orientation(): AxisOrientation {\n    return \"right\";\n  }\n\n  @Animator({\n    extends: ContinuousScaleAnimator,\n    type: ContinuousScale,\n    inherits: \"yScale\",\n    value: null,\n    updateFlags: View.NeedsLayout,\n  })\n  override readonly scale!: ContinuousScaleAnimator<this, Y, number>;\n\n  protected override layoutTick(tick: TickView<Y>, origin: R2Point, frame: R2Box,\n                                scale: ContinuousScale<Y, number>): void {\n    if (tick.anchor.hasAffinity(Affinity.Intrinsic)) {\n      const offset = scale(tick.value);\n      tick.setOffset(offset);\n      tick.anchor.setState(new R2Point(origin.x, frame.yMin + offset), Affinity.Intrinsic);\n    }\n  }\n\n  protected override renderDomain(context: PaintingContext, origin: R2Point, frame: R2Box): void {\n    const borderColor = this.borderColor.value;\n    const borderWidth = this.borderWidth.getValue();\n    if (borderColor !== null && borderWidth !== 0) {\n      const x = origin.x;\n      const dx = this.borderSerif.getValue();\n      const y0 = frame.yMin;\n      const y1 = frame.yMax;\n\n      // save\n      const contextLineWidth = context.lineWidth;\n      const contextStrokeStyle = context.strokeStyle;\n\n      context.beginPath();\n      context.lineWidth = borderWidth;\n      context.strokeStyle = borderColor.toString();\n      if (dx !== 0) {\n        context.moveTo(x + dx, y0);\n        context.lineTo(x,      y0);\n        context.lineTo(x,      y1);\n        context.lineTo(x + dx, y1);\n      } else {\n        context.moveTo(x, y0);\n        context.lineTo(x, y1);\n      }\n      context.stroke();\n\n      // restore\n      context.lineWidth = contextLineWidth;\n      context.strokeStyle = contextStrokeStyle;\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ContinuousScale} from \"@swim/util\";\nimport {Affinity, Animator} from \"@swim/component\";\nimport {R2Point, R2Box} from \"@swim/math\";\nimport {View} from \"@swim/view\";\nimport type {PaintingContext} from \"@swim/graphics\";\nimport {ContinuousScaleAnimator} from \"../scaled/ContinuousScaleAnimator\";\nimport type {TickView} from \"../tick/TickView\";\nimport {AxisOrientation, AxisView} from \"./AxisView\";\n\n/** @public */\nexport class BottomAxisView<X = unknown> extends AxisView<X> {\n  override get orientation(): AxisOrientation {\n    return \"bottom\";\n  }\n\n  @Animator({\n    extends: ContinuousScaleAnimator,\n    type: ContinuousScale,\n    inherits: \"xScale\",\n    value: null,\n    updateFlags: View.NeedsLayout,\n  })\n  override readonly scale!: ContinuousScaleAnimator<this, X, number>;\n\n  protected override layoutTick(tick: TickView<X>, origin: R2Point, frame: R2Box,\n                                scale: ContinuousScale<X, number>): void {\n    if (tick.anchor.hasAffinity(Affinity.Intrinsic)) {\n      const offset = scale(tick.value);\n      tick.setOffset(offset);\n      tick.anchor.setState(new R2Point(frame.xMin + offset, origin.y), Affinity.Intrinsic);\n    }\n  }\n\n  protected override renderDomain(context: PaintingContext, origin: R2Point, frame: R2Box): void {\n    const borderColor = this.borderColor.value;\n    const borderWidth = this.borderWidth.getValue();\n    if (borderColor !== null && borderWidth !== 0) {\n      const x0 = frame.xMin;\n      const x1 = frame.xMax;\n      const y = origin.y;\n      const dy = this.borderSerif.getValue();\n\n      // save\n      const contextLineWidth = context.lineWidth;\n      const contextStrokeStyle = context.strokeStyle;\n\n      context.beginPath();\n      context.lineWidth = borderWidth;\n      context.strokeStyle = borderColor.toString();\n      if (dy !== 0) {\n        context.moveTo(x0, y + dy);\n        context.lineTo(x0, y);\n        context.lineTo(x1, y);\n        context.lineTo(x1, y + dy);\n      } else {\n        context.moveTo(x0, y);\n        context.lineTo(x1, y);\n      }\n      context.stroke();\n\n      // restore\n      context.lineWidth = contextLineWidth;\n      context.strokeStyle = contextStrokeStyle;\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ContinuousScale} from \"@swim/util\";\nimport {Affinity, Animator} from \"@swim/component\";\nimport {R2Point, R2Box} from \"@swim/math\";\nimport {View} from \"@swim/view\";\nimport type {PaintingContext} from \"@swim/graphics\";\nimport {ContinuousScaleAnimator} from \"../scaled/ContinuousScaleAnimator\";\nimport type {TickView} from \"../tick/TickView\";\nimport {AxisOrientation, AxisView} from \"./AxisView\";\n\n/** @public */\nexport class LeftAxisView<Y = unknown> extends AxisView<Y> {\n  override get orientation(): AxisOrientation {\n    return \"left\";\n  }\n\n  @Animator({\n    extends: ContinuousScaleAnimator,\n    type: ContinuousScale,\n    inherits: \"yScale\",\n    value: null,\n    updateFlags: View.NeedsLayout,\n  })\n  override readonly scale!: ContinuousScaleAnimator<this, Y, number>;\n\n  protected override layoutTick(tick: TickView<Y>, origin: R2Point, frame: R2Box,\n                                scale: ContinuousScale<Y, number>): void {\n    if (tick.anchor.hasAffinity(Affinity.Intrinsic)) {\n      const offset = scale(tick.value);\n      tick.setOffset(offset);\n      tick.anchor.setState(new R2Point(origin.x, frame.yMin + offset), Affinity.Intrinsic);\n    }\n  }\n\n  protected override renderDomain(context: PaintingContext, origin: R2Point, frame: R2Box): void {\n    const borderColor = this.borderColor.value;\n    const borderWidth = this.borderWidth.getValue();\n    if (borderColor !== null && borderWidth !== 0) {\n      const x = origin.x;\n      const dx = this.borderSerif.getValue();\n      const y0 = frame.yMin;\n      const y1 = frame.yMax;\n\n      // save\n      const contextLineWidth = context.lineWidth;\n      const contextStrokeStyle = context.strokeStyle;\n\n      context.beginPath();\n      context.lineWidth = borderWidth;\n      context.strokeStyle = borderColor.toString();\n      if (dx !== 0) {\n        context.moveTo(x - dx, y0);\n        context.lineTo(x,      y0);\n        context.lineTo(x,      y1);\n        context.lineTo(x - dx, y1);\n      } else {\n        context.moveTo(x, y0);\n        context.lineTo(x, y1);\n      }\n      context.stroke();\n\n      // restore\n      context.lineWidth = contextLineWidth;\n      context.strokeStyle = contextStrokeStyle;\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Trait} from \"@swim/model\";\nimport type {AxisTraitObserver} from \"./AxisTraitObserver\";\n\n/** @public */\nexport abstract class AxisTrait<D = unknown> extends Trait {\n  override readonly observerType?: Class<AxisTraitObserver<D>>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {AxisTrait} from \"./AxisTrait\";\nimport type {AxisTraitObserver} from \"./AxisTraitObserver\";\n\n/** @public */\nexport abstract class TopAxisTrait<X = unknown> extends AxisTrait<X> {\n  override readonly observerType?: Class<AxisTraitObserver<X, TopAxisTrait<X>>>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {AxisTrait} from \"./AxisTrait\";\nimport type {AxisTraitObserver} from \"./AxisTraitObserver\";\n\n/** @public */\nexport abstract class RightAxisTrait<Y = unknown> extends AxisTrait<Y> {\n  override readonly observerType?: Class<AxisTraitObserver<Y, RightAxisTrait<Y>>>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {AxisTrait} from \"./AxisTrait\";\nimport type {AxisTraitObserver} from \"./AxisTraitObserver\";\n\n/** @public */\nexport abstract class BottomAxisTrait<X = unknown> extends AxisTrait<X> {\n  override readonly observerType?: Class<AxisTraitObserver<X, BottomAxisTrait<X>>>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {AxisTrait} from \"./AxisTrait\";\nimport type {AxisTraitObserver} from \"./AxisTraitObserver\";\n\n/** @public */\nexport abstract class LeftAxisTrait<Y = unknown> extends AxisTrait<Y> {\n  override readonly observerType?: Class<AxisTraitObserver<Y, LeftAxisTrait<Y>>>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {Controller, TraitViewRef} from \"@swim/controller\";\nimport {AxisView} from \"./AxisView\";\nimport {AxisTrait} from \"./AxisTrait\";\nimport type {AxisControllerObserver} from \"./AxisControllerObserver\";\n\n/** @public */\nexport abstract class AxisController<D = unknown> extends Controller {\n  override readonly observerType?: Class<AxisControllerObserver<D>>;\n\n  @TraitViewRef<AxisController<D>, AxisTrait<D>, AxisView<D>>({\n    traitType: AxisTrait,\n    willAttachTrait(axisTrait: AxisTrait<D>): void {\n      this.owner.callObservers(\"controllerWillAttachAxisTrait\", axisTrait, this.owner);\n    },\n    didDetachTrait(axisTrait: AxisTrait<D>): void {\n      this.owner.callObservers(\"controllerDidDetachAxisTrait\", axisTrait, this.owner);\n    },\n    viewType: AxisView,\n    willAttachView(axisView: AxisView<D>): void {\n      this.owner.callObservers(\"controllerWillAttachAxisView\", axisView, this.owner);\n    },\n    didDetachView(axisView: AxisView<D>): void {\n      this.owner.callObservers(\"controllerDidDetachAxisView\", axisView, this.owner);\n    },\n  })\n  readonly axis!: TraitViewRef<this, AxisTrait<D>, AxisView<D>>;\n  static readonly axis: MemberFastenerClass<AxisController, \"axis\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {TopAxisTrait} from \"./TopAxisTrait\";\nimport {TopAxisView} from \"./TopAxisView\";\nimport {AxisController} from \"./AxisController\";\n\n/** @public */\nexport class TopAxisController<X = unknown> extends AxisController<X> {\n  @TraitViewRef<TopAxisController<X>, TopAxisTrait<X>, TopAxisView<X>>({\n    extends: true,\n    traitType: TopAxisTrait,\n    viewType: TopAxisView,\n  })\n  override readonly axis!: TraitViewRef<this, TopAxisTrait<X>, TopAxisView<X>>;\n  static override readonly axis: MemberFastenerClass<TopAxisController, \"axis\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {RightAxisTrait} from \"./RightAxisTrait\";\nimport {RightAxisView} from \"./RightAxisView\";\nimport {AxisController} from \"./AxisController\";\n\n/** @public */\nexport class RightAxisController<Y = unknown> extends AxisController<Y> {\n  @TraitViewRef<RightAxisController<Y>, RightAxisTrait<Y>, RightAxisView<Y>>({\n    extends: true,\n    traitType: RightAxisTrait,\n    viewType: RightAxisView,\n  })\n  override readonly axis!: TraitViewRef<this, RightAxisTrait<Y>, RightAxisView<Y>>;\n  static override readonly axis: MemberFastenerClass<RightAxisController, \"axis\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {BottomAxisTrait} from \"./BottomAxisTrait\";\nimport {BottomAxisView} from \"./BottomAxisView\";\nimport {AxisController} from \"./AxisController\";\n\n/** @public */\nexport class BottomAxisController<X = unknown> extends AxisController<X> {\n  @TraitViewRef<BottomAxisController<X>, BottomAxisTrait<X>, BottomAxisView<X>>({\n    extends: true,\n    traitType: BottomAxisTrait,\n    viewType: BottomAxisView,\n  })\n  override readonly axis!: TraitViewRef<this, BottomAxisTrait<X>, BottomAxisView<X>>;\n  static override readonly axis: MemberFastenerClass<BottomAxisController, \"axis\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {LeftAxisTrait} from \"./LeftAxisTrait\";\nimport {LeftAxisView} from \"./LeftAxisView\";\nimport {AxisController} from \"./AxisController\";\n\n/** @public */\nexport class LeftAxisController<Y = unknown> extends AxisController<Y> {\n  @TraitViewRef<LeftAxisController<Y>, LeftAxisTrait<Y>, LeftAxisView<Y>>({\n    extends: true,\n    traitType: LeftAxisTrait,\n    viewType: LeftAxisView,\n  })\n  override readonly axis!: TraitViewRef<this, LeftAxisTrait<Y>, LeftAxisView<Y>>;\n  static override readonly axis: MemberFastenerClass<LeftAxisController, \"axis\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, Initable, Range, AnyTiming, Timing, Easing, LinearRange} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Property} from \"@swim/component\";\nimport {AnyLength, Length, R2Point, R2Box} from \"@swim/math\";\nimport {AnyFont, Font, AnyColor, Color} from \"@swim/style\";\nimport {Look, ThemeAnimator} from \"@swim/theme\";\nimport {View, ViewRef} from \"@swim/view\";\nimport type {ChartViewObserver} from \"./ChartViewObserver\";\nimport {ScaledViewInit, ScaledView} from \"../scaled/ScaledView\";\nimport {AnyGraphView, GraphView} from \"../graph/GraphView\";\nimport type {AnyAxisView, AxisViewInit, AxisView} from \"../axis/AxisView\";\nimport {TopAxisView} from \"../axis/TopAxisView\";\nimport {RightAxisView} from \"../axis/RightAxisView\";\nimport {BottomAxisView} from \"../axis/BottomAxisView\";\nimport {LeftAxisView} from \"../axis/LeftAxisView\";\n\n/** @public */\nexport type AnyChartView<X = unknown, Y = unknown> = ChartView<X, Y> | ChartViewInit<X, Y>;\n\n/** @public */\nexport interface ChartViewInit<X = unknown, Y = unknown> extends ScaledViewInit<X, Y> {\n  graph?: AnyGraphView<X, Y>;\n\n  topAxis?: AnyAxisView<X> | true;\n  rightAxis?: AnyAxisView<Y> | true;\n  bottomAxis?: AnyAxisView<X> | true;\n  leftAxis?: AnyAxisView<Y> | true;\n\n  gutterTop?: AnyLength;\n  gutterRight?: AnyLength;\n  gutterBottom?: AnyLength;\n  gutterLeft?: AnyLength;\n\n  borderColor?: AnyColor;\n  borderWidth?: number;\n  borderSerif?: number;\n\n  tickMarkColor?: AnyColor;\n  tickMarkWidth?: number;\n  tickMarkLength?: number;\n  tickLabelPadding?: number;\n  tickTransition?: AnyTiming;\n\n  gridLineColor?: AnyColor;\n  gridLineWidth?: number;\n\n  font?: AnyFont;\n  textColor?: AnyColor;\n}\n\n/** @public */\nexport class ChartView<X = unknown, Y = unknown> extends ScaledView<X, Y> {\n  override readonly observerType?: Class<ChartViewObserver<X, Y>>;\n\n  @ThemeAnimator({type: Length, value: Length.px(20)})\n  readonly gutterTop!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, value: Length.px(40)})\n  readonly gutterRight!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, value: Length.px(20)})\n  readonly gutterBottom!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, value: Length.px(40)})\n  readonly gutterLeft!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Color, value: null, look: Look.neutralColor})\n  readonly borderColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Number, value: 1})\n  readonly borderWidth!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Number, value: 6})\n  readonly borderSerif!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Color, value: null, look: Look.neutralColor})\n  readonly tickMarkColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Number, value: 1})\n  readonly tickMarkWidth!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Number, value: 6})\n  readonly tickMarkLength!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Number, value: 2})\n  readonly tickLabelPadding!: ThemeAnimator<this, number>;\n\n  @Property({\n    type: Timing,\n    initValue(): Timing {\n      return Easing.cubicOut.withDuration(250);\n    },\n  })\n  readonly tickTransition!: Property<this, Timing, AnyTiming>;\n\n  @ThemeAnimator({type: Color, value: null, look: Look.subduedColor})\n  readonly gridLineColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Number, value: 0})\n  readonly gridLineWidth!: ThemeAnimator<this, number>;\n\n  @ThemeAnimator({type: Font, value: null, inherits: true})\n  readonly font!: ThemeAnimator<this, Font | null, AnyFont | null>;\n\n  @ThemeAnimator({type: Color, value: null, look: Look.mutedColor})\n  readonly textColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  override xRange(): Range<number> | null {\n    const frame = this.viewFrame;\n    const gutterLeft = this.gutterLeft.getValue().pxValue(frame.width);\n    const gutterRight = this.gutterRight.getValue().pxValue(frame.width);\n    const xRangePadding = this.xRangePadding.value;\n    const xRangeMin = xRangePadding[0];\n    const xRangeMax = this.viewFrame.width - gutterRight - gutterLeft - xRangePadding[1];\n    return LinearRange(xRangeMin, xRangeMax);\n  }\n\n  override yRange(): Range<number> | null {\n    const frame = this.viewFrame;\n    const gutterTop = this.gutterTop.getValue().pxValue(frame.height);\n    const gutterBottom = this.gutterBottom.getValue().pxValue(frame.height);\n    const yRangePadding = this.yRangePadding.value;\n    const yRangeMin = yRangePadding[0];\n    const yRangeMax = this.viewFrame.height - gutterBottom - gutterTop - yRangePadding[1];\n    return LinearRange(yRangeMax, yRangeMin);\n  }\n\n  @ViewRef<ChartView<X, Y>, GraphView<X, Y>>({\n    key: true,\n    type: GraphView,\n    binds: true,\n    willAttachView(graphView: GraphView<X, Y>): void {\n      this.owner.callObservers(\"viewWillAttachGraph\", graphView, this.owner);\n    },\n    didDetachView(graphView: GraphView<X, Y>): void {\n      this.owner.callObservers(\"viewDidDetachGraph\", graphView, this.owner);\n    },\n    detectView(view: View): GraphView<X, Y> | null {\n      return view instanceof GraphView ? view : null;\n    },\n  })\n  readonly graph!: ViewRef<this, GraphView<X, Y>>;\n  static readonly graph: MemberFastenerClass<ChartView, \"graph\">;\n\n  @ViewRef<ChartView<X, Y>, AxisView<X> & Initable<AxisViewInit<X> | true>>({\n    key: true,\n    type: TopAxisView,\n    binds: true,\n    willAttachView(topAxisView: AxisView<X>): void {\n      this.owner.callObservers(\"viewWillAttachTopAxis\", topAxisView, this.owner);\n    },\n    didDetachView(topAxisView: AxisView<X>): void {\n      this.owner.callObservers(\"viewDidDetachTopAxis\", topAxisView, this.owner);\n    },\n    detectView(view: View): AxisView<X> | null {\n      return view instanceof TopAxisView ? view : null;\n    },\n  })\n  readonly topAxis!: ViewRef<this, AxisView<X> & Initable<AxisViewInit<X> | true>>;\n  static readonly topAxis: MemberFastenerClass<ChartView, \"topAxis\">;\n\n  @ViewRef<ChartView<X, Y>, AxisView<Y> & Initable<AxisViewInit<Y> | true>>({\n    key: true,\n    type: RightAxisView,\n    binds: true,\n    willAttachView(rightAxisView: AxisView<Y>): void {\n      this.owner.callObservers(\"viewWillAttachRightAxis\", rightAxisView, this.owner);\n    },\n    didDetachView(rightAxisView: AxisView<Y>): void {\n      this.owner.callObservers(\"viewDidDetachRightAxis\", rightAxisView, this.owner);\n    },\n    detectView(view: View): AxisView<Y> | null {\n      return view instanceof RightAxisView ? view : null;\n    },\n  })\n  readonly rightAxis!: ViewRef<this, AxisView<Y> & Initable<AxisViewInit<Y> | true>>;\n  static readonly rightAxis: MemberFastenerClass<ChartView, \"rightAxis\">;\n\n  @ViewRef<ChartView<X, Y>, AxisView<X> & Initable<AxisViewInit<X> | true>>({\n    key: true,\n    type: BottomAxisView,\n    binds: true,\n    willAttachView(bottomAxisView: AxisView<X>): void {\n      this.owner.callObservers(\"viewWillAttachBottomAxis\", bottomAxisView, this.owner);\n    },\n    didDetachView(bottomAxisView: AxisView<X>): void {\n      this.owner.callObservers(\"viewDidDetachBottomAxis\", bottomAxisView, this.owner);\n    },\n    detectView(view: View): AxisView<X> | null {\n      return view instanceof BottomAxisView ? view : null;\n    },\n  })\n  readonly bottomAxis!: ViewRef<this, AxisView<X> & Initable<AxisViewInit<X> | true>>;\n  static readonly bottomAxis: MemberFastenerClass<ChartView, \"bottomAxis\">;\n\n  @ViewRef<ChartView<X, Y>, AxisView<Y> & Initable<AxisViewInit<Y> | true>>({\n    key: true,\n    type: LeftAxisView,\n    binds: true,\n    willAttachView(leftAxisView: AxisView<Y>): void {\n      this.owner.callObservers(\"viewWillAttachLeftAxis\", leftAxisView, this.owner);\n    },\n    didDetachView(leftAxisView: AxisView<Y>): void {\n      this.owner.callObservers(\"viewDidDetachLeftAxis\", leftAxisView, this.owner);\n    },\n    detectView(view: View): AxisView<Y> | null {\n      return view instanceof LeftAxisView ? view : null;\n    },\n  })\n  readonly leftAxis!: ViewRef<this, AxisView<Y> & Initable<AxisViewInit<Y> | true>>;\n  static readonly leftAxis: MemberFastenerClass<ChartView, \"leftAxis\">;\n\n  protected override updateScales(): void {\n    this.layoutChart(this.viewFrame);\n    super.updateScales();\n  }\n\n  protected layoutChart(frame: R2Box): void {\n    const gutterTop = this.gutterTop.getValue().pxValue(frame.height);\n    const gutterRight = this.gutterRight.getValue().pxValue(frame.width);\n    const gutterBottom = this.gutterBottom.getValue().pxValue(frame.height);\n    const gutterLeft = this.gutterLeft.getValue().pxValue(frame.width);\n\n    const graphTop = frame.yMin + gutterTop;\n    const graphRight = frame.xMax - gutterRight;\n    const graphBottom = frame.yMax - gutterBottom;\n    const graphLeft = frame.xMin + gutterLeft;\n\n    const topAxisView = this.topAxis.view;\n    if (topAxisView !== null) {\n      topAxisView.setViewFrame(new R2Box(graphLeft, frame.yMin, graphRight, graphBottom));\n      topAxisView.origin.setState(new R2Point(graphLeft, graphTop), Affinity.Intrinsic);\n    }\n    const rightAxisView = this.rightAxis.view;\n    if (rightAxisView !== null) {\n      rightAxisView.setViewFrame(new R2Box(graphLeft, graphTop, frame.xMax, graphBottom));\n      rightAxisView.origin.setState(new R2Point(Math.max(graphLeft, graphRight), graphBottom), Affinity.Intrinsic);\n    }\n    const bottomAxisView = this.bottomAxis.view;\n    if (bottomAxisView !== null) {\n      bottomAxisView.setViewFrame(new R2Box(graphLeft, graphTop, graphRight, frame.yMax));\n      bottomAxisView.origin.setState(new R2Point(graphLeft, Math.max(graphTop, graphBottom)), Affinity.Intrinsic);\n    }\n    const leftAxisView = this.leftAxis.view;\n    if (leftAxisView !== null) {\n      leftAxisView.setViewFrame(new R2Box(frame.xMin, graphTop, graphRight, graphBottom));\n      leftAxisView.origin.setState(new R2Point(graphLeft, graphBottom), Affinity.Intrinsic);\n    }\n\n    const graphView = this.graph.view;\n    if (graphView !== null) {\n      graphView.setViewFrame(new R2Box(graphLeft, graphTop, graphRight, graphBottom));\n    }\n  }\n\n  override init(init: ChartViewInit<X, Y>): void {\n    super.init(init);\n     if (init.graph !== void 0) {\n      this.graph(init.graph);\n    }\n\n    if (init.topAxis !== void 0) {\n      this.topAxis(init.topAxis);\n    }\n    if (init.rightAxis !== void 0) {\n      this.rightAxis(init.rightAxis);\n    }\n    if (init.bottomAxis !== void 0) {\n      this.bottomAxis(init.bottomAxis);\n    }\n    if (init.leftAxis !== void 0) {\n      this.leftAxis(init.leftAxis);\n    }\n\n    if (init.gutterTop !== void 0) {\n      this.gutterTop(init.gutterTop);\n    }\n    if (init.gutterRight !== void 0) {\n      this.gutterRight(init.gutterRight);\n    }\n    if (init.gutterBottom !== void 0) {\n      this.gutterBottom(init.gutterBottom);\n    }\n    if (init.gutterLeft !== void 0) {\n      this.gutterLeft(init.gutterLeft);\n    }\n\n    if (init.borderColor !== void 0) {\n      this.borderColor(init.borderColor);\n    }\n    if (init.borderWidth !== void 0) {\n      this.borderWidth(init.borderWidth);\n    }\n    if (init.borderSerif !== void 0) {\n      this.borderSerif(init.borderSerif);\n    }\n\n    if (init.tickMarkColor !== void 0) {\n      this.tickMarkColor(init.tickMarkColor);\n    }\n    if (init.tickMarkWidth !== void 0) {\n      this.tickMarkWidth(init.tickMarkWidth);\n    }\n    if (init.tickMarkLength !== void 0) {\n      this.tickMarkLength(init.tickMarkLength);\n    }\n    if (init.tickLabelPadding !== void 0) {\n      this.tickLabelPadding(init.tickLabelPadding);\n    }\n    if (init.tickTransition !== void 0) {\n      this.tickTransition(init.tickTransition);\n    }\n\n    if (init.gridLineColor !== void 0) {\n      this.gridLineColor(init.gridLineColor);\n    }\n    if (init.gridLineWidth !== void 0) {\n      this.gridLineWidth(init.gridLineWidth);\n    }\n\n    if (init.font !== void 0) {\n      this.font(init.font);\n    }\n    if (init.textColor !== void 0) {\n      this.textColor(init.textColor);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {Model, Trait, TraitRef} from \"@swim/model\";\nimport {GraphTrait} from \"../graph/GraphTrait\";\nimport type {AxisTrait} from \"../axis/AxisTrait\";\nimport {TopAxisTrait} from \"../axis/TopAxisTrait\";\nimport {RightAxisTrait} from \"../axis/RightAxisTrait\";\nimport {BottomAxisTrait} from \"../axis/BottomAxisTrait\";\nimport {LeftAxisTrait} from \"../axis/LeftAxisTrait\";\nimport type {ChartTraitObserver} from \"./ChartTraitObserver\";\n\n/** @public */\nexport class ChartTrait<X = unknown, Y = unknown> extends Trait {\n  override readonly observerType?: Class<ChartTraitObserver<X, Y>>;\n\n  @TraitRef<ChartTrait<X, Y>, GraphTrait<X, Y>>({\n    type: GraphTrait,\n    binds: true,\n    willAttachTrait(graphTrait: GraphTrait<X, Y>): void {\n      this.owner.callObservers(\"traitWillAttachGraph\", graphTrait, this.owner);\n    },\n    didAttachTrait(graphTrait: GraphTrait<X, Y>): void {\n      if (this.owner.consuming) {\n        graphTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(graphTrait: GraphTrait<X, Y>): void {\n      if (this.owner.consuming) {\n        graphTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(graphTrait: GraphTrait<X, Y>): void {\n      this.owner.callObservers(\"traitDidDetachGraph\", graphTrait, this.owner);\n    },\n    detectModel(model: Model): GraphTrait<X, Y> | null {\n      return model.getTrait(GraphTrait) as GraphTrait<X, Y>;\n    },\n    detectTrait(trait: Trait): GraphTrait<X, Y> | null {\n      return trait instanceof GraphTrait ? trait : null;\n    },\n  })\n  readonly graph!: TraitRef<this, GraphTrait<X, Y>>;\n  static readonly graph: MemberFastenerClass<ChartTrait, \"graph\">;\n\n  @TraitRef<ChartTrait<X, Y>, AxisTrait<X>>({\n    type: TopAxisTrait,\n    binds: true,\n    willAttachTrait(topAxisTrait: AxisTrait<X>): void {\n      this.owner.callObservers(\"traitWillAttachTopAxis\", topAxisTrait, this.owner);\n    },\n    didAttachTrait(topAxisTrait: AxisTrait<X>): void {\n      if (this.owner.consuming) {\n        topAxisTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(topAxisTrait: AxisTrait<X>): void {\n      if (this.owner.consuming) {\n        topAxisTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(topAxisTrait: AxisTrait<X>): void {\n      this.owner.callObservers(\"traitDidDetachTopAxis\", topAxisTrait, this.owner);\n    },\n    detectModel(model: Model): AxisTrait<X> | null {\n      return model.getTrait(TopAxisTrait);\n    },\n    detectTrait(trait: Trait): AxisTrait<X> | null {\n      return trait instanceof TopAxisTrait ? trait : null;\n    },\n  })\n  readonly topAxis!: TraitRef<this, AxisTrait<X>>;\n  static readonly topAxis: MemberFastenerClass<ChartTrait, \"topAxis\">;\n\n  @TraitRef<ChartTrait<X, Y>, AxisTrait<Y>>({\n    type: RightAxisTrait,\n    binds: true,\n    willAttachTrait(rightAxisTrait: AxisTrait<Y>): void {\n      this.owner.callObservers(\"traitWillAttachRightAxis\", rightAxisTrait, this.owner);\n    },\n    didAttachTrait(rightAxisTrait: AxisTrait<Y>): void {\n      if (this.owner.consuming) {\n        rightAxisTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(rightAxisTrait: AxisTrait<Y>): void {\n      if (this.owner.consuming) {\n        rightAxisTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(rightAxisTrait: AxisTrait<Y>): void {\n      this.owner.callObservers(\"traitDidDetachRightAxis\", rightAxisTrait, this.owner);\n    },\n    detectModel(model: Model): AxisTrait<Y> | null {\n      return model.getTrait(RightAxisTrait);\n    },\n    detectTrait(trait: Trait): AxisTrait<Y> | null {\n      return trait instanceof RightAxisTrait ? trait : null;\n    },\n  })\n  readonly rightAxis!: TraitRef<this, AxisTrait<Y>>;\n  static readonly rightAxis: MemberFastenerClass<ChartTrait, \"rightAxis\">;\n\n  @TraitRef<ChartTrait<X, Y>, AxisTrait<X>>({\n    type: BottomAxisTrait,\n    binds: true,\n    willAttachTrait(bottomAxisTrait: AxisTrait<X>): void {\n      this.owner.callObservers(\"traitWillAttachBottomAxis\", bottomAxisTrait, this.owner);\n    },\n    didAttachTrait(bottomAxisTrait: AxisTrait<X>): void {\n      if (this.owner.consuming) {\n        bottomAxisTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(bottomAxisTrait: AxisTrait<X>): void {\n      if (this.owner.consuming) {\n        bottomAxisTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(bottomAxisTrait: AxisTrait<X>): void {\n      this.owner.callObservers(\"traitDidDetachBottomAxis\", bottomAxisTrait, this.owner);\n    },\n    detectModel(model: Model): AxisTrait<X> | null {\n      return model.getTrait(BottomAxisTrait);\n    },\n    detectTrait(trait: Trait): AxisTrait<X> | null {\n      return trait instanceof BottomAxisTrait ? trait : null;\n    },\n  })\n  readonly bottomAxis!: TraitRef<this, AxisTrait<X>>;\n  static readonly bottomAxis: MemberFastenerClass<ChartTrait, \"bottomAxis\">;\n\n  @TraitRef<ChartTrait<X, Y>, AxisTrait<Y>>({\n    type: LeftAxisTrait,\n    binds: true,\n    willAttachTrait(leftAxisTrait: AxisTrait<Y>): void {\n      this.owner.callObservers(\"traitWillAttachLeftAxis\", leftAxisTrait, this.owner);\n    },\n    didAttachTrait(leftAxisTrait: AxisTrait<Y>): void {\n      if (this.owner.consuming) {\n        leftAxisTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(leftAxisTrait: AxisTrait<Y>): void {\n      if (this.owner.consuming) {\n        leftAxisTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(leftAxisTrait: AxisTrait<Y>): void {\n      this.owner.callObservers(\"traitDidDetachLeftAxis\", leftAxisTrait, this.owner);\n    },\n    detectModel(model: Model): AxisTrait<Y> | null {\n      return model.getTrait(LeftAxisTrait);\n    },\n    detectTrait(trait: Trait): AxisTrait<Y> | null {\n      return trait instanceof LeftAxisTrait ? trait : null;\n    },\n  })\n  readonly leftAxis!: TraitRef<this, AxisTrait<Y>>;\n  static readonly leftAxis: MemberFastenerClass<ChartTrait, \"leftAxis\">;\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    const graphTrait = this.graph.trait;\n    if (graphTrait !== null) {\n      graphTrait.consume(this);\n    }\n    const topAxisTrair = this.topAxis.trait;\n    if (topAxisTrair !== null) {\n      topAxisTrair.consume(this);\n    }\n    const rightAxisTrait = this.rightAxis.trait;\n    if (rightAxisTrait !== null) {\n      rightAxisTrait.consume(this);\n    }\n    const bottomAxisTrait = this.bottomAxis.trait;\n    if (bottomAxisTrait !== null) {\n      bottomAxisTrait.consume(this);\n    }\n    const leftAxisTrait = this.leftAxis.trait;\n    if (leftAxisTrait !== null) {\n      leftAxisTrait.consume(this);\n    }\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    const graphTrait = this.graph.trait;\n    if (graphTrait !== null) {\n      graphTrait.unconsume(this);\n    }\n    const topAxisTrair = this.topAxis.trait;\n    if (topAxisTrair !== null) {\n      topAxisTrair.unconsume(this);\n    }\n    const rightAxisTrait = this.rightAxis.trait;\n    if (rightAxisTrait !== null) {\n      rightAxisTrait.unconsume(this);\n    }\n    const bottomAxisTrait = this.bottomAxis.trait;\n    if (bottomAxisTrait !== null) {\n      bottomAxisTrait.unconsume(this);\n    }\n    const leftAxisTrait = this.leftAxis.trait;\n    if (leftAxisTrait !== null) {\n      leftAxisTrait.unconsume(this);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport type {View} from \"@swim/view\";\nimport {Controller, TraitViewRef, TraitViewControllerRef} from \"@swim/controller\";\nimport type {GraphView} from \"../graph/GraphView\";\nimport type {GraphTrait} from \"../graph/GraphTrait\";\nimport {GraphController} from \"../graph/GraphController\";\nimport type {AxisView} from \"../axis/AxisView\";\nimport type {AxisTrait} from \"../axis/AxisTrait\";\nimport type {AxisController} from \"../axis/AxisController\";\nimport {TopAxisController} from \"../axis/TopAxisController\";\nimport {RightAxisController} from \"../axis/RightAxisController\";\nimport {BottomAxisController} from \"../axis/BottomAxisController\";\nimport {LeftAxisController} from \"../axis/LeftAxisController\";\nimport {ChartView} from \"./ChartView\";\nimport {ChartTrait} from \"./ChartTrait\";\nimport type {ChartControllerObserver} from \"./ChartControllerObserver\";\n\n/** @public */\nexport interface ChartControllerAxisExt<D = unknown> {\n  attachAxisTrait(axisTrait: AxisTrait<D>): void;\n  detachAxisTrait(axisTrait: AxisTrait<D>): void;\n  attachAxisView(axisView: AxisView<D>): void;\n  detachAxisView(axisView: AxisView<D>): void;\n}\n\n/** @public */\nexport class ChartController<X = unknown, Y = unknown> extends GraphController<X, Y> {\n  override readonly observerType?: Class<ChartControllerObserver<X, Y>>;\n\n  @TraitViewRef<ChartController<X, Y>, ChartTrait<X, Y>, ChartView<X, Y>>({\n    traitType: ChartTrait,\n    observesTrait: true,\n    initTrait(chartTrait: ChartTrait<X, Y>): void {\n      this.owner.graph.setTrait(chartTrait.graph.trait);\n      const topAxisTrait = chartTrait.topAxis.trait;\n      if (topAxisTrait !== null) {\n        this.owner.topAxis.setTrait(topAxisTrait);\n      }\n      const rightAxisTrait = chartTrait.rightAxis.trait;\n      if (rightAxisTrait !== null) {\n        this.owner.rightAxis.setTrait(rightAxisTrait);\n      }\n      const bottomAxisTrait = chartTrait.bottomAxis.trait;\n      if (bottomAxisTrait !== null) {\n        this.owner.bottomAxis.setTrait(bottomAxisTrait);\n      }\n      const leftAxisTrait = chartTrait.leftAxis.trait;\n      if (leftAxisTrait !== null) {\n        this.owner.leftAxis.setTrait(leftAxisTrait);\n      }\n    },\n    deinitTrait(chartTrait: ChartTrait<X, Y>): void {\n      const leftAxisTrait = chartTrait.leftAxis.trait;\n      if (leftAxisTrait !== null) {\n        this.owner.leftAxis.deleteTrait(leftAxisTrait);\n      }\n      const bottomAxisTrait = chartTrait.bottomAxis.trait;\n      if (bottomAxisTrait !== null) {\n        this.owner.bottomAxis.deleteTrait(bottomAxisTrait);\n      }\n      const rightAxisTrait = chartTrait.rightAxis.trait;\n      if (rightAxisTrait !== null) {\n        this.owner.rightAxis.deleteTrait(rightAxisTrait);\n      }\n      const topAxisTrait = chartTrait.topAxis.trait;\n      if (topAxisTrait !== null) {\n        this.owner.topAxis.deleteTrait(topAxisTrait);\n      }\n      this.owner.graph.setTrait(null);\n    },\n    willAttachTrait(newChartTrait: ChartTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachChartTrait\", newChartTrait, this.owner);\n    },\n    didDetachTrait(newChartTrait: ChartTrait<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachChartTrait\", newChartTrait, this.owner);\n    },\n    traitWillAttachTopAxis(topAxisTrait: AxisTrait<unknown>): void {\n      this.owner.topAxis.setTrait(topAxisTrait);\n    },\n    traitDidDetachTopAxis(topAxisTrait: AxisTrait<unknown>): void {\n      this.owner.topAxis.setTrait(null);\n    },\n    traitWillAttachRightAxis(rightAxisTrait: AxisTrait<unknown>): void {\n      this.owner.rightAxis.setTrait(rightAxisTrait);\n    },\n    traitDidDetachRightAxis(rightAxisTrait: AxisTrait<unknown>): void {\n      this.owner.rightAxis.setTrait(null);\n    },\n    traitWillAttachBottomAxis(bottomAxisTrait: AxisTrait<unknown>): void {\n      this.owner.bottomAxis.setTrait(bottomAxisTrait);\n    },\n    traitDidDetachBottomAxis(bottomAxisTrait: AxisTrait<unknown>): void {\n      this.owner.bottomAxis.setTrait(null);\n    },\n    traitWillAttachLeftAxis(leftAxisTrait: AxisTrait<unknown>): void {\n      this.owner.leftAxis.setTrait(leftAxisTrait);\n    },\n    traitDidDetachLeftAxis(leftAxisTrait: AxisTrait<unknown>): void {\n      this.owner.leftAxis.setTrait(null);\n    },\n    viewType: ChartView,\n    initView(chartView: ChartView<X, Y>): void {\n      const topAxisController = this.owner.topAxis.controller;\n      if (topAxisController !== null) {\n        topAxisController.axis.insertView(chartView);\n      }\n      const rightAxisController = this.owner.rightAxis.controller;\n      if (rightAxisController !== null) {\n        rightAxisController.axis.insertView(chartView);\n      }\n      const bottomAxisController = this.owner.bottomAxis.controller;\n      if (bottomAxisController !== null) {\n        bottomAxisController.axis.insertView(chartView);\n      }\n      const leftAxisController = this.owner.leftAxis.controller;\n      if (leftAxisController !== null) {\n        leftAxisController.axis.insertView(chartView);\n      }\n      if (this.owner.graph.view !== null || this.owner.graph.trait !== null) {\n        this.owner.graph.insertView(chartView);\n      }\n    },\n    willAttachView(chartView: ChartView<X, Y>): void {\n      this.owner.callObservers(\"controllerWillAttachChartView\", chartView, this.owner);\n    },\n    didDetachView(chartView: ChartView<X, Y>): void {\n      this.owner.callObservers(\"controllerDidDetachChartView\", chartView, this.owner);\n    },\n  })\n  readonly chart!: TraitViewRef<this, ChartTrait<X, Y>, ChartView<X, Y>>;\n  static readonly chart: MemberFastenerClass<ChartController, \"chart\">;\n\n  @TraitViewRef<ChartController<X, Y>, GraphTrait<X, Y>, GraphView<X, Y>>({\n    extends: true,\n    initTrait(graphTrait: GraphTrait<X, Y>): void {\n      GraphController.graph.prototype.initTrait.call(this, graphTrait as GraphTrait);\n      const chartView = this.owner.chart.view;\n      if (chartView !== null) {\n        this.insertView(chartView);\n      }\n    },\n    initView(graphView: GraphView<X, Y>): void {\n      GraphController.graph.prototype.initView.call(this, graphView as GraphView);\n      const chartView = this.owner.chart.view;\n      if (chartView !== null) {\n        this.insertView(chartView);\n      }\n    },\n    deinitView(graphView: GraphView<X, Y>): void {\n      GraphController.graph.prototype.deinitView.call(this, graphView as GraphView);\n      graphView.remove();\n    },\n  })\n  override readonly graph!: TraitViewRef<this, GraphTrait<X, Y>, GraphView<X, Y>>;\n  static override readonly graph: MemberFastenerClass<ChartController, \"graph\">;\n\n  @TraitViewControllerRef<ChartController<X, Y>, AxisTrait<X>, AxisView<X>, AxisController<X>, ChartControllerAxisExt<X>>({\n    implements: true,\n    type: TopAxisController,\n    binds: true,\n    observes: true,\n    get parentView(): View | null {\n      return this.owner.chart.view;\n    },\n    getTraitViewRef(controller: AxisController<X>): TraitViewRef<unknown, AxisTrait<X>, AxisView<X>> {\n      return controller.axis;\n    },\n    willAttachController(topAxisController: AxisController<X> ): void {\n      this.owner.callObservers(\"controllerWillAttachTopAxis\", topAxisController, this.owner);\n    },\n    didAttachController(topAxisController: AxisController<X>): void {\n      const topAxisTrait = topAxisController.axis.trait;\n      if (topAxisTrait !== null) {\n        this.attachAxisTrait(topAxisTrait);\n      }\n      const topAxisView = topAxisController.axis.view;\n      if (topAxisView !== null) {\n        this.attachAxisView(topAxisView);\n      }\n    },\n    willDetachController(topAxisController: AxisController<X>): void {\n      const topAxisView = topAxisController.axis.view;\n      if (topAxisView !== null) {\n        this.detachAxisView(topAxisView);\n      }\n      const topAxisTrait = topAxisController.axis.trait;\n      if (topAxisTrait !== null) {\n        this.detachAxisTrait(topAxisTrait);\n      }\n    },\n    didDetachController(topAxisController: AxisController<X>): void {\n      this.owner.callObservers(\"controllerDidDetachTopAxis\", topAxisController, this.owner);\n    },\n    controllerWillAttachAxisTrait(topAxisTrait: AxisTrait<X>): void {\n      this.owner.callObservers(\"controllerWillAttachTopAxisTrait\", topAxisTrait, this.owner);\n      this.attachAxisTrait(topAxisTrait);\n    },\n    controllerDidDetachAxisTrait(topAxisTrait: AxisTrait<X>): void {\n      this.detachAxisTrait(topAxisTrait);\n      this.owner.callObservers(\"controllerDidDetachTopAxisTrait\", topAxisTrait, this.owner);\n    },\n    attachAxisTrait(topAxisTrait: AxisTrait<X>): void {\n      // hook\n    },\n    detachAxisTrait(topAxisTrait: AxisTrait<X>): void {\n      // hook\n    },\n    controllerWillAttachAxisView(topAxisView: AxisView<X>): void {\n      this.owner.callObservers(\"controllerWillAttachTopAxisView\", topAxisView, this.owner);\n      this.attachAxisView(topAxisView);\n    },\n    controllerDidDetachAxisView(topAxisView: AxisView<X>): void {\n      this.detachAxisView(topAxisView);\n      this.owner.callObservers(\"controllerDidDetachTopAxisView\", topAxisView, this.owner);\n    },\n    attachAxisView(topAxisView: AxisView<X>): void {\n      // hook\n    },\n    detachAxisView(topAxisView: AxisView<X>): void {\n      topAxisView.remove();\n    },\n    detectController(controller: Controller): AxisController<X> | null {\n      return controller instanceof TopAxisController ? controller : null;\n    },\n  })\n  readonly topAxis!: TraitViewControllerRef<this, AxisTrait<X>, AxisView<X>, AxisController<X>>;\n  static readonly topAxis: MemberFastenerClass<ChartController, \"topAxis\">;\n\n  @TraitViewControllerRef<ChartController<X, Y>, AxisTrait<Y>, AxisView<Y>, AxisController<Y>, ChartControllerAxisExt<Y>>({\n    implements: true,\n    type: RightAxisController,\n    binds: true,\n    observes: true,\n    get parentView(): View | null {\n      return this.owner.chart.view;\n    },\n    getTraitViewRef(controller: AxisController<Y>): TraitViewRef<unknown, AxisTrait<Y>, AxisView<Y>> {\n      return controller.axis;\n    },\n    willAttachController(rightAxisController: AxisController<Y>): void {\n      this.owner.callObservers(\"controllerWillAttachRightAxis\", rightAxisController, this.owner);\n    },\n    didAttachController(rightAxisController: AxisController<Y>): void {\n      const rightAxisTrait = rightAxisController.axis.trait;\n      if (rightAxisTrait !== null) {\n        this.attachAxisTrait(rightAxisTrait);\n      }\n      const rightAxisView = rightAxisController.axis.view;\n      if (rightAxisView !== null) {\n        this.attachAxisView(rightAxisView);\n      }\n    },\n    willDetachController(rightAxisController: AxisController<Y>): void {\n      const rightAxisView = rightAxisController.axis.view;\n      if (rightAxisView !== null) {\n        this.detachAxisView(rightAxisView);\n      }\n      const rightAxisTrait = rightAxisController.axis.trait;\n      if (rightAxisTrait !== null) {\n        this.detachAxisTrait(rightAxisTrait);\n      }\n    },\n    didDetachController(rightAxisController: AxisController<Y>): void {\n      this.owner.callObservers(\"controllerDidDetachRightAxis\", rightAxisController, this.owner);\n    },\n    controllerWillAttachAxisTrait(rightAxisTrait: AxisTrait<Y>): void {\n      this.owner.callObservers(\"controllerWillAttachRightAxisTrait\", rightAxisTrait, this.owner);\n      this.attachAxisTrait(rightAxisTrait);\n    },\n    controllerDidDetachAxisTrait(rightAxisTrait: AxisTrait<Y>): void {\n      this.detachAxisTrait(rightAxisTrait);\n      this.owner.callObservers(\"controllerDidDetachRightAxisTrait\", rightAxisTrait, this.owner);\n    },\n    attachAxisTrait(rightAxisTrait: AxisTrait<Y>): void {\n      // hook\n    },\n    detachAxisTrait(rightAxisTrait: AxisTrait<Y>): void {\n      // hook\n    },\n    controllerWillAttachAxisView(rightAxisView: AxisView<Y>): void {\n      this.owner.callObservers(\"controllerWillAttachRightAxisView\", rightAxisView, this.owner);\n      this.attachAxisView(rightAxisView);\n    },\n    controllerDidDetachAxisView(rightAxisView: AxisView<Y>): void {\n      this.detachAxisView(rightAxisView);\n      this.owner.callObservers(\"controllerDidDetachRightAxisView\", rightAxisView, this.owner);\n    },\n    attachAxisView(rightAxisView: AxisView<Y>): void {\n      // hook\n    },\n    detachAxisView(rightAxisView: AxisView<Y>): void {\n      rightAxisView.remove();\n    },\n    detectController(controller: Controller): AxisController<Y> | null {\n      return controller instanceof RightAxisController ? controller : null;\n    },\n  })\n  readonly rightAxis!: TraitViewControllerRef<this, AxisTrait<Y>, AxisView<Y>, AxisController<Y>>;\n  static readonly rightAxis: MemberFastenerClass<ChartController, \"rightAxis\">;\n\n  @TraitViewControllerRef<ChartController<X, Y>, AxisTrait<X>, AxisView<X>, AxisController<X>, ChartControllerAxisExt<X>>({\n    implements: true,\n    type: BottomAxisController,\n    binds: true,\n    observes: true,\n    get parentView(): View | null {\n      return this.owner.chart.view;\n    },\n    getTraitViewRef(controller: AxisController<X>): TraitViewRef<unknown, AxisTrait<X>, AxisView<X>> {\n      return controller.axis;\n    },\n    willAttachController(bottomAxisController: AxisController<X>): void {\n      this.owner.callObservers(\"controllerWillAttachBottomAxis\", bottomAxisController, this.owner);\n    },\n    didAttachController(bottomAxisController: AxisController<X>): void {\n      const bottomAxisTrait = bottomAxisController.axis.trait;\n      if (bottomAxisTrait !== null) {\n        this.attachAxisTrait(bottomAxisTrait);\n      }\n      const bottomAxisView = bottomAxisController.axis.view;\n      if (bottomAxisView !== null) {\n        this.attachAxisView(bottomAxisView);\n      }\n    },\n    willDetachController(bottomAxisController: AxisController<X>): void {\n      const bottomAxisView = bottomAxisController.axis.view;\n      if (bottomAxisView !== null) {\n        this.detachAxisView(bottomAxisView);\n      }\n      const bottomAxisTrait = bottomAxisController.axis.trait;\n      if (bottomAxisTrait !== null) {\n        this.detachAxisTrait(bottomAxisTrait);\n      }\n    },\n    didDetachController(bottomAxisController: AxisController<X>): void {\n      this.owner.callObservers(\"controllerDidDetachBottomAxis\", bottomAxisController, this.owner);\n    },\n    controllerWillAttachAxisTrait(bottomAxisTrait: AxisTrait<X>): void {\n      this.owner.callObservers(\"controllerWillAttachBottomAxisTrait\", bottomAxisTrait, this.owner);\n      this.attachAxisTrait(bottomAxisTrait);\n    },\n    controllerDidDetachAxisTrait(bottomAxisTrait: AxisTrait<X>): void {\n      this.detachAxisTrait(bottomAxisTrait);\n      this.owner.callObservers(\"controllerDidDetachBottomAxisTrait\", bottomAxisTrait, this.owner);\n    },\n    attachAxisTrait(bottomAxisTrait: AxisTrait<X>): void {\n      // hook\n    },\n    detachAxisTrait(bottomAxisTrait: AxisTrait<X>): void {\n      // hook\n    },\n    controllerWillAttachAxisView(bottomAxisView: AxisView<X>): void {\n      this.owner.callObservers(\"controllerWillAttachBottomAxisView\", bottomAxisView, this.owner);\n      this.attachAxisView(bottomAxisView);\n    },\n    controllerDidDetachAxisView(bottomAxisView: AxisView<X>): void {\n      this.detachAxisView(bottomAxisView);\n      this.owner.callObservers(\"controllerDidDetachBottomAxisView\", bottomAxisView, this.owner);\n    },\n    attachAxisView(bottomAxisView: AxisView<X>): void {\n      // hook\n    },\n    detachAxisView(bottomAxisView: AxisView<X>): void {\n      bottomAxisView.remove();\n    },\n    detectController(controller: Controller): AxisController<X> | null {\n      return controller instanceof BottomAxisController ? controller : null;\n    },\n  })\n  readonly bottomAxis!: TraitViewControllerRef<this, AxisTrait<X>, AxisView<X>, AxisController<X>>;\n  static readonly bottomAxis: MemberFastenerClass<ChartController, \"bottomAxis\">;\n\n  @TraitViewControllerRef<ChartController<X, Y>, AxisTrait<Y>, AxisView<Y>, AxisController<Y>, ChartControllerAxisExt<Y>>({\n    implements: true,\n    type: LeftAxisController,\n    binds: true,\n    observes: true,\n    get parentView(): View | null {\n      return this.owner.chart.view;\n    },\n    getTraitViewRef(controller: AxisController<Y>): TraitViewRef<unknown, AxisTrait<Y>, AxisView<Y>> {\n      return controller.axis;\n    },\n    willAttachController(leftAxisController: AxisController<Y>): void {\n      this.owner.callObservers(\"controllerWillAttachLeftAxis\", leftAxisController, this.owner);\n    },\n    didAttachController(leftAxisController: AxisController<Y>): void {\n      const leftAxisTrait = leftAxisController.axis.trait;\n      if (leftAxisTrait !== null) {\n        this.attachAxisTrait(leftAxisTrait);\n      }\n      const leftAxisView = leftAxisController.axis.view;\n      if (leftAxisView !== null) {\n        this.attachAxisView(leftAxisView);\n      }\n    },\n    willDetachController(leftAxisController: AxisController<Y>): void {\n      const leftAxisView = leftAxisController.axis.view;\n      if (leftAxisView !== null) {\n        this.detachAxisView(leftAxisView);\n      }\n      const leftAxisTrait = leftAxisController.axis.trait;\n      if (leftAxisTrait !== null) {\n        this.detachAxisTrait(leftAxisTrait);\n      }\n    },\n    didDetachController(leftAxisController: AxisController<Y>): void {\n      this.owner.callObservers(\"controllerDidDetachLeftAxis\", leftAxisController, this.owner);\n    },\n    controllerWillAttachAxisTrait(leftAxisTrait: AxisTrait<Y>): void {\n      this.owner.callObservers(\"controllerWillAttachLeftAxisTrait\", leftAxisTrait, this.owner);\n      this.attachAxisTrait(leftAxisTrait);\n    },\n    controllerDidDetachAxisTrait(leftAxisTrait: AxisTrait<Y>): void {\n      this.detachAxisTrait(leftAxisTrait);\n      this.owner.callObservers(\"controllerDidDetachLeftAxisTrait\", leftAxisTrait, this.owner);\n    },\n    attachAxisTrait(leftAxisTrait: AxisTrait<Y>): void {\n      // hook\n    },\n    detachAxisTrait(leftAxisTrait: AxisTrait<Y>): void {\n      // hook\n    },\n    controllerWillAttachAxisView(leftAxisView: AxisView<Y>): void {\n      this.owner.callObservers(\"controllerWillAttachLeftAxisView\", leftAxisView, this.owner);\n      this.attachAxisView(leftAxisView);\n    },\n    controllerDidDetachAxisView(leftAxisView: AxisView<Y>): void {\n      this.detachAxisView(leftAxisView);\n      this.owner.callObservers(\"controllerDidDetachLeftAxisView\", leftAxisView, this.owner);\n    },\n    attachAxisView(leftAxisView: AxisView<Y>): void {\n      // hook\n    },\n    detachAxisView(leftAxisView: AxisView<Y>): void {\n      leftAxisView.remove();\n    },\n    detectController(controller: Controller): AxisController<Y> | null {\n      return controller instanceof LeftAxisController ? controller : null;\n    },\n  })\n  readonly leftAxis!: TraitViewControllerRef<this, AxisTrait<Y>, AxisView<Y>, AxisController<Y>>;\n  static readonly leftAxis: MemberFastenerClass<ChartController, \"leftAxis\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyGeoPoint, GeoPoint, AnyGeoBox, GeoBox} from \"@swim/geo\";\n\n/** @public */\nexport type AnyGeoPerspective = GeoPerspective | GeoPerspectiveInit;\n\n/** @public */\nexport interface GeoPerspectiveInit {\n  geoFrame?: AnyGeoBox | null;\n  geoCenter?: AnyGeoPoint | null;\n  zoom?: number;\n  heading?: number;\n  tilt?: number;\n}\n\n/** @public */\nexport interface GeoPerspective {\n  readonly geoFrame: GeoBox | null;\n\n  readonly geoCenter: GeoPoint | null;\n\n  readonly zoom: number | undefined;\n\n  readonly heading: number | undefined;\n\n  readonly tilt: number | undefined;\n}\n\n/** @public */\nexport const GeoPerspective = (function () {\n  const GeoPerspective = {} as {\n    fromAny(value: AnyGeoPerspective): GeoPerspective;\n\n    is(object: unknown): object is GeoPerspective;\n  };\n\n  GeoPerspective.fromAny = function (value: AnyGeoPerspective): GeoPerspective {\n    if (value === void 0 || value === null) {\n      return value;\n    } else {\n      let geoFrame: GeoBox | null;\n      if (value.geoFrame !== void 0 && value.geoFrame !== null) {\n        geoFrame = GeoBox.fromAny(value.geoFrame);\n      } else {\n        geoFrame = null;\n      }\n      let geoCenter: GeoPoint | null;\n      if (value.geoCenter !== void 0 && value.geoCenter !== null) {\n        geoCenter = GeoPoint.fromAny(value.geoCenter);\n      } else {\n        geoCenter = null;\n      }\n      const zoom = value.zoom;\n      const heading = value.heading;\n      const tilt = value.tilt;\n      return {geoFrame, geoCenter, zoom, heading, tilt};\n    }\n  };\n\n  GeoPerspective.is = function (object: unknown): object is GeoPerspective {\n    if (object !== void 0 && object !== null || typeof object === \"function\") {\n      const viewport = object as GeoPerspective;\n      return \"geoFrame\" in viewport\n          && \"geoCenter\" in viewport\n          && \"zoom\" in viewport\n          && \"heading\" in viewport\n          && \"tilt\" in viewport;\n    }\n    return false;\n  };\n\n  return GeoPerspective;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {GeoProjection, GeoPoint, GeoBox} from \"@swim/geo\";\nimport {GeoPerspective} from \"./GeoPerspective\";\n\n/** @public */\nexport interface GeoViewport extends GeoProjection, GeoPerspective {\n  readonly geoFrame: GeoBox;\n\n  readonly geoCenter: GeoPoint;\n\n  readonly zoom: number;\n\n  readonly heading: number;\n\n  readonly tilt: number;\n}\n\n/** @public */\nexport const GeoViewport = (function () {\n  const GeoViewport = {} as {\n    is(object: unknown): object is GeoViewport;\n  };\n\n  GeoViewport.is = function (object: unknown): object is GeoViewport {\n    if (GeoProjection.is(object) && GeoPerspective.is(object)) {\n      return true;\n    }\n    return false;\n  };\n\n  return GeoViewport;\n})();\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Class} from \"@swim/util\";\nimport {GeoBox, GeoProjection} from \"@swim/geo\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, ViewFlags, View} from \"@swim/view\";\nimport {GraphicsViewInit, GraphicsView, PaintingContext, PaintingRenderer} from \"@swim/graphics\";\nimport type {GeoViewport} from \"./GeoViewport\";\nimport type {GeoViewContext} from \"./GeoViewContext\";\nimport type {GeoViewObserver} from \"./GeoViewObserver\";\n\n/** @public */\nexport interface GeoViewInit extends GraphicsViewInit {\n}\n\n/** @public */\nexport class GeoView extends GraphicsView {\n  constructor() {\n    super();\n    this.geoBounds = GeoBox.undefined();\n  }\n\n  override readonly observerType?: Class<GeoViewObserver>;\n\n  override readonly contextType?: Class<GeoViewContext>;\n\n  @ThemeAnimator({type: Color, value: null, inherits: true})\n  readonly geoBoundsColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  protected override didInsertChild(child: View, target: View | null): void {\n    if (child instanceof GeoView) {\n      this.onInsertChildGeoBounds(child, child.geoBounds);\n    }\n    super.didInsertChild(child, target);\n  }\n\n  protected override didRemoveChild(child: View): void {\n    if (child instanceof GeoView) {\n      this.onRemoveChildGeoBounds(child, child.geoBounds);\n    }\n    super.didRemoveChild(child);\n  }\n\n  protected override onRender(viewContext: ViewContextType<this>): void {\n    super.onRender(viewContext);\n    const outlineColor = this.geoBoundsColor.value;\n    if (outlineColor !== null) {\n      this.renderGeoBounds(viewContext, outlineColor, 1);\n    }\n  }\n\n  protected renderGeoBounds(viewContext: ViewContextType<this>, outlineColor: Color, outlineWidth: number): void {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled && !this.unbounded) {\n      this.renderGeoOutline(this.geoBounds, viewContext.geoViewport, renderer.context, outlineColor, outlineWidth);\n    }\n  }\n\n  protected renderGeoOutline(geoBox: GeoBox, geoProjection: GeoProjection, context: PaintingContext,\n                             outlineColor: Color, outlineWidth: number): void {\n    if (geoBox.isDefined()) {\n      // save\n      const contextLineWidth = context.lineWidth;\n      const contextStrokeStyle = context.strokeStyle;\n\n      const southWest = geoProjection.project(geoBox.southWest.normalized());\n      const northWest = geoProjection.project(geoBox.northWest.normalized());\n      const northEast = geoProjection.project(geoBox.northEast.normalized());\n      const southEast = geoProjection.project(geoBox.southEast.normalized());\n      context.beginPath();\n      context.moveTo(southWest.x, southWest.y);\n      context.lineTo(northWest.x, northWest.y);\n      context.lineTo(northEast.x, northEast.y);\n      context.lineTo(southEast.x, southEast.y);\n      context.closePath();\n      context.lineWidth = outlineWidth;\n      context.strokeStyle = outlineColor.toString();\n      context.stroke();\n\n      // restore\n      context.lineWidth = contextLineWidth;\n      context.strokeStyle = contextStrokeStyle;\n    }\n  }\n\n  protected override onHide(): void {\n    super.onHide();\n    const parent = this.parent;\n    if (parent instanceof GeoView) {\n      parent.onHideChild(this);\n    }\n  }\n\n  protected override onUnhide(): void {\n    super.onUnhide();\n    const parent = this.parent;\n    if (parent instanceof GeoView) {\n      parent.onUnhideChild(this);\n    }\n  }\n\n  protected override onSetUnbounded(unbounded: boolean): void {\n    const parent = this.parent;\n    if (parent instanceof GeoView) {\n      parent.onSetChildUnbounded(this, unbounded);\n    }\n  }\n\n  cullGeoFrame(geoFrame: GeoBox = this.geoFrame): void {\n    this.setCulled(!geoFrame.intersects(this.geoBounds));\n  }\n\n  get geoViewport(): GeoViewport {\n    return this.viewContext.geoViewport;\n  }\n\n  /**\n   * The map-specified geo-coordinate bounding box in which this view should layout\n   * and render geometry.\n   */\n  get geoFrame(): GeoBox {\n    const parent = this.parent;\n    return parent instanceof GeoView ? parent.geoFrame : GeoBox.globe();\n  }\n\n  /**\n   * The self-defined geo-coordinate bounding box surrounding all geometry this\n   * view could possibly render. Views with geo bounds that don't overlap\n   * their map frames may be culled from rendering and hit testing.\n   */\n  readonly geoBounds: GeoBox;\n\n  protected setGeoBounds(newGeoBounds: GeoBox): void {\n    const oldGeoBounds = this.geoBounds;\n    if (!oldGeoBounds.equals(newGeoBounds)) {\n      this.willSetGeoBounds(newGeoBounds, oldGeoBounds);\n      (this as Mutable<this>).geoBounds = newGeoBounds;\n      this.onSetGeoBounds(newGeoBounds, oldGeoBounds);\n      this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n    }\n  }\n\n  willSetGeoBounds(newGeoBounds: GeoBox, oldGeoBounds: GeoBox): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewWillSetGeoBounds !== void 0) {\n        observer.viewWillSetGeoBounds(newGeoBounds, oldGeoBounds, this);\n      }\n    }\n  }\n\n  protected onSetGeoBounds(newGeoBounds: GeoBox, oldGeoBounds: GeoBox): void {\n    if (!this.unbounded) {\n      const parent = this.parent;\n      if (parent instanceof GeoView) {\n        parent.onSetChildGeoBounds(this, newGeoBounds, oldGeoBounds);\n      }\n    }\n  }\n\n  didSetGeoBounds(newGeoBounds: GeoBox, oldGeoBounds: GeoBox): void {\n    const observers = this.observers;\n    for (let i = 0, n = observers.length; i < n; i += 1) {\n      const observer = observers[i]!;\n      if (observer.viewDidSetGeoBounds !== void 0) {\n        observer.viewDidSetGeoBounds(newGeoBounds, oldGeoBounds, this);\n      }\n    }\n  }\n\n  protected updateGeoBounds(): void {\n    this.setGeoBounds(this.deriveGeoBounds());\n  }\n\n  protected onInsertChildGeoBounds(child: GeoView, newGeoBounds: GeoBox): void {\n    this.updateGeoBounds();\n  }\n\n  protected onRemoveChildGeoBounds(child: GeoView, oldGeoBounds: GeoBox): void {\n    this.updateGeoBounds();\n  }\n\n  protected onSetChildGeoBounds(child: GeoView, newGeoBounds: GeoBox, oldGeoBounds: GeoBox): void {\n    this.updateGeoBounds();\n  }\n\n  protected onHideChild(child: GeoView): void {\n    this.updateGeoBounds();\n  }\n\n  protected onUnhideChild(child: GeoView): void {\n    this.updateGeoBounds();\n  }\n\n  protected onSetChildUnbounded(child: GeoView, unbounded: boolean): void {\n    this.updateGeoBounds();\n  }\n\n  get ownGeoBounds(): GeoBox | null {\n    return null;\n  }\n\n  deriveGeoBounds(): GeoBox {\n    let geoBounds = this.ownGeoBounds;\n    let child = this.firstChild;\n    while (child !== null) {\n      if (child instanceof GeoView && !child.hidden && !child.unbounded) {\n        const childGeoBounds = child.geoBounds;\n        if (childGeoBounds.isDefined()) {\n          if (geoBounds !== null) {\n            geoBounds = geoBounds.union(childGeoBounds);\n          } else {\n            geoBounds = childGeoBounds;\n          }\n        }\n      }\n      child = child.nextSibling;\n    }\n    if (geoBounds === null) {\n      geoBounds = this.geoFrame;\n    }\n    return geoBounds;\n  }\n\n  override init(init: GeoViewInit): void {\n    super.init(init);\n  }\n\n  static override readonly MountFlags: ViewFlags = GraphicsView.MountFlags | View.NeedsProject;\n  static override readonly UncullFlags: ViewFlags = GraphicsView.UncullFlags | View.NeedsProject;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {GeoBox} from \"@swim/geo\";\nimport {Trait} from \"@swim/model\";\nimport type {GeoTraitObserver} from \"./GeoTraitObserver\";\n\n/** @public */\nexport abstract class GeoTrait extends Trait {\n  override readonly observerType?: Class<GeoTraitObserver>;\n\n  abstract readonly geoBounds: GeoBox;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, AnyTiming, Timing} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {Controller, TraitViewRef} from \"@swim/controller\";\nimport type {GeoView} from \"./GeoView\";\nimport type {GeoTrait} from \"./GeoTrait\";\nimport type {GeoControllerObserver} from \"./GeoControllerObserver\";\nimport {GeoLayerTrait} from \"../\"; // forward import\nimport {GeoLayerController} from \"../\"; // forward import\nimport {GeoLineTrait} from \"../\"; // forward import\nimport {GeoLineController} from \"../\"; // forward import\nimport {GeoAreaTrait} from \"../\"; // forward import\nimport {GeoAreaController} from \"../\"; // forward import\nimport {GeoIconTrait} from \"../\"; // forward import\nimport {GeoIconController} from \"../\"; // forward import\n\n/** @public */\nexport abstract class GeoController extends Controller {\n  override readonly observerType?: Class<GeoControllerObserver>;\n\n  @Property({type: Timing, inherits: true})\n  readonly geoTiming!: Property<this, Timing | boolean | undefined, AnyTiming>;\n\n  abstract readonly geo: TraitViewRef<this, GeoTrait, GeoView>;\n\n  static fromTrait(geoTrait: GeoTrait): GeoController {\n    if (geoTrait instanceof GeoLayerTrait) {\n      return new GeoLayerController();\n    } else if (geoTrait instanceof GeoIconTrait) {\n      return new GeoIconController();\n    } else if (geoTrait instanceof GeoAreaTrait) {\n      return new GeoAreaController();\n    } else if (geoTrait instanceof GeoLineTrait) {\n      return new GeoLineController();\n    } else {\n      throw new Error(\"Can't create GeoController from \" + geoTrait);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Class} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {GeoBox} from \"@swim/geo\";\nimport {Model, Trait, TraitSet} from \"@swim/model\";\nimport {GeoTrait} from \"../geo/GeoTrait\";\nimport type {GeoLayerTraitObserver} from \"./GeoLayerTraitObserver\";\n\n/** @public */\nexport class GeoLayerTrait extends GeoTrait {\n  constructor() {\n    super();\n    this.geoBounds = GeoBox.globe();\n  }\n\n  override readonly observerType?: Class<GeoLayerTraitObserver>;\n\n  override readonly geoBounds: GeoBox;\n\n  setGeoBounds(newGeoBounds: GeoBox): void {\n    const oldGeoBounds = this.geoBounds;\n    if (!newGeoBounds.equals(oldGeoBounds)) {\n      this.willSetGeoBounds(newGeoBounds, oldGeoBounds);\n      (this as Mutable<this>).geoBounds = newGeoBounds;\n      this.onSetGeoBounds(newGeoBounds, oldGeoBounds);\n      this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n    }\n  }\n\n  protected willSetGeoBounds(newGeoBounds: GeoBox, oldGeoBounds: GeoBox): void {\n    this.callObservers(\"traitWillSetGeoBounds\", newGeoBounds, oldGeoBounds, this);\n  }\n\n  protected onSetGeoBounds(newGeoBounds: GeoBox, oldGeoBounds: GeoBox): void {\n    // hook\n  }\n\n  protected didSetGeoBounds(newGeoBounds: GeoBox, oldGeoBounds: GeoBox): void {\n    this.callObservers(\"traitDidSetGeoBounds\", newGeoBounds, oldGeoBounds, this);\n  }\n\n  @TraitSet<GeoLayerTrait, GeoTrait>({\n    type: GeoTrait,\n    binds: true,\n    willAttachTrait(featureTrait: GeoTrait): void {\n      this.owner.callObservers(\"traitWillAttachFeature\", featureTrait, this.owner);\n    },\n    didAttachTrait(featureTrait: GeoTrait): void {\n      if (this.owner.consuming) {\n        featureTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(featureTrait: GeoTrait): void {\n      if (this.owner.consuming) {\n        featureTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(featureTrait: GeoTrait): void {\n      this.owner.callObservers(\"traitDidDetachFeature\", featureTrait, this.owner);\n    },\n    detectModel(model: Model): GeoTrait | null {\n      return model.getTrait(GeoTrait);\n    },\n    detectTrait(trait: Trait): GeoTrait | null {\n      return null;\n    },\n  })\n  readonly features!: TraitSet<this, GeoTrait>;\n  static readonly features: MemberFastenerClass<GeoLayerTrait, \"features\">;\n\n  /** @internal */\n  protected startConsumingFeatures(): void {\n    const featureTraits = this.features.traits;\n    for (const traitId in featureTraits) {\n      const featureTrait = featureTraits[traitId]!;\n      featureTrait.consume(this);\n    }\n  }\n\n  /** @internal */\n  protected stopConsumingFeatures(): void {\n    const featureTraits = this.features.traits;\n    for (const traitId in featureTraits) {\n      const featureTrait = featureTraits[traitId]!;\n      featureTrait.unconsume(this);\n    }\n  }\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    this.startConsumingFeatures();\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    this.stopConsumingFeatures();\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Arrays} from \"@swim/util\";\nimport {GeoPoint, GeoBox} from \"@swim/geo\";\nimport type {GeoView} from \"../geo/GeoView\";\n\n/** @public */\nexport class GeoTree {\n  constructor(depth: number, maxDepth: number, density: number,\n              geoFrame: GeoBox, geoBounds: GeoBox, geoCenter: GeoPoint,\n              southWest: GeoTree | null, northWest: GeoTree | null,\n              southEast: GeoTree | null, northEast: GeoTree | null,\n              views: ReadonlyArray<GeoView>, size: number) {\n    this.depth = depth;\n    this.maxDepth = maxDepth;\n    this.density = density;\n    this.geoFrame = geoFrame;\n    this.geoBounds = geoBounds;\n    this.geoCenter = geoCenter;\n    this.southWest = southWest;\n    this.northWest = northWest;\n    this.southEast = southEast;\n    this.northEast = northEast;\n    this.views = views;\n    this.size = size;\n  }\n\n  readonly depth: number;\n\n  readonly maxDepth: number;\n\n  readonly density: number\n\n  readonly geoFrame: GeoBox;\n\n  readonly geoBounds: GeoBox;\n\n  readonly geoCenter: GeoPoint;\n\n  readonly southWest: GeoTree | null;\n\n  readonly northWest: GeoTree | null;\n\n  readonly southEast: GeoTree | null;\n\n  readonly northEast: GeoTree | null;\n\n  readonly views: ReadonlyArray<GeoView>;\n\n  readonly size: number;\n\n  isEmpty(): boolean {\n    return this.size === 0;\n  }\n\n  contains(bounds: GeoBox): boolean {\n    return this.geoFrame.contains(bounds);\n  }\n\n  intersects(bounds: GeoBox): boolean {\n    return this.geoFrame.intersects(bounds);\n  }\n\n  getTree(bounds: GeoBox): GeoTree {\n    if (this.depth < this.maxDepth && this.size > this.density) {\n      const geoCenter = this.geoCenter;\n      const inWest = bounds.lngMin <= geoCenter.lng;\n      const inSouth = bounds.latMin <= geoCenter.lat;\n      const inEast = bounds.lngMax > geoCenter.lng;\n      const inNorth = bounds.latMax > geoCenter.lat;\n      if (inWest !== inEast && inSouth !== inNorth) {\n        if (inSouth && inWest) {\n          const southWest = this.southWest;\n          if (southWest !== null) {\n            return southWest.getTree(bounds);\n          }\n        } else if (inNorth && inWest) {\n          const northWest = this.northWest;\n          if (northWest !== null) {\n            return northWest.getTree(bounds);\n          }\n        } else if (inSouth && inEast) {\n          const southEast = this.southEast;\n          if (southEast !== null) {\n            return southEast.getTree(bounds);\n          }\n        } else if (inNorth && inEast) {\n          const northEast = this.northEast;\n          if (northEast !== null) {\n            return northEast.getTree(bounds);\n          }\n        }\n      }\n    }\n    return this;\n  }\n\n  has(view: GeoView, bounds: GeoBox): boolean {\n    if (this.depth < this.maxDepth && this.size > this.density) {\n      const contained = this.hasNode(view, bounds);\n      if (contained !== void 0) {\n        return contained;\n      }\n    }\n    return this.hasLeaf(view, bounds);\n  }\n\n  private hasNode(view: GeoView, bounds: GeoBox): boolean | undefined {\n    const geoCenter = this.geoCenter;\n    const inWest = bounds.lngMin <= geoCenter.lng;\n    const inSouth = bounds.latMin <= geoCenter.lat;\n    const inEast = bounds.lngMax > geoCenter.lng;\n    const inNorth = bounds.latMax > geoCenter.lat;\n    if (inWest !== inEast && inSouth !== inNorth) {\n      if (inSouth && inWest) {\n        const southWest = this.southWest;\n        if (southWest !== null) {\n          return southWest.has(view, bounds);\n        }\n      } else if (inNorth && inWest) {\n        const northWest = this.northWest;\n        if (northWest !== null) {\n          return northWest.has(view, bounds);\n        }\n      } else if (inSouth && inEast) {\n        const southEast = this.southEast;\n        if (southEast !== null) {\n          return southEast.has(view, bounds);\n        }\n      } else if (inNorth && inEast) {\n        const northEast = this.northEast;\n        if (northEast !== null) {\n          return northEast.has(view, bounds);\n        }\n      }\n    }\n    return void 0;\n  }\n\n  private hasLeaf(view: GeoView, bounds: GeoBox): boolean {\n    return this.views.indexOf(view) >= 0;\n  }\n\n  inserted(view: GeoView, bounds: GeoBox): GeoTree {\n    let tree: GeoTree = this;\n    if (tree.depth < tree.maxDepth && tree.size > tree.density) {\n      const newTree = tree.insertedNode(view, bounds);\n      if (newTree !== null) {\n        tree = newTree;\n        if (this !== tree && tree.size === tree.density + 1) {\n          tree = tree.reinsertedNode();\n        }\n        return tree;\n      }\n    }\n    tree = tree.insertedLeaf(view, bounds);\n    if (this !== tree && tree.depth < tree.maxDepth && tree.size === tree.density + 1) {\n      tree = tree.reinsertedNode();\n    }\n    return tree;\n  }\n\n  private insertedNode(view: GeoView, bounds: GeoBox): GeoTree | null {\n    const geoCenter = this.geoCenter;\n    const inWest = bounds.lngMin <= geoCenter.lng;\n    const inSouth = bounds.latMin <= geoCenter.lat;\n    const inEast = bounds.lngMax > geoCenter.lng;\n    const inNorth = bounds.latMax > geoCenter.lat;\n    if (inWest !== inEast && inSouth !== inNorth) {\n      if (inSouth && inWest) {\n        const oldSouthWest = this.southWest;\n        let newSouthWest = oldSouthWest;\n        if (newSouthWest === null) {\n          newSouthWest = this.createTree(this.depth + 1, this.maxDepth, this.density,\n                                         new GeoBox(this.geoFrame.lngMin, this.geoFrame.latMin,\n                                                    this.geoCenter.lng, this.geoCenter.lat));\n        }\n        newSouthWest = newSouthWest.inserted(view, bounds);\n        if (oldSouthWest !== newSouthWest) {\n          return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                                 void 0, this.geoCenter, newSouthWest, this.northWest,\n                                 this.southEast, this.northEast, this.views, this.size + 1);\n        } else {\n          return this;\n        }\n      } else if (inNorth && inWest) {\n        const oldNorthWest = this.northWest;\n        let newNorthWest = oldNorthWest;\n        if (newNorthWest === null) {\n          newNorthWest = this.createTree(this.depth + 1, this.maxDepth, this.density,\n                                         new GeoBox(this.geoFrame.lngMin, this.geoCenter.lat,\n                                                    this.geoCenter.lng, this.geoFrame.latMax));\n        }\n        newNorthWest = newNorthWest.inserted(view, bounds);\n        if (oldNorthWest !== newNorthWest) {\n          return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                                 void 0, this.geoCenter, this.southWest, newNorthWest,\n                                 this.southEast, this.northEast, this.views, this.size + 1);\n        } else {\n          return this;\n        }\n      } else if (inSouth && inEast) {\n        const oldSouthEast = this.southEast;\n        let newSouthEast = oldSouthEast;\n        if (newSouthEast === null) {\n          newSouthEast = this.createTree(this.depth + 1, this.maxDepth, this.density,\n                                         new GeoBox(this.geoCenter.lng, this.geoFrame.latMin,\n                                                    this.geoFrame.lngMax, this.geoCenter.lat));\n        }\n        newSouthEast = newSouthEast.inserted(view, bounds);\n        if (oldSouthEast !== newSouthEast) {\n          return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                                 void 0, this.geoCenter, this.southWest, this.northWest,\n                                 newSouthEast, this.northEast, this.views, this.size + 1);\n        } else {\n          return this;\n        }\n      } else if (inNorth && inEast) {\n        const oldNorthEast = this.northEast;\n        let newNorthEast = oldNorthEast;\n        if (newNorthEast === null) {\n          newNorthEast = this.createTree(this.depth + 1, this.maxDepth, this.density,\n                                         new GeoBox(this.geoCenter.lng, this.geoCenter.lat,\n                                                    this.geoFrame.lngMax, this.geoFrame.latMax));\n        }\n        newNorthEast = newNorthEast.inserted(view, bounds);\n        if (oldNorthEast !== newNorthEast) {\n          return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                                 void 0, this.geoCenter, this.southWest, this.northWest,\n                                 this.southEast, newNorthEast, this.views, this.size + 1);\n        } else {\n          return this;\n        }\n      }\n    }\n    return null;\n  }\n\n  private insertedLeaf(view: GeoView, bounds: GeoBox): GeoTree {\n    const oldViews = this.views;\n    if (oldViews.indexOf(view) < 0) {\n      const newViews = oldViews.slice(0);\n      newViews.push(view);\n      return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                             void 0, this.geoCenter, this.southWest, this.northWest,\n                             this.southEast, this.northEast, newViews, this.size + 1);\n    } else {\n      return this;\n    }\n  }\n\n  removed(view: GeoView, bounds: GeoBox): GeoTree {\n    let tree: GeoTree = this;\n    if (tree.depth < tree.maxDepth && tree.size > tree.density) {\n      const newTree = tree.removedNode(view, bounds);\n      if (newTree !== null) {\n        tree = newTree;\n        if (this !== tree && tree.size === tree.density) {\n          tree = tree.reinsertedLeaf();\n        }\n        return tree;\n      }\n    }\n    tree = tree.removedLeaf(view, bounds);\n    if (this !== tree && tree.size === tree.density) {\n      tree = tree.reinsertedLeaf();\n    }\n    return tree;\n  }\n\n  private removedNode(view: GeoView, bounds: GeoBox): GeoTree | null {\n    const geoCenter = this.geoCenter;\n    const inWest = bounds.lngMin <= geoCenter.lng;\n    const inSouth = bounds.latMin <= geoCenter.lat;\n    const inEast = bounds.lngMax > geoCenter.lng;\n    const inNorth = bounds.latMax > geoCenter.lat;\n    if (inWest !== inEast && inSouth !== inNorth) {\n      if (inSouth && inWest) {\n        const oldSouthWest = this.southWest;\n        if (oldSouthWest !== null) {\n          let newSouthWest: GeoTree | null = oldSouthWest.removed(view, bounds);\n          if (newSouthWest.isEmpty()) {\n            newSouthWest = null;\n          }\n          return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                                 void 0, this.geoCenter, newSouthWest, this.northWest,\n                                 this.southEast, this.northEast, this.views, this.size - 1);\n        } else {\n          return this;\n        }\n      } else if (inNorth && inWest) {\n        const oldNorthWest = this.northWest;\n        if (oldNorthWest !== null) {\n          let newNorthWest: GeoTree | null = oldNorthWest.removed(view, bounds);\n          if (newNorthWest.isEmpty()) {\n            newNorthWest = null;\n          }\n          return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                                 void 0, this.geoCenter, this.southWest, newNorthWest,\n                                 this.southEast, this.northEast, this.views, this.size - 1);\n        } else {\n          return this;\n        }\n      } else if (inSouth && inEast) {\n        const oldSouthEast = this.southEast;\n        if (oldSouthEast !== null) {\n          let newSouthEast: GeoTree | null = oldSouthEast.removed(view, bounds);\n          if (newSouthEast.isEmpty()) {\n            newSouthEast = null;\n          }\n          return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                                 void 0, this.geoCenter, this.southWest, this.northWest,\n                                 newSouthEast, this.northEast, this.views, this.size - 1);\n        } else {\n          return this;\n        }\n      } else if (inNorth && inEast) {\n        const oldNorthEast = this.northEast;\n        if (oldNorthEast !== null) {\n          let newNorthEast: GeoTree | null = oldNorthEast.removed(view, bounds);\n          if (newNorthEast.isEmpty()) {\n            newNorthEast = null;\n          }\n          return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                                 void 0, this.geoCenter, this.southWest, this.northWest,\n                                 this.southEast, newNorthEast, this.views, this.size - 1);\n        } else {\n          return this;\n        }\n      }\n    }\n    return null;\n  }\n\n  private removedLeaf(view: GeoView, bounds: GeoBox): GeoTree {\n    const oldViews = this.views;\n    const index = oldViews.indexOf(view);\n    if (index >= 0) {\n      const newViews = oldViews.slice(0);\n      newViews.splice(index, 1);\n      return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                             void 0, this.geoCenter, this.southWest, this.northWest,\n                             this.southEast, this.northEast, newViews, this.size - 1);\n    } else {\n      return this;\n    }\n  }\n\n  private reinsertedNode(): GeoTree {\n    let tree = this.createTree(this.depth, this.maxDepth, this.density,\n                               this.geoFrame, void 0, this.geoCenter);\n    this.forEach(function (view: GeoView): void {\n      const bounds = view.geoBounds;\n      const newTree = tree.insertedNode(view, bounds);\n      if (newTree !== null) {\n        tree = newTree;\n      } else {\n        tree = tree.insertedLeaf(view, bounds);\n      }\n    }, this);\n    return tree;\n  }\n\n  private reinsertedLeaf(): GeoTree {\n    let tree = this.createTree(this.depth, this.maxDepth, this.density,\n                               this.geoFrame, void 0, this.geoCenter);\n    this.forEach(function (view: GeoView): void {\n      tree = tree.insertedLeaf(view, view.geoBounds);\n    }, this);\n    return tree;\n  }\n\n  moved(view: GeoView, newBounds: GeoBox, oldBounds: GeoBox): GeoTree {\n    if (this.depth < this.maxDepth && this.size > this.density) {\n      const geoCenter = this.geoCenter;\n      const newInWest = newBounds.lngMin <= geoCenter.lng;\n      const newInSouth = newBounds.latMin <= geoCenter.lat;\n      const newInEast = newBounds.lngMax > geoCenter.lng;\n      const newInNorth = newBounds.latMax > geoCenter.lat;\n      const oldInWest = oldBounds.lngMin <= geoCenter.lng;\n      const oldInSouth = oldBounds.latMin <= geoCenter.lat;\n      const oldInEast = oldBounds.lngMax > geoCenter.lng;\n      const oldInNorth = oldBounds.latMax > geoCenter.lat;\n      if (newInWest === oldInWest && newInSouth === oldInSouth && newInEast === oldInEast && newInNorth === oldInNorth) {\n        // in same tree\n        if (newInWest !== newInEast && newInSouth !== newInNorth) {\n          if (newInSouth && newInWest) {\n            const oldSouthWest = this.southWest!;\n            const newSouthWest = oldSouthWest.moved(view, newBounds, oldBounds);\n            if (oldSouthWest !== newSouthWest) {\n              return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                                     void 0, this.geoCenter, newSouthWest, this.northWest,\n                                     this.southEast, this.northEast, this.views, this.size);\n            }\n          } else if (newInNorth && newInWest) {\n            const oldNorthWest = this.northWest!;\n            const newNorthWest = oldNorthWest.moved(view, newBounds, oldBounds);\n            if (oldNorthWest !== newNorthWest) {\n              return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                                     void 0, this.geoCenter, this.southWest, newNorthWest,\n                                     this.southEast, this.northEast, this.views, this.size);\n            }\n          } else if (newInSouth && newInEast) {\n            const oldSouthEast = this.southEast!;\n            const newSouthEast = oldSouthEast.moved(view, newBounds, oldBounds);\n            if (oldSouthEast !== newSouthEast) {\n              return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                                     void 0, this.geoCenter, this.southWest, this.northWest,\n                                     newSouthEast, this.northEast, this.views, this.size);\n            }\n          } else if (newInNorth && newInEast) {\n            const oldNorthEast = this.northEast!;\n            const newNorthEast = oldNorthEast.moved(view, newBounds, oldBounds);\n            if (oldNorthEast !== newNorthEast) {\n              return this.createTree(this.depth, this.maxDepth, this.density, this.geoFrame,\n                                     void 0, this.geoCenter, this.southWest, this.northWest,\n                                     this.southEast, newNorthEast, this.views, this.size);\n            }\n          }\n        }\n      } else {\n        return this.removed(view, oldBounds).inserted(view, newBounds);\n      }\n    }\n    return this;\n  }\n\n  forEach<T>(callback: (view: GeoView) => T | void): T | undefined;\n  forEach<T, S>(callback: (this: S, view: GeoView) => T | void, thisArg: S): T | undefined;\n  forEach<T, S>(callback: (this: S | undefined, view: GeoView) => T | void, thisArg?: S): T | undefined {\n    if (this.southWest !== null) {\n      const result = this.southWest.forEach(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this.northWest !== null) {\n      const result = this.northWest.forEach(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this.southEast !== null) {\n      const result = this.southEast.forEach(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this.northEast !== null) {\n      const result = this.northEast.forEach(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    const views = this.views;\n    for (let i = 0; i < views.length; i += 1) {\n      const result = callback.call(thisArg, views[i]!);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  forEachReverse<T>(callback: (view: GeoView) => T | void): T | undefined;\n  forEachReverse<T, S>(callback: (this: S, view: GeoView) => T | void, thisArg: S): T | undefined;\n  forEachReverse<T, S>(callback: (this: S | undefined, view: GeoView) => T | void, thisArg?: S): T | undefined {\n    const views = this.views;\n    for (let i = views.length - 1; i >= 0; i -= 1) {\n      const result = callback.call(thisArg, views[i]!);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this.northEast !== null) {\n      const result = this.northEast.forEachReverse(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this.southEast !== null) {\n      const result = this.southEast.forEachReverse(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this.northWest !== null) {\n      const result = this.northWest.forEachReverse(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    if (this.southWest !== null) {\n      const result = this.southWest.forEachReverse(callback, thisArg);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  forEachIntersecting<T>(bounds: GeoBox, callback: (view: GeoView) => T | void): T | undefined;\n  forEachIntersecting<T, S>(bounds: GeoBox, callback: (this: S, view: GeoView) => T | void, thisArg: S): T | undefined;\n  forEachIntersecting<T, S>(bounds: GeoBox, callback: (this: S | undefined, view: GeoView) => T | void, thisArg?: S): T | undefined {\n    if (this.geoFrame.intersects(bounds)) {\n      if (this.southWest !== null) {\n        const result = this.southWest.forEachIntersecting(bounds, callback, thisArg);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n      if (this.northWest !== null) {\n        const result = this.northWest.forEachIntersecting(bounds, callback, thisArg);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n      if (this.southEast !== null) {\n        const result = this.southEast.forEachIntersecting(bounds, callback, thisArg);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n      if (this.northEast !== null) {\n        const result = this.northEast.forEachIntersecting(bounds, callback, thisArg);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n      const views = this.views;\n      for (let i = 0; i < views.length; i += 1) {\n        const result = callback.call(thisArg, views[i]!);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n    }\n    return void 0;\n  }\n\n  forEachNonIntersecting<T>(bounds: GeoBox, callback: (view: GeoView) => T | void): T | undefined;\n  forEachNonIntersecting<T, S>(bounds: GeoBox, callback: (this: S, view: GeoView) => T | void, thisArg: S): T | undefined;\n  forEachNonIntersecting<T, S>(bounds: GeoBox, callback: (this: S | undefined, view: GeoView) => T | void, thisArg?: S): T | undefined {\n    if (!this.geoFrame.intersects(bounds)) {\n      if (this.southWest !== null) {\n        const result = this.southWest.forEachNonIntersecting(bounds, callback, thisArg);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n      if (this.northWest !== null) {\n        const result = this.northWest.forEachNonIntersecting(bounds, callback, thisArg);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n      if (this.southEast !== null) {\n        const result = this.southEast.forEachNonIntersecting(bounds, callback, thisArg);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n      if (this.northEast !== null) {\n        const result = this.northEast.forEachNonIntersecting(bounds, callback, thisArg);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n      const views = this.views;\n      for (let i = 0; i < views.length; i += 1) {\n        const result = callback.call(thisArg, views[i]!);\n        if (result !== void 0) {\n          return result;\n        }\n      }\n    }\n    return void 0;\n  }\n\n  protected createTree(depth: number, maxDepth: number, density: number,\n                       geoFrame: GeoBox, geoBounds?: GeoBox, geoCenter?: GeoPoint,\n                       southWest: GeoTree | null = null, northWest: GeoTree | null = null,\n                       southEast: GeoTree | null = null, northEast: GeoTree | null = null,\n                       views: ReadonlyArray<GeoView> = Arrays.empty, size: number = 0): GeoTree {\n    if (geoCenter === void 0) {\n      geoCenter = geoFrame.center;\n    }\n    if (geoBounds === void 0) {\n      if (southWest !== null) {\n        geoBounds = southWest.geoBounds;\n      }\n      if (northWest !== null) {\n        geoBounds = geoBounds !== void 0 ? geoBounds.union(northWest.geoBounds) : northWest.geoBounds;\n      }\n      if (southEast !== null) {\n        geoBounds = geoBounds !== void 0 ? geoBounds.union(southEast.geoBounds) : southEast.geoBounds;\n      }\n      if (northEast !== null) {\n        geoBounds = geoBounds !== void 0 ? geoBounds.union(northEast.geoBounds) : northEast.geoBounds;\n      }\n      for (let i = 0; i < views.length; i += 1) {\n        const view = views[i]!;\n        geoBounds = geoBounds !== void 0 ? geoBounds.union(view.geoBounds) : view.geoBounds;\n      }\n      if (geoBounds === void 0) {\n        geoBounds = geoFrame;\n      }\n    }\n    return new GeoTree(depth, maxDepth, density, geoFrame, geoBounds, geoCenter,\n                       southWest, northWest, southEast, northEast, views, size);\n  }\n\n  static empty(geoFrame?: GeoBox, depth?: number, maxDepth?: number, density?: number): GeoTree {\n    if (geoFrame === void 0) {\n      geoFrame = GeoBox.globe();\n    }\n    if (depth === void 0) {\n      depth = 0;\n    }\n    if (maxDepth === void 0) {\n      maxDepth = 20;\n    }\n    maxDepth = Math.max(depth, maxDepth);\n    if (density === void 0) {\n      density = 8;\n    }\n    return new GeoTree(depth, maxDepth, density, geoFrame, geoFrame,\n                           geoFrame.center, null, null, null, null, Arrays.empty, 0);\n  }\n}","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable} from \"@swim/util\";\nimport type {GeoPoint, GeoBox, GeoProjection} from \"@swim/geo\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, ViewFlags, View} from \"@swim/view\";\nimport {GraphicsView, PaintingContext, PaintingRenderer} from \"@swim/graphics\";\nimport {GeoViewInit, GeoView} from \"../geo/GeoView\";\nimport {GeoTree} from \"./GeoTree\";\n\n/** @public */\nexport interface GeoTreeViewInit extends GeoViewInit {\n  geoTreeColor?: AnyColor;\n}\n\n/** @public */\nexport class GeoTreeView extends GeoView {\n  constructor(geoFrame?: GeoBox, depth?: number, maxDepth?: number, density?: number) {\n    super();\n    this.root = GeoTree.empty(geoFrame, depth, maxDepth, density);\n    this.stem = null;\n  }\n\n  /** @internal */\n  readonly root: GeoTree;\n\n  /** @internal */\n  updateRoot(newRoot: GeoTree): void {\n    (this as Mutable<this>).root = newRoot;\n    (this as Mutable<this>).stem = null;\n    this.setGeoBounds(newRoot.geoBounds);\n  }\n\n  /** @internal */\n  readonly stem: GeoTree | null;\n\n  /** @internal */\n  getStem(geoBounds: GeoBox): GeoTree {\n    let stem = this.stem;\n    if (stem === null) {\n      stem = this.root.getTree(geoBounds);\n      (this as Mutable<this>).stem = stem;\n    }\n    return stem;\n  }\n\n  protected override onInsertChild(child: View, target: View | null): void {\n    super.onInsertChild(child, target);\n    if (child instanceof GeoView) {\n      this.updateRoot(this.root.inserted(child, child.geoBounds));\n    }\n  }\n\n  protected override onRemoveChild(child: View): void {\n    super.onRemoveChild(child);\n    if (child instanceof GeoView) {\n      this.updateRoot(this.root.removed(child, child.geoBounds));\n    }\n  }\n\n  protected override willProject(viewContext: ViewContextType<this>): void {\n    super.willProject(viewContext);\n    (this as Mutable<this>).stem = null;\n  }\n\n  protected override processChildren(processFlags: ViewFlags, viewContext: ViewContextType<this>,\n                                     processChild: (this: this, child: View, processFlags: ViewFlags,\n                                                    viewContext: ViewContextType<this>) => void): void {\n    const stem = this.getStem(viewContext.geoViewport.geoFrame);\n    this.processTree(stem, processFlags, viewContext, processChild);\n  }\n\n  /** @internal */\n  protected processTree(tree: GeoTree, processFlags: ViewFlags, viewContext: ViewContextType<this>,\n                        processChild: (this: this, child: View, processFlags: ViewFlags,\n                                       viewContext: ViewContextType<this>) => void): void {\n    if (tree.southWest !== null && tree.southWest.geoFrame.intersects(viewContext.geoViewport.geoFrame)) {\n      this.processTree(tree.southWest, processFlags, viewContext, processChild);\n    }\n    if (tree.northWest !== null && tree.northWest.geoFrame.intersects(viewContext.geoViewport.geoFrame)) {\n      this.processTree(tree.northWest, processFlags, viewContext, processChild);\n    }\n    if (tree.southEast !== null && tree.southEast.geoFrame.intersects(viewContext.geoViewport.geoFrame)) {\n      this.processTree(tree.southEast, processFlags, viewContext, processChild);\n    }\n    if (tree.northEast !== null && tree.northEast.geoFrame.intersects(viewContext.geoViewport.geoFrame)) {\n      this.processTree(tree.northEast, processFlags, viewContext, processChild);\n    }\n    const children = tree.views;\n    for (let i = 0; i < children.length; i += 1) {\n      const child = children[i]!;\n      processChild.call(this, child, processFlags, viewContext);\n      if ((child.flags & View.RemovingFlag) !== 0) {\n        child.setFlags(child.flags & ~View.RemovingFlag);\n        this.removeChild(child);\n      }\n    }\n  }\n\n  @ThemeAnimator({type: Color, value: null})\n  readonly geoTreeColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  protected override onRender(viewContext: ViewContextType<this>): void {\n    super.onRender(viewContext);\n    const outlineColor = this.geoTreeColor.value;\n    if (outlineColor !== null) {\n      this.renderGeoTree(viewContext, outlineColor);\n    }\n  }\n\n  protected renderGeoTree(viewContext: ViewContextType<this>, outlineColor: Color): void {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      this.renderGeoTreeOutline(this.root, viewContext.geoViewport, renderer.context, outlineColor);\n    }\n  }\n\n  protected renderGeoTreeOutline(tree: GeoTree, geoProjection: GeoProjection,\n                                 context: PaintingContext, outlineColor: Color): void {\n    if (tree.southWest !== null) {\n      this.renderGeoTreeOutline(tree.southWest, geoProjection, context, outlineColor);\n    }\n    if (tree.northWest !== null) {\n      this.renderGeoTreeOutline(tree.northWest, geoProjection, context, outlineColor);\n    }\n    if (tree.southEast !== null) {\n      this.renderGeoTreeOutline(tree.southEast, geoProjection, context, outlineColor);\n    }\n    if (tree.northEast !== null) {\n      this.renderGeoTreeOutline(tree.northEast, geoProjection, context, outlineColor);\n    }\n    const minDepth = 2;\n    if (tree.depth >= minDepth) {\n      const u = (tree.depth - minDepth) / (tree.maxDepth - minDepth);\n      const outlineWidth = 4 * (1 - u) + 0.5 * u;\n      this.renderGeoOutline(tree.geoFrame, geoProjection, context, outlineColor, outlineWidth);\n    }\n  }\n\n  protected override displayChildren(displayFlags: ViewFlags, viewContext: ViewContextType<this>,\n                                     displayChild: (this: this, child: View, displayFlags: ViewFlags,\n                                                    viewContext: ViewContextType<this>) => void): void {\n    const stem = this.getStem(viewContext.geoViewport.geoFrame);\n    this.displayTree(stem, displayFlags, viewContext, displayChild);\n  }\n\n  /** @internal */\n  protected displayTree(tree: GeoTree, displayFlags: ViewFlags, viewContext: ViewContextType<this>,\n                        displayChild: (this: this, child: View, displayFlags: ViewFlags,\n                                       viewContext: ViewContextType<this>) => void): void {\n    if (tree.southWest !== null && tree.southWest.geoFrame.intersects(viewContext.geoViewport.geoFrame)) {\n      this.displayTree(tree.southWest, displayFlags, viewContext, displayChild);\n    }\n    if (tree.northWest !== null && tree.northWest.geoFrame.intersects(viewContext.geoViewport.geoFrame)) {\n      this.displayTree(tree.northWest, displayFlags, viewContext, displayChild);\n    }\n    if (tree.southEast !== null && tree.southEast.geoFrame.intersects(viewContext.geoViewport.geoFrame)) {\n      this.displayTree(tree.southEast, displayFlags, viewContext, displayChild);\n    }\n    if (tree.northEast !== null && tree.northEast.geoFrame.intersects(viewContext.geoViewport.geoFrame)) {\n      this.displayTree(tree.northEast, displayFlags, viewContext, displayChild);\n    }\n    const children = tree.views;\n    for (let i = 0; i < children.length; i += 1) {\n      const child = children[i]!;\n      displayChild.call(this, child, displayFlags, viewContext);\n      if ((child.flags & View.RemovingFlag) !== 0) {\n        child.setFlags(child.flags & ~View.RemovingFlag);\n        this.removeChild(child);\n      }\n    }\n  }\n\n  protected override updateGeoBounds(): void {\n    // nop\n  }\n\n  protected override onSetChildGeoBounds(child: GeoView, newChildViewGeoBounds: GeoBox, oldChildViewGeoBounds: GeoBox): void {\n    this.updateRoot(this.root.moved(child, newChildViewGeoBounds, oldChildViewGeoBounds));\n  }\n\n  protected override hitTest(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    const geoViewport = viewContext.geoViewport;\n    const geoPoint = geoViewport.unproject(x, y);\n    const stem = this.getStem(geoViewport.geoFrame);\n    return this.hitTestTree(stem, x, y, geoPoint, viewContext);\n  }\n\n  protected hitTestTree(tree: GeoTree, x: number, y: number, geoPoint: GeoPoint,\n                        viewContext: ViewContextType<this>): GraphicsView | null {\n    let hit: GraphicsView | null = null;\n    if (tree.southWest !== null && tree.southWest.geoFrame.contains(geoPoint)) {\n      hit = this.hitTestTree(tree.southWest, x, y, geoPoint, viewContext);\n    }\n    if (hit === null && tree.northWest !== null && tree.northWest.geoFrame.contains(geoPoint)) {\n      hit = this.hitTestTree(tree.northWest, x, y, geoPoint, viewContext);\n    }\n    if (hit === null && tree.southEast !== null && tree.southEast.geoFrame.contains(geoPoint)) {\n      hit = this.hitTestTree(tree.southEast, x, y, geoPoint, viewContext);\n    }\n    if (hit === null && tree.northEast !== null && tree.northEast.geoFrame.contains(geoPoint)) {\n      hit = this.hitTestTree(tree.northEast, x, y, geoPoint, viewContext);\n    }\n    if (hit === null) {\n      const children = tree.views;\n      for (let i = 0; i < children.length; i += 1) {\n        const child = children[i]!;\n        hit = child.cascadeHitTest(x, y, viewContext);\n        if (hit !== null) {\n          break;\n        }\n      }\n    }\n    return hit;\n  }\n\n  override init(init: GeoTreeViewInit): void {\n    super.init(init);\n    if (init.geoTreeColor !== void 0) {\n      this.geoTreeColor(init.geoTreeColor);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport type {GeoBox} from \"@swim/geo\";\nimport type {Trait} from \"@swim/model\";\nimport {TraitViewRef, TraitViewControllerSet} from \"@swim/controller\";\nimport type {GeoView} from \"../geo/GeoView\";\nimport type {GeoTrait} from \"../geo/GeoTrait\";\nimport {GeoController} from \"../geo/GeoController\";\nimport {GeoTreeView} from \"../tree/GeoTreeView\";\nimport {GeoLayerTrait} from \"./GeoLayerTrait\";\nimport type {GeoLayerControllerObserver} from \"./GeoLayerControllerObserver\";\n\n/** @public */\nexport interface GeoLayerControllerFeatureExt {\n  attachFeatureTrait(featureTrait: GeoTrait, featureController: GeoController): void;\n  detachFeatureTrait(featureTrait: GeoTrait, featureController: GeoController): void;\n  attachFeatureView(featureView: GeoView, featureController: GeoController): void;\n  detachFeatureView(featureView: GeoView, featureController: GeoController): void;\n}\n\n/** @public */\nexport class GeoLayerController extends GeoController {\n  override readonly observerType?: Class<GeoLayerControllerObserver>;\n\n  @TraitViewRef<GeoLayerController, GeoLayerTrait, GeoView>({\n    traitType: GeoLayerTrait,\n    observesTrait: true,\n    willAttachTrait(geoTrait: GeoLayerTrait): void {\n      this.owner.callObservers(\"controllerWillAttachGeoTrait\", geoTrait, this.owner);\n    },\n    didAttachTrait(geoTrait: GeoLayerTrait): void {\n      const featureTraits = geoTrait.features.traits;\n      for (const traitId in featureTraits) {\n        const featureTrait = featureTraits[traitId]!;\n        this.owner.features.addTraitController(featureTrait);\n      }\n    },\n    willDetachTrait(geoTrait: GeoLayerTrait): void {\n      const featureTraits = geoTrait.features.traits;\n      for (const traitId in featureTraits) {\n        const featureTrait = featureTraits[traitId]!;\n        this.owner.features.deleteTraitController(featureTrait);\n      }\n    },\n    didDetachTrait(geoTrait: GeoLayerTrait): void {\n      this.owner.callObservers(\"controllerDidDetachGeoTrait\", geoTrait, this.owner);\n    },\n    traitWillSetGeoBounds(newGeoBounds: GeoBox, oldGeoBounds: GeoBox): void {\n      this.owner.callObservers(\"controllerWillSetGeoBounds\", newGeoBounds, oldGeoBounds, this.owner);\n    },\n    traitDidSetGeoBounds(newGeoBounds: GeoBox, oldGeoBounds: GeoBox): void {\n      this.owner.callObservers(\"controllerDidSetGeoBounds\", newGeoBounds, oldGeoBounds, this.owner);\n    },\n    traitWillAttachFeature(featureTrait: GeoTrait, targetTrait: Trait | null): void {\n      this.owner.features.addTraitController(featureTrait, targetTrait);\n    },\n    traitDidDetachFeature(featureTrait: GeoTrait): void {\n      this.owner.features.deleteTraitController(featureTrait);\n    },\n    viewType: GeoTreeView,\n    willAttachView(geoView: GeoView): void {\n      this.owner.callObservers(\"controllerWillAttachGeoView\", geoView, this.owner);\n    },\n    didAttachView(geoView: GeoView): void {\n      const featureControllers = this.owner.features.controllers;\n      for (const controllerId in featureControllers) {\n        const featureController = featureControllers[controllerId]!;\n        const featureView = featureController.geo.view;\n        if (featureView !== null && featureView.parent === null) {\n          featureController.geo.insertView(geoView);\n        }\n      }\n    },\n    didDetachView(geoView: GeoView): void {\n      this.owner.callObservers(\"controllerDidDetachGeoView\", geoView, this.owner);\n    },\n  })\n  readonly geo!: TraitViewRef<this, GeoLayerTrait, GeoView>;\n  static readonly geo: MemberFastenerClass<GeoLayerController, \"geo\">;\n\n  @TraitViewControllerSet<GeoLayerController, GeoTrait, GeoView, GeoController, GeoLayerControllerFeatureExt>({\n    implements: true,\n    type: GeoController,\n    binds: true,\n    observes: true,\n    get parentView(): GeoView | null {\n      return this.owner.geo.view;\n    },\n    getTraitViewRef(featureController: GeoController): TraitViewRef<unknown, GeoTrait, GeoView> {\n      return featureController.geo;\n    },\n    willAttachController(featureController: GeoController): void {\n      this.owner.callObservers(\"controllerWillAttachFeature\", featureController, this.owner);\n    },\n    didAttachController(featureController: GeoController): void {\n      const featureTrait = featureController.geo.trait;\n      if (featureTrait !== null) {\n        this.attachFeatureTrait(featureTrait, featureController);\n      }\n      const featureView = featureController.geo.view;\n      if (featureView !== null) {\n        this.attachFeatureView(featureView, featureController);\n      }\n    },\n    willDetachController(featureController: GeoController): void {\n      const featureView = featureController.geo.view;\n      if (featureView !== null) {\n        this.detachFeatureView(featureView, featureController);\n      }\n      const featureTrait = featureController.geo.trait;\n      if (featureTrait !== null) {\n        this.detachFeatureTrait(featureTrait, featureController);\n      }\n    },\n    didDetachController(featureController: GeoController): void {\n      this.owner.callObservers(\"controllerDidDetachFeature\", featureController, this.owner);\n    },\n    controllerWillAttachGeoTrait(featureTrait: GeoTrait, featureController: GeoController): void {\n      this.owner.callObservers(\"controllerWillAttachFeatureTrait\", featureTrait, featureController, this.owner);\n      this.attachFeatureTrait(featureTrait, featureController);\n    },\n    controllerDidDetachGeoTrait(featureTrait: GeoTrait, featureController: GeoController): void {\n      this.detachFeatureTrait(featureTrait, featureController);\n      this.owner.callObservers(\"controllerDidDetachFeatureTrait\", featureTrait, featureController, this.owner);\n    },\n    attachFeatureTrait(featureTrait: GeoTrait, featureController: GeoController): void {\n      // hook\n    },\n    detachFeatureTrait(featureTrait: GeoTrait, featureController: GeoController): void {\n      // hook\n    },\n    controllerWillAttachGeoView(featureView: GeoView, featureController: GeoController): void {\n      this.owner.callObservers(\"controllerWillAttachFeatureView\", featureView, featureController, this.owner);\n      this.attachFeatureView(featureView, featureController);\n    },\n    controllerDidDetachGeoView(featureView: GeoView, featureController: GeoController): void {\n      this.detachFeatureView(featureView, featureController);\n      this.owner.callObservers(\"controllerDidDetachFeatureView\", featureView, featureController, this.owner);\n    },\n    attachFeatureView(featureView: GeoView, featureController: GeoController): void {\n      // hook\n    },\n    detachFeatureView(featureView: GeoView, featureController: GeoController): void {\n      featureView.remove();\n    },\n    controllerWillSetGeoBounds(newGeoBounds: GeoBox, oldGeoBounds: GeoBox, featureController: GeoController): void {\n      this.owner.callObservers(\"controllerWillSetFeatureGeoBounds\", newGeoBounds, oldGeoBounds, featureController, this.owner);\n    },\n    controllerDidSetGeoBounds(newGeoBounds: GeoBox, oldGeoBounds: GeoBox, featureController: GeoController): void {\n      this.owner.callObservers(\"controllerDidSetFeatureGeoBounds\", newGeoBounds, oldGeoBounds, featureController, this.owner);\n    },\n    createController(featureTrait?: GeoTrait): GeoController {\n      if (featureTrait !== void 0) {\n        return GeoController.fromTrait(featureTrait);\n      } else {\n        return TraitViewControllerSet.prototype.createController.call(this);\n      }\n    },\n  })\n  readonly features!: TraitViewControllerSet<this, GeoTrait, GeoView, GeoController> & GeoLayerControllerFeatureExt;\n  static readonly features: MemberFastenerClass<GeoLayerController, \"features\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, AnyTiming, Timing, Easing} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Animator} from \"@swim/component\";\nimport {AnyLength, Length, AnyR2Point, R2Point, R2Box} from \"@swim/math\";\nimport {AnyGeoPoint, GeoPoint, GeoBox} from \"@swim/geo\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {Look, Mood, ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, View, ViewRef} from \"@swim/view\";\nimport {StrokeView, PaintingContext, PaintingRenderer} from \"@swim/graphics\";\nimport {GeoView} from \"../geo/GeoView\";\nimport type {GeoRippleViewObserver} from \"./GeoRippleViewObserver\";\n\n/** @public */\nexport interface GeoRippleOptions {\n  source?: GeoView | null;\n  center?: AnyGeoPoint | null;\n  width?: AnyLength | null;\n  radius?: AnyLength | null;\n  color?: Look<Color> | AnyColor | null;\n  opacity?: number;\n  timing?: AnyTiming | number | boolean;\n}\n\n/** @public */\nexport class GeoRippleView extends GeoView implements StrokeView {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"viewBounds\", {\n      value: R2Box.undefined(),\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n    this.setFlags(this.flags | View.UnboundedFlag);\n  }\n\n  override readonly observerType?: Class<GeoRippleViewObserver>;\n\n  @Animator<GeoRippleView, GeoPoint | null, AnyGeoPoint | null>({\n    type: GeoPoint,\n    value: null,\n    didSetState(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.projectGeoCenter(newGeoCenter);\n    },\n    willSetValue(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.callObservers(\"viewWillSetGeoCenter\", newGeoCenter, oldGeoCenter, this.owner);\n    },\n    didSetValue(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.setGeoBounds(newGeoCenter !== null ? newGeoCenter.bounds : GeoBox.undefined());\n      if (this.mounted) {\n        this.owner.projectRipple(this.owner.viewContext);\n      }\n      this.owner.callObservers(\"viewDidSetGeoCenter\", newGeoCenter, oldGeoCenter, this.owner);\n    },\n  })\n  readonly geoCenter!: Animator<this, GeoPoint | null, AnyGeoPoint | null>;\n\n  @Animator<GeoRippleView, R2Point | null, AnyR2Point | null>({\n    type: R2Point,\n    value: R2Point.undefined(),\n    updateFlags: View.NeedsRender,\n    didSetValue(newViewCenter: R2Point | null, oldViewCenter: R2Point | null): void {\n      this.owner.updateViewBounds();\n    },\n  })\n  readonly viewCenter!: Animator<this, R2Point | null, AnyR2Point | null>;\n\n  @ThemeAnimator<GeoRippleView, Length, AnyLength>({\n    type: Length,\n    value: Length.zero(),\n    updateFlags: View.NeedsRender,\n    didTransition() {\n      this.owner.source.setView(null);\n      this.owner.remove();\n    },\n  })\n  readonly radius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Color, value: null, look: Look.accentColor, inherits: true, updateFlags: View.NeedsRender})\n  readonly stroke!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Length, value: Length.px(1), inherits: true, updateFlags: View.NeedsRender})\n  readonly strokeWidth!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ViewRef<GeoRippleView, GeoView>({\n    observes: true,\n    didAttachView(sourceView: GeoView): void {\n      this.owner.geoCenter.setState(sourceView.geoBounds.center, Affinity.Intrinsic);\n    },\n    viewDidUnmount(sourceView: GeoView): void {\n      this.owner.remove();\n    },\n    viewDidSetGeoBounds(newGeoBounds: GeoBox, oldGeoBounds: GeoBox, sourceView: GeoView): void {\n      this.owner.geoCenter.setState(newGeoBounds.center, Affinity.Intrinsic);\n    },\n  })\n  readonly source!: ViewRef<this, GeoView>;\n  static readonly source: MemberFastenerClass<GeoRippleView, \"source\">;\n\n  protected override onProject(viewContext: ViewContextType<this>): void {\n    super.onProject(viewContext);\n    this.projectRipple(viewContext);\n  }\n\n  protected projectGeoCenter(geoCenter: GeoPoint | null): void {\n    if (this.mounted) {\n      const viewContext = this.viewContext as ViewContextType<this>;\n      const viewCenter = geoCenter !== null && geoCenter.isDefined()\n                       ? viewContext.geoViewport.project(geoCenter)\n                       : null;\n      this.viewCenter.setInterpolatedValue(this.viewCenter.value, viewCenter);\n      this.projectRipple(viewContext);\n    }\n  }\n\n  protected projectRipple(viewContext: ViewContextType<this>): void {\n    if (this.viewCenter.hasAffinity(Affinity.Intrinsic)) {\n      const geoCenter = this.geoCenter.value;\n      const viewCenter = geoCenter !== null && geoCenter.isDefined()\n                       ? viewContext.geoViewport.project(geoCenter)\n                       : null;\n      this.viewCenter.setValue(viewCenter, Affinity.Intrinsic);\n    }\n  }\n\n  protected override onRender(viewContext: ViewContextType<this>): void {\n    super.onRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      this.renderRipple(renderer.context, viewContext.viewFrame);\n    }\n  }\n\n  protected renderRipple(context: PaintingContext, frame: R2Box): void {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter !== null && viewCenter.isDefined()) {\n      const size = Math.min(frame.width, frame.height);\n      const radius = this.radius.getValue().pxValue(size);\n      const stroke = this.stroke.value;\n      if (stroke !== null) {\n        // save\n        const contextLineWidth = context.lineWidth;\n        const contextStrokeStyle = context.strokeStyle;\n\n        context.beginPath();\n        context.arc(viewCenter.x, viewCenter.y, radius, 0, 2 * Math.PI);\n\n        const strokeWidth = this.strokeWidth.value;\n        if (strokeWidth !== null) {\n          context.lineWidth = strokeWidth.pxValue(size);\n        }\n        context.strokeStyle = stroke.toString();\n        context.stroke();\n\n        // restore\n        context.lineWidth = contextLineWidth;\n        context.strokeStyle = contextStrokeStyle;\n      }\n    }\n  }\n\n  protected override renderGeoBounds(viewContext: ViewContextType<this>, outlineColor: Color, outlineWidth: number): void {\n    // nop\n  }\n\n  protected override updateGeoBounds(): void {\n    // nop\n  }\n\n  override readonly viewBounds!: R2Box;\n\n  protected updateViewBounds(): void {\n    (this as Mutable<GeoRippleView>).viewBounds = this.deriveViewBounds();\n  }\n\n  override deriveViewBounds(): R2Box {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter !== null && viewCenter.isDefined()) {\n      return viewCenter.bounds;\n    } else {\n      return R2Box.undefined();\n    }\n  }\n\n  ripple(options?: GeoRippleOptions): this {\n    let source: GeoView | null;\n    if (options === void 0 || options.source === void 0) {\n      source = null;\n    } else {\n      source = options.source;\n    }\n    let center: GeoPoint | null;\n    if (options === void 0 || options.center === void 0 || options.center === null) {\n      center = null;\n    } else {\n      center = GeoPoint.fromAny(options.center);\n    }\n    let width: Length | null;\n    if (options === void 0 || options.width === void 0 || options.width === null) {\n      width = null;\n    } else {\n      width = Length.fromAny(options.width);\n    }\n    let radius: Length;\n    if (options === void 0 || options.radius === void 0 || options.radius === null) {\n      radius = Length.pct(12.5);\n    } else {\n      radius = Length.fromAny(options.radius);\n    }\n    let color: Color | null;\n    if (options === void 0 || options.color === void 0 || options.color === null) {\n      color = this.getLookOr(Look.accentColor, null);\n    } else if (options.color instanceof Look) {\n      color = this.getLookOr(options.color, null);\n    } else {\n      color = Color.fromAny(options.color);\n    }\n    let timing: Timing | boolean;\n    if (options === void 0 || options.timing === void 0 || options.timing === true) {\n      timing = this.getLookOr(Look.timing, Mood.ambient, false);\n    } else if (typeof options.timing === \"number\") {\n      timing = Easing.linear.withDuration(options.timing);\n    } else {\n      timing = Timing.fromAny(options.timing);\n    }\n    const opacity = options !== void 0 ? options.opacity : void 0;\n\n    if (source !== null) {\n      this.source.setView(source);\n    }\n    if (center !== null) {\n      this.geoCenter.setState(center, Affinity.Intrinsic);\n    }\n    if (width !== null) {\n      this.strokeWidth.setState(width, Affinity.Intrinsic);\n    }\n    this.radius.setState(radius, timing);\n    if (color !== null) {\n      this.stroke.setState(opacity !== void 0 ? color.alpha(opacity) : color);\n      this.stroke.setState(color.alpha(0), timing);\n    }\n\n    return this;\n  }\n\n  static ripple(sourceView: GeoView, options?: GeoRippleOptions): GeoRippleView | null {\n    if (!document.hidden && !sourceView.hidden && !sourceView.culled &&\n        sourceView.geoBounds.intersects(sourceView.geoViewport.geoFrame)) {\n      const rippleView = GeoRippleView.create();\n      rippleView.source.setView(sourceView);\n      let containerView = sourceView.getBase(GeoView);\n      if (containerView === null) {\n        containerView = sourceView;\n      }\n      containerView.appendChild(rippleView);\n      rippleView.ripple(options);\n      return rippleView;\n    } else {\n      return null;\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Class} from \"@swim/util\";\nimport {Affinity, Animator} from \"@swim/component\";\nimport {AnyLength, Length, AnyR2Point, R2Point, R2Box, Transform} from \"@swim/math\";\nimport {AnyGeoPoint, GeoPoint, GeoBox} from \"@swim/geo\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, ViewFlags, View} from \"@swim/view\";\nimport {\n  AnyGraphicsRenderer,\n  GraphicsRendererType,\n  GraphicsRenderer,\n  GraphicsView,\n  CanvasCompositeOperation,\n  CanvasRenderer,\n  WebGLRenderer,\n} from \"@swim/graphics\";\nimport type {GeoViewContext} from \"../geo/GeoViewContext\";\nimport {GeoViewInit, GeoView} from \"../geo/GeoView\";\nimport {GeoRippleOptions, GeoRippleView} from \"../effect/GeoRippleView\";\nimport type {GeoRasterViewContext} from \"./GeoRasterViewContext\";\nimport type {GeoRasterViewObserver} from \"./GeoRasterViewObserver\";\n\n/** @public */\nexport interface GeoRasterViewInit extends GeoViewInit {\n  geoAnchor?: AnyGeoPoint;\n  viewAnchor?: AnyR2Point;\n  xAlign?: number;\n  yAlign?: number;\n  width?: AnyLength;\n  height?: AnyLength;\n  opacity?: number;\n  compositeOperation?: CanvasCompositeOperation;\n}\n\n/** @public */\nexport class GeoRasterView extends GeoView {\n  constructor() {\n    super();\n    this.canvas = this.createCanvas();\n    Object.defineProperty(this, \"renderer\", {\n      value: this.createRenderer(),\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n    this.ownRasterFrame = null;\n  }\n\n  override readonly observerType?: Class<GeoRasterViewObserver>;\n\n  override readonly contextType?: Class<GeoRasterViewContext>;\n\n  @Animator<GeoRasterView, GeoPoint | null, AnyGeoPoint | null>({\n    type: GeoPoint,\n    value: null,\n    didSetState(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.projectGeoAnchor(newGeoCenter);\n    },\n    willSetValue(newGeoAnchor: GeoPoint | null, oldGeoAnchor: GeoPoint | null): void {\n      this.owner.callObservers(\"viewWillSetGeoAnchor\", newGeoAnchor, oldGeoAnchor, this.owner);\n    },\n    didSetValue(newGeoAnchor: GeoPoint | null, oldGeoAnchor: GeoPoint | null): void {\n      this.owner.setGeoBounds(newGeoAnchor !== null ? newGeoAnchor.bounds : GeoBox.undefined());\n      if (this.mounted) {\n        this.owner.projectRaster(this.owner.viewContext);\n      }\n      this.owner.callObservers(\"viewDidSetGeoAnchor\", newGeoAnchor, oldGeoAnchor, this.owner);\n    },\n  })\n  readonly geoAnchor!: Animator<this, GeoPoint | null, AnyGeoPoint | null>;\n\n  @Animator({type: R2Point, value: R2Point.undefined()})\n  readonly viewAnchor!: Animator<this, R2Point | null, AnyR2Point | null>;\n\n  @Animator({type: Number, value: 0.5, updateFlags: View.NeedsComposite})\n  readonly xAlign!: Animator<this, number>;\n\n  @Animator({type: Number, value: 0.5, updateFlags: View.NeedsComposite})\n  readonly yAlign!: Animator<this, number>;\n\n  @ThemeAnimator({type: Length, value: null, updateFlags: View.NeedsResize | View.NeedsLayout | View.NeedsRender | View.NeedsComposite})\n  readonly width!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator({type: Length, value: null, updateFlags: View.NeedsResize | View.NeedsLayout | View.NeedsRender | View.NeedsComposite})\n  readonly height!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator({type: Number, value: 1, updateFlags: View.NeedsComposite})\n  readonly opacity!: ThemeAnimator<this, number>;\n\n  @Animator({type: String, value: \"source-over\", updateFlags: View.NeedsComposite})\n  readonly compositeOperation!: Animator<this, CanvasCompositeOperation>;\n\n  get pixelRatio(): number {\n    return window.devicePixelRatio || 1;\n  }\n\n  /** @internal */\n  readonly canvas: HTMLCanvasElement;\n\n  get compositor(): GraphicsRenderer | null {\n    const parent = this.parent;\n    if (parent instanceof GraphicsView) {\n      return parent.renderer;\n    } else {\n      return null;\n    }\n  }\n\n  override readonly renderer!: GraphicsRenderer | null;\n\n  setRenderer(renderer: AnyGraphicsRenderer | null): void {\n    if (typeof renderer === \"string\") {\n      renderer = this.createRenderer(renderer as GraphicsRendererType);\n    }\n    (this as Mutable<this>).renderer = renderer;\n    this.requireUpdate(View.NeedsRender | View.NeedsComposite);\n  }\n\n  protected createRenderer(rendererType: GraphicsRendererType = \"canvas\"): GraphicsRenderer | null {\n    if (rendererType === \"canvas\") {\n      const context = this.canvas.getContext(\"2d\");\n      if (context !== null) {\n        return new CanvasRenderer(context, Transform.identity(), this.pixelRatio);\n      } else {\n        throw new Error(\"Failed to create canvas rendering context\");\n      }\n    } else if (rendererType === \"webgl\") {\n      const context = this.canvas.getContext(\"webgl\");\n      if (context !== null) {\n        return new WebGLRenderer(context, this.pixelRatio);\n      } else {\n        throw new Error(\"Failed to create webgl rendering context\");\n      }\n    } else {\n      throw new Error(\"Failed to create \" + rendererType + \" renderer\");\n    }\n  }\n\n  protected override needsUpdate(updateFlags: ViewFlags, immediate: boolean): ViewFlags {\n    updateFlags = super.needsUpdate(updateFlags, immediate);\n    const rasterFlags = updateFlags & (View.NeedsRender | View.NeedsComposite);\n    if (rasterFlags !== 0) {\n      updateFlags |= View.NeedsComposite;\n      this.setFlags(this.flags | View.NeedsDisplay | View.NeedsComposite | rasterFlags);\n    }\n    return updateFlags;\n  }\n\n  protected override needsProcess(processFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    if ((this.flags & View.ProcessMask) === 0 && (processFlags & (View.NeedsResize | View.NeedsProject)) === 0) {\n      processFlags = 0;\n    }\n    return processFlags;\n  }\n\n  protected override onResize(viewContext: ViewContextType<this>): void {\n    super.onResize(viewContext);\n    this.requireUpdate(View.NeedsRender | View.NeedsComposite);\n  }\n\n  protected override onProject(viewContext: ViewContextType<this>): void {\n    super.onProject(viewContext);\n    this.projectRaster(viewContext);\n  }\n\n  protected projectGeoAnchor(geoAnchor: GeoPoint | null): void {\n    if (this.mounted) {\n      const viewContext = this.viewContext as ViewContextType<this>;\n      const viewAnchor = geoAnchor !== null && geoAnchor.isDefined()\n                       ? viewContext.geoViewport.project(geoAnchor)\n                       : null;\n      this.viewAnchor.setInterpolatedValue(this.viewAnchor.value, viewAnchor);\n      this.projectRaster(viewContext);\n    }\n  }\n\n  protected projectRaster(viewContext: ViewContextType<this>): void {\n    let viewAnchor: R2Point | null;\n    if (this.viewAnchor.hasAffinity(Affinity.Intrinsic)) {\n      const geoAnchor = this.geoAnchor.value;\n      viewAnchor = geoAnchor !== null && geoAnchor.isDefined()\n                 ? viewContext.geoViewport.project(geoAnchor)\n                 : null;\n      this.viewAnchor.setValue(viewAnchor, Affinity.Intrinsic);\n    } else {\n      viewAnchor = this.viewAnchor.value;\n    }\n    if (viewAnchor !== null) {\n      const viewFrame = viewContext.viewFrame;\n      const viewWidth = viewFrame.width;\n      const viewHeight = viewFrame.height;\n      const viewSize = Math.min(viewWidth, viewHeight);\n      let width: Length | number | null = this.width.value;\n      width = width instanceof Length ? width.pxValue(viewSize) : viewWidth;\n      let height: Length | number | null = this.height.value;\n      height = height instanceof Length ? height.pxValue(viewSize) : viewHeight;\n      const x = viewAnchor.x - width * this.xAlign.getValue();\n      const y = viewAnchor.y - height * this.yAlign.getValue();\n      const rasterFrame = new R2Box(x, y, x + width, y + height);\n      this.setRasterFrame(rasterFrame);\n      this.setViewFrame(rasterFrame);\n      this.setCulled(!viewFrame.intersects(rasterFrame));\n    } else {\n      this.setCulled(!this.viewFrame.intersects(this.rasterFrame));\n    }\n  }\n\n  protected override needsDisplay(displayFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    if ((this.flags & View.DisplayMask) !== 0) {\n      displayFlags |= View.NeedsComposite;\n    } else if ((displayFlags & View.NeedsComposite) !== 0) {\n      displayFlags = View.NeedsDisplay | View.NeedsComposite;\n    } else {\n      displayFlags = 0;\n    }\n    return displayFlags;\n  }\n\n  protected override onRender(viewContext: ViewContextType<this>): void {\n    const rasterFrame = this.rasterFrame;\n    this.resizeCanvas(this.canvas, rasterFrame);\n    this.resetRenderer(rasterFrame);\n    this.clearCanvas(rasterFrame);\n    super.onRender(viewContext);\n  }\n\n  protected override didComposite(viewContext: ViewContextType<this>): void {\n    this.compositeImage(viewContext);\n    super.didComposite(viewContext);\n  }\n\n  override extendViewContext(viewContext: GeoViewContext): ViewContextType<this> {\n    const rasterViewContext = Object.create(viewContext);\n    rasterViewContext.compositor = viewContext.renderer;\n    rasterViewContext.renderer = this.renderer;\n    return rasterViewContext;\n  }\n\n  /** @internal */\n  readonly ownRasterFrame: R2Box | null;\n\n  get rasterFrame(): R2Box {\n    let rasterFrame = this.ownRasterFrame;\n    if (rasterFrame === null) {\n      rasterFrame = this.deriveRasterFrame();\n    }\n    return rasterFrame;\n  }\n\n  /** @internal */\n  setRasterFrame(rasterFrame: R2Box | null): void {\n    (this as Mutable<this>).ownRasterFrame = rasterFrame;\n  }\n\n  protected deriveRasterFrame(): R2Box {\n    return this.deriveViewBounds();\n  }\n\n  protected createCanvas(): HTMLCanvasElement {\n    return document.createElement(\"canvas\");\n  }\n\n  protected resizeCanvas(canvas: HTMLCanvasElement, rasterFrame: R2Box): void {\n    const pixelRatio = this.pixelRatio;\n    const newWidth = rasterFrame.width;\n    const newHeight = rasterFrame.height;\n    const newCanvasWidth = newWidth * pixelRatio;\n    const newCanvasHeight = newHeight * pixelRatio;\n    const oldCanvasWidth = canvas.width;\n    const oldCanvasHeight = canvas.height;\n    if (newCanvasWidth !== oldCanvasWidth || newCanvasHeight !== oldCanvasHeight) {\n      canvas.width = newCanvasWidth;\n      canvas.height = newCanvasHeight;\n      canvas.style.width = newWidth + \"px\";\n      canvas.style.height = newHeight + \"px\";\n    }\n  }\n\n  protected clearCanvas(rasterFrame: R2Box): void {\n    const renderer = this.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      renderer.context.clearRect(0, 0, rasterFrame.xMax, rasterFrame.yMax);\n    } else if (renderer instanceof WebGLRenderer) {\n      const context = renderer.context;\n      context.clear(context.COLOR_BUFFER_BIT | context.DEPTH_BUFFER_BIT);\n    }\n  }\n\n  protected resetRenderer(rasterFrame: R2Box): void {\n    const renderer = this.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const pixelRatio = this.pixelRatio;\n      const dx = rasterFrame.xMin * pixelRatio;\n      const dy = rasterFrame.yMin * pixelRatio;\n      renderer.context.setTransform(pixelRatio, 0, 0, pixelRatio, -dx, -dy);\n      renderer.setTransform(Transform.affine(pixelRatio, 0, 0, pixelRatio, -dx, -dy));\n    } else if (renderer instanceof WebGLRenderer) {\n      renderer.context.viewport(rasterFrame.x, rasterFrame.y, rasterFrame.xMax, rasterFrame.yMax);\n    }\n  }\n\n  protected compositeImage(viewContext: ViewContextType<this>): void {\n    const compositor = viewContext.compositor;\n    if (compositor instanceof CanvasRenderer) {\n      const context = compositor.context;\n      const rasterFrame = this.rasterFrame;\n      const canvas = this.canvas;\n      if (rasterFrame.isDefined() && rasterFrame.width !== 0 && rasterFrame.height !== 0 &&\n          canvas.width !== 0 && canvas.height !== 0) {\n        const globalAlpha = context.globalAlpha;\n        const globalCompositeOperation = context.globalCompositeOperation;\n        context.globalAlpha = this.opacity.getValue();\n        context.globalCompositeOperation = this.compositeOperation.getValue();\n        context.drawImage(canvas, rasterFrame.x, rasterFrame.y, rasterFrame.width, rasterFrame.height);\n        context.globalAlpha = globalAlpha;\n        context.globalCompositeOperation = globalCompositeOperation;\n      }\n    }\n  }\n\n  ripple(options?: GeoRippleOptions): GeoRippleView | null {\n    return GeoRippleView.ripple(this, options);\n  }\n\n  override init(init: GeoRasterViewInit): void {\n    super.init(init);\n    if (init.geoAnchor !== void 0) {\n      this.geoAnchor(init.geoAnchor);\n    }\n    if (init.viewAnchor !== void 0) {\n      this.viewAnchor(init.viewAnchor);\n    }\n    if (init.xAlign !== void 0) {\n      this.xAlign(init.xAlign);\n    }\n    if (init.yAlign !== void 0) {\n      this.yAlign(init.yAlign);\n    }\n    if (init.width !== void 0) {\n      this.width(init.width);\n    }\n    if (init.height !== void 0) {\n      this.height(init.height);\n    }\n    if (init.opacity !== void 0) {\n      this.opacity(init.opacity);\n    }\n    if (init.compositeOperation !== void 0) {\n      this.compositeOperation(init.compositeOperation);\n    }\n  }\n\n  static override readonly MountFlags: ViewFlags = GeoView.MountFlags | View.NeedsComposite;\n  static override readonly UncullFlags: ViewFlags = GeoView.UncullFlags | View.NeedsComposite;\n  static override readonly UnhideFlags: ViewFlags = GeoView.UnhideFlags | View.NeedsComposite;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {GeoTile, GeoBox} from \"@swim/geo\";\nimport {GeoView} from \"../geo/GeoView\";\n\n/** @public */\nexport class GeoGridView extends GeoView {\n  constructor(geoTile: GeoTile) {\n    super();\n    this.geoTile = geoTile;\n    this.geoBounds = geoTile.bounds;\n  }\n\n  readonly geoTile: GeoTile;\n\n  override readonly geoBounds: GeoBox;\n\n  protected override setGeoBounds(newGeoBounds: GeoBox): void {\n    // immutable\n  }\n\n  protected override updateGeoBounds(): void {\n    // nop\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport type {GeoTile, GeoBox} from \"@swim/geo\";\nimport {Model, Trait, TraitSet} from \"@swim/model\";\nimport {GeoTrait} from \"../geo/GeoTrait\";\nimport {GeoLayerTrait} from \"../layer/GeoLayerTrait\";\nimport type {GeoGridTraitObserver} from \"./GeoGridTraitObserver\";\n\n/** @public */\nexport class GeoGridTrait extends GeoLayerTrait {\n  constructor(geoTile: GeoTile) {\n    super();\n    this.geoTile = geoTile;\n    this.geoBounds = geoTile.bounds;\n  }\n\n  override readonly observerType?: Class<GeoGridTraitObserver>;\n\n  readonly geoTile: GeoTile;\n\n  override readonly geoBounds: GeoBox;\n\n  override setGeoBounds(newGeoBounds: GeoBox): void {\n    // immutable\n  }\n\n  @TraitSet<GeoLayerTrait, GeoTrait>({\n    extends: true,\n    detectModel(model: Model): GeoTrait | null {\n      const geoTrait = model.getTrait(GeoTrait);\n      return !(geoTrait instanceof GeoGridTrait) ? geoTrait : null;\n    },\n  })\n  override readonly features!: TraitSet<this, GeoTrait>;\n  static override readonly features: MemberFastenerClass<GeoGridTrait, \"features\">;\n\n  @TraitSet<GeoGridTrait, GeoGridTrait>({\n    type: GeoGridTrait,\n    binds: true,\n    willAttachTrait(tileTrait: GeoGridTrait): void {\n      this.owner.callObservers(\"traitWillAttachTile\", tileTrait, this.owner);\n    },\n    didDetachTrait(tileTrait: GeoGridTrait): void {\n      this.owner.callObservers(\"traitDidDetachTile\", tileTrait, this.owner);\n    },\n    detectModel(model: Model): GeoGridTrait | null {\n      return model.getTrait(GeoGridTrait);\n    },\n    detectTrait(trait: Trait): GeoGridTrait | null {\n      return null;\n    },\n  })\n  readonly tiles!: TraitSet<this, GeoGridTrait>;\n  static readonly tiles: MemberFastenerClass<GeoGridTrait, \"tiles\">;\n\n  protected createTileTrait(geoTile: GeoTile): GeoGridTrait | null {\n    return new GeoGridTrait(geoTile);\n  }\n\n  protected createTileModel(geoTile: GeoTile): Model | null {\n    const tileTrait = this.createTileTrait(geoTile);\n    if (tileTrait !== null) {\n      const tileModel = new Model();\n      tileModel.setTrait(\"tile\", tileTrait);\n      return tileModel;\n    } else {\n      return null;\n    }\n  }\n\n  protected initTiles(): void {\n    let southWestModel = this.getChild(\"southWest\");\n    if (southWestModel === null) {\n      southWestModel = this.createTileModel(this.geoTile.southWestTile);\n      if (southWestModel !== null) {\n        this.setChild(\"southWest\", southWestModel);\n      }\n    }\n\n    let northWestModel = this.getChild(\"northWest\");\n    if (northWestModel === null) {\n      northWestModel = this.createTileModel(this.geoTile.northWestTile);\n      if (northWestModel !== null) {\n        this.setChild(\"northWest\", northWestModel);\n      }\n    }\n\n    let southEastModel = this.getChild(\"southEast\");\n    if (southEastModel === null) {\n      southEastModel = this.createTileModel(this.geoTile.southEastTile);\n      if (southEastModel !== null) {\n        this.setChild(\"southEast\", southEastModel);\n      }\n    }\n\n    let northEastTile = this.getChild(\"northEast\");\n    if (northEastTile === null) {\n      northEastTile = this.createTileModel(this.geoTile.northEastTile);\n      if (northEastTile !== null) {\n        this.setChild(\"northEast\", northEastTile);\n      }\n    }\n  }\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    this.initTiles();\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport type {GeoTile} from \"@swim/geo\";\nimport type {Trait} from \"@swim/model\";\nimport type {View} from \"@swim/view\";\nimport {Controller, TraitViewRef, TraitViewControllerSet} from \"@swim/controller\";\nimport type {GeoViewport} from \"../geo/GeoViewport\";\nimport type {GeoViewContext} from \"../geo/GeoViewContext\";\nimport type {GeoView} from \"../geo/GeoView\";\nimport type {GeoTrait} from \"../geo/GeoTrait\";\nimport {GeoController} from \"../geo/GeoController\";\nimport {GeoLayerControllerFeatureExt, GeoLayerController} from \"../layer/GeoLayerController\";\nimport {GeoGridView} from \"./GeoGridView\";\nimport {GeoGridTrait} from \"./GeoGridTrait\";\nimport type {GeoGridControllerObserver} from \"./GeoGridControllerObserver\";\n\n/** @public */\nexport interface GeoGridControllerTileExt {\n  attachTileTrait(tileTrait: GeoGridTrait, tileController: GeoGridController): void;\n  detachTileTrait(tileTrait: GeoGridTrait, tileController: GeoGridController): void;\n  attachTileView(tileView: GeoView, tileController: GeoGridController): void;\n  detachTileView(tileView: GeoView, tileController: GeoGridController): void;\n}\n\n/** @public */\nexport class GeoGridController extends GeoLayerController {\n  constructor(geoTile: GeoTile) {\n    super();\n    this.geoTile = geoTile;\n  }\n\n  override readonly observerType?: Class<GeoGridControllerObserver>;\n\n  readonly geoTile: GeoTile;\n\n  get minCullZoom(): number {\n    return this.geoTile.z;\n  }\n\n  get maxCullZoom(): number {\n    return Infinity;\n  }\n\n  protected autoCullGeoView(geoViewport: GeoViewport, geoView: GeoView): void {\n    const tileIsVisible = this.minCullZoom <= geoViewport.zoom && geoViewport.zoom < this.maxCullZoom\n                       && geoViewport.geoFrame.intersects(geoView.geoBounds);\n    geoView.setCulled(!tileIsVisible);\n  }\n\n  get minConsumeZoom(): number {\n    return this.geoTile.z;\n  }\n\n  get maxConsumeZoom(): number {\n    return Infinity;\n  }\n\n  protected autoConsumeGeoView(geoViewport: GeoViewport, geoView: GeoView): void {\n    const geoTrait = this.geo.trait;\n    if (geoTrait !== null) {\n      const viewIsVisible = this.minConsumeZoom <= geoViewport.zoom && geoViewport.zoom < this.maxConsumeZoom\n                         && geoViewport.geoFrame.intersects(geoView.geoBounds);\n      if (viewIsVisible) {\n        geoTrait.consume(this);\n      } else {\n        geoTrait.unconsume(this);\n      }\n    }\n  }\n\n  @TraitViewRef<GeoGridController, GeoGridTrait, GeoView>({\n    extends: true,\n    traitType: GeoGridTrait,\n    observesTrait: true,\n    didAttachTrait(geoTrait: GeoGridTrait, targetTrait: Trait | null): void {\n      const tileTraits = geoTrait.tiles.traits;\n      for (const traitId in tileTraits) {\n        const tileTrait = tileTraits[traitId]!;\n        this.owner.tiles.addTraitController(tileTrait);\n      }\n      const geoView = this.view;\n      if (geoView !== null && !geoView.culled) {\n        geoTrait.consume(this.owner);\n      }\n      GeoLayerController.geo.prototype.didAttachTrait.call(this, geoTrait, targetTrait);\n    },\n    willDetachTrait(geoTrait: GeoGridTrait): void {\n      GeoLayerController.geo.prototype.willDetachTrait.call(this, geoTrait);\n      geoTrait.unconsume(this.owner);\n      const tileTraits = geoTrait.tiles.traits;\n      for (const traitId in tileTraits) {\n        const tileTrait = tileTraits[traitId]!;\n        this.owner.tiles.deleteTraitController(tileTrait);\n      }\n    },\n    traitWillAttachTile(tileTrait: GeoGridTrait, targetTrait: Trait): void {\n      this.owner.tiles.addTraitController(tileTrait, targetTrait);\n    },\n    traitDidDetachTile(tileTrait: GeoGridTrait): void {\n      this.owner.tiles.deleteTraitController(tileTrait);\n    },\n    viewType: GeoGridView,\n    observesView: true,\n    didAttachView(geoView: GeoView, targetView: View | null): void {\n      GeoLayerController.geo.prototype.didAttachView.call(this, geoView, targetView);\n      geoView.setCulled(true);\n      const tileControllers = this.owner.tiles.controllers;\n      for (const controllerId in tileControllers) {\n        const tileController = tileControllers[controllerId]!;\n        const tileView = tileController.geo.view;\n        if (tileView !== null && tileView.parent === null) {\n          tileController.geo.insertView(geoView);\n        }\n      }\n    },\n    viewDidProject(viewContext: GeoViewContext, geoView: GeoView): void {\n      this.owner.autoCullGeoView(viewContext.geoViewport, geoView);\n      this.owner.autoConsumeGeoView(viewContext.geoViewport, geoView);\n    },\n    createView(): GeoGridView {\n      return new GeoGridView(this.owner.geoTile);\n    },\n  })\n  override readonly geo!: TraitViewRef<this, GeoGridTrait, GeoView>;\n  static override readonly geo: MemberFastenerClass<GeoGridController, \"geo\">;\n\n  @TraitViewControllerSet<GeoGridController, GeoTrait, GeoView, GeoController>({\n    extends: true,\n    detectController(controller: Controller): GeoController | null {\n      return controller instanceof GeoController && !(controller instanceof GeoGridController) ? controller : null;\n    },\n  })\n  override readonly features!: TraitViewControllerSet<this, GeoTrait, GeoView, GeoController> & GeoLayerControllerFeatureExt;\n  static override readonly features: MemberFastenerClass<GeoGridController, \"features\">;\n\n  @TraitViewControllerSet<GeoGridController, GeoGridTrait, GeoView, GeoGridController, GeoGridControllerTileExt>({\n    implements: true,\n    type: GeoGridController,\n    binds: true,\n    observes: true,\n    get parentView(): GeoView | null {\n      return this.owner.geo.view;\n    },\n    getTraitViewRef(tileController: GeoGridController): TraitViewRef<unknown, GeoGridTrait, GeoView> {\n      return tileController.geo;\n    },\n    willAttachController(tileController: GeoGridController): void {\n      this.owner.callObservers(\"controllerWillAttachTile\", tileController, this.owner);\n    },\n    didAttachController(tileController: GeoGridController): void {\n      const tileTrait = tileController.geo.trait;\n      if (tileTrait !== null) {\n        this.attachTileTrait(tileTrait, tileController);\n      }\n      const tileView = tileController.geo.view;\n      if (tileView !== null) {\n        this.attachTileView(tileView, tileController);\n      }\n    },\n    willDetachController(tileController: GeoGridController): void {\n      const tileView = tileController.geo.view;\n      if (tileView !== null) {\n        this.detachTileView(tileView, tileController);\n      }\n      const tileTrait = tileController.geo.trait;\n      if (tileTrait !== null) {\n        this.detachTileTrait(tileTrait, tileController);\n      }\n    },\n    didDetachController(tileController: GeoGridController): void {\n      this.owner.callObservers(\"controllerDidDetachTile\", tileController, this.owner);\n    },\n    controllerWillAttachGeoTrait(tileTrait: GeoGridTrait, tileController: GeoGridController): void {\n      this.owner.callObservers(\"controllerWillAttachTileTrait\", tileTrait, tileController, this.owner);\n      this.attachTileTrait(tileTrait, tileController);\n    },\n    controllerDidDetachGeoTrait(tileTrait: GeoGridTrait, tileController: GeoGridController): void {\n      this.detachTileTrait(tileTrait, tileController);\n      this.owner.callObservers(\"controllerDidDetachTileTrait\", tileTrait, tileController, this.owner);\n    },\n    attachTileTrait(tileTrait: GeoGridTrait, tileController: GeoGridController): void {\n      // hook\n    },\n    detachTileTrait(tileTrait: GeoGridTrait, tileController: GeoGridController): void {\n      // hook\n    },\n    controllerWillAttachGeoView(tileView: GeoView, tileController: GeoGridController): void {\n      this.owner.callObservers(\"controllerWillAttachTileView\", tileView, tileController, this.owner);\n      this.attachTileView(tileView, tileController);\n    },\n    controllerDidDetachGeoView(tileView: GeoView, tileController: GeoGridController): void {\n      this.detachTileView(tileView, tileController);\n      this.owner.callObservers(\"controllerDidDetachTileView\", tileView, tileController, this.owner);\n    },\n    attachTileView(tileView: GeoView, tileController: GeoGridController): void {\n      // hook\n    },\n    detachTileView(tileView: GeoView, tileController: GeoGridController): void {\n      tileView.remove();\n    },\n    createController(tileTrait?: GeoGridTrait): GeoGridController {\n      if (tileTrait !== void 0) {\n        return new GeoGridController(tileTrait.geoTile);\n      } else {\n        return TraitViewControllerSet.prototype.createController.call(this);\n      }\n    },\n  })\n  readonly tiles!: TraitViewControllerSet<this, GeoGridTrait, GeoView, GeoGridController> & GeoGridControllerTileExt;\n  static readonly tiles: MemberFastenerClass<GeoGridController, \"tiles\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Class} from \"@swim/util\";\nimport {Affinity, Property, Animator} from \"@swim/component\";\nimport {AnyLength, Length, AnyR2Point, R2Point, R2Segment, R2Box, R2Circle, Transform} from \"@swim/math\";\nimport {AnyGeoPoint, GeoPoint, GeoBox} from \"@swim/geo\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, View} from \"@swim/view\";\nimport {\n  GraphicsView,\n  FillViewInit,\n  FillView,\n  StrokeViewInit,\n  StrokeView,\n  PaintingContext,\n  PaintingRenderer,\n  CanvasContext,\n  CanvasRenderer,\n} from \"@swim/graphics\";\nimport {GeoViewInit, GeoView} from \"../geo/GeoView\";\nimport {GeoRippleOptions, GeoRippleView} from \"../effect/GeoRippleView\";\nimport type {GeoCircleViewObserver} from \"./GeoCircleViewObserver\";\n\n/** @public */\nexport type AnyGeoCircleView = GeoCircleView | GeoCircleViewInit;\n\n/** @public */\nexport interface GeoCircleViewInit extends GeoViewInit, FillViewInit, StrokeViewInit {\n  geoCenter?: AnyGeoPoint;\n  viewCenter?: AnyR2Point;\n  radius?: AnyLength;\n  hitRadius?: number;\n}\n\n/** @public */\nexport class GeoCircleView extends GeoView implements FillView, StrokeView {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"viewBounds\", {\n      value: R2Box.undefined(),\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly observerType?: Class<GeoCircleViewObserver>;\n\n  @Animator<GeoCircleView, GeoPoint | null, AnyGeoPoint | null>({\n    type: GeoPoint,\n    value: null,\n    didSetState(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.projectGeoCenter(newGeoCenter);\n    },\n    willSetValue(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.callObservers(\"viewWillSetGeoCenter\", newGeoCenter, oldGeoCenter, this.owner);\n    },\n    didSetValue(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.setGeoBounds(newGeoCenter !== null ? newGeoCenter.bounds : GeoBox.undefined());\n      if (this.mounted) {\n        this.owner.projectCircle(this.owner.viewContext);\n      }\n      this.owner.callObservers(\"viewDidSetGeoCenter\", newGeoCenter, oldGeoCenter, this.owner);\n    },\n  })\n  readonly geoCenter!: Animator<this, GeoPoint | null, AnyGeoPoint | null>;\n\n  @Animator<GeoCircleView, R2Point | null, AnyR2Point | null>({\n    type: R2Point,\n    value: R2Point.undefined(),\n    updateFlags: View.NeedsRender,\n  })\n  readonly viewCenter!: Animator<this, R2Point | null, AnyR2Point | null>;\n\n  @ThemeAnimator({type: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly radius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly fill!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly stroke!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Length, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly strokeWidth!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @Property({type: Number})\n  readonly hitRadius!: Property<this, number | undefined>;\n\n  protected override onProject(viewContext: ViewContextType<this>): void {\n    super.onProject(viewContext);\n    this.projectCircle(viewContext);\n  }\n\n  protected projectGeoCenter(geoCenter: GeoPoint | null): void {\n    if (this.mounted) {\n      const viewContext = this.viewContext as ViewContextType<this>;\n      const viewCenter = geoCenter !== null && geoCenter.isDefined()\n                       ? viewContext.geoViewport.project(geoCenter)\n                       : null;\n      this.viewCenter.setInterpolatedValue(this.viewCenter.value, viewCenter);\n      this.projectCircle(viewContext);\n    }\n  }\n\n  protected projectCircle(viewContext: ViewContextType<this>): void {\n    if (Affinity.Intrinsic >= (this.viewCenter.flags & Affinity.Mask)) { // this.viewCenter.hasAffinity(Affinity.Intrinsic)\n      const geoCenter = this.geoCenter.value;\n      const viewCenter = geoCenter !== null && geoCenter.isDefined()\n                       ? viewContext.geoViewport.project(geoCenter)\n                       : null;\n      (this.viewCenter as Mutable<typeof this.viewCenter>).value = viewCenter; // this.viewCenter.setValue(viewCenter, Affinity.Intrinsic)\n    }\n    const viewFrame = viewContext.viewFrame;\n    const size = Math.min(viewFrame.width, viewFrame.height);\n    const r = this.radius.getValue().pxValue(size);\n    const p0 = this.viewCenter.value;\n    const p1 = this.viewCenter.state;\n    if (p0 !== null && p1 !== null && (\n        viewFrame.intersectsCircle(new R2Circle(p0.x, p0.y, r)) ||\n        viewFrame.intersectsSegment(new R2Segment(p0.x, p0.y, p1.x, p1.y)))) {\n      this.setCulled(false);\n    } else {\n      this.setCulled(true);\n    }\n  }\n\n  protected override onRender(viewContext: ViewContextType<this>): void {\n    super.onRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      this.renderCircle(renderer.context, viewContext.viewFrame);\n    }\n  }\n\n  protected renderCircle(context: PaintingContext, frame: R2Box): void {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter !== null && viewCenter.isDefined()) {\n      // save\n      const contextFillStyle = context.fillStyle;\n      const contextLineWidth = context.lineWidth;\n      const contextStrokeStyle = context.strokeStyle;\n\n      const size = Math.min(frame.width, frame.height);\n      const radius = this.radius.getValue().pxValue(size);\n\n      context.beginPath();\n      context.arc(viewCenter.x, viewCenter.y, radius, 0, 2 * Math.PI);\n\n      const fill = this.fill.value;\n      if (fill !== null) {\n        context.fillStyle = fill.toString();\n        context.fill();\n      }\n\n      const stroke = this.stroke.value;\n      if (stroke !== null) {\n        const strokeWidth = this.strokeWidth.value;\n        if (strokeWidth !== null) {\n          context.lineWidth = strokeWidth.pxValue(size);\n        }\n        context.strokeStyle = stroke.toString();\n        context.stroke();\n      }\n\n      // restore\n      context.fillStyle = contextFillStyle;\n      context.lineWidth = contextLineWidth;\n      context.strokeStyle = contextStrokeStyle;\n    }\n  }\n\n  protected override renderGeoBounds(viewContext: ViewContextType<this>, outlineColor: Color, outlineWidth: number): void {\n    // nop\n  }\n\n  protected override updateGeoBounds(): void {\n    // nop\n  }\n\n  override readonly viewBounds!: R2Box;\n\n  override deriveViewBounds(): R2Box {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter !== null && viewCenter.isDefined()) {\n      const viewFrame = this.viewContext.viewFrame;\n      const size = Math.min(viewFrame.width, viewFrame.height);\n      const radius = this.radius.getValue().pxValue(size);\n      return new R2Box(viewCenter.x - radius, viewCenter.y - radius,\n                       viewCenter.x + radius, viewCenter.y + radius);\n    } else {\n      return R2Box.undefined();\n    }\n  }\n\n  override get popoverFrame(): R2Box {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter !== null && viewCenter.isDefined()) {\n      const viewFrame = this.viewContext.viewFrame;\n      const size = Math.min(viewFrame.width, viewFrame.height);\n      const inversePageTransform = this.pageTransform.inverse();\n      const px = inversePageTransform.transformX(viewCenter.x, viewCenter.y);\n      const py = inversePageTransform.transformY(viewCenter.x, viewCenter.y);\n      const radius = this.radius.getValue().pxValue(size);\n      return new R2Box(px - radius, py - radius, px + radius, py + radius);\n    } else {\n      return this.pageBounds;\n    }\n  }\n\n  override get hitBounds(): R2Box {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter !== null && viewCenter.isDefined()) {\n      const viewFrame = this.viewContext.viewFrame;\n      const size = Math.min(viewFrame.width, viewFrame.height);\n      const radius = this.radius.getValue().pxValue(size);\n      const hitRadius = Math.max(this.hitRadius.getValueOr(radius), radius);\n      return new R2Box(viewCenter.x - hitRadius, viewCenter.y - hitRadius,\n                       viewCenter.x + hitRadius, viewCenter.y + hitRadius);\n    } else {\n      return this.viewBounds;\n    }\n  }\n\n  protected override hitTest(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      return this.hitTestCircle(x, y, renderer.context, viewContext.viewFrame, renderer.transform);\n    }\n    return null;\n  }\n\n  protected hitTestCircle(x: number, y: number, context: CanvasContext,\n                          frame: R2Box, transform: Transform): GraphicsView | null {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter !== null && viewCenter.isDefined()) {\n      const size = Math.min(frame.width, frame.height);\n      const radius = this.radius.getValue().pxValue(size);\n\n      if (this.fill.value !== null) {\n        const hitRadius = Math.max(this.hitRadius.getValueOr(radius), radius);\n        const dx = viewCenter.x - x;\n        const dy = viewCenter.y - y;\n        if (dx * dx + dy * dy < hitRadius * hitRadius) {\n          return this;\n        }\n      }\n\n      const strokeWidth = this.strokeWidth.value;\n      if (this.stroke.value !== null && strokeWidth !== null) {\n        // save\n        const contextLineWidth = context.lineWidth;\n\n        const p = transform.transform(x, y);\n        context.beginPath();\n        context.arc(viewCenter.x, viewCenter.y, radius, 0, 2 * Math.PI);\n        context.lineWidth = strokeWidth.pxValue(size);\n        const pointInStroke = context.isPointInStroke(p.x, p.y);\n\n        // restore\n        context.lineWidth = contextLineWidth;\n\n        if (pointInStroke) {\n          return this;\n        }\n      }\n    }\n    return null;\n  }\n\n  ripple(options?: GeoRippleOptions): GeoRippleView | null {\n    return GeoRippleView.ripple(this, options);\n  }\n\n  override init(init: GeoCircleViewInit): void {\n    super.init(init);\n    if (init.geoCenter !== void 0) {\n      this.geoCenter(init.geoCenter);\n    }\n    if (init.viewCenter !== void 0) {\n      this.viewCenter(init.viewCenter);\n    }\n    if (init.radius !== void 0) {\n      this.radius(init.radius);\n    }\n    if (init.hitRadius !== void 0) {\n      this.hitRadius(init.hitRadius);\n    }\n    if (init.fill !== void 0) {\n      this.fill(init.fill);\n    }\n    if (init.stroke !== void 0) {\n      this.stroke(init.stroke);\n    }\n    if (init.strokeWidth !== void 0) {\n      this.strokeWidth(init.strokeWidth);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Class} from \"@swim/util\";\nimport {Affinity, Animator} from \"@swim/component\";\nimport {\n  AnyLength,\n  Length,\n  AnyAngle,\n  Angle,\n  AnyR2Point,\n  R2Point,\n  R2Segment,\n  R2Box,\n  R2Circle,\n} from \"@swim/math\";\nimport {AnyGeoPoint, GeoPoint, GeoBox} from \"@swim/geo\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, View} from \"@swim/view\";\nimport {\n  GraphicsView,\n  FillViewInit,\n  FillView,\n  StrokeViewInit,\n  StrokeView,\n  PaintingContext,\n  PaintingRenderer,\n  CanvasContext,\n  CanvasRenderer,\n} from \"@swim/graphics\";\nimport {Arc} from \"@swim/graphics\";\nimport {GeoViewInit, GeoView} from \"../geo/GeoView\";\nimport {GeoRippleOptions, GeoRippleView} from \"../effect/GeoRippleView\";\nimport type {GeoArcViewObserver} from \"./GeoArcViewObserver\";\n\n/** @public */\nexport type AnyGeoArcView = GeoArcView | GeoArcViewInit;\n\n/** @public */\nexport interface GeoArcViewInit extends GeoViewInit, FillViewInit, StrokeViewInit {\n  geoCenter?: AnyGeoPoint;\n  viewCenter?: R2Point;\n  innerRadius?: AnyLength;\n  outerRadius?: AnyLength;\n  startAngle?: AnyAngle;\n  sweepAngle?: AnyAngle;\n  padAngle?: AnyAngle;\n  padRadius?: AnyLength | null;\n  cornerRadius?: AnyLength;\n}\n\n/** @public */\nexport class GeoArcView extends GeoView implements FillView, StrokeView {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"viewBounds\", {\n      value: R2Box.undefined(),\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly observerType?: Class<GeoArcViewObserver>;\n\n  @Animator<GeoArcView, GeoPoint | null, AnyGeoPoint | null>({\n    type: GeoPoint,\n    value: null,\n    didSetState(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.projectGeoCenter(newGeoCenter);\n    },\n    willSetValue(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.callObservers(\"viewWillSetGeoCenter\", newGeoCenter, oldGeoCenter, this.owner);\n    },\n    didSetValue(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.setGeoBounds(newGeoCenter !== null ? newGeoCenter.bounds : GeoBox.undefined());\n      if (this.mounted) {\n        this.owner.projectArc(this.owner.viewContext);\n      }\n      this.owner.callObservers(\"viewDidSetGeoCenter\", newGeoCenter, oldGeoCenter, this.owner);\n    },\n  })\n  readonly geoCenter!: Animator<this, GeoPoint | null, AnyGeoPoint | null>;\n\n  @Animator<GeoArcView, R2Point | null, AnyR2Point | null>({\n    type: R2Point,\n    value: R2Point.undefined(),\n    updateFlags: View.NeedsRender,\n  })\n  readonly viewCenter!: Animator<this, R2Point | null, AnyR2Point | null>;\n\n  @ThemeAnimator({type: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly innerRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly outerRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Angle, value: Angle.zero(), updateFlags: View.NeedsRender})\n  readonly startAngle!: ThemeAnimator<this, Angle, AnyAngle>;\n\n  @ThemeAnimator({type: Angle, value: Angle.zero(), updateFlags: View.NeedsRender})\n  readonly sweepAngle!: ThemeAnimator<this, Angle, AnyAngle>;\n\n  @ThemeAnimator({type: Angle, value: Angle.zero(), updateFlags: View.NeedsRender})\n  readonly padAngle!: ThemeAnimator<this, Angle, AnyAngle>;\n\n  @ThemeAnimator({type: Length, value: null, updateFlags: View.NeedsRender})\n  readonly padRadius!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator({type: Length, value: Length.zero(), updateFlags: View.NeedsRender})\n  readonly cornerRadius!: ThemeAnimator<this, Length, AnyLength>;\n\n  @ThemeAnimator({type: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly fill!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly stroke!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Length, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly strokeWidth!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  get value(): Arc | null {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter !== null && viewCenter.isDefined()) {\n      return new Arc(viewCenter, this.innerRadius.value, this.outerRadius.value,\n                     this.startAngle.value, this.sweepAngle.value, this.padAngle.value,\n                     this.padRadius.value, this.cornerRadius.value);\n    } else {\n      return null;\n    }\n  }\n\n  get state(): Arc | null {\n    const viewCenter = this.viewCenter.state;\n    if (viewCenter !== null && viewCenter.isDefined()) {\n      return new Arc(viewCenter, this.innerRadius.state, this.outerRadius.state,\n                     this.startAngle.state, this.sweepAngle.state, this.padAngle.state,\n                     this.padRadius.state, this.cornerRadius.state);\n    } else {\n      return null;\n    }\n  }\n\n  protected override onProject(viewContext: ViewContextType<this>): void {\n    super.onProject(viewContext);\n    this.projectArc(viewContext);\n  }\n\n  protected projectGeoCenter(geoCenter: GeoPoint | null): void {\n    if (this.mounted) {\n      const viewContext = this.viewContext as ViewContextType<this>;\n      const viewCenter = geoCenter !== null && geoCenter.isDefined()\n                       ? viewContext.geoViewport.project(geoCenter)\n                       : null;\n      this.viewCenter.setInterpolatedValue(this.viewCenter.value, viewCenter);\n      this.projectArc(viewContext);\n    }\n  }\n\n  protected projectArc(viewContext: ViewContextType<this>): void {\n    if (Affinity.Intrinsic >= (this.viewCenter.flags & Affinity.Mask)) { // this.viewCenter.hasAffinity(Affinity.Intrinsic)\n      const geoCenter = this.geoCenter.value;\n      const viewCenter = geoCenter !== null && geoCenter.isDefined()\n                       ? viewContext.geoViewport.project(geoCenter)\n                       : null;\n      (this.viewCenter as Mutable<typeof this.viewCenter>).value = viewCenter; // this.viewCenter.setValue(viewCenter, Affinity.Intrinsic)\n    }\n    const viewFrame = viewContext.viewFrame;\n    const size = Math.min(viewFrame.width, viewFrame.height);\n    const r = this.outerRadius.getValue().pxValue(size);\n    const p0 = this.viewCenter.value;\n    const p1 = this.viewCenter.state;\n    if (p0 !== null && p1 !== null && (\n        viewFrame.intersectsCircle(new R2Circle(p0.x, p0.y, r)) ||\n        viewFrame.intersectsSegment(new R2Segment(p0.x, p0.y, p1.x, p1.y)))) {\n      this.setCulled(false);\n    } else {\n      this.setCulled(true);\n    }\n  }\n\n  protected override onRender(viewContext: ViewContextType<this>): void {\n    super.onRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      this.renderArc(renderer.context, viewContext.viewFrame);\n    }\n  }\n\n  protected renderArc(context: PaintingContext, frame: R2Box): void {\n    const arc = this.value;\n    if (arc !== null && frame.isDefined()) {\n      // save\n      const contextFillStyle = context.fillStyle;\n      const contextLineWidth = context.lineWidth;\n      const contextStrokeStyle = context.strokeStyle;\n\n      context.beginPath();\n      arc.draw(context, frame);\n\n      const fill = this.fill.value;\n      if (fill !== null) {\n        context.fillStyle = fill.toString();\n        context.fill();\n      }\n\n      const stroke = this.stroke.value;\n      if (stroke !== null) {\n        const strokeWidth = this.strokeWidth.value;\n        if (strokeWidth !== null) {\n          const size = Math.min(frame.width, frame.height);\n          context.lineWidth = strokeWidth.pxValue(size);\n        }\n        context.strokeStyle = stroke.toString();\n        context.stroke();\n      }\n\n      // restore\n      context.fillStyle = contextFillStyle;\n      context.lineWidth = contextLineWidth;\n      context.strokeStyle = contextStrokeStyle;\n    }\n  }\n\n  protected override renderGeoBounds(viewContext: ViewContextType<this>, outlineColor: Color, outlineWidth: number): void {\n    // nop\n  }\n\n  protected override updateGeoBounds(): void {\n    // nop\n  }\n\n  override readonly viewBounds!: R2Box;\n\n  override deriveViewBounds(): R2Box {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter !== null && viewCenter.isDefined()) {\n      const viewFrame = this.viewContext.viewFrame;\n      const size = Math.min(viewFrame.width, viewFrame.height);\n      const radius = this.outerRadius.getValue().pxValue(size);\n      return new R2Box(viewCenter.x - radius, viewCenter.y - radius,\n                       viewCenter.x + radius, viewCenter.y + radius);\n    } else {\n      return R2Box.undefined();\n    }\n  }\n\n  override get popoverFrame(): R2Box {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter !== null && viewCenter.isDefined()) {\n      const viewFrame = this.viewContext.viewFrame;\n      const size = Math.min(viewFrame.width, viewFrame.height);\n      const inversePageTransform = this.pageTransform.inverse();\n      const px = inversePageTransform.transformX(viewCenter.x, viewCenter.y);\n      const py = inversePageTransform.transformY(viewCenter.x, viewCenter.y);\n      const r = (this.innerRadius.getValue().pxValue(size) + this.outerRadius.getValue().pxValue(size)) / 2;\n      const a = this.startAngle.getValue().radValue() + this.sweepAngle.getValue().radValue() / 2;\n      const x = px + r * Math.cos(a);\n      const y = py + r * Math.sin(a);\n      return new R2Box(x, y, x, y);\n    } else {\n      return this.pageBounds;\n    }\n  }\n\n  protected override hitTest(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const p = renderer.transform.transform(x, y);\n      return this.hitTestArc(p.x, p.y, renderer.context, viewContext.viewFrame);\n    }\n    return null;\n  }\n\n  protected hitTestArc(x: number, y: number, context: CanvasContext, frame: R2Box): GraphicsView | null {\n    const arc = this.value;\n    if (arc !== null) {\n      context.beginPath();\n      arc.draw(context, frame);\n      if (this.fill.value !== null && context.isPointInPath(x, y)) {\n        return this;\n      } else if (this.stroke.value !== void 0) {\n        const strokeWidth = this.strokeWidth.value;\n        if (strokeWidth !== null) {\n          // save\n          const contextLineWidth = context.lineWidth;\n\n          const size = Math.min(frame.width, frame.height);\n          context.lineWidth = strokeWidth.pxValue(size);\n          const pointInStroke = context.isPointInStroke(x, y);\n\n          // restore\n          context.lineWidth = contextLineWidth;\n\n          if (pointInStroke) {\n            return this;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  ripple(options?: GeoRippleOptions): GeoRippleView | null {\n    return GeoRippleView.ripple(this, options);\n  }\n\n  override init(init: GeoArcViewInit): void {\n    super.init(init);\n    if (init.geoCenter !== void 0) {\n      this.geoCenter(init.geoCenter);\n    }\n    if (init.viewCenter !== void 0) {\n      this.viewCenter(init.viewCenter);\n    }\n    if (init.innerRadius !== void 0) {\n      this.innerRadius(init.innerRadius);\n    }\n    if (init.outerRadius !== void 0) {\n      this.outerRadius(init.outerRadius);\n    }\n    if (init.startAngle !== void 0) {\n      this.startAngle(init.startAngle);\n    }\n    if (init.sweepAngle !== void 0) {\n      this.sweepAngle(init.sweepAngle);\n    }\n    if (init.padAngle !== void 0) {\n      this.padAngle(init.padAngle);\n    }\n    if (init.padRadius !== void 0) {\n      this.padRadius(init.padRadius);\n    }\n    if (init.cornerRadius !== void 0) {\n      this.cornerRadius(init.cornerRadius);\n    }\n    if (init.fill !== void 0) {\n      this.fill(init.fill);\n    }\n    if (init.stroke !== void 0) {\n      this.stroke(init.stroke);\n    }\n    if (init.strokeWidth !== void 0) {\n      this.strokeWidth(init.strokeWidth);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Class} from \"@swim/util\";\nimport {Affinity, Animator} from \"@swim/component\";\nimport {AnyR2Point, R2Point, R2Box, R2Path} from \"@swim/math\";\nimport {AnyGeoPoint, GeoPoint, GeoBox, AnyGeoPath, GeoPath} from \"@swim/geo\";\nimport type {ViewContextType} from \"@swim/view\";\nimport {GeoViewInit, GeoView} from \"../geo/GeoView\";\nimport {GeoRippleOptions, GeoRippleView} from \"../effect/GeoRippleView\";\nimport type {GeoPathViewObserver} from \"./GeoPathViewObserver\";\n\n/** @public */\nexport interface GeoPathViewInit extends GeoViewInit {\n  geoPath?: GeoPath;\n}\n\n/** @public */\nexport class GeoPathView extends GeoView {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"viewBounds\", {\n      value: R2Box.undefined(),\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly observerType?: Class<GeoPathViewObserver>;\n\n  @Animator<GeoPathView, GeoPath | null, AnyGeoPath | null>({\n    type: GeoPath,\n    value: null,\n    willSetValue(newGeoPath: GeoPath | null, oldGeoPath: GeoPath | null): void {\n      this.owner.callObservers(\"viewWillSetGeoPath\", newGeoPath, oldGeoPath, this.owner);\n    },\n    didSetValue(newGeoPath: GeoPath | null, oldGeoPath: GeoPath | null): void {\n      this.owner.setGeoBounds(newGeoPath !== null ? newGeoPath.bounds : GeoBox.undefined());\n      if (this.mounted) {\n        this.owner.projectPath(this.owner.viewContext);\n      }\n      this.owner.callObservers(\"viewDidSetGeoPath\", newGeoPath, oldGeoPath, this.owner);\n    },\n  })\n  readonly geoPath!: Animator<this, GeoPath | null, AnyGeoPath | null>;\n\n  @Animator({type: R2Path, value: null})\n  readonly viewPath!: Animator<this, R2Path | null>;\n\n  @Animator({type: GeoPoint, value: null})\n  readonly geoCentroid!: Animator<this, GeoPoint | null, AnyGeoPoint | null>;\n\n  @Animator({type: R2Point, value: null})\n  readonly viewCentroid!: Animator<this, R2Point | null, AnyR2Point | null>;\n\n  protected override onProject(viewContext: ViewContextType<this>): void {\n    super.onProject(viewContext);\n    this.projectPath(viewContext);\n  }\n\n  protected projectPath(viewContext: ViewContextType<this>): void {\n    const geoViewport = viewContext.geoViewport;\n\n    let viewPath: R2Path | null;\n    if (this.viewPath.hasAffinity(Affinity.Intrinsic)) {\n      const geoPath = this.geoPath.value;\n      viewPath = geoPath !== null && geoPath.isDefined() ? geoPath.project(geoViewport) : null;\n      this.viewPath.setState(viewPath, Affinity.Intrinsic);\n    } else {\n      viewPath = this.viewPath.value;\n    }\n\n    if (this.viewCentroid.hasAffinity(Affinity.Intrinsic)) {\n      const geoCentroid = this.geoCentroid.value;\n      const viewCentroid = geoCentroid !== null && geoCentroid.isDefined()\n                         ? geoViewport.project(geoCentroid)\n                         : null;\n      this.viewCentroid.setState(viewCentroid, Affinity.Intrinsic);\n    }\n\n    (this as Mutable<this>).viewBounds = viewPath !== null ? viewPath.bounds : viewContext.viewFrame;\n\n    this.cullGeoFrame(viewContext.geoViewport.geoFrame);\n  }\n\n  protected override updateGeoBounds(): void {\n    // nop\n  }\n\n  override get popoverFrame(): R2Box {\n    const inversePageTransform = this.pageTransform.inverse();\n    const viewCentroid = this.viewCentroid.value;\n    if (viewCentroid !== null && viewCentroid.isDefined()) {\n      const px = inversePageTransform.transformX(viewCentroid.x, viewCentroid.y);\n      const py = inversePageTransform.transformY(viewCentroid.x, viewCentroid.y);\n      return new R2Box(px, py, px, py);\n    } else {\n      return this.viewBounds.transform(inversePageTransform);\n    }\n  }\n\n  override readonly viewBounds!: R2Box;\n\n  ripple(options?: GeoRippleOptions): GeoRippleView | null {\n    return GeoRippleView.ripple(this, options);\n  }\n\n  override init(init: GeoPathViewInit): void {\n    super.init(init);\n    if (init.geoPath !== void 0) {\n      this.geoPath(init.geoPath);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {AnyLength, Length, R2Box} from \"@swim/math\";\nimport {Property} from \"@swim/component\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, View} from \"@swim/view\";\nimport {\n  GraphicsView,\n  StrokeViewInit,\n  StrokeView,\n  PaintingContext,\n  PaintingRenderer,\n  CanvasContext,\n  CanvasRenderer,\n} from \"@swim/graphics\";\nimport {GeoPathViewInit, GeoPathView} from \"./GeoPathView\";\nimport type {GeoLineViewObserver} from \"./GeoLineViewObserver\";\n\n/** @public */\nexport interface GeoLineViewInit extends GeoPathViewInit, StrokeViewInit {\n  hitWidth?: number;\n}\n\n/** @public */\nexport class GeoLineView extends GeoPathView implements StrokeView {\n  override readonly observerType?: Class<GeoLineViewObserver>;\n\n  @ThemeAnimator<GeoLineView, Color | null, AnyColor | null>({\n    type: Color,\n    value: null,\n    inherits: true,\n    updateFlags: View.NeedsRender,\n    willSetValue(newStroke: Color | null, oldStroke: Color | null): void {\n      this.owner.callObservers(\"viewWillSetStroke\", newStroke, oldStroke, this.owner);\n    },\n    didSetValue(newStroke: Color | null, oldStroke: Color | null): void {\n      this.owner.callObservers(\"viewDidSetStroke\", newStroke, oldStroke, this.owner);\n    },\n  })\n  readonly stroke!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator<GeoLineView, Length | null, AnyLength | null>({\n    type: Length,\n    value: null,\n    inherits: true,\n    updateFlags: View.NeedsRender,\n    willSetValue(newStrokeWidth: Length | null, oldStrokeWidth: Length | null): void {\n      this.owner.callObservers(\"viewWillSetStrokeWidth\", newStrokeWidth, oldStrokeWidth, this.owner);\n    },\n    didSetValue(newStrokeWidth: Length | null, oldStrokeWidth: Length | null): void {\n      this.owner.callObservers(\"viewDidSetStrokeWidth\", newStrokeWidth, oldStrokeWidth, this.owner);\n    },\n  })\n  readonly strokeWidth!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @Property({type: Number})\n  readonly hitWidth!: Property<this, number | undefined>;\n\n  protected override onRender(viewContext: ViewContextType<this>): void {\n    super.onRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      this.renderLine(renderer.context, viewContext.viewFrame);\n    }\n  }\n\n  protected renderLine(context: PaintingContext, frame: R2Box): void {\n    const viewPath = this.viewPath.value;\n    if (viewPath !== null && viewPath.isDefined()) {\n      const stroke = this.stroke.value;\n      const strokeWidth = this.strokeWidth.value;\n      if (stroke !== null && strokeWidth !== null) {\n        // save\n        const contextLineWidth = context.lineWidth;\n        const contextStrokeStyle = context.strokeStyle;\n\n        context.beginPath();\n        viewPath.draw(context);\n\n        const size = Math.min(frame.width, frame.height);\n        context.lineWidth = strokeWidth.pxValue(size);\n        context.strokeStyle = stroke.toString();\n        context.stroke();\n\n        // restore\n        context.lineWidth = contextLineWidth;\n        context.strokeStyle = contextStrokeStyle;\n      }\n    }\n  }\n\n  protected override hitTest(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const p = renderer.transform.transform(x, y);\n      return this.hitTestLine(p.x, p.y, renderer.context, viewContext.viewFrame);\n    }\n    return null;\n  }\n\n  protected hitTestLine(x: number, y: number, context: CanvasContext, frame: R2Box): GraphicsView | null {\n    const viewPath = this.viewPath.value;\n    if (viewPath !== null && viewPath.isDefined()) {\n      if (this.stroke.value !== null) {\n        // save\n        const contextLineWidth = context.lineWidth;\n\n        context.beginPath();\n        viewPath.draw(context);\n\n        let hitWidth = this.hitWidth.getValueOr(0);\n        const strokeWidth = this.strokeWidth.value;\n        if (strokeWidth !== null) {\n          const size = Math.min(frame.width, frame.height);\n          hitWidth = Math.max(hitWidth, strokeWidth.pxValue(size));\n        }\n        context.lineWidth = hitWidth;\n        const pointInStroke = context.isPointInStroke(x, y);\n\n        // restore\n        context.lineWidth = contextLineWidth;\n\n        if (pointInStroke) {\n          return this;\n        }\n      }\n    }\n    return null;\n  }\n\n  override init(init: GeoLineViewInit): void {\n    super.init(init);\n    if (init.stroke !== void 0) {\n      this.stroke(init.stroke);\n    }\n    if (init.strokeWidth !== void 0) {\n      this.strokeWidth(init.strokeWidth);\n    }\n    if (init.hitWidth !== void 0) {\n      this.hitWidth(init.hitWidth);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {AnyLength, Length, R2Box} from \"@swim/math\";\nimport {Property} from \"@swim/component\";\nimport type {GeoBox} from \"@swim/geo\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, View} from \"@swim/view\";\nimport {\n  GraphicsView,\n  FillViewInit,\n  FillView,\n  StrokeViewInit,\n  StrokeView,\n  PaintingContext,\n  PaintingRenderer,\n  CanvasContext,\n  CanvasRenderer,\n} from \"@swim/graphics\";\nimport {GeoPathViewInit, GeoPathView} from \"./GeoPathView\";\nimport type {GeoAreaViewObserver} from \"./GeoAreaViewObserver\";\n\n/** @public */\nexport interface GeoAreaViewInit extends GeoPathViewInit, FillViewInit, StrokeViewInit {\n  clipViewport?: true;\n}\n\n/** @public */\nexport class GeoAreaView extends GeoPathView implements FillView, StrokeView {\n  override readonly observerType?: Class<GeoAreaViewObserver>;\n\n  @ThemeAnimator<GeoAreaView, Color | null, AnyColor | null>({\n    type: Color,\n    value: null,\n    inherits: true,\n    updateFlags: View.NeedsRender,\n    willSetValue(newFill: Color | null, oldFill: Color | null): void {\n      this.owner.callObservers(\"viewWillSetFill\", newFill, oldFill, this.owner);\n    },\n    didSetValue(newFill: Color | null, oldFill: Color | null): void {\n      this.owner.callObservers(\"viewDidSetFill\", newFill, oldFill, this.owner);\n    },\n  })\n  readonly fill!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator<GeoAreaView, Color | null, AnyColor | null>({\n    type: Color,\n    value: null,\n    inherits: true,\n    updateFlags: View.NeedsRender,\n    willSetValue(newStroke: Color | null, oldStroke: Color | null): void {\n      this.owner.callObservers(\"viewWillSetStroke\", newStroke, oldStroke, this.owner);\n    },\n    didSetValue(newStroke: Color | null, oldStroke: Color | null): void {\n      this.owner.callObservers(\"viewDidSetStroke\", newStroke, oldStroke, this.owner);\n    },\n  })\n  readonly stroke!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator<GeoAreaView, Length | null, AnyLength | null>({\n    type: Length,\n    value: null,\n    inherits: true,\n    updateFlags: View.NeedsRender,\n    willSetValue(newStrokeWidth: Length | null, oldStrokeWidth: Length | null): void {\n      this.owner.callObservers(\"viewWillSetStrokeWidth\", newStrokeWidth, oldStrokeWidth, this.owner);\n    },\n    didSetValue(newStrokeWidth: Length | null, oldStrokeWidth: Length | null): void {\n      this.owner.callObservers(\"viewDidSetStrokeWidth\", newStrokeWidth, oldStrokeWidth, this.owner);\n    },\n  })\n  readonly strokeWidth!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @Property({type: Boolean, value: true})\n  readonly clipViewport!: Property<this, boolean>;\n\n  override cullGeoFrame(geoFrame: GeoBox = this.geoFrame): void {\n    let culled: boolean;\n    if (geoFrame.intersects(this.geoBounds)) {\n      const viewFrame = this.viewContext.viewFrame;\n      const bounds = this.viewBounds;\n      // check if 9x9 view frame fully contains view bounds\n      const contained = !this.clipViewport.value\n                     || viewFrame.xMin - 4 * viewFrame.width <= bounds.xMin\n                     && bounds.xMax <= viewFrame.xMax + 4 * viewFrame.width\n                     && viewFrame.yMin - 4 * viewFrame.height <= bounds.yMin\n                     && bounds.yMax <= viewFrame.yMax + 4 * viewFrame.height;\n      culled = !contained || !viewFrame.intersects(bounds);\n    } else {\n      culled = true;\n    }\n    this.setCulled(culled);\n  }\n\n  protected override onRender(viewContext: ViewContextType<this>): void {\n    super.onRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      this.renderArea(renderer.context, viewContext.viewFrame);\n    }\n  }\n\n  protected renderArea(context: PaintingContext, frame: R2Box): void {\n    const viewPath = this.viewPath.value;\n    if (viewPath !== null && viewPath.isDefined()) {\n      // save\n      const contextFillStyle = context.fillStyle;\n      const contextLineWidth = context.lineWidth;\n      const contextStrokeStyle = context.strokeStyle;\n\n      context.beginPath();\n      viewPath.draw(context);\n      const fill = this.fill.value;\n      if (fill !== null) {\n        context.fillStyle = fill.toString();\n        context.fill();\n      }\n      const stroke = this.stroke.value;\n      const strokeWidth = this.strokeWidth.value;\n      if (stroke !== null && strokeWidth !== null) {\n        const size = Math.min(frame.width, frame.height);\n        context.lineWidth = strokeWidth.pxValue(size);\n        context.strokeStyle = stroke.toString();\n        context.stroke();\n      }\n\n      // restore\n      context.fillStyle = contextFillStyle;\n      context.lineWidth = contextLineWidth;\n      context.strokeStyle = contextStrokeStyle;\n    }\n  }\n\n  protected override hitTest(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const p = renderer.transform.transform(x, y);\n      return this.hitTestArea(p.x, p.y, renderer.context, viewContext.viewFrame);\n    }\n    return null;\n  }\n\n  protected hitTestArea(x: number, y: number, context: CanvasContext, frame: R2Box): GraphicsView | null {\n    const viewPath = this.viewPath.value;\n    if (viewPath !== null && viewPath.isDefined()) {\n      context.beginPath();\n      viewPath.draw(context);\n      if (this.fill.value !== null && context.isPointInPath(x, y)) {\n        return this;\n      }\n      if (this.stroke.value !== null) {\n        const strokeWidth = this.strokeWidth.value;\n        if (strokeWidth !== null) {\n          // save\n          const contextLineWidth = context.lineWidth;\n\n          const size = Math.min(frame.width, frame.height);\n          context.lineWidth = strokeWidth.pxValue(size);\n          const pointInStroke = context.isPointInStroke(x, y);\n\n          // restore\n          context.lineWidth = contextLineWidth;\n\n          if (pointInStroke) {\n            return this;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  override init(init: GeoAreaViewInit): void {\n    super.init(init);\n    if (init.fill !== void 0) {\n      this.fill(init.fill);\n    }\n    if (init.stroke !== void 0) {\n      this.stroke(init.stroke);\n    }\n    if (init.strokeWidth !== void 0) {\n      this.strokeWidth(init.strokeWidth);\n    }\n    if (init.clipViewport !== void 0) {\n      this.clipViewport(init.clipViewport);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {AnyGeoPath, GeoPath, GeoBox} from \"@swim/geo\";\nimport {GeoTrait} from \"../geo/GeoTrait\";\nimport type {GeoPathTraitObserver} from \"./GeoPathTraitObserver\";\n\n/** @public */\nexport abstract class GeoPathTrait extends GeoTrait {\n  override readonly observerType?: Class<GeoPathTraitObserver>;\n\n  override get geoBounds(): GeoBox {\n    const geoPath = this.geoPath.value;\n    return geoPath !== null ? geoPath.bounds : GeoBox.undefined();\n  }\n\n  @Property<GeoPathTrait, GeoPath | null, AnyGeoPath | null>({\n    type: GeoPath,\n    value: null,\n    willSetValue(newGeoPath: GeoPath | null, oldGeoPath: GeoPath | null): void {\n      this.owner.callObservers(\"traitWillSetGeoPath\", newGeoPath, oldGeoPath, this.owner);\n    },\n    didSetValue(newGeoPath: GeoPath | null, oldGeoPath: GeoPath | null): void {\n      this.owner.callObservers(\"traitDidSetGeoPath\", newGeoPath, oldGeoPath, this.owner);\n    },\n  })\n  readonly geoPath!: Property<this, GeoPath | null, AnyGeoPath | null>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {GeoPathTrait} from \"./GeoPathTrait\";\nimport type {GeoLineTraitObserver} from \"./GeoLineTraitObserver\";\n\n/** @public */\nexport abstract class GeoLineTrait extends GeoPathTrait {\n  override readonly observerType?: Class<GeoLineTraitObserver>;\n\n  @Property<GeoLineTrait, Look<Color> | Color | null, Look<Color> | AnyColor | null>({\n    value: null,\n    willSetValue(newStroke: Look<Color> | Color | null, oldStroke: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"traitWillSetStroke\", newStroke, oldStroke, this.owner);\n    },\n    didSetValue(newStroke: Look<Color> | Color | null, oldStroke: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"traitDidSetStroke\", newStroke, oldStroke, this.owner);\n    },\n    fromAny(stroke: Look<Color> | AnyColor | null): Look<Color> | Color | null {\n      if (stroke !== null && !(stroke instanceof Look)) {\n        stroke = Color.fromAny(stroke);\n      }\n      return stroke;\n    },\n  })\n  readonly stroke!: Property<this, Look<Color> | Color | null, Look<Color> | AnyColor | null>;\n\n  @Property<GeoLineTrait, Length | null, AnyLength | null>({\n    type: Length,\n    value: null,\n    willSetValue(newStrokeWidth: Length | null, oldStrokeWidth: Length | null): void {\n      this.owner.callObservers(\"traitWillSetStrokeWidth\", newStrokeWidth, oldStrokeWidth, this.owner);\n    },\n    didSetValue(newStrokeWidth: Length | null, oldStrokeWidth: Length | null): void {\n      this.owner.callObservers(\"traitDidSetStrokeWidth\", newStrokeWidth, oldStrokeWidth, this.owner);\n    },\n  })\n  readonly strokeWidth!: Property<this, Length | null, AnyLength | null>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {AnyLength, Length} from \"@swim/math\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {Look} from \"@swim/theme\";\nimport {GeoPathTrait} from \"./GeoPathTrait\";\nimport type {GeoAreaTraitObserver} from \"./GeoAreaTraitObserver\";\n\n/** @public */\nexport abstract class GeoAreaTrait extends GeoPathTrait {\n  override readonly observerType?: Class<GeoAreaTraitObserver>;\n\n  @Property<GeoAreaTrait, Look<Color> | Color | null, Look<Color> | AnyColor | null>({\n    value: null,\n    willSetValue(newFill: Look<Color> | Color | null, oldFill: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"traitWillSetFill\", newFill, oldFill, this.owner);\n    },\n    didSetValue(newFill: Look<Color> | Color | null, oldFill: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"traitDidSetFill\", newFill, oldFill, this.owner);\n    },\n    fromAny(fill: Look<Color> | AnyColor | null): Look<Color> | Color | null {\n      if (fill !== null && !(fill instanceof Look)) {\n        fill = Color.fromAny(fill);\n      }\n      return fill;\n    },\n  })\n  readonly fill!: Property<this, Look<Color> | Color | null, Look<Color> | AnyColor | null>;\n\n  @Property<GeoAreaTrait, Look<Color> | Color | null, Look<Color> | AnyColor | null>({\n    value: null,\n    willSetValue(newStroke: Look<Color> | Color | null, oldStroke: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"traitWillSetStroke\", newStroke, oldStroke, this.owner);\n    },\n    didSetValue(newStroke: Look<Color> | Color | null, oldStroke: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"traitDidSetStroke\", newStroke, oldStroke, this.owner);\n    },\n    fromAny(stroke: Look<Color> | AnyColor | null): Look<Color> | Color | null {\n      if (stroke !== null && !(stroke instanceof Look)) {\n        stroke = Color.fromAny(stroke);\n      }\n      return stroke;\n    },\n  })\n  readonly stroke!: Property<this, Look<Color> | Color | null, Look<Color> | AnyColor | null>;\n\n  @Property<GeoAreaTrait, Length | null, AnyLength | null>({\n    type: Length,\n    value: null,\n    willSetValue(newStrokeWidth: Length | null, oldStrokeWidth: Length | null): void {\n      this.owner.callObservers(\"traitWillSetStrokeWidth\", newStrokeWidth, oldStrokeWidth, this.owner);\n    },\n    didSetValue(newStrokeWidth: Length | null, oldStrokeWidth: Length | null): void {\n      this.owner.callObservers(\"traitDidSetStrokeWidth\", newStrokeWidth, oldStrokeWidth, this.owner);\n    },\n  })\n  readonly strokeWidth!: Property<this, Length | null, AnyLength | null>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport type {TraitViewRef} from \"@swim/controller\";\nimport {GeoController} from \"../geo/GeoController\";\nimport type {GeoPathView} from \"./GeoPathView\";\nimport type {GeoPathTrait} from \"./GeoPathTrait\";\nimport type {GeoPathControllerObserver} from \"./GeoPathControllerObserver\";\n\n/** @public */\nexport abstract class GeoPathController extends GeoController {\n  override readonly observerType?: Class<GeoPathControllerObserver>;\n\n  abstract override readonly geo: TraitViewRef<this, GeoPathTrait, GeoPathView>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass} from \"@swim/component\";\nimport type {Length} from \"@swim/math\";\nimport type {GeoPath} from \"@swim/geo\";\nimport type {Color} from \"@swim/style\";\nimport {Look, Mood} from \"@swim/theme\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {GeoLineView} from \"./GeoLineView\";\nimport {GeoLineTrait} from \"./GeoLineTrait\";\nimport {GeoPathController} from \"./GeoPathController\";\nimport type {GeoLineControllerObserver} from \"./GeoLineControllerObserver\";\n\n/** @public */\nexport class GeoLineController extends GeoPathController {\n  override readonly observerType?: Class<GeoLineControllerObserver>;\n\n  protected setGeoPath(geoPath: GeoPath | null, geoTrait: GeoLineTrait, timing?: AnyTiming | boolean): void {\n    const geoView = this.geo.view;\n    if (geoView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.geoTiming.value;\n        if (timing === true) {\n          timing = geoView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      geoView.geoPath.setState(geoPath, timing, Affinity.Intrinsic);\n    }\n  }\n\n  protected setStroke(stroke: Look<Color> | Color | null, geoTrait: GeoLineTrait, timing?: AnyTiming | boolean): void {\n    const geoView = this.geo.view;\n    if (geoView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.geoTiming.value;\n        if (timing === true) {\n          timing = geoView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      if (stroke instanceof Look) {\n        geoView.stroke.setLook(stroke, timing, Affinity.Intrinsic);\n      } else {\n        geoView.stroke.setState(stroke, timing, Affinity.Intrinsic);\n      }\n    }\n  }\n\n  protected setStrokeWidth(strokeWidth: Length | null, geoTrait: GeoLineTrait, timing?: AnyTiming | boolean): void {\n    const geoView = this.geo.view;\n    if (geoView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.geoTiming.value;\n        if (timing === true) {\n          timing = geoView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      geoView.strokeWidth.setState(strokeWidth, timing, Affinity.Intrinsic);\n    }\n  }\n\n  @TraitViewRef<GeoLineController, GeoLineTrait, GeoLineView>({\n    traitType: GeoLineTrait,\n    observesTrait: true,\n    willAttachTrait(geoTrait: GeoLineTrait): void {\n      this.owner.callObservers(\"controllerWillAttachGeoTrait\", geoTrait, this.owner);\n    },\n    didAttachTrait(geoTrait: GeoLineTrait): void {\n      const geoView = this.view;\n      if (geoView !== null) {\n        this.owner.setGeoPath(geoTrait.geoPath.value, geoTrait);\n        const stroke = geoTrait.stroke.value;\n        if (stroke !== null) {\n          this.owner.setStroke(stroke, geoTrait);\n        }\n        const strokeWidth = geoTrait.strokeWidth.value;\n        if (strokeWidth !== null) {\n          this.owner.setStrokeWidth(strokeWidth, geoTrait);\n        }\n      }\n    },\n    didDetachTrait(geoTrait: GeoLineTrait): void {\n      this.owner.callObservers(\"controllerDidDetachGeoTrait\", geoTrait, this.owner);\n    },\n    traitDidSetGeoPath(newGeoPath: GeoPath | null, oldGeoPath: GeoPath | null, geoTrait: GeoLineTrait): void {\n      this.owner.setGeoPath(newGeoPath, geoTrait);\n    },\n    traitDidSetStroke(newStroke: Look<Color> | Color | null, oldStroke: Look<Color> | Color | null, geoTrait: GeoLineTrait): void {\n      this.owner.setStroke(newStroke, geoTrait);\n    },\n    traitDidSetStrokeWidth(newStrokeWidth: Length | null, oldStrokeWidth: Length | null, geoTrait: GeoLineTrait): void {\n      this.owner.setStrokeWidth(newStrokeWidth, geoTrait);\n    },\n    viewType: GeoLineView,\n    observesView: true,\n    willAttachView(geoView: GeoLineView): void {\n      this.owner.callObservers(\"controllerWillAttachGeoView\", geoView, this.owner);\n    },\n    didAttachView(geoView: GeoLineView): void {\n      const geoTrait = this.trait;\n      if (geoTrait !== null) {\n        this.owner.setGeoPath(geoTrait.geoPath.value, geoTrait);\n        const stroke = geoTrait.stroke.value;\n        if (stroke !== null) {\n          this.owner.setStroke(stroke, geoTrait);\n        }\n        const strokeWidth = geoTrait.strokeWidth.value;\n        if (strokeWidth !== null) {\n          this.owner.setStrokeWidth(strokeWidth, geoTrait);\n        }\n      }\n    },\n    didDetachView(geoView: GeoLineView): void {\n      this.owner.callObservers(\"controllerDidDetachGeoView\", geoView, this.owner);\n    },\n    viewWillSetGeoPath(newGeoPath: GeoPath | null, oldGeoPath: GeoPath | null): void {\n      this.owner.callObservers(\"controllerWillSetGeoPath\", newGeoPath, oldGeoPath, this.owner);\n    },\n    viewDidSetGeoPath(newGeoPath: GeoPath | null, oldGeoPath: GeoPath | null): void {\n      this.owner.callObservers(\"controllerDidSetGeoPath\", newGeoPath, oldGeoPath, this.owner);\n    },\n    viewWillSetStroke(newStroke: Look<Color> | Color | null, oldStroke: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"controllerWillSetStroke\", newStroke, oldStroke, this.owner);\n    },\n    viewDidSetStroke(newStroke: Look<Color> | Color | null, oldStroke: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"controllerDidSetStroke\", newStroke, oldStroke, this.owner);\n    },\n    viewWillSetStrokeWidth(newStrokeWidth: Length | null, oldStrokeWidth: Length | null): void {\n      this.owner.callObservers(\"controllerWillSetStrokeWidth\", newStrokeWidth, oldStrokeWidth, this.owner);\n    },\n    viewDidSetStrokeWidth(newStrokeWidth: Length | null, oldStrokeWidth: Length | null): void {\n      this.owner.callObservers(\"controllerDidSetStrokeWidth\", newStrokeWidth, oldStrokeWidth, this.owner);\n    },\n  })\n  readonly geo!: TraitViewRef<this, GeoLineTrait, GeoLineView>;\n  static readonly geo: MemberFastenerClass<GeoLineController, \"geo\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass} from \"@swim/component\";\nimport type {Length} from \"@swim/math\";\nimport type {GeoPath} from \"@swim/geo\";\nimport type {Color} from \"@swim/style\";\nimport {Look, Mood} from \"@swim/theme\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {GeoAreaView} from \"./GeoAreaView\";\nimport {GeoAreaTrait} from \"./GeoAreaTrait\";\nimport {GeoPathController} from \"./GeoPathController\";\nimport type {GeoAreaControllerObserver} from \"./GeoAreaControllerObserver\";\n\n/** @public */\nexport class GeoAreaController extends GeoPathController {\n  override readonly observerType?: Class<GeoAreaControllerObserver>;\n\n  protected setGeoPath(geoPath: GeoPath | null, geoTrait: GeoAreaTrait, timing?: AnyTiming | boolean): void {\n    const geoView = this.geo.view;\n    if (geoView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.geoTiming.value;\n        if (timing === true) {\n          timing = geoView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      geoView.geoPath.setState(geoPath, timing, Affinity.Intrinsic);\n    }\n  }\n\n  protected setFill(fill: Look<Color> | Color | null, geoTrait: GeoAreaTrait, timing?: AnyTiming | boolean): void {\n    const geoView = this.geo.view;\n    if (geoView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.geoTiming.value;\n        if (timing === true) {\n          timing = geoView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      if (fill instanceof Look) {\n        geoView.fill.setLook(fill, timing, Affinity.Intrinsic);\n      } else {\n        geoView.fill.setState(fill, timing, Affinity.Intrinsic);\n      }\n    }\n  }\n\n  protected setStroke(stroke: Look<Color> | Color | null, geoTrait: GeoAreaTrait, timing?: AnyTiming | boolean): void {\n    const geoView = this.geo.view;\n    if (geoView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.geoTiming.value;\n        if (timing === true) {\n          timing = geoView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      if (stroke instanceof Look) {\n        geoView.stroke.setLook(stroke, timing, Affinity.Intrinsic);\n      } else {\n        geoView.stroke.setState(stroke, timing, Affinity.Intrinsic);\n      }\n    }\n  }\n\n  protected setStrokeWidth(strokeWidth: Length | null, geoTrait: GeoAreaTrait, timing?: AnyTiming | boolean): void {\n    const geoView = this.geo.view;\n    if (geoView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.geoTiming.value;\n        if (timing === true) {\n          timing = geoView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      geoView.strokeWidth.setState(strokeWidth, timing, Affinity.Intrinsic);\n    }\n  }\n\n  @TraitViewRef<GeoAreaController, GeoAreaTrait, GeoAreaView>({\n    traitType: GeoAreaTrait,\n    observesTrait: true,\n    willAttachTrait(geoTrait: GeoAreaTrait): void {\n      this.owner.callObservers(\"controllerWillAttachGeoTrait\", geoTrait, this.owner);\n    },\n    didAttachTrait(geoTrait: GeoAreaTrait): void {\n      const geoView = this.view;\n      if (geoView !== null) {\n        this.owner.setGeoPath(geoTrait.geoPath.value, geoTrait);\n        const fill = geoTrait.fill.value;\n        if (fill !== null) {\n          this.owner.setFill(fill, geoTrait);\n        }\n        const stroke = geoTrait.stroke.value;\n        if (stroke !== null) {\n          this.owner.setStroke(stroke, geoTrait);\n        }\n        const strokeWidth = geoTrait.strokeWidth.value;\n        if (strokeWidth !== null) {\n          this.owner.setStrokeWidth(strokeWidth, geoTrait);\n        }\n      }\n    },\n    didDetachTrait(geoTrait: GeoAreaTrait): void {\n      this.owner.callObservers(\"controllerDidDetachGeoTrait\", geoTrait, this.owner);\n    },\n    traitDidSetGeoPath(newGeoPath: GeoPath | null, oldGeoPath: GeoPath | null, geoTrait: GeoAreaTrait): void {\n      this.owner.setGeoPath(newGeoPath, geoTrait);\n    },\n    traitDidSetFill(newFill: Look<Color> | Color | null, oldFill: Look<Color> | Color | null, geoTrait: GeoAreaTrait): void {\n      this.owner.setFill(newFill, geoTrait);\n    },\n    traitDidSetStroke(newStroke: Look<Color> | Color | null, oldStroke: Look<Color> | Color | null, geoTrait: GeoAreaTrait): void {\n      this.owner.setStroke(newStroke, geoTrait);\n    },\n    traitDidSetStrokeWidth(newStrokeWidth: Length | null, oldStrokeWidth: Length | null, geoTrait: GeoAreaTrait): void {\n      this.owner.setStrokeWidth(newStrokeWidth, geoTrait);\n    },\n    viewType: GeoAreaView,\n    observesView: true,\n    willAttachView(geoView: GeoAreaView): void {\n      this.owner.callObservers(\"controllerWillAttachGeoView\", geoView, this.owner);\n    },\n    didAttachView(geoView: GeoAreaView): void {\n      const geoTrait = this.trait;\n      if (geoTrait !== null) {\n        this.owner.setGeoPath(geoTrait.geoPath.value, geoTrait);\n        const fill = geoTrait.fill.value;\n        if (fill !== null) {\n          this.owner.setFill(fill, geoTrait);\n        }\n        const stroke = geoTrait.stroke.value;\n        if (stroke !== null) {\n          this.owner.setStroke(stroke, geoTrait);\n        }\n        const strokeWidth = geoTrait.strokeWidth.value;\n        if (strokeWidth !== null) {\n          this.owner.setStrokeWidth(strokeWidth, geoTrait);\n        }\n      }\n    },\n    didDetachView(geoView: GeoAreaView): void {\n      this.owner.callObservers(\"controllerDidDetachGeoView\", geoView, this.owner);\n    },\n    viewWillSetGeoPath(newGeoPath: GeoPath | null, oldGeoPath: GeoPath | null): void {\n      this.owner.callObservers(\"controllerWillSetGeoPath\", newGeoPath, oldGeoPath, this.owner);\n    },\n    viewDidSetGeoPath(newGeoPath: GeoPath | null, oldGeoPath: GeoPath | null): void {\n      this.owner.callObservers(\"controllerDidSetGeoPath\", newGeoPath, oldGeoPath, this.owner);\n    },\n    viewWillSetFill(newFill: Look<Color> | Color | null, oldFill: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"controllerWillSetFill\", newFill, oldFill, this.owner);\n    },\n    viewDidSetFill(newFill: Look<Color> | Color | null, oldFill: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"controllerDidSetFill\", newFill, oldFill, this.owner);\n    },\n    viewWillSetStroke(newStroke: Look<Color> | Color | null, oldStroke: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"controllerWillSetStroke\", newStroke, oldStroke, this.owner);\n    },\n    viewDidSetStroke(newStroke: Look<Color> | Color | null, oldStroke: Look<Color> | Color | null): void {\n      this.owner.callObservers(\"controllerDidSetStroke\", newStroke, oldStroke, this.owner);\n    },\n    viewWillSetStrokeWidth(newStrokeWidth: Length | null, oldStrokeWidth: Length | null): void {\n      this.owner.callObservers(\"controllerWillSetStrokeWidth\", newStrokeWidth, oldStrokeWidth, this.owner);\n    },\n    viewDidSetStrokeWidth(newStrokeWidth: Length | null, oldStrokeWidth: Length | null): void {\n      this.owner.callObservers(\"controllerDidSetStrokeWidth\", newStrokeWidth, oldStrokeWidth, this.owner);\n    },\n  })\n  readonly geo!: TraitViewRef<this, GeoAreaTrait, GeoAreaView>;\n  static readonly geo: MemberFastenerClass<GeoAreaController, \"geo\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class, Initable, AnyTiming} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass, Property, Animator} from \"@swim/component\";\nimport {AnyLength, Length, AnyR2Point, R2Point, R2Box} from \"@swim/math\";\nimport {AnyGeoPoint, GeoPointInit, GeoPointTuple, GeoPoint} from \"@swim/geo\";\nimport {AnyFont, Font, AnyColor, Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, ViewFlags, AnyView, View, ViewRef} from \"@swim/view\";\nimport {\n  GraphicsViewInit,\n  GraphicsView,\n  TypesetView,\n  TextRunView,\n  CanvasContext,\n  CanvasRenderer,\n} from \"@swim/graphics\";\nimport {GeoViewInit, GeoView} from \"../geo/GeoView\";\nimport {GeoRippleOptions, GeoRippleView} from \"../effect/GeoRippleView\";\nimport type {GeoPointViewObserver} from \"./GeoPointViewObserver\";\n\n/** @public */\nexport type GeoPointLabelPlacement = \"auto\" | \"top\" | \"right\" | \"bottom\" | \"left\";\n\n/** @public */\nexport type AnyGeoPointView = GeoPointView | GeoPointViewInit | GeoPoint | GeoPointInit | GeoPointTuple;\n\n/** @public */\nexport interface GeoPointViewInit extends GeoViewInit {\n  lng?: number;\n  lat?: number;\n  x?: number;\n  y?: number;\n\n  radius?: AnyLength;\n\n  hitRadius?: number;\n\n  color?: AnyColor;\n  opacity?: number;\n\n  labelPadding?: AnyLength;\n  labelPlacement?: GeoPointLabelPlacement;\n\n  font?: AnyFont;\n  textColor?: AnyColor;\n\n  label?: GraphicsView | string;\n}\n\n/** @public */\nexport class GeoPointView extends GeoView {\n  override readonly observerType?: Class<GeoPointViewObserver>;\n\n  @Animator<GeoPointView, GeoPoint, AnyGeoPoint>({\n    type: GeoPoint,\n    value: GeoPoint.origin(),\n    updateFlags: View.NeedsProject,\n    willSetValue(newGeoPoint: GeoPoint, oldGeoPoint: GeoPoint): void {\n      this.owner.callObservers(\"viewWillSetGeoPoint\", newGeoPoint, oldGeoPoint, this.owner);\n    },\n    didSetValue(newGeoPoint: GeoPoint, oldGeoPoint: GeoPoint): void {\n      this.owner.setGeoBounds(newGeoPoint.bounds);\n      this.owner.callObservers(\"viewDidSetGeoPoint\", newGeoPoint, oldGeoPoint, this.owner);\n    },\n  })\n  readonly geoPoint!: Animator<this, GeoPoint, AnyGeoPoint>;\n\n  @Animator({type: R2Point, value: R2Point.origin()})\n  readonly viewPoint!: Animator<this, R2Point, AnyR2Point>;\n\n  @ThemeAnimator({type: Length, value: null})\n  readonly radius!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator({type: Color, value: null})\n  readonly color!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Number})\n  readonly opacity!: ThemeAnimator<this, number | undefined>;\n\n  @ThemeAnimator({type: Length, value: null})\n  readonly labelPadding!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator({type: Font, value: null, inherits: true})\n  readonly font!: ThemeAnimator<this, Font | null, AnyFont | null>;\n\n  @ThemeAnimator({type: Color, value: null, inherits: true})\n  readonly textColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @Property({type: Number})\n  readonly hitRadius!: Property<this, number | undefined>;\n\n  @ViewRef<GeoPointView, GraphicsView & Initable<GraphicsViewInit | string>>({\n    key: true,\n    type: TextRunView,\n    binds: true,\n    willAttachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"viewWillAttachGeoLabel\", labelView, this.owner);\n    },\n    didDetachView(labelView: GraphicsView): void {\n      this.owner.callObservers(\"viewDidDetachGeoLabel\", labelView, this.owner);\n    },\n    fromAny(value: AnyView<GraphicsView> | string): GraphicsView {\n      if (typeof value === \"string\") {\n        if (this.view instanceof TextRunView) {\n          this.view.text(value);\n          return this.view;\n        } else {\n          return TextRunView.fromAny(value);\n        }\n      } else {\n        return GraphicsView.fromAny(value);\n      }\n    },\n  })\n  readonly label!: ViewRef<this, GraphicsView & Initable<GraphicsViewInit | string>>;\n  static readonly label: MemberFastenerClass<GeoPointView, \"label\">;\n\n  @Property({type: String, value: \"auto\"})\n  readonly labelPlacement!: Property<this, GeoPointLabelPlacement>;\n\n  isGradientStop(): boolean {\n    return this.color.value !== null || this.opacity.value !== void 0;\n  }\n\n  setState(point: AnyGeoPointView, timing?: AnyTiming | boolean): void {\n    let init: GeoPointViewInit;\n    if (point instanceof GeoPointView) {\n      init = point.toAny();\n    } else if (point instanceof GeoPoint) {\n      init = point.toAny();\n    } else if (GeoPoint.isTuple(point)) {\n      init = {lng: point[0], lat: point[1]};\n    } else {\n      init = point;\n    }\n    if (init.lng !== void 0 && init.lat !== void 0) {\n      this.geoPoint(new GeoPoint(init.lng, init.lat), timing);\n    } else if (init.x !== void 0 && init.y !== void 0) {\n      this.viewPoint(new R2Point(init.x, init.y), timing);\n    }\n\n    if (init.radius !== void 0) {\n      this.radius(init.radius, timing);\n    }\n\n    if (init.hitRadius !== void 0) {\n      this.hitRadius(init.hitRadius);\n    }\n\n    if (init.color !== void 0) {\n      this.color(init.color, timing);\n    }\n    if (init.opacity !== void 0) {\n      this.opacity(init.opacity, timing);\n    }\n\n    if (init.labelPadding !== void 0) {\n      this.labelPadding(init.labelPadding, timing);\n    }\n    if (init.labelPlacement !== void 0) {\n      this.labelPlacement(init.labelPlacement);\n    }\n\n    if (init.font !== void 0) {\n      this.font(init.font, timing);\n    }\n    if (init.textColor !== void 0) {\n      this.textColor(init.textColor, timing);\n    }\n\n    if (init.label !== void 0) {\n      this.label(init.label);\n    }\n  }\n\n  protected override needsProcess(processFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    if ((processFlags & View.NeedsProject) !== 0 && this.label.view !== null) {\n      this.requireUpdate(View.NeedsLayout);\n    }\n    return processFlags;\n  }\n\n  protected override onProject(viewContext: ViewContextType<this>): void {\n    super.onProject(viewContext);\n    if (this.viewPoint.hasAffinity(Affinity.Intrinsic)) {\n      const viewPoint = viewContext.geoViewport.project(this.geoPoint.getValue());\n      this.viewPoint.setInterpolatedValue(viewPoint, viewPoint);\n    }\n  }\n\n  protected override onLayout(viewContext: ViewContextType<this>): void {\n    super.onLayout(viewContext);\n    const labelView = this.label.view;\n    if (labelView !== null) {\n      this.layoutLabel(labelView, viewContext.viewFrame);\n    }\n  }\n\n  protected layoutLabel(labelView: GraphicsView, frame: R2Box): void {\n    const placement = this.labelPlacement.value;\n    // TODO: auto placement\n\n    const size = Math.min(frame.width, frame.height);\n    const padding = this.labelPadding.getValue().pxValue(size);\n    const {x, y} = this.viewPoint.getValue();\n    let y1 = y;\n    if (placement === \"top\") {\n      y1 -= padding;\n    } else if (placement === \"bottom\") {\n      y1 += padding;\n    }\n\n    if (TypesetView.is(labelView)) {\n      labelView.textAlign.setState(\"center\", Affinity.Intrinsic);\n      labelView.textBaseline.setState(\"bottom\", Affinity.Intrinsic);\n      labelView.textOrigin.setState(new R2Point(x, y1), Affinity.Intrinsic);\n    }\n  }\n\n  protected override updateGeoBounds(): void {\n    // nop\n  }\n\n  declare readonly viewBounds: R2Box; // getter defined below to work around useDefineForClassFields lunacy\n\n  override get hitBounds(): R2Box {\n    const {x, y} = this.viewPoint.getValue();\n    const hitRadius = this.hitRadius.getValueOr(0);\n    return new R2Box(x - hitRadius, y - hitRadius, x + hitRadius, y + hitRadius);\n  }\n\n  protected override hitTest(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      return this.hitTestPoint(x, y, renderer.context, viewContext.viewFrame);\n    }\n    return null;\n  }\n\n  protected hitTestPoint(hx: number, hy: number, context: CanvasContext, frame: R2Box): GraphicsView | null {\n    const {x, y} = this.viewPoint.getValue();\n    const radius = this.radius.value;\n\n    let hitRadius = this.hitRadius.getValueOr(0);\n    if (radius !== null) {\n      const size = Math.min(frame.width, frame.height);\n      hitRadius = Math.max(hitRadius, radius.pxValue(size));\n    }\n\n    const dx = x - hx;\n    const dy = y - hy;\n    if (dx * dx + dy * dy < hitRadius * hitRadius) {\n      return this;\n    }\n    return null;\n  }\n\n  ripple(options?: GeoRippleOptions): GeoRippleView | null {\n    return GeoRippleView.ripple(this, options);\n  }\n\n  toAny(): GeoPointViewInit {\n    const init: GeoPointViewInit = {};\n    init.lng = this.geoPoint.value.lng;\n    init.lat = this.geoPoint.value.lat;\n    if (!this.viewPoint.hasAffinity(Affinity.Intrinsic)) {\n      init.x = this.viewPoint.value.x;\n      init.y = this.viewPoint.value.y;\n    }\n    if (this.radius.value !== null) {\n      init.radius = this.radius.value;\n    }\n    if (this.hitRadius.value !== void 0) {\n      init.hitRadius = this.hitRadius.value;\n    }\n    if (this.color.value !== null) {\n      init.color = this.color.value;\n    }\n    if (this.opacity.value !== void 0) {\n      init.opacity = this.opacity.value;\n    }\n    if (this.labelPadding.value !== null) {\n      init.labelPadding = this.labelPadding.value;\n    }\n    if (this.labelPlacement.value !== void 0) {\n      init.labelPlacement = this.labelPlacement.value;\n    }\n    return init;\n  }\n\n  override init(init: AnyGeoPoint | GeoPointViewInit): void {\n    if (init instanceof GeoPoint || GeoPoint.isTuple(init)) {\n      this.setState(init);\n    } else {\n      super.init(init as GeoPointViewInit);\n    }\n  }\n}\nObject.defineProperty(GeoPointView.prototype, \"viewBounds\", {\n  get(this: GeoPointView): R2Box {\n    const {x, y} = this.viewPoint.getValue();\n    return new R2Box(x, y, x, y);\n  },\n  configurable: true,\n});\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Class, AnyTiming} from \"@swim/util\";\nimport {Affinity, Property} from \"@swim/component\";\nimport {AnyLength, Length, AnyR2Point, R2Point, R2Box} from \"@swim/math\";\nimport {AnyGeoPoint, GeoPoint, GeoBox} from \"@swim/geo\";\nimport {AnyFont, Font, AnyColor, Color} from \"@swim/style\";\nimport {ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, View} from \"@swim/view\";\nimport {\n  GraphicsView,\n  StrokeViewInit,\n  StrokeView,\n  PaintingContext,\n  PaintingRenderer,\n  CanvasContext,\n  CanvasRenderer,\n} from \"@swim/graphics\";\nimport {GeoViewInit, GeoView} from \"../geo/GeoView\";\nimport {GeoRippleOptions, GeoRippleView} from \"../effect/GeoRippleView\";\nimport {AnyGeoPointView, GeoPointView} from \"./GeoPointView\";\nimport type {GeoPlotViewObserver} from \"./GeoPlotViewObserver\";\n\n/** @public */\nexport type AnyGeoPlotView = GeoPlotView | GeoPlotViewInit;\n\n/** @public */\nexport interface GeoPlotViewInit extends GeoViewInit, StrokeViewInit {\n  points?: ReadonlyArray<AnyGeoPointView>;\n\n  hitWidth?: number;\n\n  font?: AnyFont;\n  textColor?: AnyColor;\n}\n\n/** @public */\nexport class GeoPlotView extends GeoView implements StrokeView {\n  constructor() {\n    super();\n    this.gradientStops = 0;\n    Object.defineProperty(this, \"viewBounds\", {\n      value: R2Box.undefined(),\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly observerType?: Class<GeoPlotViewObserver>;\n\n  points(): ReadonlyArray<GeoPointView>;\n  points(points: ReadonlyArray<AnyGeoPointView>, timing?: AnyTiming | boolean): this;\n  points(points?: ReadonlyArray<AnyGeoPointView>, timing?: AnyTiming | boolean): ReadonlyArray<GeoPointView> | this {\n    let child: View | null;\n    if (points === void 0) {\n      const points: GeoPointView[] = [];\n      child = this.firstChild;\n      while (child !== null) {\n        if (child instanceof GeoPointView) {\n          points.push(child);\n        }\n        child = child.nextSibling;\n      }\n      return points;\n    } else {\n      const oldGeoBounds = this.geoBounds;\n      let lngMin = Infinity;\n      let latMin = Infinity;\n      let lngMax = -Infinity;\n      let latMax = -Infinity;\n      let lngMid = 0;\n      let latMid = 0;\n      let invalid = false;\n      let i = 0;\n      child = this.firstChild;\n      while (child !== null && i < points.length) {\n        if (child instanceof GeoPointView) {\n          const point = points[i]!;\n          child.setState(point);\n          const {lng, lat} = child.geoPoint.getValue();\n          lngMid += lng;\n          latMid += lat;\n          lngMin = Math.min(lngMin, lng);\n          latMin = Math.min(latMin, lat);\n          lngMax = Math.max(lng, lngMax);\n          latMax = Math.max(lat, latMax);\n          invalid = invalid || !isFinite(lng) || !isFinite(lat);\n          i += 1;\n        }\n      }\n      while (i < points.length) {\n        const point = GeoPointView.fromAny(points[i]!);\n        this.appendChild(point);\n        const {lng, lat} = point.geoPoint.getValue();\n        lngMid += lng;\n        latMid += lat;\n        lngMin = Math.min(lngMin, lng);\n        latMin = Math.min(latMin, lat);\n        lngMax = Math.max(lng, lngMax);\n        latMax = Math.max(lat, latMax);\n        invalid = invalid || !isFinite(lng) || !isFinite(lat);\n        i += 1;\n      }\n      while (child !== null) {\n        const next = child.nextSibling;\n        if (child instanceof GeoPointView) {\n          this.removeChild(child);\n        }\n        child = next;\n      }\n      if (!invalid && i !== 0) {\n        lngMid /= i;\n        latMid /= i;\n        this.geoCentroid.setValue(new GeoPoint(lngMid, latMid), Affinity.Intrinsic);\n        (this as Mutable<this>).geoBounds = new GeoBox(lngMin, latMin, lngMax, latMax);\n      } else {\n        this.geoCentroid.setValue(GeoPoint.origin(), Affinity.Intrinsic);\n        (this as Mutable<this>).geoBounds = GeoBox.undefined();\n      }\n      const newGeoBounds = this.geoBounds;\n      if (!oldGeoBounds.equals(newGeoBounds)) {\n        this.willSetGeoBounds(newGeoBounds, oldGeoBounds);\n        this.onSetGeoBounds(newGeoBounds, oldGeoBounds);\n        this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n      }\n      return this;\n    }\n  }\n\n  appendPoint(point: AnyGeoPointView, key?: string): GeoPointView {\n    point = GeoPointView.fromAny(point);\n    this.appendChild(point, key);\n    return point;\n  }\n\n  setPoint(key: string, point: AnyGeoPointView): GeoPointView {\n    point = GeoPointView.fromAny(point);\n    this.setChild(key, point);\n    return point;\n  }\n\n  @Property({type: GeoPoint, value: GeoPoint.origin()})\n  readonly geoCentroid!: Property<this, GeoPoint, AnyGeoPoint>;\n\n  @Property({type: R2Point, value: R2Point.origin()})\n  readonly viewCentroid!: Property<this, R2Point, AnyR2Point>;\n\n  @ThemeAnimator({type: Color, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly stroke!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator({type: Length, value: null, inherits: true, updateFlags: View.NeedsRender})\n  readonly strokeWidth!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator({type: Font, value: null, inherits: true})\n  readonly font!: ThemeAnimator<this, Font | null, AnyFont | null>;\n\n  @ThemeAnimator({type: Color, value: null, inherits: true})\n  readonly textColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @Property({type: Number})\n  readonly hitWidth!: Property<this, number | undefined>;\n\n  /** @internal */\n  readonly gradientStops: number;\n\n  protected override onInsertChild(childView: View, targetView: View | null): void {\n    super.onInsertChild(childView, targetView);\n    if (childView instanceof GeoPointView) {\n      this.onInsertPoint(childView);\n    }\n  }\n\n  protected onInsertPoint(childView: GeoPointView): void {\n    childView.requireUpdate(View.NeedsAnimate | View.NeedsProject);\n  }\n\n  protected override didProject(viewContext: ViewContextType<this>): void {\n    const oldGeoBounds = this.geoBounds;\n    let lngMin = Infinity;\n    let latMin = Infinity;\n    let lngMax = -Infinity;\n    let latMax = -Infinity;\n    let lngMid = 0;\n    let latMid = 0;\n    let xMin = Infinity;\n    let yMin = Infinity;\n    let xMax = -Infinity;\n    let yMax = -Infinity;\n    let xMid = 0;\n    let yMid = 0;\n    let invalid = false;\n    let gradientStops = 0;\n    let pointCount = 0;\n    let child = this.firstChild;\n    while (child !== null) {\n      if (child instanceof GeoPointView) {\n        const {lng, lat} = child.geoPoint.getValue();\n        lngMid += lng;\n        latMid += lat;\n        lngMin = Math.min(lngMin, lng);\n        latMin = Math.min(latMin, lat);\n        lngMax = Math.max(lng, lngMax);\n        latMax = Math.max(lat, latMax);\n        invalid = invalid || !isFinite(lng) || !isFinite(lat);\n        const {x, y} = child.viewPoint.getValue();\n        xMin = Math.min(xMin, x);\n        yMin = Math.min(yMin, y);\n        xMax = Math.max(x, xMax);\n        yMax = Math.max(y, yMax);\n        xMid += x;\n        yMid += y;\n        invalid = invalid || !isFinite(x) || !isFinite(y);\n        if (child.isGradientStop()) {\n          gradientStops += 1;\n        }\n        pointCount += 1;\n      }\n      child = child.nextSibling;\n    }\n    if (!invalid && pointCount !== 0) {\n      lngMid /= pointCount;\n      latMid /= pointCount;\n      this.geoCentroid.setValue(new GeoPoint(lngMid, latMid), Affinity.Intrinsic);\n      (this as Mutable<this>).geoBounds = new GeoBox(lngMin, latMin, lngMax, latMax);\n      xMid /= pointCount;\n      yMid /= pointCount;\n      this.viewCentroid.setValue(new R2Point(xMid, yMid), Affinity.Intrinsic);\n      (this as Mutable<this>).viewBounds = new R2Box(xMin, yMin, xMax, yMax);\n      this.cullGeoFrame(viewContext.geoViewport.geoFrame);\n    } else {\n      this.geoCentroid.setValue(GeoPoint.origin(), Affinity.Intrinsic);\n      (this as Mutable<this>).geoBounds = GeoBox.undefined();\n      this.viewCentroid.setValue(R2Point.origin(), Affinity.Intrinsic);\n      (this as Mutable<this>).viewBounds = R2Box.undefined();\n      this.setCulled(true);\n    }\n    (this as Mutable<this>).gradientStops = gradientStops;\n    const newGeoBounds = this.geoBounds;\n    if (!oldGeoBounds.equals(newGeoBounds)) {\n      this.willSetGeoBounds(newGeoBounds, oldGeoBounds);\n      this.onSetGeoBounds(newGeoBounds, oldGeoBounds);\n      this.didSetGeoBounds(newGeoBounds, oldGeoBounds);\n    }\n    super.didProject(viewContext);\n  }\n\n  protected override onRender(viewContext: ViewContextType<this>): void {\n    super.onRender(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof PaintingRenderer && !this.hidden && !this.culled) {\n      if (this.gradientStops !== 0 && renderer instanceof CanvasRenderer) {\n        this.renderPlotGradient(renderer.context, viewContext.viewFrame);\n      } else {\n        this.renderPlotStroke(renderer.context, viewContext.viewFrame);\n      }\n    }\n  }\n\n  protected renderPlotStroke(context: PaintingContext, frame: R2Box): void {\n    const stroke = this.stroke.value;\n    if (stroke !== null) {\n      let pointCount = 0;\n\n      context.beginPath();\n      let child = this.firstChild;\n      while (child !== null) {\n        if (child instanceof GeoPointView) {\n          const {x, y} = child.viewPoint.getValue();\n          if (pointCount === 0) {\n            context.moveTo(x, y);\n          } else {\n            context.lineTo(x, y);\n          }\n          pointCount += 1;\n        }\n        child = child.nextSibling;\n      }\n\n      if (pointCount !== 0) {\n        // save\n        const contextLineWidth = context.lineWidth;\n        const contextStrokeStyle = context.strokeStyle;\n\n        const size = Math.min(frame.width, frame.height);\n        const strokeWidth = this.strokeWidth.getValue().pxValue(size);\n        context.lineWidth = strokeWidth;\n        context.strokeStyle = stroke.toString();\n        context.stroke();\n\n        // restore\n        context.lineWidth = contextLineWidth;\n        context.strokeStyle = contextStrokeStyle;\n      }\n    }\n  }\n\n  protected renderPlotGradient(context: CanvasContext, frame: R2Box): void {\n    const stroke = this.stroke.getValue();\n    const size = Math.min(frame.width, frame.height);\n    const strokeWidth = this.strokeWidth.getValue().pxValue(size);\n\n    // save\n    const contextLineWidth = context.lineWidth;\n    const contextStrokeStyle = context.strokeStyle;\n\n    let p0: GeoPointView | undefined;\n    let p1 = this.firstChild;\n    while (p1 !== null) {\n      if (p1 instanceof GeoPointView) {\n        if (p0 !== void 0) {\n          const x0 = p0.viewPoint.getValue().x;\n          const y0 = p0.viewPoint.getValue().y;\n          const x1 = p1.viewPoint.getValue().x;\n          const y1 = p1.viewPoint.getValue().y;\n          const gradient = context.createLinearGradient(x0, y0, x1, y1);\n\n          let color = p0.color.getValueOr(stroke);\n          let opacity = p0.opacity.value;\n          if (typeof opacity === \"number\") {\n            color = color.alpha(opacity);\n          }\n          gradient.addColorStop(0, color.toString());\n\n          color = p1.color.getValueOr(stroke);\n          opacity = p1.opacity.value;\n          if (typeof opacity === \"number\") {\n            color = color.alpha(opacity);\n          }\n          gradient.addColorStop(1, color.toString());\n\n          context.beginPath();\n          context.moveTo(x0, y0);\n          context.lineTo(x1, y1);\n          context.lineWidth = strokeWidth;\n          context.strokeStyle = gradient;\n          context.stroke();\n        }\n        p0 = p1;\n      }\n      p1 = p1.nextSibling;\n    }\n\n    // restore\n    context.lineWidth = contextLineWidth;\n    context.strokeStyle = contextStrokeStyle;\n  }\n\n  protected override updateGeoBounds(): void {\n    // nop\n  }\n\n  override get popoverFrame(): R2Box {\n    const viewCentroid = this.viewCentroid.value;\n    const inversePageTransform = this.pageTransform.inverse();\n    const px = inversePageTransform.transformX(viewCentroid.x, viewCentroid.y);\n    const py = inversePageTransform.transformY(viewCentroid.x, viewCentroid.y);\n    return new R2Box(px, py, px, py);\n  }\n\n  override readonly viewBounds!: R2Box;\n\n  protected override hitTest(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      const p = renderer.transform.transform(x, y);\n      return this.hitTestPlot(p.x, p.y, renderer.context, viewContext.viewFrame);\n    }\n    return null;\n  }\n\n  protected hitTestPlot(x: number, y: number, context: CanvasContext, frame: R2Box): GraphicsView | null {\n    let pointCount = 0;\n\n    context.beginPath();\n    let child = this.firstChild;\n    while (child !== null) {\n      if (child instanceof GeoPointView) {\n        const {x, y} = child.viewPoint.getValue();\n        if (pointCount === 0) {\n          context.moveTo(x, y);\n        } else {\n          context.lineTo(x, y);\n        }\n        pointCount += 1;\n      }\n      child = child.nextSibling;\n    }\n\n    if (pointCount !== 0) {\n      // save\n      const contextLineWidth = context.lineWidth;\n\n      let hitWidth = this.hitWidth.getValueOr(0);\n      const strokeWidth = this.strokeWidth.value;\n      if (strokeWidth !== null) {\n        const size = Math.min(frame.width, frame.height);\n        hitWidth = Math.max(hitWidth, strokeWidth.pxValue(size));\n      }\n      context.lineWidth = hitWidth;\n      const pointInStroke = context.isPointInStroke(x, y);\n\n      // restore\n      context.lineWidth = contextLineWidth;\n\n      if (pointInStroke) {\n        return this;\n      }\n    }\n\n    return null;\n  }\n\n  ripple(options?: GeoRippleOptions): GeoRippleView | null {\n    return GeoRippleView.ripple(this, options);\n  }\n\n  override init(init: GeoPlotViewInit): void {\n    super.init(init);\n    if (init.stroke !== void 0) {\n      this.stroke(init.stroke);\n    }\n    if (init.strokeWidth !== void 0) {\n      this.strokeWidth(init.strokeWidth);\n    }\n    if (init.hitWidth !== void 0) {\n      this.hitWidth(init.hitWidth);\n    }\n    if (init.font !== void 0) {\n      this.font(init.font);\n    }\n    if (init.textColor !== void 0) {\n      this.textColor(init.textColor);\n    }\n    const points = init.points;\n    if (points !== void 0) {\n      this.points(points);\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Class, Timing} from \"@swim/util\";\nimport {Affinity, Animator} from \"@swim/component\";\nimport {AnyLength, Length, AnyR2Point, R2Point, R2Segment, R2Box} from \"@swim/math\";\nimport {AnyGeoPoint, GeoPoint, GeoBox} from \"@swim/geo\";\nimport {AnyColor, Color} from \"@swim/style\";\nimport {MoodVector, ThemeMatrix, ThemeAnimator} from \"@swim/theme\";\nimport {ViewContextType, ViewFlags, View} from \"@swim/view\";\nimport {\n  Sprite,\n  Graphics,\n  GraphicsView,\n  Icon,\n  FilledIcon,\n  IconViewInit,\n  IconView,\n  IconGraphicsAnimator,\n  CanvasRenderer,\n} from \"@swim/graphics\";\nimport {GeoViewInit, GeoView} from \"../geo/GeoView\";\nimport {GeoRippleOptions, GeoRippleView} from \"../effect/GeoRippleView\";\nimport type {GeoIconViewObserver} from \"./GeoIconViewObserver\";\n\n/** @public */\nexport type AnyGeoIconView = GeoIconView | GeoIconViewInit;\n\n/** @public */\nexport interface GeoIconViewInit extends GeoViewInit, IconViewInit {\n  geoCenter?: AnyGeoPoint;\n  viewCenter?: AnyR2Point;\n}\n\n/** @public */\nexport class GeoIconView extends GeoView implements IconView {\n  constructor() {\n    super();\n    this.sprite = null;\n    Object.defineProperty(this, \"viewBounds\", {\n      value: R2Box.undefined(),\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly observerType?: Class<GeoIconViewObserver>;\n\n  /** @internal */\n  sprite: Sprite | null;\n\n  @Animator<GeoIconView, GeoPoint | null, AnyGeoPoint | null>({\n    type: GeoPoint,\n    value: null,\n    didSetState(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.projectGeoCenter(newGeoCenter);\n    },\n    willSetValue(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.callObservers(\"viewWillSetGeoCenter\", newGeoCenter, oldGeoCenter, this.owner);\n    },\n    didSetValue(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.setGeoBounds(newGeoCenter !== null ? newGeoCenter.bounds : GeoBox.undefined());\n      if (this.mounted) {\n        this.owner.projectIcon(this.owner.viewContext);\n      }\n      this.owner.callObservers(\"viewDidSetGeoCenter\", newGeoCenter, oldGeoCenter, this.owner);\n    },\n  })\n  readonly geoCenter!: Animator<this, GeoPoint | null, AnyGeoPoint | null>;\n\n  @Animator<GeoIconView, R2Point | null, AnyR2Point | null>({\n    type: R2Point,\n    value: R2Point.undefined(),\n    updateFlags: View.NeedsComposite,\n  })\n  readonly viewCenter!: Animator<this, R2Point | null, AnyR2Point | null>;\n\n  @Animator<GeoIconView, number>({\n    type: Number,\n    value: 0.5,\n    updateFlags: View.NeedsProject | View.NeedsRender | View.NeedsRasterize | View.NeedsComposite,\n  })\n  readonly xAlign!: Animator<this, number>;\n\n  @Animator<GeoIconView, number>({\n    type: Number,\n    value: 0.5,\n    updateFlags: View.NeedsProject | View.NeedsRender | View.NeedsRasterize | View.NeedsComposite,\n  })\n  readonly yAlign!: Animator<this, number>;\n\n  @ThemeAnimator<GeoIconView, Length | null, AnyLength | null>({\n    type: Length,\n    value: null,\n    updateFlags: View.NeedsProject | View.NeedsRender | View.NeedsRasterize | View.NeedsComposite,\n  })\n  readonly iconWidth!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator<GeoIconView, Length | null, AnyLength | null>({\n    type: Length,\n    value: null,\n    updateFlags: View.NeedsProject | View.NeedsRender | View.NeedsRasterize | View.NeedsComposite,\n  })\n  readonly iconHeight!: ThemeAnimator<this, Length | null, AnyLength | null>;\n\n  @ThemeAnimator<GeoIconView, Color | null, AnyColor | null>({\n    type: Color,\n    value: null,\n    updateFlags: View.NeedsRender | View.NeedsRasterize | View.NeedsComposite,\n    didSetValue(newIconColor: Color | null, oldIconColor: Color | null): void {\n      if (newIconColor !== null) {\n        const oldGraphics = this.owner.graphics.value;\n        if (oldGraphics instanceof FilledIcon) {\n          const newGraphics = oldGraphics.withFillColor(newIconColor);\n          this.owner.graphics.setState(newGraphics, Affinity.Reflexive);\n        }\n      }\n    },\n  })\n  readonly iconColor!: ThemeAnimator<this, Color | null, AnyColor | null>;\n\n  @ThemeAnimator<GeoIconView, Graphics | null>({\n    extends: IconGraphicsAnimator,\n    type: Object,\n    updateFlags: View.NeedsRender | View.NeedsRasterize | View.NeedsComposite,\n    willSetValue(newGraphics: Graphics | null, oldGraphics: Graphics | null): void {\n      this.owner.callObservers(\"viewWillSetGraphics\", newGraphics, oldGraphics, this.owner);\n    },\n    didSetValue(newGraphics: Graphics | null, oldGraphics: Graphics | null): void {\n      this.owner.callObservers(\"viewDidSetGraphics\", newGraphics, oldGraphics, this.owner);\n    },\n  })\n  readonly graphics!: ThemeAnimator<this, Graphics | null>;\n\n  protected override onApplyTheme(theme: ThemeMatrix, mood: MoodVector, timing: Timing | boolean): void {\n    super.onApplyTheme(theme, mood, timing);\n    if (!this.graphics.inherited) {\n      const oldGraphics = this.graphics.value;\n      if (oldGraphics instanceof Icon) {\n        const newGraphics = oldGraphics.withTheme(theme, mood);\n        this.graphics.setState(newGraphics, oldGraphics.isThemed() ? timing : false, Affinity.Reflexive);\n      }\n    }\n  }\n\n  protected override onProject(viewContext: ViewContextType<this>): void {\n    super.onProject(viewContext);\n    this.projectIcon(viewContext);\n  }\n\n  protected projectGeoCenter(geoCenter: GeoPoint | null): void {\n    if (this.mounted) {\n      const viewContext = this.viewContext as ViewContextType<this>;\n      const viewCenter = geoCenter !== null && geoCenter.isDefined()\n                       ? viewContext.geoViewport.project(geoCenter)\n                       : null;\n      this.viewCenter.setInterpolatedValue(this.viewCenter.value, viewCenter);\n      this.projectIcon(viewContext);\n    }\n  }\n\n  protected projectIcon(viewContext: ViewContextType<this>): void {\n    if (Affinity.Intrinsic >= (this.viewCenter.flags & Affinity.Mask)) { // this.viewCenter.hasAffinity(Affinity.Intrinsic)\n      const geoCenter = this.geoCenter.value;\n      const viewCenter = geoCenter !== null && geoCenter.isDefined()\n                       ? viewContext.geoViewport.project(geoCenter)\n                       : null;\n      (this.viewCenter as Mutable<typeof this.viewCenter>).value = viewCenter; // this.viewCenter.setValue(viewCenter, Affinity.Intrinsic)\n    }\n    const viewFrame = viewContext.viewFrame;\n    (this as Mutable<GeoIconView>).viewBounds = this.deriveViewBounds(viewFrame);\n    const p0 = this.viewCenter.value;\n    const p1 = this.viewCenter.state;\n    if (p0 !== null && p1 !== null && (\n        viewFrame.intersectsBox(this.viewBounds) ||\n        viewFrame.intersectsSegment(new R2Segment(p0.x, p0.y, p1.x, p1.y)))) {\n      this.setCulled(false);\n    } else {\n      this.setCulled(true);\n    }\n  }\n\n  protected override onRasterize(viewContext: ViewContextType<this>): void {\n    super.onRasterize(viewContext);\n    if (!this.hidden && !this.culled) {\n      this.rasterizeIcon(this.viewBounds);\n    }\n  }\n\n  protected rasterizeIcon(frame: R2Box): void {\n    let sprite = this.sprite;\n    const graphics = this.graphics.value;\n    if (graphics !== null && frame.isDefined()) {\n      const width = frame.width;\n      const height = frame.height;\n      if (sprite !== null && (sprite.width < width || sprite.height < height ||\n                             (width < sprite.width / 2 && height < sprite.height / 2))) {\n        this.sprite = null;\n        sprite.release();\n        sprite = null;\n      }\n      if (sprite === null) {\n        sprite = this.spriteProvider.service!.acquireSprite(width, height);\n        this.sprite = sprite;\n      }\n\n      const renderer = sprite.getRenderer();\n      const context = renderer.context;\n      context.clearRect(0, 0, sprite.width, sprite.height);\n\n      context.beginPath();\n      graphics.render(renderer, new R2Box(0, 0, width, height));\n    } else if (sprite !== null) {\n      this.sprite = null;\n      sprite.release();\n    }\n  }\n\n  protected override onComposite(viewContext: ViewContextType<this>): void {\n    super.onComposite(viewContext);\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer && !this.hidden && !this.culled) {\n      this.compositeIcon(renderer, this.viewBounds);\n    }\n  }\n\n  protected compositeIcon(renderer: CanvasRenderer, frame: R2Box): void {\n    const sprite = this.sprite;\n    if (sprite !== null) {\n      sprite.draw(renderer.context, frame);\n    }\n  }\n\n  protected override renderGeoBounds(viewContext: ViewContextType<this>, outlineColor: Color, outlineWidth: number): void {\n    // nop\n  }\n\n  protected override updateGeoBounds(): void {\n    // nop\n  }\n\n  override readonly viewBounds!: R2Box;\n\n  override deriveViewBounds(viewFrame?: R2Box): R2Box {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter !== null && viewCenter.isDefined()) {\n      if (viewFrame === void 0) {\n        viewFrame = this.viewContext.viewFrame;\n      }\n      const viewSize = Math.min(viewFrame.width, viewFrame.height);\n      let iconWidth: Length | number | null = this.iconWidth.value;\n      iconWidth = iconWidth instanceof Length ? iconWidth.pxValue(viewSize) : viewSize;\n      let iconHeight: Length | number | null = this.iconHeight.value;\n      iconHeight = iconHeight instanceof Length ? iconHeight.pxValue(viewSize) : viewSize;\n      const x = viewCenter.x - iconWidth * this.xAlign.value;\n      const y = viewCenter.y - iconHeight * this.yAlign.value;\n      return new R2Box(x, y, x + iconWidth, y + iconHeight);\n    } else {\n      return R2Box.undefined();\n    }\n  }\n\n  override get popoverFrame(): R2Box {\n    const viewCenter = this.viewCenter.value;\n    if (viewCenter !== null && viewCenter.isDefined()) {\n      const viewFrame = this.viewContext.viewFrame;\n      const viewSize = Math.min(viewFrame.width, viewFrame.height);\n      const inversePageTransform = this.pageTransform.inverse();\n      const px = inversePageTransform.transformX(viewCenter.x, viewCenter.y);\n      const py = inversePageTransform.transformY(viewCenter.x, viewCenter.y);\n      let iconWidth: Length | number | null = this.iconWidth.value;\n      iconWidth = iconWidth instanceof Length ? iconWidth.pxValue(viewSize) : viewSize;\n      let iconHeight: Length | number | null = this.iconHeight.value;\n      iconHeight = iconHeight instanceof Length ? iconHeight.pxValue(viewSize) : viewSize;\n      const x = px - iconWidth * this.xAlign.getValue();\n      const y = py - iconHeight * this.yAlign.getValue();\n      return new R2Box(x, y, x + iconWidth, y + iconHeight);\n    } else {\n      return this.pageBounds;\n    }\n  }\n\n  protected override hitTest(x: number, y: number, viewContext: ViewContextType<this>): GraphicsView | null {\n    const renderer = viewContext.renderer;\n    if (renderer instanceof CanvasRenderer) {\n      return this.hitTestIcon(x, y, renderer, this.viewBounds);\n    }\n    return null;\n  }\n\n  protected hitTestIcon(x: number, y: number, renderer: CanvasRenderer, frame: R2Box): GraphicsView | null {\n    // TODO: icon hit test mode\n    if (this.hitBounds.contains(x, y)) {\n      return this;\n    }\n    //const graphics = this.graphics.value;\n    //if (graphics !== null) {\n    //  const context = renderer.context;\n    //  context.beginPath();\n    //  graphics.render(renderer, frame);\n    //  if (context.isPointInPath(x * renderer.pixelRatio, y * renderer.pixelRatio)) {\n    //    return this;\n    //  }\n    //}\n    return null;\n  }\n\n  ripple(options?: GeoRippleOptions): GeoRippleView | null {\n    return GeoRippleView.ripple(this, options);\n  }\n\n  protected override onUnmount(): void {\n    super.onUnmount();\n    const sprite = this.sprite;\n    if (sprite !== null) {\n      this.sprite = null;\n      sprite.release();\n    }\n  }\n\n  override init(init: GeoIconViewInit): void {\n    super.init(init);\n    IconView.init(this, init);\n    if (init.geoCenter !== void 0) {\n      this.geoCenter(init.geoCenter);\n    }\n    if (init.viewCenter !== void 0) {\n      this.viewCenter(init.viewCenter);\n    }\n  }\n\n  static override readonly MountFlags: ViewFlags = GeoView.MountFlags | View.NeedsRasterize;\n  static override readonly UncullFlags: ViewFlags = GeoView.UncullFlags | View.NeedsRasterize;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {Property} from \"@swim/component\";\nimport {AnyGeoPoint, GeoPoint, GeoBox} from \"@swim/geo\";\nimport {Graphics, AnyIconLayout, IconLayout} from \"@swim/graphics\";\nimport {GeoTrait} from \"../geo/GeoTrait\";\nimport type {GeoIconTraitObserver} from \"./GeoIconTraitObserver\";\n\n/** @public */\nexport class GeoIconTrait extends GeoTrait {\n  override readonly observerType?: Class<GeoIconTraitObserver>;\n\n  override get geoBounds(): GeoBox {\n    const geoCenter = this.geoCenter.value;\n    return geoCenter !== null ? geoCenter.bounds : GeoBox.undefined();\n  }\n\n  @Property<GeoIconTrait, GeoPoint | null, AnyGeoPoint | null>({\n    type: GeoPoint,\n    value: null,\n    willSetValue(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.callObservers(\"traitWillSetGeoCenter\", newGeoCenter, oldGeoCenter, this.owner);\n    },\n    didSetValue(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.callObservers(\"traitDidSetGeoCenter\", newGeoCenter, oldGeoCenter, this.owner);\n    },\n  })\n  readonly geoCenter!: Property<this, GeoPoint | null, AnyGeoPoint | null>;\n\n  @Property<GeoIconTrait, IconLayout | null, AnyIconLayout | null>({\n    type: IconLayout,\n    value: null,\n    willSetValue(newIconLayout: IconLayout | null, oldIconLayout: IconLayout | null): void {\n      this.owner.callObservers(\"traitWillSetIconLayout\", newIconLayout, oldIconLayout, this.owner);\n    },\n    didSetValue(newIconLayout: IconLayout | null, oldIconLayout: IconLayout | null): void {\n      this.owner.callObservers(\"traitDidSetIconLayout\", newIconLayout, oldIconLayout, this.owner);\n    },\n  })\n  readonly iconLayout!: Property<this, IconLayout | null, AnyIconLayout | null>;\n\n  @Property<GeoIconTrait, Graphics | null>({\n    value: null,\n    willSetValue(newGraphics: Graphics | null, oldGraphics: Graphics | null): void {\n      this.owner.callObservers(\"traitWillSetGraphics\", newGraphics, oldGraphics, this.owner);\n    },\n    didSetValue(newGraphics: Graphics | null, oldGraphics: Graphics | null): void {\n      this.owner.callObservers(\"traitDidSetGraphics\", newGraphics, oldGraphics, this.owner);\n    },\n  })\n  readonly graphics!: Property<this, Graphics | null>;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass} from \"@swim/component\";\nimport type {GeoPoint} from \"@swim/geo\";\nimport {Look, Mood} from \"@swim/theme\";\nimport type {Graphics, IconLayout} from \"@swim/graphics\";\nimport {TraitViewRef} from \"@swim/controller\";\nimport {GeoController} from \"../geo/GeoController\";\nimport {GeoIconView} from \"./GeoIconView\";\nimport {GeoIconTrait} from \"./GeoIconTrait\";\nimport type {GeoIconControllerObserver} from \"./GeoIconControllerObserver\";\n\n/** @public */\nexport class GeoIconController extends GeoController {\n  override readonly observerType?: Class<GeoIconControllerObserver>;\n\n  protected setGeoCenter(geoCenter: GeoPoint | null, geoTrait: GeoIconTrait, timing?: AnyTiming | boolean): void {\n    const geoView = this.geo.view;\n    if (geoView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.geoTiming.value;\n        if (timing === true) {\n          timing = geoView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      geoView.geoCenter.setState(geoCenter, timing, Affinity.Intrinsic);\n    }\n  }\n\n  protected setIconLayout(iconLayout: IconLayout | null, geoTrait: GeoIconTrait, timing?: AnyTiming | boolean): void {\n    const geoView = this.geo.view;\n    if (geoView !== null && iconLayout !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.geoTiming.value;\n        if (timing === true) {\n          timing = geoView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      geoView.iconWidth.setState(iconLayout.iconWidth, timing, Affinity.Intrinsic);\n      geoView.iconHeight.setState(iconLayout.iconHeight, timing, Affinity.Intrinsic);\n      if (iconLayout.xAlign !== void 0) {\n        geoView.xAlign.setState(iconLayout.xAlign, timing, Affinity.Intrinsic);\n      }\n      if (iconLayout.yAlign !== void 0) {\n        geoView.yAlign.setState(iconLayout.yAlign, timing, Affinity.Intrinsic);\n      }\n    }\n  }\n\n  protected setGraphics(graphics: Graphics | null, geoTrait: GeoIconTrait, timing?: AnyTiming | boolean): void {\n    const geoView = this.geo.view;\n    if (geoView !== null) {\n      if (timing === void 0 || timing === true) {\n        timing = this.geoTiming.value;\n        if (timing === true) {\n          timing = geoView.getLook(Look.timing, Mood.ambient);\n        }\n      } else {\n        timing = Timing.fromAny(timing);\n      }\n      geoView.graphics.setState(graphics, timing, Affinity.Intrinsic);\n    }\n  }\n\n  @TraitViewRef<GeoIconController, GeoIconTrait, GeoIconView>({\n    traitType: GeoIconTrait,\n    observesTrait: true,\n    willAttachTrait(geoTrait: GeoIconTrait): void {\n      this.owner.callObservers(\"controllerWillAttachGeoTrait\", geoTrait, this.owner);\n    },\n    didAttachTrait(geoTrait: GeoIconTrait): void {\n      const geoView = this.view;\n      if (geoView !== null) {\n        this.owner.setGeoCenter(geoTrait.geoCenter.value, geoTrait);\n        this.owner.setIconLayout(geoTrait.iconLayout.value, geoTrait);\n        this.owner.setGraphics(geoTrait.graphics.value, geoTrait);\n      }\n    },\n    didDetachTrait(geoTrait: GeoIconTrait): void {\n      this.owner.callObservers(\"controllerDidDetachGeoTrait\", geoTrait, this.owner);\n    },\n    traitDidSetGeoCenter(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null, geoTrait: GeoIconTrait): void {\n      this.owner.setGeoCenter(newGeoCenter, geoTrait);\n    },\n    traitDidSetIconLayout(newIconLayout: IconLayout, oldIconLayout: IconLayout, geoTrait: GeoIconTrait): void {\n      this.owner.setIconLayout(newIconLayout, geoTrait);\n    },\n    traitDidSetGraphics(newGraphics: Graphics | null, oldGraphics: Graphics | null, geoTrait: GeoIconTrait): void {\n      this.owner.setGraphics(newGraphics, geoTrait);\n    },\n    viewType: GeoIconView,\n    observesView: true,\n    willAttachView(geoView: GeoIconView): void {\n      this.owner.callObservers(\"controllerWillAttachGeoView\", geoView, this.owner);\n    },\n    didAttachView(geoView: GeoIconView): void {\n      const geoTrait = this.trait;\n      if (geoTrait !== null) {\n        this.owner.setGeoCenter(geoTrait.geoCenter.value, geoTrait);\n        this.owner.setIconLayout(geoTrait.iconLayout.value, geoTrait);\n        this.owner.setGraphics(geoTrait.graphics.value, geoTrait);\n      }\n    },\n    didDetachView(geoView: GeoIconView): void {\n      this.owner.callObservers(\"controllerDidDetachGeoView\", geoView, this.owner);\n    },\n    viewWillSetGeoCenter(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.callObservers(\"controllerWillSetGeoCenter\", newGeoCenter, oldGeoCenter, this.owner);\n    },\n    viewDidSetGeoCenter(newGeoCenter: GeoPoint | null, oldGeoCenter: GeoPoint | null): void {\n      this.owner.callObservers(\"controllerDidSetGeoCenter\", newGeoCenter, oldGeoCenter, this.owner);\n    },\n    viewWillSetGraphics(newGraphics: Graphics | null, oldGraphics: Graphics | null): void {\n      this.owner.callObservers(\"controllerWillSetGraphics\", newGraphics, oldGraphics, this.owner);\n    },\n    viewDidSetGraphics(newGraphics: Graphics | null, oldGraphics: Graphics | null): void {\n      this.owner.callObservers(\"controllerDidSetGraphics\", newGraphics, oldGraphics, this.owner);\n    },\n  })\n  readonly geo!: TraitViewRef<this, GeoIconTrait, GeoIconView>;\n  static readonly geo: MemberFastenerClass<GeoIconController, \"geo\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class, AnyTiming} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport type {GeoBox} from \"@swim/geo\";\nimport {ViewContextType, ViewFlags, View, ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport {GraphicsViewContext, CanvasView} from \"@swim/graphics\";\nimport type {AnyGeoPerspective} from \"../geo/GeoPerspective\";\nimport type {GeoViewport} from \"../geo/GeoViewport\";\nimport {GeoView} from \"../geo/GeoView\";\nimport type {MapViewObserver} from \"./MapViewObserver\";\n\n/** @public */\nexport abstract class MapView extends GeoView {\n  override readonly observerType?: Class<MapViewObserver>;\n\n  abstract override get geoViewport(): GeoViewport;\n\n  abstract moveTo(geoPerspective: AnyGeoPerspective, timing?: AnyTiming | boolean): void;\n\n  @ViewRef<MapView, CanvasView>({\n    type: CanvasView,\n    willAttachView(canvasView: CanvasView): void {\n      this.owner.callObservers(\"viewWillAttachMapCanvas\", canvasView, this.owner);\n    },\n    didDetachView(canvasView: CanvasView): void {\n      this.owner.callObservers(\"viewDidDetachMapCanvas\", canvasView, this.owner);\n    },\n  })\n  readonly canvas!: ViewRef<this, CanvasView>;\n  static readonly canvas: MemberFastenerClass<MapView, \"canvas\">;\n\n  @ViewRef<MapView, HtmlView>({\n    type: HtmlView,\n    willAttachView(containerView: HtmlView): void {\n      this.owner.callObservers(\"viewWillAttachMapContainer\", containerView, this.owner);\n    },\n    didDetachView(containerView: HtmlView): void {\n      this.owner.callObservers(\"viewDidDetachMapContainer\", containerView, this.owner);\n    },\n  })\n  readonly container!: ViewRef<this, HtmlView>;\n  static readonly container: MemberFastenerClass<MapView, \"container\">;\n\n  protected override needsProcess(processFlags: ViewFlags, viewContext: ViewContextType<this>): ViewFlags {\n    if ((processFlags & View.NeedsResize) !== 0) {\n      processFlags |= View.NeedsProject;\n    }\n    return processFlags;\n  }\n\n  override extendViewContext(viewContext: GraphicsViewContext): ViewContextType<this> {\n    const mapViewContext = Object.create(viewContext);\n    mapViewContext.geoViewport = this.geoViewport;\n    return mapViewContext;\n  }\n\n  override get geoFrame(): GeoBox {\n    return this.geoViewport.geoFrame;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {MemberFastenerClass, Property} from \"@swim/component\";\nimport {GeoBox} from \"@swim/geo\";\nimport {Model, Trait, TraitSet} from \"@swim/model\";\nimport {GeoTrait} from \"../geo/GeoTrait\";\nimport {AnyGeoPerspective, GeoPerspective} from \"../geo/GeoPerspective\";\nimport type {MapTraitObserver} from \"./MapTraitObserver\";\n\n/** @public */\nexport class MapTrait extends GeoTrait {\n  override readonly observerType?: Class<MapTraitObserver>;\n\n  override get geoBounds(): GeoBox {\n    return GeoBox.globe();\n  }\n\n  @Property<MapTrait, GeoPerspective | null, AnyGeoPerspective | null>({\n    type: GeoPerspective,\n    value: null,\n    willSetValue(newGeoPerspective: GeoPerspective | null, oldGeoPerspective: GeoPerspective | null): void {\n      this.owner.callObservers(\"traitWillSetGeoPerspective\", newGeoPerspective, oldGeoPerspective, this.owner);\n    },\n    didSetValue(newGeoPerspective: GeoPerspective | null, oldGeoPerspective: GeoPerspective | null): void {\n      this.owner.callObservers(\"traitDidSetGeoPerspective\", newGeoPerspective, oldGeoPerspective, this.owner);\n    },\n  })\n  readonly geoPerspective!: Property<this, GeoPerspective | null, AnyGeoPerspective | null>;\n\n  @TraitSet<MapTrait, GeoTrait>({\n    type: GeoTrait,\n    binds: true,\n    willAttachTrait(newLayerTrait: GeoTrait, targetTrait: Trait | null): void {\n      this.owner.callObservers(\"traitWillAttachLayer\", newLayerTrait, targetTrait, this.owner);\n    },\n    didAttachTrait(layerTrait: GeoTrait): void {\n      if (this.owner.consuming) {\n        layerTrait.consume(this.owner);\n      }\n    },\n    willDetachTrait(layerTrait: GeoTrait): void {\n      if (this.owner.consuming) {\n        layerTrait.unconsume(this.owner);\n      }\n    },\n    didDetachTrait(newLayerTrait: GeoTrait): void {\n      this.owner.callObservers(\"traitDidDetachLayer\", newLayerTrait, this.owner);\n    },\n    detectModel(model: Model): GeoTrait | null {\n      return model.getTrait(GeoTrait);\n    },\n    detectTrait(trait: Trait): GeoTrait | null {\n      return null;\n    },\n  })\n  readonly layers!: TraitSet<this, GeoTrait>;\n  static readonly layers: MemberFastenerClass<MapTrait, \"layers\">;\n\n  /** @internal */\n  protected startConsumingLayers(): void {\n    const layerTraits = this.layers.traits;\n    for (const traitId in layerTraits) {\n      const layerTrait = layerTraits[traitId]!;\n      layerTrait.consume(this);\n    }\n  }\n\n  /** @internal */\n  protected stopConsumingLayers(): void {\n    const layerTraits = this.layers.traits;\n    for (const traitId in layerTraits) {\n      const layerTrait = layerTraits[traitId]!;\n      layerTrait.unconsume(this);\n    }\n  }\n\n  protected override onStartConsuming(): void {\n    super.onStartConsuming();\n    this.startConsumingLayers();\n  }\n\n  protected override onStopConsuming(): void {\n    super.onStopConsuming();\n    this.stopConsumingLayers();\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Class, AnyTiming, Timing} from \"@swim/util\";\nimport {MemberFastenerClass, Property} from \"@swim/component\";\nimport type {GeoBox} from \"@swim/geo\";\nimport type {Trait} from \"@swim/model\";\nimport {ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport {CanvasView} from \"@swim/graphics\";\nimport {Controller, TraitViewRef, TraitViewControllerSet} from \"@swim/controller\";\nimport type {GeoPerspective} from \"../geo/GeoPerspective\";\nimport type {GeoViewport} from \"../geo/GeoViewport\";\nimport type {GeoView} from \"../geo/GeoView\";\nimport type {GeoTrait} from \"../geo/GeoTrait\";\nimport {GeoController} from \"../geo/GeoController\";\nimport {MapView} from \"./MapView\";\nimport {MapTrait} from \"./MapTrait\";\nimport type {MapControllerObserver} from \"./MapControllerObserver\";\n\n/** @public */\nexport interface MapControllerLayerExt {\n  attachLayerTrait(layerTrait: GeoTrait, layerController: GeoController): void;\n  detachLayerTrait(layerTrait: GeoTrait, layerController: GeoController): void;\n  attachLayerView(layerView: GeoView, layerController: GeoController): void;\n  detachLayerView(layerView: GeoView, layerController: GeoController): void;\n}\n\n/** @public */\nexport abstract class MapController extends Controller {\n  override readonly observerType?: Class<MapControllerObserver>;\n\n  protected abstract createMapView(containerView: HtmlView): MapView;\n\n  protected setGeoPerspective(geoPerspective: GeoPerspective | null): void {\n    if (geoPerspective !== null) {\n      const mapView = this.map.view;\n      if (mapView !== null) {\n        mapView.moveTo(geoPerspective);\n      }\n    }\n  }\n\n  @TraitViewRef<MapController, MapTrait, MapView>({\n    traitType: MapTrait,\n    observesTrait: true,\n    willAttachTrait(mapTrait: MapTrait): void {\n      this.owner.callObservers(\"controllerWillAttachMapTrait\", mapTrait, this.owner);\n    },\n    didAttachTrait(mapTrait: MapTrait): void {\n      const mapView = this.view;\n      if (mapView !== null) {\n        this.owner.setGeoPerspective(mapTrait.geoPerspective.value);\n      }\n      const layerTraits = mapTrait.layers.traits;\n      for (const traitId in layerTraits) {\n        const layerTrait = layerTraits[traitId]!;\n        this.owner.layers.addTraitController(layerTrait);\n      }\n    },\n    willDetachTrait(mapTrait: MapTrait): void {\n      const layerTraits = mapTrait.layers.traits;\n      for (const traitId in layerTraits) {\n        const layerTrait = layerTraits[traitId]!;\n        this.owner.layers.deleteTraitController(layerTrait);\n      }\n    },\n    didDetachTrait(mapTrait: MapTrait): void {\n      this.owner.callObservers(\"controllerDidDetachMapTrait\", mapTrait, this.owner);\n    },\n    traitDidSetGeoPerspective(newGeoPerspective: GeoPerspective | null, oldGeoPerspective: GeoPerspective | null): void {\n      this.owner.setGeoPerspective(newGeoPerspective);\n    },\n    traitWillAttachLayer(layerTrait: GeoTrait, targetTrait: Trait): void {\n      this.owner.layers.addTraitController(layerTrait, targetTrait);\n    },\n    traitDidDetachLayer(layerTrait: GeoTrait): void {\n      this.owner.layers.deleteTraitController(layerTrait);\n    },\n    viewType: MapView,\n    observesView: true,\n    willAttachView(mapView: MapView): void {\n      this.owner.callObservers(\"controllerWillAttachMapView\", mapView, this.owner);\n    },\n    didAttachView(mapView: MapView): void {\n      this.owner.canvas.setView(mapView.canvas.view);\n      this.owner.container.setView(mapView.container.view);\n      const mapTrait = this.trait;\n      if (mapTrait !== null) {\n        this.owner.setGeoPerspective(mapTrait.geoPerspective.value);\n      }\n      const layerControllers = this.owner.layers.controllers;\n      for (const controllerId in layerControllers) {\n      const layerController = layerControllers[controllerId]!;\n        const layerView = layerController.geo.view;\n        if (layerView !== null && layerView.parent === null) {\n          layerController.geo.insertView(mapView);\n        }\n      }\n    },\n    willDetachView(mapView: MapView): void {\n      this.owner.canvas.setView(null);\n      this.owner.container.setView(null);\n    },\n    didDetachView(mapView: MapView): void {\n      this.owner.callObservers(\"controllerDidDetachMapView\", mapView, this.owner);\n    },\n    viewWillSetGeoViewport(newGeoViewport: GeoViewport, oldGeoViewport: GeoViewport): void {\n      this.owner.callObservers(\"controllerWillSetGeoViewport\", newGeoViewport, oldGeoViewport, this.owner);\n    },\n    viewDidSetGeoViewport(newGeoViewport: GeoViewport, oldGeoViewport: GeoViewport): void {\n      this.owner.callObservers(\"controllerDidSetGeoViewport\", newGeoViewport, oldGeoViewport, this.owner);\n    },\n    viewWillAttachMapCanvas(mapCanvasView: CanvasView): void {\n      this.owner.canvas.setView(mapCanvasView);\n    },\n    viewDidDetachMapCanvas(mapCanvasView: CanvasView): void {\n      this.owner.canvas.setView(null);\n    },\n    viewWillAttachMapContainer(mapContainerView: HtmlView): void {\n      this.owner.container.setView(mapContainerView);\n    },\n    viewDidDetachMapContainer(mapContainerView: HtmlView): void {\n      this.owner.container.setView(null);\n    },\n  })\n  readonly map!: TraitViewRef<this, MapTrait, MapView>;\n  static readonly map: MemberFastenerClass<MapController, \"map\">;\n\n  @ViewRef<MapController, CanvasView>({\n    type: CanvasView,\n    willAttachView(mapCanvasView: CanvasView): void {\n      this.owner.callObservers(\"controllerWillAttachMapCanvasView\", mapCanvasView, this.owner);\n    },\n    didDetachView(mapCanvasView: CanvasView): void {\n      this.owner.callObservers(\"controllerDidDetachMapCanvasView\", mapCanvasView, this.owner);\n    },\n  })\n  readonly canvas!: ViewRef<this, CanvasView>;\n  static readonly canvas: MemberFastenerClass<MapController, \"canvas\">;\n\n  @ViewRef<MapController, HtmlView>({\n    type: HtmlView,\n    willAttachView(mapContainerView: HtmlView): void {\n      this.owner.callObservers(\"controllerWillAttachMapContainerView\", mapContainerView, this.owner);\n    },\n    didAttachView(containerView: HtmlView): void {\n      const mapView = this.owner.createMapView(containerView);\n      mapView.container.setView(containerView);\n      this.owner.map.setView(mapView);\n    },\n    didDetachView(mapContainerView: HtmlView): void {\n      this.owner.callObservers(\"controllerDidDetachMapContainerView\", mapContainerView, this.owner);\n    },\n  })\n  readonly container!: ViewRef<this, HtmlView>;\n  static readonly container: MemberFastenerClass<MapController, \"container\">;\n\n  @Property({type: Timing, value: true})\n  readonly geoTiming!: Property<this, Timing | boolean | undefined, AnyTiming>;\n\n  @TraitViewControllerSet<MapController, GeoTrait, GeoView, GeoController, MapControllerLayerExt>({\n    implements: true,\n    type: GeoController,\n    binds: true,\n    observes: true,\n    get parentView(): MapView | null {\n      return this.owner.map.view;\n    },\n    getTraitViewRef(layerController: GeoController): TraitViewRef<unknown, GeoTrait, GeoView> {\n      return layerController.geo;\n    },\n    willAttachController(layerController: GeoController): void {\n      this.owner.callObservers(\"controllerWillAttachLayer\", layerController, this.owner);\n    },\n    didAttachController(layerController: GeoController): void {\n      const layerTrait = layerController.geo.trait;\n      if (layerTrait !== null) {\n        this.attachLayerTrait(layerTrait, layerController);\n      }\n      const layerView = layerController.geo.view;\n      if (layerView !== null) {\n        this.attachLayerView(layerView, layerController);\n      }\n    },\n    willDetachController(layerController: GeoController): void {\n      const layerView = layerController.geo.view;\n      if (layerView !== null) {\n        this.detachLayerView(layerView, layerController);\n      }\n      const layerTrait = layerController.geo.trait;\n      if (layerTrait !== null) {\n        this.detachLayerTrait(layerTrait, layerController);\n      }\n    },\n    didDetachController(layerController: GeoController): void {\n      this.owner.callObservers(\"controllerDidDetachLayer\", layerController, this.owner);\n    },\n    controllerWillAttachGeoTrait(layerTrait: GeoTrait, layerController: GeoController): void {\n      this.owner.callObservers(\"controllerWillAttachLayerTrait\", layerTrait, layerController, this.owner);\n      this.attachLayerTrait(layerTrait, layerController);\n    },\n    controllerDidDetachGeoTrait(layerTrait: GeoTrait, layerController: GeoController): void {\n      this.detachLayerTrait(layerTrait, layerController);\n      this.owner.callObservers(\"controllerDidDetachLayerTrait\", layerTrait, layerController, this.owner);\n    },\n    attachLayerTrait(layerTrait: GeoTrait, layerController: GeoController): void {\n      // hook\n    },\n    detachLayerTrait(layerTrait: GeoTrait, layerController: GeoController): void {\n      // hook\n    },\n    controllerWillAttachGeoView(layerView: GeoView, layerController: GeoController): void {\n      this.owner.callObservers(\"controllerWillAttachLayerView\", layerView, layerController, this.owner);\n      this.attachLayerView(layerView, layerController);\n    },\n    controllerDidDetachGeoView(layerView: GeoView, layerController: GeoController): void {\n      this.detachLayerView(layerView, layerController);\n      this.owner.callObservers(\"controllerDidDetachLayerView\", layerView, layerController, this.owner);\n    },\n    attachLayerView(layerView: GeoView, layerController: GeoController): void {\n      // hook\n    },\n    detachLayerView(layerView: GeoView, layerController: GeoController): void {\n      layerView.remove();\n    },\n    controllerWillSetGeoBounds(newGeoBounds: GeoBox, oldGeoBounds: GeoBox, layerController: GeoController): void {\n      this.owner.callObservers(\"controllerWillSetLayerGeoBounds\", newGeoBounds, oldGeoBounds, layerController, this.owner);\n    },\n    controllerDidSetGeoBounds(newGeoBounds: GeoBox, oldGeoBounds: GeoBox, layerController: GeoController): void {\n      this.owner.callObservers(\"controllerDidSetLayerGeoBounds\", newGeoBounds, oldGeoBounds, layerController, this.owner);\n    },\n    createController(layerTrait?: GeoTrait): GeoController {\n      if (layerTrait !== void 0) {\n        return GeoController.fromTrait(layerTrait);\n      } else {\n        return TraitViewControllerSet.prototype.createController.call(this);\n      }\n    },\n  })\n  readonly layers!: TraitViewControllerSet<this, GeoTrait, GeoView, GeoController> & MapControllerLayerExt;\n  static readonly layers: MemberFastenerClass<MapController, \"layers\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Equals} from \"@swim/util\";\nimport type {AnyR2Point, R2Point, R2Box} from \"@swim/math\";\nimport {AnyGeoPoint, GeoPoint, GeoBox} from \"@swim/geo\";\nimport type {GeoViewport} from \"../geo/GeoViewport\";\n\n/** @public */\nexport abstract class WorldMapViewport implements GeoViewport, Equals {\n  get geoFrame(): GeoBox {\n    return GeoBox.globe();\n  }\n\n  get geoCenter(): GeoPoint {\n    return GeoPoint.origin();\n  }\n\n  get zoom(): number {\n    return 0;\n  }\n\n  get heading(): number {\n    return 0;\n  }\n\n  get tilt(): number {\n    return 0;\n  }\n\n  abstract readonly viewFrame: R2Box;\n\n  abstract withViewFrame(viewFrame: R2Box): WorldMapViewport;\n\n  abstract project(geoPoint: AnyGeoPoint): R2Point;\n  abstract project(lng: number, lat: number): R2Point;\n\n  abstract unproject(viewPoint: AnyR2Point): GeoPoint;\n  abstract unproject(x: number, y: number): GeoPoint;\n\n  protected canEqual(that: unknown): boolean {\n    return that instanceof WorldMapViewport\n        && this.constructor === that.constructor;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof WorldMapViewport) {\n      return that.canEqual(this)\n          && this.viewFrame.equals(that.viewFrame);\n    }\n    return false;\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyR2Point, R2PointInit, R2Point, R2Box} from \"@swim/math\";\nimport {AnyGeoPoint, GeoPointInit, GeoPoint} from \"@swim/geo\";\nimport {WorldMapViewport} from \"./WorldMapViewport\";\n\n/** @public */\nexport class EquirectangularMapViewport extends WorldMapViewport {\n  constructor(viewFrame: R2Box) {\n    super();\n    this.viewFrame = viewFrame;\n  }\n\n  override readonly viewFrame: R2Box;\n\n  override withViewFrame(viewFrame: R2Box): WorldMapViewport {\n    let xMin = viewFrame.xMin;\n    let yMin = viewFrame.yMin;\n    let xMax = viewFrame.xMax;\n    let yMax = viewFrame.yMax;\n    const width = xMax - xMin;\n    const height = yMax - yMin;\n    const frameRatio = width / height;\n    const mapRatio = 2;\n    if (frameRatio < mapRatio) { // shrink y\n      const dy = (height - width / mapRatio) / 2;\n      yMin += dy;\n      yMax -= dy;\n      viewFrame = new R2Box(xMin, yMin, xMax, yMax);\n    } else if (frameRatio > mapRatio) { // shrink x\n      const dx = (width - height * mapRatio) / 2;\n      xMin += dx;\n      xMax -= dx;\n      viewFrame = new R2Box(xMin, yMin, xMax, yMax);\n    }\n    return new EquirectangularMapViewport(viewFrame);\n  }\n\n  override project(geoPoint: AnyGeoPoint): R2Point;\n  override project(lng: number, lat: number): R2Point;\n  override project(lng: AnyGeoPoint | number, lat?: number): R2Point {\n    if (arguments.length === 1) {\n      if (Array.isArray(lng)) {\n        lat = lng[1];\n        lng = lng[0];\n      } else {\n        lat = (lng as GeoPointInit | GeoPoint).lat;\n        lng = (lng as GeoPointInit | GeoPoint).lng;\n      }\n    }\n    const viewFrame = this.viewFrame;\n    const x = viewFrame.xMin + ((180 + (lng as number)) / 360) * viewFrame.width;\n    const y = viewFrame.yMax - ((90 + (lat as number)) / 180) * viewFrame.height;\n    return new R2Point(x, y);\n  }\n\n  override unproject(viewPoint: AnyR2Point): GeoPoint;\n  override unproject(x: number, y: number): GeoPoint;\n  override unproject(x: AnyR2Point | number, y?: number): GeoPoint {\n    if (arguments.length === 1) {\n      if (Array.isArray(x)) {\n        y = x[1];\n        x = x[0];\n      } else {\n        y = (x as R2PointInit | R2Point).y;\n        x = (x as R2PointInit | R2Point).x;\n      }\n    }\n    const viewFrame = this.viewFrame;\n    const lng = 360 * ((x as number) - viewFrame.xMin) / viewFrame.width - 180;\n    const lat = 180 * (viewFrame.yMax - (y as number)) / viewFrame.height - 90;\n    return new GeoPoint(lng, lat);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Mutable, Class, AnyTiming} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {R2Box} from \"@swim/math\";\nimport {ViewContextType, ViewFlags, View, ViewRef} from \"@swim/view\";\nimport type {HtmlView} from \"@swim/dom\";\nimport type {CanvasView} from \"@swim/graphics\";\nimport type {AnyGeoPerspective} from \"../geo/GeoPerspective\";\nimport {MapView} from \"../map/MapView\";\nimport type {WorldMapViewport} from \"./WorldMapViewport\";\nimport {EquirectangularMapViewport} from \"./EquirectangularMapViewport\";\nimport type {WorldMapViewObserver} from \"./WorldMapViewObserver\";\n\n/** @public */\nexport class WorldMapView extends MapView {\n  constructor(geoViewport: WorldMapViewport) {\n    super();\n    Object.defineProperty(this, \"geoViewport\", {\n      value: geoViewport,\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n\n  override readonly observerType?: Class<WorldMapViewObserver>;\n\n  override readonly geoViewport!: WorldMapViewport;\n\n  protected willSetGeoViewport(newGeoViewport: WorldMapViewport, oldGeoViewport: WorldMapViewport): void {\n    this.callObservers(\"viewWillSetGeoViewport\", newGeoViewport, oldGeoViewport, this);\n  }\n\n  protected onSetGeoViewport(newGeoViewport: WorldMapViewport, oldGeoViewport: WorldMapViewport): void {\n    // hook\n  }\n\n  protected didSetGeoViewport(newGeoViewport: WorldMapViewport, oldGeoViewport: WorldMapViewport): void {\n    this.callObservers(\"viewDidSetGeoViewport\", newGeoViewport, oldGeoViewport, this);\n  }\n\n  protected updateGeoViewport(): boolean {\n    const oldGeoViewport = this.geoViewport;\n    const newGeoViewport = oldGeoViewport.withViewFrame(this.viewFrame);\n    if (!newGeoViewport.equals(oldGeoViewport)) {\n      this.willSetGeoViewport(newGeoViewport, oldGeoViewport);\n      (this as Mutable<this>).geoViewport = newGeoViewport;\n      this.onSetGeoViewport(newGeoViewport, oldGeoViewport);\n      this.didSetGeoViewport(newGeoViewport, oldGeoViewport);\n      return true;\n    }\n    return false;\n  }\n\n  protected override willProcess(processFlags: ViewFlags, viewContext: ViewContextType<this>): void {\n    if ((processFlags & View.NeedsProject) !== 0) {\n      this.updateGeoViewport();\n      (viewContext as Mutable<ViewContextType<this>>).geoViewport = this.geoViewport;\n    }\n    super.willProcess(processFlags, viewContext);\n  }\n\n  override moveTo(geoPerspective: AnyGeoPerspective, timing?: AnyTiming | boolean): void {\n    // nop\n  }\n\n  @ViewRef<WorldMapView, CanvasView>({\n    extends: true,\n    didAttachView(canvasView: CanvasView, targetView: View | null): void {\n      if (this.owner.parent === null) {\n        canvasView.appendChild(this.owner);\n      }\n      MapView.canvas.prototype.didAttachView.call(this, canvasView, targetView);\n    },\n    willDetachView(canvasView: CanvasView): void {\n      MapView.canvas.prototype.willDetachView.call(this, canvasView);\n      if (this.owner.parent === canvasView) {\n        canvasView.removeChild(this.owner);\n      }\n    },\n  })\n  override readonly canvas!: ViewRef<this, CanvasView>;\n  static override readonly canvas: MemberFastenerClass<WorldMapView, \"canvas\">;\n\n  @ViewRef<WorldMapView, HtmlView>({\n    extends: true,\n    didAttachView(containerView: HtmlView, targetView: View | null): void {\n      this.owner.canvas.insertView(containerView);\n      MapView.container.prototype.didAttachView.call(this, containerView, targetView);\n    },\n    willDetachView(containerView: HtmlView): void {\n      MapView.container.prototype.willDetachView.call(this, containerView);\n      const canvasView = this.owner.canvas.view;\n      if (canvasView !== null && canvasView.parent === containerView) {\n        containerView.removeChild(canvasView);\n      }\n    },\n  })\n  override readonly container!: ViewRef<this, HtmlView>;\n  static override readonly container: MemberFastenerClass<WorldMapView, \"container\">;\n\n  static override create(geoViewport?: WorldMapViewport): WorldMapView;\n  static override create(): WorldMapView;\n  static override create(geoViewport?: WorldMapViewport): WorldMapView {\n    if (geoViewport === void 0) {\n      geoViewport = new EquirectangularMapViewport(R2Box.undefined());\n    }\n    return new WorldMapView(geoViewport);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Equals} from \"@swim/util\";\nimport {AnyR2Point, R2Point} from \"@swim/math\";\nimport {AnyGeoPoint, GeoPoint, GeoBox} from \"@swim/geo\";\nimport type {GeoViewport} from \"@swim/map\";\n\n/** @public */\nexport class MapboxViewport implements GeoViewport, Equals {\n  constructor(map: mapboxgl.Map, geoFrame: GeoBox, geoCenter: GeoPoint,\n              zoom: number, heading: number, tilt: number) {\n    this.map = map;\n    this.geoFrame = geoFrame;\n    this.geoCenter = geoCenter;\n    this.zoom = zoom;\n    this.heading = heading;\n    this.tilt = tilt;\n  }\n\n  readonly map: mapboxgl.Map;\n\n  readonly geoFrame: GeoBox;\n\n  readonly geoCenter: GeoPoint;\n\n  readonly zoom: number;\n\n  readonly heading: number;\n\n  readonly tilt: number;\n\n  project(geoPoint: AnyGeoPoint): R2Point;\n  project(lng: number, lat: number): R2Point;\n  project(lng: AnyGeoPoint | number, lat?: number): R2Point {\n    let geoPoint: mapboxgl.LngLatLike;\n    if (typeof lng === \"number\") {\n      geoPoint = new mapboxgl.LngLat(lng, lat!);\n    } else {\n      geoPoint = lng;\n    }\n    const point = this.map.project(geoPoint);\n    return new R2Point(point.x, point.y);\n  }\n\n  unproject(viewPoint: AnyR2Point): GeoPoint;\n  unproject(x: number, y: number): GeoPoint;\n  unproject(x: AnyR2Point | number, y?: number): GeoPoint {\n    let viewPoint: mapboxgl.PointLike;\n    if (typeof x === \"number\") {\n      viewPoint = new mapboxgl.Point(x, y!);\n    } else if (Array.isArray(x)) {\n      viewPoint = x;\n    } else {\n      viewPoint = new mapboxgl.Point(x.x, x.y);\n    }\n    const point = this.map.unproject(viewPoint);\n    return new GeoPoint(point.lng, point.lat);\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof MapboxViewport) {\n      return this.map === that.map\n          && this.geoFrame.equals(that.geoFrame)\n          && this.geoCenter.equals(that.geoCenter)\n          && this.zoom === that.zoom\n          && this.heading === that.heading\n          && this.tilt === that.tilt;\n    }\n    return false;\n  }\n\n  static create(map: mapboxgl.Map): MapboxViewport {\n    const mapFrame = map.getBounds();\n    const geoFrame = new GeoBox(mapFrame.getWest(), mapFrame.getSouth(),\n                                mapFrame.getEast(), mapFrame.getNorth());\n    const mapCenter = map.getCenter();\n    const geoCenter = new GeoPoint(mapCenter.lng, mapCenter.lat);\n    const zoom = map.getZoom();\n    const heading = map.getBearing();\n    const tilt = map.getPitch();\n    return new MapboxViewport(map, geoFrame, geoCenter, zoom, heading, tilt);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, Equivalent, AnyTiming, Timing} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {GeoPoint} from \"@swim/geo\";\nimport {Look, Mood} from \"@swim/theme\";\nimport {View, ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {CanvasView} from \"@swim/graphics\";\nimport {AnyGeoPerspective, MapView} from \"@swim/map\";\nimport {MapboxViewport} from \"./MapboxViewport\";\nimport type {MapboxViewObserver} from \"./MapboxViewObserver\";\n\n/** @public */\nexport class MapboxView extends MapView {\n  constructor(map: mapboxgl.Map) {\n    super();\n    this.map = map;\n    Object.defineProperty(this, \"geoViewport\", {\n      value: MapboxViewport.create(map),\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n    this.onMapRender = this.onMapRender.bind(this);\n    this.onMoveStart = this.onMoveStart.bind(this);\n    this.onMoveEnd = this.onMoveEnd.bind(this);\n    this.initMap(map);\n  }\n\n  override readonly observerType?: Class<MapboxViewObserver>;\n\n  readonly map: mapboxgl.Map;\n\n  protected initMap(map: mapboxgl.Map): void {\n    map.on(\"render\", this.onMapRender);\n    map.on(\"movestart\", this.onMoveStart);\n    map.on(\"moveend\", this.onMoveEnd);\n  }\n\n  override readonly geoViewport!: MapboxViewport;\n\n  protected willSetGeoViewport(newGeoViewport: MapboxViewport, oldGeoViewport: MapboxViewport): void {\n    this.callObservers(\"viewWillSetGeoViewport\", newGeoViewport, oldGeoViewport, this);\n  }\n\n  protected onSetGeoViewport(newGeoViewport: MapboxViewport, oldGeoViewport: MapboxViewport): void {\n    // hook\n  }\n\n  protected didSetGeoViewport(newGeoViewport: MapboxViewport, oldGeoViewport: MapboxViewport): void {\n    this.callObservers(\"viewDidSetGeoViewport\", newGeoViewport, oldGeoViewport, this);\n  }\n\n  protected updateGeoViewport(): boolean {\n    const oldGeoViewport = this.geoViewport;\n    const newGeoViewport = MapboxViewport.create(this.map);\n    if (!newGeoViewport.equals(oldGeoViewport)) {\n      this.willSetGeoViewport(newGeoViewport, oldGeoViewport);\n      (this as Mutable<this>).geoViewport = newGeoViewport;\n      this.onSetGeoViewport(newGeoViewport, oldGeoViewport);\n      this.didSetGeoViewport(newGeoViewport, oldGeoViewport);\n      return true;\n    }\n    return false;\n  }\n\n  protected onMapRender(): void {\n    if (this.updateGeoViewport()) {\n      const immediate = !this.hidden && !this.culled;\n      this.requireUpdate(View.NeedsProject, immediate);\n    }\n  }\n\n  protected onMoveStart(): void {\n    this.willMoveMap();\n  }\n\n  protected onMoveEnd(): void {\n    this.didMoveMap();\n  }\n\n  override moveTo(geoPerspective: AnyGeoPerspective, timing?: AnyTiming | boolean): void {\n    const options: mapboxgl.FlyToOptions = {};\n    const geoViewport = this.geoViewport;\n    let geoCenter = geoPerspective.geoCenter;\n    if (geoCenter !== void 0 && geoCenter !== null) {\n      geoCenter = GeoPoint.fromAny(geoCenter);\n      if (!geoViewport.geoCenter.equivalentTo(geoCenter, 1e-5)) {\n        options.center = geoCenter;\n      }\n    }\n    const zoom = geoPerspective.zoom;\n    if (zoom !== void 0 && !Equivalent(geoViewport.zoom, zoom, 1e-5)) {\n      options.zoom = zoom;\n    }\n    const heading = geoPerspective.heading;\n    if (heading !== void 0 && !Equivalent(geoViewport.heading, heading, 1e-5)) {\n      options.bearing = heading;\n    }\n    const tilt = geoPerspective.tilt;\n    if (tilt !== void 0 && !Equivalent(geoViewport.tilt, tilt, 1e-5)) {\n      options.pitch = tilt;\n    }\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, Mood.ambient, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n    if (timing instanceof Timing) {\n      options.duration = timing.duration;\n    }\n    this.map.flyTo(options);\n  }\n\n  protected willMoveMap(): void {\n    this.callObservers(\"viewWillMoveMap\", this);\n  }\n\n  protected didMoveMap(): void {\n    this.callObservers(\"viewDidMoveMap\", this);\n  }\n\n  @ViewRef<MapboxView, CanvasView>({\n    extends: true,\n    didAttachView(canvasView: CanvasView, targetView: View | null): void {\n      if (this.owner.parent === null) {\n        canvasView.appendChild(this.owner);\n        canvasView.setEventNode(this.owner.map.getCanvasContainer());\n      }\n      MapView.canvas.prototype.didAttachView.call(this, canvasView, targetView);\n    },\n    willDetachView(canvasView: CanvasView): void {\n      MapView.canvas.prototype.willDetachView.call(this, canvasView);\n      if (this.owner.parent === canvasView) {\n        canvasView.removeChild(this.owner);\n      }\n    },\n  })\n  override readonly canvas!: ViewRef<this, CanvasView>;\n  static override readonly canvas: MemberFastenerClass<MapboxView, \"canvas\">;\n\n  @ViewRef<MapboxView, HtmlView>({\n    extends: true,\n    didAttachView(containerView: HtmlView, targetView: View | null): void {\n      HtmlView.fromNode(this.owner.map.getContainer());\n      const canvasContainerView =  HtmlView.fromNode(this.owner.map.getCanvasContainer());\n      this.owner.canvas.insertView(canvasContainerView);\n      MapView.container.prototype.didAttachView.call(this, containerView, targetView);\n    },\n    willDetachView(containerView: HtmlView): void {\n      MapView.container.prototype.willDetachView.call(this, containerView);\n      const canvasView = this.owner.canvas.view;\n      const canvasContainerView = HtmlView.fromNode(this.owner.map.getCanvasContainer());\n      if (canvasView !== null && canvasView.parent === canvasContainerView) {\n        canvasContainerView.removeChild(containerView);\n      }\n    },\n  })\n  override readonly container!: ViewRef<this, HtmlView>;\n  static override readonly container: MemberFastenerClass<MapboxView, \"container\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Equals} from \"@swim/util\";\nimport {AnyR2Point, R2Point, Transform, TranslateTransform} from \"@swim/math\";\nimport {AnyGeoPoint, GeoPoint, GeoBox} from \"@swim/geo\";\nimport type {GeoViewport} from \"@swim/map\";\n\n/** @public */\nexport class LeafletViewport implements GeoViewport, Equals {\n  constructor(map: L.Map, geoFrame: GeoBox, geoCenter: GeoPoint, viewOrigin: R2Point,\n              zoom: number, heading: number, tilt: number) {\n    this.map = map;\n    this.geoFrame = geoFrame;\n    this.geoCenter = geoCenter;\n    this.viewOrigin = viewOrigin;\n    this.zoom = zoom;\n    this.heading = heading;\n    this.tilt = tilt;\n  }\n\n  readonly map: L.Map;\n\n  readonly geoFrame: GeoBox;\n\n  readonly geoCenter: GeoPoint;\n\n  readonly viewOrigin: R2Point;\n\n  readonly zoom: number;\n\n  readonly heading: number;\n\n  readonly tilt: number;\n\n  project(geoPoint: AnyGeoPoint): R2Point;\n  project(lng: number, lat: number): R2Point;\n  project(lng: AnyGeoPoint | number, lat?: number): R2Point {\n    const origin = this.viewOrigin;\n    let geoPoint: L.LatLngExpression;\n    if (typeof lng === \"number\") {\n      geoPoint = new L.LatLng(lat!, lng);\n    } else if (Array.isArray(lng)) {\n      geoPoint = new L.LatLng(lng[1], lng[0]);\n    } else {\n      geoPoint = lng;\n    }\n    const point = this.map.project(geoPoint, this.zoom);\n    return new R2Point(point.x - origin.x, point.y - origin.y);\n  }\n\n  unproject(viewPoint: AnyR2Point): GeoPoint;\n  unproject(x: number, y: number): GeoPoint;\n  unproject(x: AnyR2Point | number, y?: number): GeoPoint {\n    const origin = this.viewOrigin;\n    let viewPoint: L.PointExpression;\n    if (typeof x === \"number\") {\n      viewPoint = new L.Point(x + origin.x, y! + origin.y);\n    } else if (Array.isArray(x)) {\n      viewPoint = new L.Point(x[0] + origin.x, x[1] + origin.y);\n    } else {\n      viewPoint = new L.Point(x.x + origin.x, x.y + origin.y);\n    }\n    const point = this.map.unproject(viewPoint, this.zoom);\n    return new GeoPoint(point.lng, point.lat);\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LeafletViewport) {\n      return this.map === that.map\n          && this.geoFrame.equals(that.geoFrame)\n          && this.geoCenter.equals(that.geoCenter)\n          && this.viewOrigin.equals(that.viewOrigin)\n          && this.zoom === that.zoom\n          && this.heading === that.heading\n          && this.tilt === that.tilt;\n    }\n    return false;\n  }\n\n  static create(map: L.Map): LeafletViewport {\n    const mapFrame = map.getBounds();\n    const geoFrame = new GeoBox(mapFrame.getWest(), mapFrame.getSouth(),\n                                mapFrame.getEast(), mapFrame.getNorth());\n    const mapCenter = map.getCenter();\n    const geoCenter = new GeoPoint(mapCenter.lng, mapCenter.lat);\n    let {x, y} = map.getPixelOrigin();\n    try {\n      const mapTransform = Transform.parse(map.getPane(\"mapPane\")!.style.transform);\n      if (mapTransform instanceof TranslateTransform) {\n        x -= mapTransform.x.pxValue();\n        y -= mapTransform.y.pxValue();\n      }\n    } catch (e) {\n      // swallow\n    }\n    const viewOrigin = new R2Point(x, y);\n    const zoom = map.getZoom();\n    const heading = 0;\n    const tilt = 0;\n    return new LeafletViewport(map, geoFrame, geoCenter, viewOrigin, zoom, heading, tilt);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, AnyTiming, Timing} from \"@swim/util\";\nimport {Affinity, MemberFastenerClass} from \"@swim/component\";\nimport {GeoPoint} from \"@swim/geo\";\nimport {Look, Mood} from \"@swim/theme\";\nimport {View, ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {CanvasView} from \"@swim/graphics\";\nimport {AnyGeoPerspective, MapView} from \"@swim/map\";\nimport {LeafletViewport} from \"./LeafletViewport\";\nimport type {LeafletViewObserver} from \"./LeafletViewObserver\";\n\n/** @public */\nexport class LeafletView extends MapView {\n  constructor(map: L.Map) {\n    super();\n    this.map = map;\n    Object.defineProperty(this, \"geoViewport\", {\n      value: LeafletViewport.create(map),\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n    this.onMapRender = this.onMapRender.bind(this);\n    this.onMoveStart = this.onMoveStart.bind(this);\n    this.onMoveEnd = this.onMoveEnd.bind(this);\n    this.initMap(map);\n  }\n\n  override readonly observerType?: Class<LeafletViewObserver>;\n\n  readonly map: L.Map;\n\n  protected initMap(map: L.Map): void {\n    map.on(\"move\", this.onMapRender);\n    map.on(\"movestart\", this.onMoveStart);\n    map.on(\"moveend\", this.onMoveEnd);\n  }\n\n  override readonly geoViewport!: LeafletViewport;\n\n  protected willSetGeoViewport(newGeoViewport: LeafletViewport, oldGeoViewport: LeafletViewport): void {\n    this.callObservers(\"viewWillSetGeoViewport\", newGeoViewport, oldGeoViewport, this);\n  }\n\n  protected onSetGeoViewport(newGeoViewport: LeafletViewport, oldGeoViewport: LeafletViewport): void {\n    // hook\n  }\n\n  protected didSetGeoViewport(newGeoViewport: LeafletViewport, oldGeoViewport: LeafletViewport): void {\n    this.callObservers(\"viewDidSetGeoViewport\", newGeoViewport, oldGeoViewport, this);\n  }\n\n  protected updateGeoViewport(): boolean {\n    const oldGeoViewport = this.geoViewport;\n    const newGeoViewport = LeafletViewport.create(this.map);\n    if (!newGeoViewport.equals(oldGeoViewport)) {\n      this.willSetGeoViewport(newGeoViewport, oldGeoViewport);\n      (this as Mutable<this>).geoViewport = newGeoViewport;\n      this.onSetGeoViewport(newGeoViewport, oldGeoViewport);\n      this.didSetGeoViewport(newGeoViewport, oldGeoViewport);\n      return true;\n    }\n    return false;\n  }\n\n  protected onMapRender(): void {\n    if (this.updateGeoViewport()) {\n      const immediate = !this.hidden && !this.culled;\n      this.requireUpdate(View.NeedsProject, immediate);\n    }\n  }\n\n  protected onMoveStart(): void {\n    this.willMoveMap();\n  }\n\n  protected onMoveEnd(): void {\n    this.didMoveMap();\n  }\n\n  override moveTo(geoPerspective: AnyGeoPerspective, timing?: AnyTiming | boolean): void {\n    const options: L.ZoomPanOptions = {};\n    const geoViewport = this.geoViewport;\n    let geoCenter = geoPerspective.geoCenter;\n    if (geoCenter !== void 0 && geoCenter !== null) {\n      geoCenter = GeoPoint.fromAny(geoCenter);\n    } else {\n      geoCenter = geoViewport.geoCenter;\n    }\n    const zoom = geoPerspective.zoom;\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, Mood.ambient, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n    if (timing instanceof Timing) {\n      options.animate = true;\n      options.duration = timing.duration;\n    }\n    this.map.flyTo(geoCenter, zoom, options);\n  }\n\n  protected willMoveMap(): void {\n    this.callObservers(\"viewWillMoveMap\", this);\n  }\n\n  protected didMoveMap(): void {\n    this.callObservers(\"viewDidMoveMap\", this);\n  }\n\n  @ViewRef<LeafletView, CanvasView>({\n    extends: true,\n    didAttachView(canvasView: CanvasView, targetView: View | null): void {\n      if (this.owner.parent === null) {\n        canvasView.appendChild(this.owner);\n      }\n      MapView.canvas.prototype.didAttachView.call(this, canvasView, targetView);\n    },\n    willDetachView(canvasView: CanvasView): void {\n      MapView.canvas.prototype.willDetachView.call(this, canvasView);\n      if (this.owner.parent === canvasView) {\n        canvasView.removeChild(this.owner);\n      }\n    },\n  })\n  override readonly canvas!: ViewRef<this, CanvasView>;\n  static override readonly canvas: MemberFastenerClass<LeafletView, \"canvas\">;\n\n  @ViewRef<LeafletView, HtmlView>({\n    extends: true,\n    didAttachView(containerView: HtmlView, targetView: View | null): void {\n      const controlContainerView = HtmlView.fromNode(containerView.node.querySelector(\".leaflet-control-container\") as HTMLDivElement);\n      const canvasView = this.owner.canvas.insertView(containerView, void 0, controlContainerView);\n      if (canvasView !== null) {\n        canvasView.zIndex.setState(500, Affinity.Intrinsic);\n      }\n      MapView.container.prototype.didAttachView.call(this, containerView, targetView);\n    },\n    willDetachView(containerView: HtmlView): void {\n      MapView.container.prototype.willDetachView.call(this, containerView);\n      const canvasView = this.owner.canvas.view;\n      if (canvasView !== null && canvasView.parent === containerView) {\n        containerView.removeChild(containerView);\n      }\n    },\n  })\n  override readonly container!: ViewRef<this, HtmlView>;\n  static override readonly container: MemberFastenerClass<LeafletView, \"container\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Equals} from \"@swim/util\";\nimport {AnyR2Point, R2Point} from \"@swim/math\";\nimport {AnyGeoPoint, GeoPoint, GeoBox} from \"@swim/geo\";\nimport type {GeoViewport} from \"@swim/map\";\n\n/** @public */\nexport class GoogleMapViewport implements GeoViewport, Equals {\n  constructor(projection: google.maps.MapCanvasProjection | null, geoFrame: GeoBox,\n              geoCenter: GeoPoint, zoom: number, heading: number, tilt: number) {\n    this.projection = projection;\n    this.geoFrame = geoFrame;\n    this.geoCenter = geoCenter;\n    this.zoom = zoom;\n    this.heading = heading;\n    this.tilt = tilt;\n  }\n\n  readonly projection: google.maps.MapCanvasProjection | null;\n\n  readonly geoFrame: GeoBox;\n\n  readonly geoCenter: GeoPoint;\n\n  readonly zoom: number;\n\n  readonly heading: number;\n\n  readonly tilt: number;\n\n  project(geoPoint: AnyGeoPoint): R2Point;\n  project(lng: number, lat: number): R2Point;\n  project(lng: AnyGeoPoint | number, lat?: number): R2Point {\n    const projection = this.projection;\n    if (projection !== null) {\n      let geoPoint: google.maps.LatLng;\n      if (typeof lng === \"number\") {\n        geoPoint = new google.maps.LatLng(lat!, lng);\n      } else if (Array.isArray(lng)) {\n        geoPoint = new google.maps.LatLng(lng[1], lng[0]);\n      } else {\n        geoPoint = new google.maps.LatLng(lng.lat, lng.lng);\n      }\n      const point = projection.fromLatLngToContainerPixel(geoPoint);\n      if (point !== null) {\n        return new R2Point(point.x, point.y);\n      }\n    }\n    return R2Point.undefined();\n  }\n\n  unproject(viewPoint: AnyR2Point): GeoPoint;\n  unproject(x: number, y: number): GeoPoint;\n  unproject(x: AnyR2Point | number, y?: number): GeoPoint {\n    const projection = this.projection;\n    if (projection !== null) {\n      let viewPoint: google.maps.Point;\n      if (typeof x === \"number\") {\n        viewPoint = new google.maps.Point(x, y!);\n      } else if (Array.isArray(x)) {\n        viewPoint = new google.maps.Point(x[0], x[1]);\n      } else {\n        viewPoint = new google.maps.Point(x.x, x.y);\n      }\n      const point = projection.fromContainerPixelToLatLng(viewPoint);\n      if (point !== null) {\n        return new GeoPoint(point.lng(), point.lat());\n      }\n    }\n    return GeoPoint.undefined();\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GoogleMapViewport) {\n      return this.projection === that.projection\n          && this.geoFrame.equals(that.geoFrame)\n          && this.geoCenter.equals(that.geoCenter)\n          && this.zoom === that.zoom\n          && this.heading === that.heading\n          && this.tilt === that.tilt;\n    }\n    return false;\n  }\n\n  static create(map: google.maps.Map, projection: google.maps.MapCanvasProjection | null | undefined): GoogleMapViewport {\n    if (projection === void 0) {\n      projection = null;\n    }\n    const mapFrame = map.getBounds();\n    let geoFrame: GeoBox;\n    if (mapFrame !== void 0 && mapFrame !== null) {\n      const sw = mapFrame.getSouthWest();\n      const ne = mapFrame.getNorthEast();\n      geoFrame = new GeoBox(sw.lng(), sw.lat(), ne.lng(), ne.lat());\n    } else {\n      geoFrame = GeoBox.undefined();\n    }\n    const mapCenter = map.getCenter();\n    const geoCenter = mapCenter !== void 0 ? new GeoPoint(mapCenter.lng(), mapCenter.lat()) : GeoPoint.origin();\n    let zoom = map.getZoom();\n    if (zoom === void 0) {\n      zoom = 0;\n    }\n    let heading = map.getHeading();\n    if (heading === void 0) {\n      heading = 0;\n    }\n    let tilt = map.getTilt();\n    if (tilt === void 0) {\n      tilt = 0;\n    }\n    return new GoogleMapViewport(projection, geoFrame, geoCenter, zoom, heading, tilt);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, Lazy, Equivalent, AnyTiming} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {GeoPoint} from \"@swim/geo\";\nimport {ViewContextType, ViewFlags, View, ViewRef} from \"@swim/view\";\nimport {ViewHtml, HtmlView} from \"@swim/dom\";\nimport type {CanvasView} from \"@swim/graphics\";\nimport {AnyGeoPerspective, MapView} from \"@swim/map\";\nimport {GoogleMapViewport} from \"./GoogleMapViewport\";\nimport type {GoogleMapViewObserver} from \"./GoogleMapViewObserver\";\n\n/** @public */\nexport class GoogleMapView extends MapView {\n  constructor(map: google.maps.Map) {\n    super();\n    this.map = map;\n    this.mapOverlay = this.createMapOverlay(map);\n    Object.defineProperty(this, \"geoViewport\", {\n      value: GoogleMapViewport.create(this.map, this.mapOverlay.getProjection()),\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n    this.onMapDraw = this.onMapDraw.bind(this);\n    this.onMapIdle = this.onMapIdle.bind(this);\n    this.initMap(map);\n  }\n\n  override readonly observerType?: Class<GoogleMapViewObserver>;\n\n  readonly map: google.maps.Map;\n\n  protected initMap(map: google.maps.Map): void {\n    map.addListener(\"idle\", this.onMapIdle);\n  }\n\n  readonly mapOverlay: google.maps.OverlayView;\n\n  protected createMapOverlay(map: google.maps.Map): google.maps.OverlayView {\n    const mapOverlay = new GoogleMapView.MapOverlay(this);\n    mapOverlay.setMap(map);\n    return mapOverlay;\n  }\n\n  /** @internal */\n  @Lazy\n  static get MapOverlay(): {new(owner: GoogleMapView): google.maps.OverlayView} {\n    return class GoogleMapOverlayView extends google.maps.OverlayView {\n      constructor(owner: GoogleMapView) {\n        super();\n        this.owner = owner;\n      }\n      readonly owner: GoogleMapView;\n      override onAdd(): void {\n        const containerView = this.owner.container.view;\n        if (containerView !== null) {\n          this.owner.container.materializeView(containerView);\n        }\n      }\n      override onRemove(): void {\n        this.owner.canvas.removeView();\n      }\n      override draw(): void {\n        this.owner.onMapDraw();\n      }\n    }\n  }\n\n  override readonly geoViewport!: GoogleMapViewport;\n\n  protected willSetGeoViewport(newGeoViewport: GoogleMapViewport, oldGeoViewport: GoogleMapViewport): void {\n    this.callObservers(\"viewWillSetGeoViewport\", newGeoViewport, oldGeoViewport, this);\n  }\n\n  protected onSetGeoViewport(newGeoViewport: GoogleMapViewport, oldGeoViewport: GoogleMapViewport): void {\n    // hook\n  }\n\n  protected didSetGeoViewport(newGeoViewport: GoogleMapViewport, oldGeoViewport: GoogleMapViewport): void {\n    this.callObservers(\"viewDidSetGeoViewport\", newGeoViewport, oldGeoViewport, this);\n  }\n\n  protected updateGeoViewport(): boolean {\n    const oldGeoViewport = this.geoViewport;\n    const newGeoViewport = GoogleMapViewport.create(this.map, this.mapOverlay.getProjection());\n    if (!newGeoViewport.equals(oldGeoViewport)) {\n      this.willSetGeoViewport(newGeoViewport, oldGeoViewport);\n      (this as Mutable<this>).geoViewport = newGeoViewport;\n      this.onSetGeoViewport(newGeoViewport, oldGeoViewport);\n      this.didSetGeoViewport(newGeoViewport, oldGeoViewport);\n      return true;\n    }\n    return false;\n  }\n\n  protected override willProcess(processFlags: ViewFlags, viewContext: ViewContextType<this>): void {\n    if ((this.flags & View.NeedsProject) !== 0 && this.updateGeoViewport()) {\n      (viewContext as Mutable<ViewContextType<this>>).geoViewport = this.geoViewport;\n    }\n    super.willProcess(processFlags, viewContext);\n  }\n\n  protected onMapDraw(): void {\n    if (this.updateGeoViewport()) {\n      const immediate = !this.hidden && !this.culled;\n      this.requireUpdate(View.NeedsProject, immediate);\n    }\n  }\n\n  protected onMapIdle(): void {\n    this.requireUpdate(View.NeedsProject);\n  }\n\n  override moveTo(geoPerspective: AnyGeoPerspective, timing?: AnyTiming | boolean): void {\n    const geoViewport = this.geoViewport;\n    let geoCenter = geoPerspective.geoCenter;\n    if (geoCenter !== void 0 && geoCenter !== null) {\n      geoCenter = GeoPoint.fromAny(geoCenter);\n      if (!geoViewport.geoCenter.equivalentTo(geoCenter, 1e-5)) {\n        this.map.panTo(geoCenter);\n      }\n    }\n    const zoom = geoPerspective.zoom;\n    if (zoom !== void 0 && !Equivalent(geoViewport.zoom, zoom, 1e-5)) {\n      this.map.setZoom(zoom);\n    }\n    const heading = geoPerspective.heading;\n    if (heading !== void 0 && !Equivalent(geoViewport.heading, heading, 1e-5)) {\n      this.map.setHeading(heading);\n    }\n    const tilt = geoPerspective.tilt;\n    if (tilt !== void 0 && !Equivalent(geoViewport.tilt, tilt, 1e-5)) {\n      this.map.setTilt(tilt);\n    }\n  }\n\n  @ViewRef<GoogleMapView, CanvasView>({\n    extends: true,\n    didAttachView(canvasView: CanvasView, targetView: View | null): void {\n      if (this.owner.parent === null) {\n        canvasView.appendChild(this.owner);\n      }\n      MapView.canvas.prototype.didAttachView.call(this, canvasView, targetView);\n    },\n    willDetachView(canvasView: CanvasView): void {\n      MapView.canvas.prototype.willDetachView.call(this, canvasView);\n      if (this.owner.parent === canvasView) {\n        canvasView.removeChild(this.owner);\n      }\n    },\n  })\n  override readonly canvas!: ViewRef<this, CanvasView>;\n  static override readonly canvas: MemberFastenerClass<GoogleMapView, \"canvas\">;\n\n  @ViewRef<GoogleMapView, HtmlView, {materializeView(containerView: HtmlView): void}>({\n    extends: true,\n    implements: true,\n    materializeView(containerView: HtmlView): void {\n      function materializeAncestors(node: HTMLElement): HtmlView {\n        const parentNode = node.parentNode;\n        if (parentNode instanceof HTMLElement && (parentNode as ViewHtml).view === void 0) {\n          materializeAncestors(parentNode);\n        }\n        return HtmlView.fromNode(node);\n      }\n      const mapPanes = this.owner.mapOverlay.getPanes();\n      if (mapPanes !== void 0 && mapPanes !== null) {\n        materializeAncestors(mapPanes.overlayMouseTarget as HTMLElement);\n        const overlayMouseTargetView = (mapPanes.overlayMouseTarget as ViewHtml).view!;\n        const overlayContainerView = overlayMouseTargetView.parent as HtmlView;\n        const canvasContainerView = overlayContainerView.parent as HtmlView;\n        this.owner.canvas.insertView(canvasContainerView);\n      } else if (this.owner.canvas.view === null) {\n        this.owner.canvas.attachView();\n      }\n    },\n    didAttachView(containerView: HtmlView, targetView: View | null): void {\n      this.materializeView(containerView);\n      MapView.container.prototype.didAttachView.call(this, containerView, targetView);\n    },\n    willDetachView(containerView: HtmlView): void {\n      MapView.container.prototype.willDetachView.call(this, containerView);\n      const canvasView = this.owner.canvas.view;\n      const mapPanes = this.owner.mapOverlay.getPanes();\n      if (mapPanes !== void 0 && mapPanes !== null) {\n        const overlayMouseTargetView = (mapPanes.overlayMouseTarget as ViewHtml).view!;\n        const overlayContainerView = overlayMouseTargetView.parent as HtmlView;\n        const canvasContainerView = overlayContainerView.parent as HtmlView;\n        if (canvasView !== null && canvasView.parent === canvasContainerView) {\n          canvasContainerView.removeChild(containerView);\n        }\n      }\n    },\n  })\n  override readonly container!: ViewRef<this, HtmlView> & {materializeView(containerView: HtmlView): void};\n  static override readonly container: MemberFastenerClass<GoogleMapView, \"container\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Equals} from \"@swim/util\";\nimport type {AnyR2Point, R2Point} from \"@swim/math\";\nimport type {AnyGeoPoint, GeoPoint, GeoBox} from \"@swim/geo\";\nimport type {GeoViewport} from \"@swim/map\";\n\n/** @public */\nexport abstract class EsriViewport implements GeoViewport, Equals {\n  constructor(map: __esri.View, geoFrame: GeoBox, geoCenter: GeoPoint,\n              zoom: number, heading: number, tilt: number) {\n    this.map = map;\n    this.geoFrame = geoFrame;\n    this.geoCenter = geoCenter;\n    this.zoom = zoom;\n    this.heading = heading;\n    this.tilt = tilt;\n  }\n\n  readonly map: __esri.View;\n\n  readonly geoFrame: GeoBox;\n\n  readonly geoCenter: GeoPoint;\n\n  readonly zoom: number;\n\n  readonly heading: number;\n\n  readonly tilt: number;\n\n  abstract project(geoPoint: AnyGeoPoint): R2Point;\n  abstract project(lng: number, lat: number): R2Point;\n\n  abstract unproject(viewPoint: AnyR2Point): GeoPoint;\n  abstract unproject(x: number, y: number): GeoPoint;\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof EsriViewport) {\n      return this.map === that.map\n          && this.geoFrame.equals(that.geoFrame)\n          && this.geoCenter.equals(that.geoCenter)\n          && this.zoom === that.zoom\n          && this.heading === that.heading\n          && this.tilt === that.tilt;\n    }\n    return false;\n  }\n\n  /** @internal */\n  static webMercatorUtils: __esri.webMercatorUtils | undefined = void 0;\n\n  /** @internal */\n  static init(): void {\n    if (EsriViewport.webMercatorUtils === void 0) {\n      (window as any).require([\"esri/geometry/support/webMercatorUtils\"], function (webMercatorUtils: __esri.webMercatorUtils): void {\n        EsriViewport.webMercatorUtils = webMercatorUtils;\n      });\n    }\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport type {Class} from \"@swim/util\";\nimport {MapView} from \"@swim/map\";\nimport {EsriViewport} from \"./EsriViewport\";\nimport type {EsriViewObserver} from \"./EsriViewObserver\";\n\n/** @public */\nexport abstract class EsriView extends MapView {\n  constructor() {\n    super();\n    EsriViewport.init();\n  }\n\n  override readonly observerType?: Class<EsriViewObserver>;\n\n  abstract readonly map: __esri.View;\n\n  abstract override readonly geoViewport: EsriViewport;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyR2Point, R2Point} from \"@swim/math\";\nimport {AnyGeoPoint, GeoPoint, GeoBox} from \"@swim/geo\";\nimport {EsriViewport} from \"./EsriViewport\";\n\n/** @public */\nexport class EsriMapViewport extends EsriViewport {\n  constructor(map: __esri.MapView, geoFrame: GeoBox, geoCenter: GeoPoint,\n              zoom: number, heading: number, tilt: number) {\n    super(map, geoFrame, geoCenter, zoom, heading, tilt);\n  }\n\n  override readonly map!: __esri.MapView;\n\n  override project(geoPoint: AnyGeoPoint): R2Point;\n  override project(lng: number, lat: number): R2Point;\n  override project(lng: AnyGeoPoint | number, lat?: number): R2Point {\n    let geoPoint: __esri.Point;\n    if (typeof lng === \"number\") {\n      geoPoint = {x: lng, y: lat!, spatialReference: {wkid: 4326}} as __esri.Point;\n    } else if (Array.isArray(lng)) {\n      geoPoint = {x: lng[0], y: lng[1], spatialReference: {wkid: 4326}} as __esri.Point;\n    } else {\n      geoPoint = {x: lng.lng, y: lng.lat, spatialReference: {wkid: 4326}} as __esri.Point;\n    }\n    const point = this.map.toScreen(geoPoint);\n    return point !== null ? new R2Point(point.x, point.y) : R2Point.origin();\n  }\n\n  override unproject(viewPoint: AnyR2Point): GeoPoint;\n  override unproject(x: number, y: number): GeoPoint;\n  override unproject(x: AnyR2Point | number, y?: number): GeoPoint {\n    let viewPoint: __esri.ScreenPoint;\n    if (typeof x === \"number\") {\n      viewPoint = {x: x, y: y!};\n    } else if (Array.isArray(x)) {\n      viewPoint = {x: x[0], y: x[1]};\n    } else {\n      viewPoint = x;\n    }\n    const point = this.map.toMap(viewPoint);\n    return point !== null ? new GeoPoint(point.longitude, point.latitude) : GeoPoint.origin();\n  }\n\n  static create(map: __esri.MapView): EsriMapViewport {\n    let mapFrame = map.extent;\n    let geoFrame: GeoBox;\n    if (mapFrame !== null) {\n      mapFrame = EsriViewport.webMercatorUtils!.webMercatorToGeographic(mapFrame) as __esri.Extent;\n      geoFrame = new GeoBox(mapFrame.xmin, mapFrame.ymin, mapFrame.xmax, mapFrame.ymax);\n    } else {\n      geoFrame = GeoBox.undefined();\n    }\n    const mapCenter = map.center;\n    const geoCenter = new GeoPoint(mapCenter.longitude, mapCenter.latitude);\n    const zoom = map.zoom;\n    const heading = map.rotation;\n    const tilt = 0;\n    return new EsriMapViewport(map, geoFrame, geoCenter, zoom, heading, tilt);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, Equivalent, AnyTiming, Timing} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {GeoPoint} from \"@swim/geo\";\nimport {Look, Mood} from \"@swim/theme\";\nimport {View, ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {CanvasView} from \"@swim/graphics\";\nimport type {AnyGeoPerspective} from \"@swim/map\";\nimport {EsriView} from \"./EsriView\";\nimport {EsriMapViewport} from \"./EsriMapViewport\";\nimport type {EsriMapViewObserver} from \"./EsriMapViewObserver\";\n\n/** @public */\nexport class EsriMapView extends EsriView {\n  constructor(map: __esri.MapView) {\n    super();\n    this.map = map;\n    Object.defineProperty(this, \"geoViewport\", {\n      value: EsriMapViewport.create(map),\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n    this.onMapRender = this.onMapRender.bind(this);\n    this.initMap(map);\n  }\n\n  override readonly observerType?: Class<EsriMapViewObserver>;\n\n  override readonly map: __esri.MapView;\n\n  protected initMap(map: __esri.MapView): void {\n    map.watch(\"extent\", this.onMapRender);\n  }\n\n  override readonly geoViewport!: EsriMapViewport;\n\n  protected willSetGeoViewport(newGeoViewport: EsriMapViewport, oldGeoViewport: EsriMapViewport): void {\n    this.callObservers(\"viewWillSetGeoViewport\", newGeoViewport, oldGeoViewport, this);\n  }\n\n  protected onSetGeoViewport(newGeoViewport: EsriMapViewport, oldGeoViewport: EsriMapViewport): void {\n    // hook\n  }\n\n  protected didSetGeoViewport(newGeoViewport: EsriMapViewport, oldGeoViewport: EsriMapViewport): void {\n    this.callObservers(\"viewDidSetGeoViewport\", newGeoViewport, oldGeoViewport, this);\n  }\n\n  protected updateGeoViewport(): boolean {\n    const oldGeoViewport = this.geoViewport;\n    const newGeoViewport = EsriMapViewport.create(this.map);\n    if (!newGeoViewport.equals(oldGeoViewport)) {\n      this.willSetGeoViewport(newGeoViewport, oldGeoViewport);\n      (this as Mutable<this>).geoViewport = newGeoViewport;\n      this.onSetGeoViewport(newGeoViewport, oldGeoViewport);\n      this.didSetGeoViewport(newGeoViewport, oldGeoViewport);\n      return true;\n    }\n    return false;\n  }\n\n  protected onMapRender(): void {\n    if (this.updateGeoViewport()) {\n      const immediate = !this.hidden && !this.culled;\n      this.requireUpdate(View.NeedsProject, immediate);\n    }\n  }\n\n  override moveTo(geoPerspective: AnyGeoPerspective, timing?: AnyTiming | boolean): void {\n    const target: __esri.GoToTarget2D = {};\n    const options: __esri.GoToOptions2D = {};\n    const geoViewport = this.geoViewport;\n    let geoCenter = geoPerspective.geoCenter;\n    if (geoCenter !== void 0 && geoCenter !== null) {\n      geoCenter = GeoPoint.fromAny(geoCenter);\n      if (!geoViewport.geoCenter.equivalentTo(geoCenter, 1e-5)) {\n        target.center = [geoCenter.lng, geoCenter.lat];\n      }\n    }\n    const zoom = geoPerspective.zoom;\n    if (zoom !== void 0 && !Equivalent(geoViewport.zoom, zoom, 1e-5)) {\n      target.zoom = zoom;\n    }\n    const heading = geoPerspective.heading;\n    if (heading !== void 0 && !Equivalent(geoViewport.heading, heading, 1e-5)) {\n      target.heading = heading;\n    }\n    const tilt = geoPerspective.tilt;\n    if (tilt !== void 0 && !Equivalent(geoViewport.tilt, tilt, 1e-5)) {\n      target.tilt = tilt;\n    }\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, Mood.ambient, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n    if (timing instanceof Timing) {\n      options.duration = timing.duration;\n    }\n    this.map.goTo(target, options);\n  }\n\n  @ViewRef<EsriMapView, CanvasView>({\n    extends: true,\n    didAttachView(canvasView: CanvasView, targetView: View | null): void {\n      if (this.owner.parent === null) {\n        canvasView.appendChild(this.owner);\n        canvasView.setEventNode(this.owner.map.container.querySelector(\".esri-view-root\") as HTMLElement);\n      }\n      EsriView.canvas.prototype.didAttachView.call(this, canvasView, targetView);\n    },\n    willDetachView(canvasView: CanvasView): void {\n      EsriView.canvas.prototype.willDetachView.call(this, canvasView);\n      if (this.owner.parent === canvasView) {\n        canvasView.removeChild(this.owner);\n      }\n    },\n  })\n  override readonly canvas!: ViewRef<this, CanvasView>;\n  static override readonly canvas: MemberFastenerClass<EsriMapView, \"canvas\">;\n\n  @ViewRef<EsriMapView, HtmlView>({\n    extends: true,\n    didAttachView(containerView: HtmlView, targetView: View | null): void {\n      const esriContainerView = HtmlView.fromNode(this.owner.map.container);\n      const esriRootView = HtmlView.fromNode(esriContainerView.node.querySelector(\".esri-view-root\") as HTMLDivElement);\n      const esriSurfaceView = HtmlView.fromNode(esriRootView.node.querySelector(\".esri-overlay-surface\") as HTMLDivElement);\n      this.owner.canvas.insertView(esriSurfaceView);\n      EsriView.container.prototype.didAttachView.call(this, containerView, targetView);\n    },\n    willDetachView(containerView: HtmlView): void {\n      EsriView.container.prototype.willDetachView.call(this, containerView);\n      const canvasView = this.owner.canvas.view;\n      const esriContainerView = HtmlView.fromNode(this.owner.map.container);\n      const esriRootView = HtmlView.fromNode(esriContainerView.node.querySelector(\".esri-view-root\") as HTMLDivElement);\n      const esriSurfaceView = HtmlView.fromNode(esriRootView.node.querySelector(\".esri-overlay-surface\") as HTMLDivElement);\n      if (canvasView !== null && canvasView.parent === esriSurfaceView) {\n        esriSurfaceView.removeChild(containerView);\n      }\n    },\n  })\n  override readonly container!: ViewRef<this, HtmlView>;\n  static override readonly container: MemberFastenerClass<EsriMapView, \"container\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyR2Point, R2Point} from \"@swim/math\";\nimport {AnyGeoPoint, GeoPoint, GeoBox} from \"@swim/geo\";\nimport {EsriViewport} from \"./EsriViewport\";\n\n/** @public */\nexport class EsriSceneViewport extends EsriViewport {\n  constructor(map: __esri.SceneView, geoFrame: GeoBox, geoCenter: GeoPoint,\n              zoom: number, heading: number, tilt: number) {\n    super(map, geoFrame, geoCenter, zoom, heading, tilt);\n  }\n\n  override readonly map!: __esri.SceneView;\n\n  override project(geoPoint: AnyGeoPoint): R2Point;\n  override project(lng: number, lat: number): R2Point;\n  override project(lng: AnyGeoPoint | number, lat?: number): R2Point {\n    let geoPoint: __esri.Point;\n    if (typeof lng === \"number\") {\n      geoPoint = {x: lng, y: lat!, spatialReference: {wkid: 4326}} as __esri.Point;\n    } else if (Array.isArray(lng)) {\n      geoPoint = {x: lng[0], y: lng[1], spatialReference: {wkid: 4326}} as __esri.Point;\n    } else {\n      geoPoint = {x: lng.lng, y: lng.lat, spatialReference: {wkid: 4326}} as __esri.Point;\n    }\n    const point = this.map.toScreen(geoPoint);\n    return point !== null ? new R2Point(point.x, point.y) : R2Point.origin();\n  }\n\n  override unproject(viewPoint: AnyR2Point): GeoPoint;\n  override unproject(x: number, y: number): GeoPoint;\n  override unproject(x: AnyR2Point | number, y?: number): GeoPoint {\n    let viewPoint: __esri.ScreenPoint;\n    if (typeof x === \"number\") {\n      viewPoint = {x: x, y: y!};\n    } else if (Array.isArray(x)) {\n      viewPoint = {x: x[0], y: x[1]};\n    } else {\n      viewPoint = x;\n    }\n    const point = this.map.toMap(viewPoint);\n    return point !== null ? new GeoPoint(point.longitude, point.latitude) : GeoPoint.origin();\n  }\n\n  static create(map: __esri.SceneView): EsriSceneViewport {\n    let mapFrame = map.extent;\n    let geoFrame: GeoBox;\n    if (mapFrame !== null) {\n      mapFrame = EsriViewport.webMercatorUtils!.webMercatorToGeographic(mapFrame) as __esri.Extent;\n      geoFrame = new GeoBox(mapFrame.xmin, mapFrame.ymin, mapFrame.xmax, mapFrame.ymax);\n    } else {\n      geoFrame = GeoBox.undefined();\n    }\n    const mapCenter = map.center;\n    const geoCenter = new GeoPoint(mapCenter.longitude, mapCenter.latitude);\n    const zoom = map.zoom;\n    const heading = map.camera.heading;\n    const tilt = map.camera.tilt;\n    return new EsriSceneViewport(map, geoFrame, geoCenter, zoom, heading, tilt);\n  }\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mutable, Class, Equivalent, AnyTiming, Timing} from \"@swim/util\";\nimport type {MemberFastenerClass} from \"@swim/component\";\nimport {GeoPoint} from \"@swim/geo\";\nimport {Look, Mood} from \"@swim/theme\";\nimport {View, ViewRef} from \"@swim/view\";\nimport {HtmlView} from \"@swim/dom\";\nimport type {CanvasView} from \"@swim/graphics\";\nimport type {AnyGeoPerspective} from \"@swim/map\";\nimport {EsriView} from \"./EsriView\";\nimport {EsriSceneViewport} from \"./EsriSceneViewport\";\nimport type {EsriSceneViewObserver} from \"./EsriSceneViewObserver\";\n\n/** @public */\nexport class EsriSceneView extends EsriView {\n  constructor(map: __esri.SceneView) {\n    super();\n    this.map = map;\n    Object.defineProperty(this, \"geoViewport\", {\n      value: EsriSceneViewport.create(map),\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n    this.onMapRender = this.onMapRender.bind(this);\n    this.initMap(map);\n  }\n\n  override readonly observerType?: Class<EsriSceneViewObserver>;\n\n  override readonly map!: __esri.SceneView;\n\n  protected initMap(map: __esri.SceneView): void {\n    map.watch(\"extent\", this.onMapRender);\n  }\n\n  override readonly geoViewport!: EsriSceneViewport;\n\n  protected willSetGeoViewport(newGeoViewport: EsriSceneViewport, oldGeoViewport: EsriSceneViewport): void {\n    this.callObservers(\"viewWillSetGeoViewport\", newGeoViewport, oldGeoViewport, this);\n  }\n\n  protected onSetGeoViewport(newGeoViewport: EsriSceneViewport, oldGeoViewport: EsriSceneViewport): void {\n    // hook\n  }\n\n  protected didSetGeoViewport(newGeoViewport: EsriSceneViewport, oldGeoViewport: EsriSceneViewport): void {\n    this.callObservers(\"viewDidSetGeoViewport\", newGeoViewport, oldGeoViewport, this);\n  }\n\n  protected updateGeoViewport(): boolean {\n    const oldGeoViewport = this.geoViewport;\n    const newGeoViewport = EsriSceneViewport.create(this.map);\n    if (!newGeoViewport.equals(oldGeoViewport)) {\n      this.willSetGeoViewport(newGeoViewport, oldGeoViewport);\n      (this as Mutable<this>).geoViewport = newGeoViewport;\n      this.onSetGeoViewport(newGeoViewport, oldGeoViewport);\n      this.didSetGeoViewport(newGeoViewport, oldGeoViewport);\n      return true;\n    }\n    return false;\n  }\n\n  protected onMapRender(): void {\n    if (this.updateGeoViewport()) {\n      const immediate = !this.hidden && !this.culled;\n      this.requireUpdate(View.NeedsProject, immediate);\n    }\n  }\n\n  override moveTo(geoPerspective: AnyGeoPerspective, timing?: AnyTiming | boolean): void {\n    const target: __esri.GoToTarget3D = {};\n    const options: __esri.GoToOptions3D = {};\n    const geoViewport = this.geoViewport;\n    let geoCenter = geoPerspective.geoCenter;\n    if (geoCenter !== void 0 && geoCenter !== null) {\n      geoCenter = GeoPoint.fromAny(geoCenter);\n      if (!geoViewport.geoCenter.equivalentTo(geoCenter, 1e-5)) {\n        target.center = [geoCenter.lng, geoCenter.lat];\n      }\n    }\n    const zoom = geoPerspective.zoom;\n    if (zoom !== void 0 && !Equivalent(geoViewport.zoom, zoom, 1e-5)) {\n      target.zoom = zoom;\n    }\n    const heading = geoPerspective.heading;\n    if (heading !== void 0 && !Equivalent(geoViewport.heading, heading, 1e-5)) {\n      target.heading = heading;\n    }\n    const tilt = geoPerspective.tilt;\n    if (tilt !== void 0 && !Equivalent(geoViewport.tilt, tilt, 1e-5)) {\n      target.tilt = tilt;\n    }\n    if (timing === void 0 || timing === true) {\n      timing = this.getLookOr(Look.timing, Mood.ambient, false);\n    } else {\n      timing = Timing.fromAny(timing);\n    }\n    if (timing instanceof Timing) {\n      options.duration = timing.duration;\n    }\n    this.map.goTo(target, options);\n  }\n\n  @ViewRef<EsriSceneView, CanvasView>({\n    extends: true,\n    didAttachView(canvasView: CanvasView, targetView: View | null): void {\n      if (this.owner.parent === null) {\n        canvasView.appendChild(this.owner);\n        canvasView.setEventNode(this.owner.map.container.querySelector(\".esri-view-root\") as HTMLElement);\n      }\n      EsriView.canvas.prototype.didAttachView.call(this, canvasView, targetView);\n    },\n    willDetachView(canvasView: CanvasView): void {\n      EsriView.canvas.prototype.willDetachView.call(this, canvasView);\n      if (this.owner.parent === canvasView) {\n        canvasView.removeChild(this.owner);\n      }\n    },\n  })\n  override readonly canvas!: ViewRef<this, CanvasView>;\n  static override readonly canvas: MemberFastenerClass<EsriSceneView, \"canvas\">;\n\n  @ViewRef<EsriSceneView, HtmlView>({\n    extends: true,\n    didAttachView(containerView: HtmlView, targetView: View | null): void {\n      const esriContainerView = HtmlView.fromNode(this.owner.map.container);\n      const esriRootView = HtmlView.fromNode(esriContainerView.node.querySelector(\".esri-view-root\") as HTMLDivElement);\n      const esriOverlayView = HtmlView.fromNode(esriRootView.node.querySelector(\".esri-view-surface\") as HTMLDivElement);\n      this.owner.canvas.insertView(esriOverlayView);\n      EsriView.container.prototype.didAttachView.call(this, containerView, targetView);\n    },\n    willDetachView(containerView: HtmlView): void {\n      EsriView.container.prototype.willDetachView.call(this, containerView);\n      const canvasView = this.owner.canvas.view;\n      const esriContainerView = HtmlView.fromNode(this.owner.map.container);\n      const esriRootView = HtmlView.fromNode(esriContainerView.node.querySelector(\".esri-view-root\") as HTMLDivElement);\n      const esriSurfaceView = HtmlView.fromNode(esriRootView.node.querySelector(\".esri-view-surface\") as HTMLDivElement);\n      if (canvasView !== null && canvasView.parent === esriSurfaceView) {\n        esriSurfaceView.removeChild(containerView);\n      }\n    },\n  })\n  override readonly container!: ViewRef<this, HtmlView>;\n  static override readonly container: MemberFastenerClass<EsriSceneView, \"container\">;\n}\n","// Copyright 2015-2021 Swim.inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Affinity} from \"@swim/component\";\nimport type {DeckCard} from \"./DeckCard\";\nimport {DeckView} from \"./DeckView\";\nimport {TitleDeckBar} from \"./TitleDeckBar\";\n\n/** @public */\nexport class TitleDeckView extends DeckView {\n  constructor(node: HTMLElement) {\n    super(node);\n    this.initBar();\n  }\n\n  protected initBar(): void {\n    let deckBar = this.bar.view;\n    if (!(deckBar instanceof TitleDeckBar)) {\n      deckBar = TitleDeckBar.create();\n      this.bar.setView(deckBar);\n    }\n  }\n\n  protected override willPushCard(newCardView: DeckCard, oldCardView: DeckCard | null): void {\n    super.willPushCard(newCardView, oldCardView);\n    const deckBar = this.bar.view;\n    if (deckBar instanceof TitleDeckBar) {\n      deckBar.pushTitle(newCardView.cardTitle.getValueOr(\"\"));\n      const backMembrane = deckBar.backMembrane.view;\n      if (backMembrane !== null) {\n        backMembrane.pointerEvents.setState(\"none\", Affinity.Intrinsic);\n      }\n    }\n  }\n\n  protected override didPushCard(newCardView: DeckCard, oldCardView: DeckCard | null): void {\n    const deckBar = this.bar.view;\n    if (deckBar instanceof TitleDeckBar) {\n      const backMembrane = deckBar.backMembrane.view;\n      if (backMembrane !== null) {\n        backMembrane.pointerEvents.setState(\"auto\", Affinity.Intrinsic);\n      }\n    }\n    super.didPushCard(newCardView, oldCardView);\n  }\n\n  protected override willPopCard(newCardView: DeckCard | null, oldCardView: DeckCard): void {\n    super.willPopCard(newCardView, oldCardView);\n    const deckBar = this.bar.view;\n    if (deckBar instanceof TitleDeckBar) {\n      deckBar.popTitle();\n    }\n  }\n\n  override didPressBackButton(event: Event | null): void {\n    if (!this.deckPhase.tweening) {\n      this.popCard();\n    }\n    super.didPressBackButton(event);\n  }\n}\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ModelContext","updateTime","performance","now","RefreshService","Service","constructor","super","this","flags","modelContext","create","updateDelay","MinUpdateDelay","analyzeTimer","refreshTimer","runAnalyzePass","bind","runRefreshPass","onVisibilityChange","setFlags","updatedModelContext","needsUpdate","updateFlags","immediate","requestUpdate","deltaUpdateFlags","Model","UpdateMask","AnalyzeMask","NeedsAnalyze","RefreshMask","NeedsRefresh","AnalyzingFlag","RefreshingFlag","MaxAnalyzeInterval","runImmediatePass","scheduleUpdate","scheduleAnalyzePass","scheduleRefreshPass","MinAnalyzeInterval","cancelUpdate","cancelAnalyzePass","cancelRefreshPass","setTimeout","clearTimeout","t0","roots","root","cascadeAnalyze","t1","analyzeDelay","Math","max","min","MaxUpdateDelay","MinRefreshInterval","time","cascadeRefresh","MaxRefreshInterval","power","n","requireUpdate","powerFlags","unpower","onAttachRoot","onAttach","attachEvents","onDetach","detachEvents","document","addEventListener","removeEventListener","visibilityState","static","Lazy","RefreshProvider","_super","extend","prototype","get","service","global","configurable","createService","Provider","SelectionService","selections","isSelected","model","indexOf","select","options","index","multi","unselectAll","selectableTrait","getTrait","SelectableTrait","willSelect","splice","onSelect","didSelect","observers","observer","serviceWillSelect","serviceDidSelect","unselect","willUnselect","onUnselect","didUnselect","serviceWillUnselect","serviceDidUnselect","toggle","selectedIndex","SelectionProvider","Component","consumers","Arrays","empty","firstTrait","lastTrait","traitMap","willAttachParent","parent","modelWillAttachParent","trait","next","nextTrait","onAttachParent","didAttachParent","modelDidAttachParent","willDetachParent","modelWillDetachParent","onDetachParent","didDetachParent","modelDidDetachParent","setChild","newChild","fromAny","appendChild","child","prependChild","insertChild","replaceChild","oldChild","willInsertChild","modelWillInsertChild","onInsertChild","didInsertChild","modelDidInsertChild","cascadeInsert","MountedFlag","superModelContext","willRemoveChild","modelWillRemoveChild","onRemoveChild","didRemoveChild","modelDidRemoveChild","cascadeMount","Error","willMount","onMount","mountTraits","mountChildren","didMount","modelWillMount","mountFlags","decoherent","NeedsMutate","mountFasteners","startConsuming","modelDidMount","cascadeUnmount","willUnmount","unmountChildren","unmountTraits","onUnmount","didUnmount","modelWillUnmount","stopConsuming","modelDidUnmount","mounted","refreshProvider","UpdatingMask","needsAnalyze","analyzeFlags","baesModelContext","extendModelContext","outerModelContext","current","cascadeFlags","ContextualFlag","willAnalyze","willMutate","NeedsAggregate","willAggregate","NeedsCorrelate","willCorrelate","onAnalyze","onMutate","onAggregate","onCorrelate","analyzeChildren","analyzeChild","didCorrelate","didAggregate","didMutate","didAnalyze","modelWillMutate","recohereFasteners","modelDidMutate","modelWillAggregate","modelDidAggregate","modelWillCorrelate","modelDidCorrelate","analyzeTraitChildren","analyzeOwnChildren","firstChild","nextSibling","call","needsRefresh","refreshFlags","baseModelContext","willRefresh","NeedsValidate","willValidate","NeedsReconcile","willReconcile","onRefresh","onValidate","onReconcile","refreshChildren","refreshChild","didReconcile","didValidate","didRefresh","modelWillValidate","modelDidValidate","modelWillReconcile","recohereDownlinks","modelDidReconcile","refreshTraitChildren","refreshOwnChildren","setFirstTrait","setLastTrait","forEachTrait","callback","thisArg","insertTraitMap","removeTraitMap","traitBound","setTrait","newTrait","Trait","oldTrait","remove","willRemoveTrait","detachModel","onRemoveTrait","didRemoveTrait","setKey","willInsertTrait","attachModel","onInsertTrait","didInsertTrait","appendTrait","removeChild","prependTrait","insertTrait","replaceTrait","InsertTraitFlags","modelWillInsertTrait","prev","insertTraitFlags","bindTraitFasteners","modelDidInsertTrait","removeTrait","RemoveTraitFlags","modelWillRemoveTrait","removeTraitFlags","unbindTraitFasteners","modelDidRemoveTrait","sortTraits","comparator","traits","push","sort","setPreviousTrait","setNextTrait","mountTrait","unmountTrait","getSuperTrait","superBound","getBaseTrait","baseBound","baseTrait","bindFastener","fastener","TraitRelation","binds","bindTrait","DownlinkFastener","consumed","consuming","consume","bindChildFastener","ModelRelation","bindModel","unbindChildFastener","unbindModel","fasteners","fastenerName","bindTraitFastener","unbindTraitFastener","unbindTrait","decohereFastener","t","decoherentCount","recohere","consumer","oldConsumers","newConsumers","inserted","willConsume","onConsume","didConsume","unconsume","removed","willUnconsume","onUnconsume","didUnconsume","ConsumingFlag","StartConsumingFlags","willStartConsuming","onStartConsuming","didStartConsuming","modelWillStartConsuming","startConsumingFlags","startConsumingFasteners","modelDidStartConsuming","StopConsumingFlags","willStopConsuming","onStopConsuming","didStopConsuming","modelWillStopConsuming","stopConsumingFlags","stopConsumingFasteners","modelDidStopConsuming","init","type","Creatable","is","view","value","TypeError","fromInit","nextId","id","RemovingFlag","FlagShift","extends","observes","WarpProvider","WarpService","Property","inherits","initModel","willAttachModel","onAttachModel","observe","didAttachModel","deinitModel","willDetachModel","onDetachModel","unobserve","didDetachModel","owner","detectModel","createModel","message","name","construct","fastenerClass","define","className","descriptor","superClass","affinity","implements","initAffinity","initInherits","Fastener","ModelRef","onInherit","superFastener","setModel","getModel","newModel","oldModel","parentModel","insertModel","removeModel","deleteModel","setPrototypeOf","ModelSet","hasModel","models","uid","addModel","modelCount","SortedFlag","sorted","willSort","onSort","didSort","sortChildren","compareChildren","a","b","x","y","compare","initSorted","FlagMask","previousTrait","FastenerContext","traitWillAttachModel","bindModelFasteners","traitDidAttachModel","traitWillDetachModel","unbindModelFasteners","traitDidDetachModel","setModelFlags","modelFlags","traitWillAttachParent","traitDidAttachParent","traitWillDetachParent","traitDidDetachParent","previousSibling","lastChild","forEachChild","getChild","childBound","InsertChildFlags","traitWillInsertChild","insertChildFlags","bindChildFasteners","traitDidInsertChild","RemoveChildFlags","traitWillRemoveChild","removeChildFlags","unbindChildFasteners","traitDidRemoveChild","removeChildren","getSuper","getBase","replaceTraitt","traitWillInsertTrait","traitDidInsertTrait","traitWillRemoveTrait","traitDidRemoveTrait","MountFlags","traitWillMount","traitDidMount","traitWillUnmount","unmountFasteners","traitDidUnmount","updating","analyzing","traitWillMutate","traitDidMutate","traitWillAggregate","traitDidAggregate","traitWillCorrelate","traitDidCorrelate","refreshing","traitWillValidate","traitDidValidate","traitWillReconcile","traitDidReconcile","hasFastener","fastenerBound","getFastener","setFastener","newFastener","oldFastener","detachFastener","attachFastener","willAttachFastener","mount","onAttachFastener","didAttachFastener","willDetachFastener","onDetachFastener","unmount","didDetachFastener","getLazyFastener","getSuperFastener","modelFastener","oldObservers","newObservers","willObserve","onObserve","didObserve","willUnobserve","onUnobserve","didUnobserve","forEachObserver","result","callObservers","args","method","traitWillStartConsuming","traitDidStartConsuming","traitWillStopConsuming","traitDidStopConsuming","equals","that","hashCode","initTrait","willAttachTrait","onAttachTrait","didAttachTrait","deinitTrait","willDetachTrait","onDetachTrait","didDetachTrait","targetModel","detectTrait","createTrait","TraitRef","attachTrait","detachTrait","deleteTrait","TraitSet","hasTrait","addTrait","traitCount","selected","selectionService","selectionProvider","traitWillSelect","traitDidSelect","traitWillUnselect","traitDidUnselect","DownlinkTrait","driverTrait","ValueDownlinkTrait","downlinkDidSet","newValue","oldValue","ValueDownlinkFastener","lazy","didSet","MapDownlinkTrait","downlinkDidUpdate","downlinkDidRemove","MapDownlinkFastener","didUpdate","didRemove","FontSize","size","Length","string","stringValue","form","cast","LineHeight","height","FontFamily","family","forEach","item","Value","isIdent","Unicode","isAlpha","charCodeAt","Strings","offsetByCodePoints","output","stringOutput","write","base16","Base16","uppercase","encodeDigit","toString","FontFamilyParser","Parser","quote","code","step","feed","input","parse","isCont","head","isSpace","error","Diagnostic","expected","isDone","isEmpty","done","isDigit","decodeDigit","unexpected","Font","style","variant","weight","stretch","withStyle","withVariant","withWeight","withStretch","withSize","Values","equal","withHeight","withFamily","Array","isArray","toAny","slice","interpolateTo","FontInterpolator","equivalentTo","epsilon","equivalent","debug","s","format","header","isDefined","fromValue","stringInput","isWhitespace","parser","FontParser","isError","isInit","unit","FontForm","f0","f1","interpolator","u","styleInterpolator","variantInterpolator","weightInterpolator","stretchInterpolator","sizeInterpolator","heightInterpolator","familyInterpolator","Interpolator","Form","enumerable","withUnit","mold","font","Record","slot","of","Attr","toValue","e","identOutput","lengthParser","familyParser","ident","LengthParser","units","String","asError","Color","contrast","k","lightness","lighter","darker","RgbColorInterpolator","rgb","RgbColor","transparent","alpha","black","white","g","h","l","Angle","degValue","HslColor","color","ColorParser","ColorForm","Darker","Text","from","HexColorParser","RgbColorParser","parseRest","HslColorParser","forName","ColorChannel","scale","ColorChannelParser","valueParser","Base10","parseNumber","isFinite","plus","times","scalar","combine","Brighter","pow","hsl","NaN","Numbers","Murmur3","mash","mix","Constructors","hash","toHexString","round","base16Alphabet","lowercase","alphabet","charAt","toRgbString","isNaN","toHslString","tag","positional","member","numberValue","str","c0","c1","rParser","gParser","bParser","aParser","m1","m2","toRgb","HslColorInterpolator","isAny","hParser","sParser","lParser","AngleParser","ColorStop","stop","hint","withColor","withStop","withHint","ColorStopInterpolator","Equivalent","Equals","isTuple","fromTuple","ColorStopParser","parseHint","ColorStopListParser","y0","y1","colorInterpolator","stopInterpolator","hintInterpolator","colorParser","stopParser","hintParser","stops","LinearGradient","angle","withAngle","withStops","array","LinearGradientInterpolator","LinearGradientParser","LinearGradientAngleParser","g0","g1","angleInterpolator","stopInterpolators","stopCount","stops0","stops1","angleParser","side","stopsParser","BoxShadow","inset","offsetX","offsetY","blurRadius","spreadRadius","withInset","withOffsetX","withOffsetY","withBlurRadius","withSpreadRadius","and","apply","BoxShadowInterpolator","zero","boxShadow","values","fromArray","booleanValue","BoxShadowParser","BoxShadowForm","b0","b1","insetInterpolator","offsetXInterpolator","offsetYInterpolator","blurRadiusInterpolator","spreadRadiusInterpolator","nextInterpolator","shadow","record","attr","offsetXParser","offsetYParser","blurRadiusParser","spreadRadiusParser","FocusInterpolator","phase","direction","Focus","withPhase","withDirection","asFocusing","focusing","asUnfocusing","unfocusing","asToggling","asToggled","unfocused","focused","Format","PresenceInterpolator","p0","p1","Presence","asPresenting","presenting","asDismissing","dismissing","dismissed","presented","ExpansionInterpolator","e0","e1","Expansion","asExpanding","expanding","asCollapsing","collapsing","collapsed","expanded","StyleValue","DateTime","Transform","Date","StyleValueParser","StyleValueForm","Num","Item","extant","Bool","date","transform","unitsOutput","TranslateTransformParser","ScaleTransformParser","RotateTransformParser","SkewTransformParser","AffineTransformParser","identity","parseDecimal","year","DateTimeFormat","pattern","parseDate","styleValue","deg","rad","grad","turn","px","em","rem","pct","ToAttributeString","toAttributeString","ToStyleString","toStyleString","ToCssValue","CSSStyleValue","toCssValue","CSSUnitValue","LookVector","has","feel","entry","getOr","elseValue","updated","updates","oldArray","oldIndex","updateCount","updateIndex","newArray","newIndex","j","copy","feels","Look","add","aArray","bArray","negate","subtract","multiply","dot","combination","dotOr","coerce","NumberLook","between","NumberInterpolator","LengthLook","LengthInterpolator","ColorLook","FontLook","ShadowLook","TimingLook","Timing","FeelVector","look","thisArray","thatArray","negative","minus","FeelVectorInterpolator","looks","Feel","v0","v1","interpolators","interpolatorCount","InterpolatedFeel","BrightnessFeel","amount","OpacityFeel","Mood","MoodVector","keys","MoodMatrix","rowArray","rowIndex","colArray","colIndex","hasRow","rowKey","hasCol","colKey","getRow","getCol","thisColArray","thatColArray","newColArray","newColIndex","fromColArray","oldColArray","col","timesCol","implicitIdentity","m","row","timesRow","thisRowArray","newRowArray","newRowIndex","i2","newRow","j2","newCol","identityFor","fromRowArray","oldRowArray","oldRowIndex","oldColIndex","updatedRow","defaultRow","oldRow","updatedCol","defaultCol","oldCol","cols","rows","Theme","ThemeMatrix","mood","ThemeContext","object","ThemeAnimator","onSetAffinity","newAffinity","oldAffinity","Affinity","Intrinsic","setLook","timing","Reflexive","getSuperLook","superLook","getSuperLookOr","elseLook","getLook","getLookOr","newLook","Extrinsic","minAffinity","oldLook","willSetLook","onSetLook","didSetLook","applyLook","themeContext","state","setState","applyTheme","theme","tweenInherited","tween","animatorClass","animator","specialize","StringThemeAnimator","Number","NumberThemeAnimator","Boolean","BooleanThemeAnimator","AngleThemeAnimator","LengthThemeAnimator","TransformThemeAnimator","ColorThemeAnimator","FontThemeAnimator","FocusThemeAnimator","PresenceThemeAnimator","ExpansionThemeAnimator","initValue","FromAny","Animator","equalValues","number","getPhase","getValue","getPhaseOr","elsePhase","setPhase","newPhase","setDirection","newDirection","focus","setValue","unfocus","onSetValue","willFocus","didFocus","willUnfocus","didUnfocus","newState","oldState","modalState","present","dismiss","willPresent","didPresent","willDismiss","didDismiss","expand","collapse","willExpand","didExpand","willCollapse","didCollapse","ThemeConstraintAnimator","isExternal","isDummy","isInvalid","isConstant","evaluateConstraintVariable","updateConstraintSolution","constrained","toNumber","setStrength","strength","ConstraintStrength","terms","ConstraintMap","set","ConstraintExpression","product","sum","divide","ConstrainedFlag","constrain","conditionCount","stopConstraining","startConstraining","updateConstraintVariable","addConstraintCondition","constraint","solver","removeConstraintCondition","ConstrainingFlag","willStartConstraining","onStartConstraining","didStartConstraining","constraintScope","ConstraintScope","addConstraintVariable","willStopConstraining","onStopConstraining","didStopConstraining","removeConstraintVariable","setConstraintVariable","constraining","ConstraintId","Strong","NumberThemeConstraintAnimator","LengthThemeConstraintAnimator","pxValue","swallow","iconColor","statusColor","accentColor","mutedColor","neutralColor","subduedColor","faintColor","highlightColor","backgroundColor","borderColor","opacity","spacing","ambient","default","primary","secondary","unselected","disabled","inactive","warning","alert","contrasted","raised","covered","opaque","floating","translucent","embossed","nested","hovering","navigating","DarkFont","DarkColor","DarkIconColor","DarkAccentColor","DarkMutedColor","DarkNeutralColor","DarkSubduedColor","DarkFaintColor","DarkHighlightColor","DarkBackgroundColor","DarkBorderColor","DarkRaisedColor","DarkCoveredColor","DarkPrimaryColor","DarkSecondaryColor","DarkDisabledColor","DarkInactiveColor","DarkWarningColor","DarkAlertColor","DarkSpacing","DarkAmbient","Easing","linear","withDuration","DarkDefault","cubicOut","DarkPrimary","DarkSecondary","DarkUnselected","DarkSelected","DarkDisabled","DarkInactive","DarkWarning","DarkAlert","DarkRaised","DarkCovered","DarkOpaque","DarkFloating","DarkTransparent","DarkTranslucent","DarkDarker","DarkLighter","DarkContrasted","DarkEmbossed","DarkNested","DarkHovering","DarkNavigating","DarkTheme","forCols","dark","LightFont","LightColor","LightIconColor","LightAccentColor","LightMutedColor","LightNeutralColor","LightSubduedColor","LightFaintColor","LightHighlightColor","LightBackgroundColor","LightBorderColor","LightRaisedColor","LightCoveredColor","LightPrimaryColor","LightSecondaryColor","LightDisabledColor","LightInactiveColor","LightWarningColor","LightAlertColor","LightSpacing","LightAmbient","LightDefault","LightPrimary","LightSecondary","LightUnselected","LightSelected","LightDisabled","LightInactive","LightWarning","LightAlert","LightRaised","LightCovered","LightOpaque","LightFloating","LightTransparent","LightTranslucent","LightDarker","LightLighter","LightContrasted","LightEmbossed","LightNested","LightHovering","LightNavigating","LightTheme","light","Viewport","insetTop","insetRight","insetBottom","insetLeft","documentWidth","documentElement","width","documentHeight","div","createElement","setProperty","window","innerWidth","offsetWidth","innerHeight","offsetHeight","body","getComputedStyle","parseFloat","getPropertyValue","visualWidth","visualHeight","visualOffsetLeft","visualOffsetTop","visualPageLeft","visualPageTop","visualScale","visualViewport","offsetLeft","offsetTop","pageLeft","pageTop","visual","CSS","supports","safeArea","colorScheme","orientation","screen","msOrientation","mozOrientation","matchMedia","matches","ViewContext","viewport","detect","viewFrame","R2Box","viewportIdiom","ViewportService","viewContext","viewportResizeTimer","reorientationTimer","throttleScroll","throttleResize","debounceViewportResize","throttleViewportResize","debounceReorientation","throttleReorientation","detectViewportIdiom","updateViewportIdiom","setViewportIdiom","newViewportIdiom","oldViewportIdiom","willSetViewportIdiom","onSetViewportIdiom","didSetViewportIdiom","serviceWillSetViewportIdiom","View","NeedsLayout","serviceDidSetViewportIdiom","willReorient","serviceWillReorient","onReorient","didReorient","serviceDidReorient","attached","passive","NeedsScroll","NeedsResize","ViewportResizeDelay","ReorientationDelay","ViewportProvider","DisplayService","processTimer","displayFrame","runProcessPass","runDisplayPass","updatedViewContext","targetView","ProcessMask","NeedsProcess","DisplayMask","NeedsDisplay","ProcessingFlag","DisplayingFlag","MaxProcessInterval","scheduleProcessPass","scheduleDisplayPass","cancelProcessPass","cancelDisplayPass","viewportProvider","cascadeProcess","processDelay","MinProcessInterval","requestAnimationFrame","cancelAnimationFrame","cascadeDisplay","DisplayProvider","LayoutService","createSolver","ConstraintSolver","activateConstraint","addConstraint","deactivateConstraint","removeConstraint","activateConstraintVariable","variable","deactivateConstraintVariable","LayoutProvider","ThemeService","initMood","initTheme","setMood","hasAffinity","NeedsChange","setTheme","willApplyTheme","onApplyTheme","didApplyTheme","serviceWillApplyTheme","serviceDidApplyTheme","ThemeProvider","Modal","modal","showModal","hideModal","ModalService","modals","modality","matteView","onClick","isModal","setMatteView","insertModalView","modalView","presentModal","oldModals","newModals","dismissModals","willPresentModal","onPresentModal","updateModality","didPresentModal","serviceWillPresentModal","serviceDidPresentModal","dismissModal","willDismissModal","onDismissModal","didDismissModal","serviceWillDismissModal","serviceDidDismissModal","toggleModal","oldModality","newModality","willUpdateModality","onUpdateModality","didUpdateModality","serviceWillUpdateModality","serviceDidUpdateModality","displaceModals","event","willDisplaceModals","onDisplaceModals","didDisplaceModals","handled","serviceWillDisplaceModals","serviceDidDisplaceModals","onDetachRoot","on","off","ModalProvider","GestureInput","inputId","inputType","isPrimary","button","buttons","altKey","ctrlKey","metaKey","shiftKey","tiltX","tiltY","twist","pressure","tangentialPressure","x0","dx","dy","dt","detail","defaultPrevented","preventDefault","Gesture","getView","setView","newView","oldView","willDetachView","onDetachView","didDetachView","willAttachView","onAttachView","didAttachView","clearInputs","getInput","inputs","createInput","getOrCreateInput","inputCount","clearInput","bindView","detectView","unbindView","viewWillUnmount","self","gestureClass","gesture","PositionGestureInput","pressing","holdTimer","holdDelay","isRunaway","setHoldTimer","f","clearHoldTimer","PositionGesture","attachHoverEvents","detachPressEvents","detachHoverEvents","attachPressEvents","hoverCount","pressCount","startHovering","willStartHovering","onStartHovering","didStartHovering","stopHovering","willStopHovering","onStopHovering","didStopHovering","beginHover","willBeginHover","onBeginHover","didBeginHover","endHover","willEndHover","onEndHover","didEndHover","startPressing","willStartPressing","onStartPressing","didStartPressing","stopPressing","willStopPressing","onStopPressing","didStopPressing","beginPress","allowPress","willBeginPress","onBeginPress","longPress","didBeginPress","movePress","willMovePress","onMovePress","didMovePress","endPress","willEndPress","onEndPress","didEndPress","cancelPress","willCancelPress","onCancelPress","didCancelPress","press","willPress","onPress","didPress","willLongPress","onLongPress","didLongPress","PointerPositionGesture","TouchPositionGesture","MousePositionGesture","PointerEvent","TouchEvent","onPointerEnter","onPointerLeave","onPointerDown","onPointerMove","onPointerUp","onPointerCancel","onPointerLeaveDocument","updateInput","clientX","clientY","timeStamp","pointerType","pointerId","pointerInputType","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","touch","touches","targetTouches","identifier","changedTouches","onMouseEnter","onMouseLeave","onMouseDown","onMouseMove","onMouseUp","onMouseLeaveDocument","MomentumGestureInput","vx","vy","ax","ay","path","coasting","updatePosition","hysteresis","shift","deriveVelocity","vMax","v2","v","sqrt","integrateVelocity","MomentumGesture","coastCount","viewWillAnimate","doCoast","interrupt","endCoast","cancel","startInteracting","willStartInteracting","onStartInteracting","didStartInteracting","stopInteracting","willStopInteracting","onStopInteracting","didStopInteracting","velocityMax","beginCoast","startCoasting","willStartCoasting","onStartCoasting","didStartCoasting","NeedsAnimate","stopCoasting","willStopCoasting","onStopCoasting","didStopCoasting","atan2","abs","acceleration","cos","sin","allowCoast","willBeginCoast","onBeginCoast","didBeginCoast","willEndCoast","onEndCoast","didEndCoast","willCoast","integrate","onCoast","didCoast","Hysteresis","Acceleration","VelocityMax","PointerMomentumGesture","TouchMomentumGesture","MouseMomentumGesture","ScaleGestureInput","xCoord","yCoord","disableX","disableY","ScaleGesture","NeedsRescale","PreserveAspectRatioFlag","preserveAspectRatio","WheelFlag","wheel","getXScale","setXScale","xScale","getYScale","setYScale","yScale","clientToRangeX","bounds","viewX","xMin","xRange","range","xMax","clientToRangeY","viewY","yMin","yRange","yMax","unscaleX","inverse","unscaleY","rescale","updateInputDomain","conserveMomentum","clientBounds","neutralizeX","neutralizeY","input0","input1","rescaleRadial","rescaleXY","rescaleX","rescaleY","oldXScale","oldYScale","px0","py0","qx0","qy0","vx0","vy0","ax0","ay0","x1","px1","py1","qx1","qy1","vx1","vy1","ax1","ay1","dpx","dpy","dp","distanceMin","upx","upy","dpqx0","dpqy0","dpqx1","dpqy1","ip0","ip1","jp0","jp1","jpx","jpy","rx0","ry0","rx1","ry1","iv0","iv1","jv0","jv1","jvx","jvy","rvx0","rvy0","rvx1","rvy1","uvx0","uvy0","uvx1","uvy1","a0","a1","rax0","ray0","rax1","ray1","newXScale","solvedXScale","solveDomain","newYScale","solvedYScale","sx1","sy1","sx0","sy0","dsx","dsy","esx","esy","distributeXYMomentum","distributeXMomentum","distributeYMomentum","uax0","uay0","uax1","uay1","coast0","coast1","dx0","dy0","d0","dx1","dy1","zoom","dz","PI","zoom0","zoom1","dzx","dzy","zx","zy","DistanceMin","PointerScaleGesture","TouchScaleGesture","MouseScaleGesture","onWheel","deltaY","observerCache","constraints","constraintVariables","attachParent","setNextSibling","setPreviousSibling","setLastChild","setFirstChild","culled","cascadeCull","viewWillAttachParent","viewDidAttachParent","viewWillDetachParent","viewDidDetachParent","viewWillInsertChildObservers","viewWillInsertChild","viewDidInsertChildObservers","viewDidInsertChild","superViewContext","viewWillRemoveChildObservers","viewWillRemoveChild","viewDidRemoveChildObservers","viewDidRemoveChild","viewWillMount","mountTheme","updateTheme","activateLayout","viewDidMount","deactivateLayout","viewDidUnmount","CulledMask","setCulled","CulledFlag","CullFlag","willCull","onCull","cullChildren","didCull","willUncull","uncullChildren","onUncull","didUncull","viewWillCull","viewDidCull","cascadeUncull","UncullFlags","viewWillUncull","uncullFlags","inherited","decohere","viewDidUncull","HiddenMask","setHidden","hidden","HiddenFlag","HideFlag","willHide","onHide","hideChildren","didHide","willUnhide","unhideChildren","onUnhide","didUnhide","cascadeHide","viewWillHide","viewDidHide","cascadeUnhide","UnhideFlags","viewWillUnhide","viewDidUnhide","UnboundedFlag","setUnbounded","unboundedFlag","willSetUnbounded","onSetUnbounded","didSetUnbounded","IntangibleFlag","setIntangible","intangible","willSetIntangible","onSetIntangible","didSetIntangible","displayService","displayProvider","needsProcess","processFlags","baseViewContext","extendViewContext","outerViewContext","willProcess","willResize","willScroll","willChange","willAnimate","NeedsProject","willProject","onProcess","onResize","onScroll","onChange","onAnimate","onProject","processChildren","processChild","didProject","didAnimate","didChange","didScroll","didResize","didProcess","viewWillResizeObservers","viewWillResize","evaluateConstraintVariables","viewDidResizeObservers","viewDidResize","viewWillScrollObservers","viewWillScroll","viewDidScrollObservers","viewDidScroll","viewWillChangeObservers","viewWillChange","viewDidChangeObservers","viewDidChange","viewWillAnimateObservers","recohereAnimators","viewDidAnimateObservers","viewDidAnimate","viewWillProjectObservers","viewWillProject","viewDidProjectObservers","viewDidProject","needsDisplay","displayFlags","willDisplay","willLayout","NeedsRender","willRender","NeedsRasterize","willRasterize","NeedsComposite","willComposite","onDisplay","onLayout","onRender","onRasterize","onComposite","displayChildren","displayChild","didComposite","didRasterize","didRender","didLayout","didDisplay","viewWillLayoutObservers","viewWillLayout","viewDidLayoutObservers","viewDidLayout","viewWillRenderObservers","viewWillRender","viewDidRenderObservers","viewDidRender","viewWillRasterizeObservers","viewWillRasterize","viewDidRasterizeObservers","viewDidRasterize","viewWillCompositeObservers","viewWillComposite","viewDidCompositeObservers","viewDidComposite","viewWillApplyTheme","themeAnimators","viewDidApplyTheme","modifyMood","moodModifier","oldMoodModifier","getValueOr","newMoodModifier","changeMood","modifyTheme","themeModifier","oldThemeModifier","newThemeModifier","changeTheme","moodModifierProperty","superMood","superValue","themeService","themeProvider","setAffinity","Inherited","themeModifierProperty","superTheme","ViewRelation","lhs","relation","rhs","expression","Required","Constraint","hasConstraint","oldConstraints","newConstraints","layoutService","layoutProvider","constraintVariable","property","ConstraintProperty","hasConstraintVariable","oldConstraintVariables","newConstraintVariables","setProperties","properties","pageTransform","parentTransform","clientTransform","pageBounds","scrollX","pageXOffset","scrollY","pageYOffset","translate","intersectsViewport","viewportWidth","clientWidth","viewportHeight","clientHeight","top","bottom","left","right","dispatchEvent","listener","initView","deinitView","createView","ViewRef","parentView","attachView","detachView","insertView","removeView","deleteView","ViewSet","hasView","views","addView","viewCount","DomService","ElementView","node","hasAttribute","materializeView","childNodes","childNode","childView","materializeNode","Element","materializeElement","materializeText","viewClass","viewClassName","getAttribute","eval","HTMLElement","HtmlView","SVGElement","SvgView","injectChild","nodes","querySelectorAll","bootElement","domProvider","qname","globalThis","idents","split","DomProvider","AttributeAnimator","attributeName","ownValue","definedValue","attributeValue","setAttribute","StringAttributeAnimator","NumberAttributeAnimator","BooleanAttributeAnimator","LengthAttributeAnimator","ColorAttributeAnimator","TransformAttributeAnimator","StyleAnimator","propertyValue","styleContext","StyleContext","getStyle","propertyNames","fromCssValue","computedValue","styles","setStyle","priority","setPriority","StringStyleAnimator","NumberStyleAnimator","LengthStyleAnimator","ColorStyleAnimator","FontFamilyStyleAnimator","BoxShadowStyleAnimator","TransformStyleAnimator","CSSNumericValue","to","StyleConstraintAnimator","constraintValue","NumberStyleConstraintAnimator","LengthStyleConstraintAnimator","PxLength","StyleMap","precedence","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderStyle","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","fontStyle","fontVariant","fontWeight","fontStretch","fontSize","lineHeight","fontFamily","margin","marginTop","marginRight","marginBottom","marginLeft","overflow","overflowX","overflowY","overscrollBehavior","overscrollBehaviorX","overscrollBehaviorY","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","map","alignContent","alignItems","alignSelf","appearance","backdropFilter","backgroundClip","backgroundImage","borderCollapse","borderSpacing","boxSizing","cursor","display","filter","flexBasis","flexDirection","flexGrow","flexShrink","flexWrap","justifyContent","maxHeight","maxWidth","minHeight","minWidth","order","outlineColor","outlineStyle","outlineWidth","overflowScrolling","pointerEvents","position","textAlign","textDecorationColor","textDecorationLine","textDecorationStyle","textOverflow","textTransform","touchAction","userSelect","verticalAlign","visibility","whiteSpace","zIndex","offsetParent","offsetBounds","getBoundingClientRect","CssContext","CssRule","propertyContext","DecoherentFlag","setCoherent","createRule","cssText","cssContext","insertRule","rule","getRule","CSSRule","ruleClass","css","initCss","initRule","StyleRule","selectorText","setSelector","selector","styleMap","propertyName","willSetStyle","cssValue","delete","removeProperty","onSetStyle","didSetStyle","CSSStyleRule","MediaRule","cssRules","removeRule","deleteRule","CSSMediaRule","StyleSheet","stylesheet","fastenerContext","createStylesheet","CSSStyleSheet","sheetClass","sheet","initStylesheet","NodeView","Node","fromNode","detachParent","removeChildMap","targetNode","insertBefore","insertChildMap","parentNode","isConnected","ownerDocument","compareDocumentPosition","DOCUMENT_POSITION_DISCONNECTED","isNodeMounted","isRootView","text","textContent","createRange","selectNode","detach","TextView","matteNode","createTextNode","initElement","themeName","willSetAttribute","removeAttribute","onSetAttribute","didSetAttribute","viewWillSetAttributeObservers","viewWillSetAttribute","viewDidSetAttributeObservers","viewDidSetAttribute","attributeStyleMap","viewWillSetStyleObservers","viewWillSetStyle","viewDidSetStyleObservers","viewDidSetStyle","classList","hasClass","contains","addClass","classNames","removeClass","toggleClass","fromTag","namespace","createElementNS","applyRootTheme","element","isPositioned","initAttributes","autocomplete","checked","colspan","placeholder","rowspan","title","initStyle","attributes","StyleView","HtmlViewTagFactory","factory","alignmentBaseline","clipPath","cx","cy","edgeMode","fill","fillRule","floodColor","floodOpacity","in","in2","lengthAdjust","mode","points","stdDeviation","stroke","strokeDasharray","strokeDashoffset","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeWidth","textAnchor","textLength","viewBox","x2","y2","cssTransform","SvgViewTagFactory","Sprite","spriteWidth","spriteHeight","pixelRatio","getRenderer","getSpriteRenderer","clear","clearSprite","draw","context","frame","drawSprite","release","releaseSprite","SpriteSheet","canvasWidth","canvasHeight","rowCount","floor","colCount","spriteCount","sprites","freeSprites","canvas","getContext","renderer","CanvasRenderer","nextSheet","createSprites","sprite","createSprite","freeCount","acquireSprite","pop","clearRect","setTransform","affine","spritePixelRatio","spriteX","spriteY","drawImage","SpriteService","minSizeClass","maxSizeClass","devicePixelRatio","TextureWidth","TextureHeight","log2","slabCount","slabs","createSlab","sizeClass","spriteSize","getFreeSlab","slab","freeSlab","acquireNextFreeSheet","createSheet","getFreeSheet","widthClass","ceil","heightClass","GraphicsRenderer","GraphicsView","ownViewFrame","eventHandlers","hoverSet","renderViewOutline","contextLineWidth","lineWidth","contextStrokeStyle","strokeStyle","beginPath","moveTo","lineTo","closePath","deriveViewFrame","setViewFrame","CanvasView","undefined","cullViewFrame","intersects","viewBounds","deriveViewBounds","unbounded","childViewBounds","union","deriveHitBounds","hitBounds","childHitBounds","cascadeHitTest","hit","hitTestChildren","hitTest","hitTestChild","inverseClientTransform","inversePageTransform","handlers","capture","once","handler","handleEvent","onMouseOver","onMouseOut","onPointerOver","onPointerOut","bubbleEvent","bubbles","cancelBubble","isHovering","mouse","mouseenter","enterEvent","MouseEvent","screenX","screenY","movementX","movementY","relatedTarget","relatedTargetView","mouseleave","leaveEvent","pointerenter","pointerleave","DrawingRenderer","PathContext","precision","setPrecision","decimal","quadraticCurveTo","bezierCurveTo","arcTo","x21","y21","x01","y01","l01_2","Epsilon","x20","y20","l21_2","l20_2","l21","l01","tan","acos","t01","t21","rs","arc","ccw","cw","da","rect","w","ellipse","rx","ry","phi","cosPhi","sinPhi","cosA1","sinA1","large","sweep","anglePrecision","PathRenderer","PaintingRenderer","SvgContext","pathContext","pathView","pathFlags","fillStyle","lineCap","lineJoin","miterLimit","lineDashOffset","lineDash","getPathContext","getOrCreatePathContext","createPathContext","finalizePath","nextPathView","setPathView","setPathFlags","nextNode","SVGPathElement","FillFlag","FillRuleFlag","StrokeFlag","PathFlag","getLineDash","setLineDash","segments","created","pathString","dash","beginSvg","finalizeSvg","nextView","SvgRenderer","WebGLRenderer","createRenderer","writable","canvasFlags","ClickEventsFlag","eventNode","pointers","onDblClick","onContextMenu","initCanvas","resizeCanvas","resetRenderer","detectHitTargets","clearCanvas","setRenderer","rendererType","setCanvasFlags","canvasViewContext","MouseEventsFlag","detectMouseTarget","PointerEventsFlag","pointer","detectPointerTarget","setEventNode","newEventNode","oldEventNode","clickEventsEnabled","newClickEvents","oldClickEvents","attachClickEvents","detachClickEvents","wheelEventsEnabled","newWheelEvents","oldWheelEvents","WheelEventsFlag","attachWheelEvents","detachWheelEvents","mouseEventsEnabled","newMouseEvents","oldMouseEvents","attachPassiveMouseEvents","detachPassiveMouseEvents","pointerEventsEnabled","newPointerEvents","oldPointerEvents","attachPassivePointerEvents","detachPassivePointerEvents","touchEventsEnabled","newTouchEvents","oldTouchEvents","TouchEventsFlag","attachPassiveTouchEvents","detachPassiveTouchEvents","detachActiveMouseEvents","detachActivePointerEvents","detachActiveTouchEvents","fireEvent","attachActiveMouseEvents","updateMouse","fireMouseEvent","oldTargetView","newTargetView","onMouseTargetChange","outEvent","overEvent","attachActivePointerEvents","updatePointer","firePointerEvent","onPointerTargetChange","attachActiveTouchEvents","updateTouch","pageX","pageY","radiusX","radiusY","rotationAngle","force","fireTouchEvent","originalEvent","dispatched","changedTouch","startEvent","targetViewTouches","nextTouch","createTouchList","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","RasterView","createCanvas","ownRasterFrame","rasterFlags","rasterFrame","compositeImage","rasterViewContext","compositor","deriveRasterFrame","setRasterFrame","newWidth","newHeight","newCanvasWidth","newCanvasHeight","oldCanvasWidth","oldCanvasHeight","globalAlpha","globalCompositeOperation","compositeOperation","FillView","StrokeView","Rect","withX","withY","withWidth","render","renderRect","RectView","getState","contextFillStyle","p","hitTestRect","hx","hy","isPointInPath","pointInStroke","isPointInStroke","Arc","center","innerRadius","outerRadius","startAngle","sweepAngle","padAngle","padRadius","cornerRadius","withCenter","R2Point","withInnerRadius","withOuterRadius","withStartAngle","withSweepAngle","withPadAngle","withPadRadius","withCornerRadius","renderArc","r0","r1","radValue","a01","a11","a00","a10","da0","da1","ap","rp","rc","x00","y00","rc0","rc1","asin","x10","y10","x11","y11","oc","intersect","bx","by","kc","lc","cornerTangents","origin","x3","y3","x32","y32","lo","ox","oy","d2","D","cx0","cy0","cx1","cy1","ArcView","layoutArc","xAlign","yAlign","transformX","py","transformY","hitTestArc","radius","TypesetView","textBaseline","textOrigin","textColor","TextRun","withText","withFont","withTextAlign","withTextBaseline","withTextOrigin","withTextColor","renderText","contextFont","contextTextAlign","contextTextBaseline","fillText","TextRunView","run","IconLayout","iconWidth","iconHeight","Icon","FilledIcon","VectorIcon","fillColor","fillLook","withFillRule","withFillColor","withFillLook","withMoodModifier","isThemed","withTheme","paint","transformDraw","VectorIconInterpolator","R2Path","i0","i1","fillColorInterpolator","CircleIcon","centerX","centerY","CircleIconInterpolator","PolygonIcon","sides","rotation","sector","PolygonIconInterpolator","rotationInterpolator","EnclosedIcon","outer","inner","innerScale","outerMoodModifier","innerMoodModifier","withOuter","withInner","withInnerScale","withOuterMoodModifier","modifyOuterMood","oldOuterMoodModifier","newOuterMoodModifier","withInnerMoodModifier","modifyInnerMood","oldInnerMoodModifier","newInnerMoodModifier","modifiedMood","oldOuter","newOuter","outerMood","oldInner","newInner","innerMood","outerFrame","innerFrame","ex","ey","EnclosedIconInterpolator","embossedMoodModifier","outerInterpolator","innerInterpolator","innerScaleInterpolator","IconView","GraphicsIconView","SvgIconView","HtmlIconView","graphics","IconGraphicsAnimator","transformState","icon","iconView","oldGraphics","newGraphics","renderIcon","hitTestIcon","didSetValue","newIconColor","oldIconColor","viewWidth","viewHeight","viewSize","iconBounds","viewportElement","SVGSVGElement","animVal","initIcon","svgView","createSvgView","onInsertSvg","setInherits","layoutIcon","ControllerContext","ExecuteService","controllerContext","compileTimer","executeTimer","runCompilePass","runExecutePass","updatedControllerContext","targetController","Controller","CompileMask","NeedsCompile","ExecuteMask","NeedsExecute","CompilingFlag","ExecutingFlag","MaxCompileInterval","scheduleCompilePass","scheduleExecutePass","MinExecuteInterval","cancelCompilePass","cancelExecutePass","cascadeCompile","compileDelay","MinCompileInterval","cascadeExecute","MaxExecuteInterval","ExecuteProvider","HistoryState","fragment","permanent","ephemeral","fromUri","location","href","console","delta","uri","Uri","fromUriFragment","query","UriFragment","UriQuery","tail","queryBuilder","builder","HistoryService","historyState","popHistory","toUri","pushHistory","deltaState","cloned","newUri","willPushHistory","history","pushState","onPushHistory","didPushHistory","serviceWillPushHistory","NeedsRevise","serviceDidPushHistory","replaceHistory","Objects","willReplaceHistory","replaceState","onReplaceHistory","didReplaceHistory","serviceWillReplaceHistory","serviceDidReplaceHistory","willPopHistory","onPopHistory","didPopHistory","serviceWillPopHistory","serviceDidPopHistory","HistoryProvider","StorageService","willSet","serviceWillStore","onSet","serviceDidStore","willClear","serviceWillClear","onClear","didClear","serviceDidClear","WebStorageService","local","EphemeralStorageService","storage","onStorage","getItem","setItem","removeItem","storageArea","localStorage","sessionStorage","StorageProvider","controllerWillAttachParent","controllerDidAttachParent","controllerWillDetachParent","controllerDidDetachParent","controllerWillInsertChild","controllerDidInsertChild","superControllerContext","controllerWillRemoveChild","controllerDidRemoveChild","controllerWillMount","controllerDidMount","controllerWillUnmount","controllerDidUnmount","executeService","executeProvider","needsCompile","compileFlags","baseControllerContext","extendControllerContext","outerControllerContext","willCompile","NeedsResolve","willResolve","NeedsGenerate","willGenerate","NeedsAssemble","willAssemble","onCompile","onResolve","onGenerate","onAssemble","compileChildren","compileChild","didAssemble","didGenerate","didResolve","didCompile","controllerWillResolve","controllerDidResolve","controllerWillGenerate","controllerDidGenerate","controllerWillAssemble","controllerDidAssemble","needsExecute","executeFlags","willExecute","willRevise","NeedsCompute","willCompute","onExecute","onRevise","onCompute","executeChildren","executeChild","didCompute","didRevise","didExecute","controllerWillRevise","controllerDidRevise","controllerWillCompute","controllerDidCompute","ControllerRelation","bindController","unbindController","controller","initController","willAttachController","onAttachController","didAttachController","deinitController","willDetachController","onDetachController","didDetachController","detectController","createController","ControllerRef","setController","getController","newController","oldController","parentController","attachController","detachController","insertController","removeController","deleteController","ControllerSet","hasController","controllers","addController","controllerCount","TraitViewRef","fromAnyTrait","bindsTrait","traitKey","insertChildTrait","observesTrait","traitType","fromAnyView","bindsView","viewKey","insertChildView","observesView","viewType","TraitControllerRef","getTraitRef","targetTrait","TraitControllerSet","hasTraitController","traitControllers","addTraitController","removeTraitController","controllerId","deleteTraitController","attachControllerTrait","traitController","willAttachControllerTrait","onAttachControllerTrait","initControllerTrait","didAttachControllerTrait","detachControllerTrait","willDetachControllerTrait","onDetachControllerTrait","deinitControllerTrait","didDetachControllerTrait","TraitViewControllerRef","getTraitViewRef","traitViewRef","TraitViewControllerSet","ButtonGlow","glowState","glowTimer","initGlow","cancelGlow","glow","delay","willGlow","didGlow","pulse","willPulse","didPulse","fade","didFade","willFade","didTransition","ButtonMembrane","initMembrane","glows","FloatingButton","buttonType","iconCount","initButton","setButtonType","pushIcon","oldIconCount","oldIconKey","oldIconRef","oldIconView","rotate","newIconCount","newIconKey","newIconRef","IconRef","iconIndex","newIconView","popIcon","shadowColor","disclosure","tweening","ButtonItem","initButtonItem","createButton","buttonIcon","label","childKey","onInsertButton","onInsertLabel","onRemoveButton","onRemoveLabel","ButtonStack","stackHeight","initButtonStack","closeIcon","children","insertItem","removeItems","layoutStack","modalService","modalProvider","childCount","itemIndex","buttonHeight","buttonSpacing","itemSpacing","itemHeight","onInsertItem","onRemoveItem","buttonStackWillExpand","onExpand","buttonStackDidExpand","buttonStackWillCollapse","onCollapse","buttonStackDidCollapse","show","willShowStack","didShowStack","buttonStackWillShow","buttonStackDidShow","hide","willHideStack","didHideStack","buttonStackWillHide","buttonStackDidHide","stopPropagation","IconButton","setHovers","hovers","buttonDidPress","DisclosureButton","initDisclosureButton","arrow","collapsedColor","expandedColor","TokenView","tokenState","onClickHead","onClickBody","onClickFoot","initToken","shape","initShape","shapeView","headIcon","foot","footIcon","initHead","headView","initHeadIcon","headIconView","initBody","bodyView","initFoot","footView","initFootIcon","footIconView","initLabelContainer","labelContainer","initLabel","labelView","layoutToken","getStateOr","boxHeight","tokenHeight","pad","gap","labelPaddingLeft","labelPaddingRight","accessoryPaddingRight","expandedPhase","accessoryIcon","accessory","labelWidth","bodyWidth","accessoryWidth","footWidth","tokenWidth","bodyRight","tokenWillExpand","tokenDidExpand","tokenWillCollapse","blur","tokenDidCollapse","didPressHead","tokenDidPressHead","didPressBody","tokenDidPressBody","didPressFoot","tokenDidPressFoot","forTag","headGesture","bodyGesture","footGesture","InputTokenView","onInputUpdate","onInputChange","onInputKey","styleView","PlaceholderRule","placeholderLook","inputView","didUpdateInput","tokenDidUpdateInput","didChangeInput","tokenDidChangeInput","didAcceptInput","tokenDidAcceptInput","ColLayout","grow","shrink","basis","optional","persistent","withFlex","asOptional","asPersistent","asHidden","resized","TableLayout","colSpacing","oldCols","newCols","tableWidth","tableLeft","tableRight","colWidth","theseCols","thoseCols","tableCols","CellView","initCell","TextCellView","contentView","IconCellView","initSvg","willSetValue","DisclosureCellView","superDisclosure","CellTrait","TextCellTrait","newContent","oldContent","IconCellTrait","newIcon","oldIcon","CellController","cellTrait","TextCellController","IconCellController","cellView","viewDidPress","viewDidLongPress","createContentView","content","setContentView","cell","traitDidSetContent","viewWillAttachContent","viewDidDetachContent","setIcon","traitDidSetIcon","newCellIcon","oldCellIcon","viewWillSetGraphics","viewDidSetGraphics","LeafView","initLeaf","highlightPhase","highlight","hoverPhase","hover","backgroundPhase","getCell","cellViewClass","getOrCreateCell","setCell","layoutLeaf","rowHeight","layoutChildViews","layout","newHover","oldHover","newHighlight","oldHighlight","LeafTrait","cellTraitClass","startConsumingCells","cellTraits","cells","traitId","stopConsumingCells","LeafController","getCellTrait","leafTrait","leaf","getOrCreateCellTrait","setCellTrait","getCellView","leafView","getOrCreateCellView","setCellView","traitWillAttachCell","traitDidDetachCell","cellControllers","cellController","viewWillHighlight","viewDidHighlight","viewWillUnhighlight","viewDidUnhighlight","viewDidEnter","viewDidLeave","attachCellTrait","attachCellView","detachCellView","detachCellTrait","controllerWillAttachCellTrait","controllerDidDetachCellTrait","controllerWillAttachCellView","controllerDidDetachCellView","cellContentView","attachCellContentView","detachCellContentView","controllerDidPressCellView","controllerDidLongPressCellView","controllerWillAttachCellContentView","controllerDidDetachCellContentView","controllerWillSetCellIcon","controllerDidSetCellIcon","fromTrait","RowView","visibleFrame","initRow","detectVisibleFrame","yBleed","parentVisibleFrame","treeViewContext","getPrototypeOf","resizeRow","oldLayout","superLayout","newLayout","layoutRow","rowSpacing","disclosingPhase","disclosing","leafHeightValue","leafHeightState","treeHeightValue","treeHeightState","treeView","tree","heightValue","heightState","setInterpolatedValue","newDepth","oldDepth","depth","TableView","newDisclosure","oldDisclosure","Transient","tableView","RowTrait","treeTrait","TableTrait","RowController","rowTrait","traitWillAttachTree","traitDidDetachTree","rowView","treeController","table","viewWillExpand","viewDidExpand","viewWillCollapse","viewDidCollapse","viewWillAttachTree","attachTreeTrait","attachTreeView","detachTreeTrait","detachTreeView","controllerWillAttachTreeTrait","controllerDidDetachTreeTrait","controllerWillAttachTableView","controllerDidDetachTableView","TableController","ColView","initCol","ColTrait","newLabel","oldLabel","ColController","createLabelView","colTrait","setLabelView","colView","traitWillSetLayout","traitDidSetLayout","traitDidSetLabel","viewWillAttachLabel","viewDidDetachLabel","HeaderView","initHeader","colViewClass","getOrCreateCol","setCol","layoutHeader","HeaderTrait","colTraitClass","colTraitConstructor","startConsumingCols","colTraits","stopConsumingCols","HeaderController","getColTrait","headerTrait","getOrCreateColTrait","setColTrait","getColView","headerView","getOrCreateColView","setColView","traitWillAttachCol","traitDidDetachCol","colControllers","colController","attachColTrait","attachColView","detachColView","detachColTrait","controllerWillAttachColTrait","controllerDidDetachColTrait","controllerWillAttachColView","controllerDidDetachColView","colLabelView","attachColLabelView","detachColLabelView","controllerWillSetColLayout","newColLayout","oldColLayout","controllerDidSetColLayout","controllerWillAttachColLabelView","controllerDidDetachColLabelView","visibleViews","initTable","resizeTable","edgeInsets","processVisibleViews","scrollChildViews","isVisible","yMin0","yMax0","yMin1","displayVisibleViews","yValue","yState","disclosurePhase","viewWillAttachLeaf","viewDidDetachLeaf","viewDidEnterLeaf","viewDidLeaveLeaf","viewDidPressLeaf","viewDidLongPressLeaf","viewDidDetachTree","viewWillHighlightLeaf","viewDidHighlightLeaf","viewWillUnhighlightLeaf","viewDidUnhighlightLeaf","createLayout","colLayouts","colLayout","updateLayout","startConsumingRows","rowTraits","stopConsumingRows","newColSpacing","oldColSpacing","layoutTable","tableLayout","tableTrait","traitWillSetTableLayout","newTableLayout","oldTableLayout","traitDidSetTableLayout","traitWillAttachHeader","traitDidDetachHeader","traitWillAttachRow","traitDidDetachRow","headerController","rowControllers","rowController","viewWillAttachHeader","viewDidDetachHeader","attachHeaderTrait","attachHeaderView","detachHeaderView","detachHeaderTrait","controllerWillAttachHeaderTrait","controllerDidDetachHeaderTrait","controllerWillAttachHeaderView","controllerDidDetachHeaderView","attachRowTrait","attachRowView","detachRowView","detachRowTrait","controllerWillAttachRowTrait","controllerDidDetachRowTrait","controllerWillAttachRowView","controllerDidDetachRowView","controllerWillAttachLeafTrait","attachLeafTrait","controllerDidDetachLeafTrait","detachLeafTrait","controllerWillAttachLeafView","attachLeafView","controllerDidDetachLeafView","detachLeafView","controllerWillAttachCell","attachCell","controllerDidDetachCell","detachCell","controllerWillAttachTree","attachTree","controllerDidDetachTree","detachTree","controllerWillAttachTreeView","controllerDidDetachTreeView","controllerWillExpandRowView","controllerDidExpandRowView","controllerWillCollapseRowView","controllerDidCollapseRowView","ScrimView","displayState","HiddenState","onSyntheticClick","initScrim","setDisplayState","isShown","ShownState","ShowingState","ShowState","isHidden","HidingState","HideState","willShowScrim","didShowScrim","willHideScrim","didHideScrim","willTransition","PopoverView","sourceFrame","allowedPlacement","currentPlacement","initArrow","createArrow","setSource","sourceView","source","displayPhase","willShowPopover","didShowPopover","popoverWillShow","place","popoverDidShow","willHidePopover","didHidePopover","popoverWillHide","popoverDidHide","placement","applyDisplayPhase","oldSourceFrame","newSourceFrame","popoverFrame","placePopover","placeArrow","popoverWidth","popoverHeight","parentBounds","parentLeft","parentTop","sourceLeft","sourceRight","sourceTop","sourceBottom","sourceWidth","sourceHeight","sourceX","sourceY","placementFrame","placementLeft","placementRight","placementTop","placementBottom","dropdown","arrowHeight","placementGap","oldWidth","oldHeight","oldMaxWidth","oldMaxHeight","willPlacePopover","onPlacePopover","didPlacePopover","popoverWillPlace","popoverDidPlace","offsetRight","offsetBottom","arrowWidth","arrowXMin","arrowXMax","arrowYMin","arrowYMax","newBackgroundColor","oldBackgroundColor","DrawerView","initDrawer","isHorizontal","isVertical","willSetPlacement","newPlacement","oldPlacement","viewWillSetPlacement","onSetPlacement","didSetPlacement","viewDidSetPlacement","viewWillPresent","viewDidPresent","viewWillDismiss","viewDidDismiss","slide","layoutDrawer","layoutDrawerTop","layoutDrawerRight","layoutDrawerBottom","layoutDrawerLeft","slidePhase","effectiveWidth","effectiveHeight","stretchPhase","collapsedWidth","expandedWidth","DrawerButton","drawerView","hamburgerIcon","setDrawerView","DeckPost","withGrow","withShrink","withBasis","DeckRail","posts","lookupPost","getPost","post","oldPosts","postCount","newPosts","railWidth","railLeft","railRight","postSpacing","postWidth","thesePosts","thosePosts","deckPosts","DeckSlot","initSlot","DeckSlider","itemCount","initSlider","createItem","itemView","pushItem","newItemView","oldItemCount","newItemCount","oldItemKey","oldItemRef","oldItemView","newItemKey","newItemRef","DeckSliderItemRef","willPushItem","didPushItem","deckSliderWillPushItem","deckSliderDidPushItem","popItem","willPopItem","didPopItem","deckSliderWillPopItem","deckSliderDidPopItem","deckPhase","nextItemKey","nextItemRef","nextItemView","prevItemKey","prevItemRef","prevItemView","DeckSliderItem","initItem","targetKey","colorLook","layoutItem","slotAlign","slotWidth","slotHeight","nextIndex","prevIndex","itemPhase","itemWidth","slotSpace","DeckButton","labelCount","createLabel","pushLabel","newLabelView","oldLabelCount","newLabelCount","oldLabelKey","oldLabelRef","oldLabelView","newLabelKey","newLabelRef","DeckButtonLabelRef","labelIndex","willPushLabel","didPushLabel","deckButtonWillPushLabel","deckButtonDidPushLabel","popLabel","willPopLabel","didPopLabel","deckButtonWillPopLabel","deckButtonDidPopLabel","nextLabelKey","nextLabelRef","nextLabelView","prevLabelKey","prevLabelRef","prevLabelView","DeckButtonCloseIcon","iconPadding","iconPhase","iconLeft","iconTop","DeckButtonBackIcon","labelKey","iconOpacity","nextPost","nextSlot","nextSlotAlign","nextSlotWidth","nextSlotLeft","slotLeft","labelPhase","labelSlotSpace","nextColor","thisColor","DeckButtonLabel","layoutLabel","backIcon","layoutWidth","DeckBar","initBar","barHeight","onInsertSlot","resizeBar","oldRail","rail","superRail","newRail","layoutBar","slotTop","postIndex","prevPost","didPressBackButton","deckBarDidPressBackButton","didPressCloseButton","deckBarDidPressCloseButton","DeckCard","initCard","DeckView","cardCount","card","initDeck","pushCard","newCardView","oldCardCount","newCardCount","oldCardKey","oldCardRef","oldCardView","newCardKey","newCardRef","DeckViewCardRef","cardIndex","willPushCard","onPushCard","didPushCard","deckWillPushCard","deckDidPushCard","popCard","willPopCard","onPopCard","didPopCard","deckWillPopCard","deckDidPopCard","nextCardKey","nextCardRef","nextCardView","prevCardKey","prevCardRef","catdCardView","deckDidPressBackButton","deckDidPressCloseButton","DeckViewBar","barView","deckWidth","DeckViewCard","cardView","resizeCard","layoutCard","deckHeight","bar","cardWidth","inAlign","outAlign","cardPhase","TitleDeckBar","onBackButtonClick","initRail","backPost","titlePost","morePost","backMembrane","backButton","titleSlider","moreSlider","createCloseIcon","initBackMembrane","createBackIcon","createBackButton","initBackButton","initTitleSlider","initMoreSlider","pushTitle","titleRef","titleView","popTitle","didPopBackButton","backRef","titleKey","backButtonLeft","backButtonWidth","backButtonTop","backButtonHeight","DialView","save","renderDial","restore","limit","deltaRadius","dial","meter","dialColor","clip","meterColor","labelPadding","legendView","legend","tickAlign","tickAngle","tickRadius","tickLength","tickWidth","tickColor","r1x","r1y","r2x","r2y","tickPadding","hitTestDial","arrangement","newLimit","oldLimit","DialTrait","formatLabel","formatLegend","newDialColor","oldDialColor","newMeterColor","oldMeterColor","newLegend","oldLegend","DialController","updateLabel","dialTrait","updateLegend","dialView","dialTiming","setLimit","setDialColor","setMeterColor","createLegendView","setLegendView","traitDidSetDialValue","traitDidSetDialLimit","traitDidSetDialColor","traitDidSetMeterColor","traitDidSetDialLabel","traitDidSetDialLegend","viewWillSetDialValue","viewDidSetDialValue","viewWillSetDialLimit","viewDidSetDialLimit","viewWillAttachDialLabel","viewDidDetachDialLabel","viewWillAttachDialLegend","viewDidDetachDialLegend","GaugeView","layoutGauge","dialViews","dials","autoCount","viewId","gaugeLimit","dialSpacing","dr","dialLimit","attachLabelView","attachLegendView","detachLegendView","detachLabelView","GaugeTrait","startConsumingDials","dialTraits","stopConsumingDials","newTitle","oldTitle","GaugeController","createTitleView","gaugeTrait","setTitleView","gaugeView","gauge","traitDidSetGaugeTitle","traitDidSetGaugeLimit","traitWillAttachDial","traitDidDetachDial","dialControllers","dialController","viewWillAttachGaugeTitle","viewDidDetachGaugeTitle","attachDialTrait","attachDialView","detachDialView","detachDialTrait","controllerWillAttachDialTrait","controllerDidDetachDialTrait","controllerWillAttachDialView","controllerDidDetachDialView","attachDialLabelView","attachDialLegendView","detachDialLegendView","detachDialLabelView","controllerWillSetDialValue","controllerDidSetDialValue","controllerWillSetDialLimit","controllerDidSetDialLimit","controllerWillAttachDialLabelView","controllerDidDetachDialLabelView","controllerWillAttachDialLegendView","controllerDidDetachDialLegendView","SliceView","renderSlice","total","phaseAngle","sliceColor","labelRadius","labelAngle","hitTestSlice","SliceTrait","newSliceColor","oldSliceColor","SliceController","sliceTrait","sliceView","sliceTiming","setSliceColor","traitDidSetSliceValue","traitDidSetSliceColor","traitDidSetSliceLabel","traitDidSetSliceLegend","viewWillSetSliceValue","viewDidSetSliceValue","viewWillAttachSliceLabel","viewDidDetachSliceLabel","viewWillAttachSliceLegend","viewDidDetachSliceLegend","PieView","layoutPie","sliceViews","slices","baseAngle","PieTrait","startConsumingSlices","sliceTraits","stopConsumingSlices","PieController","pieTrait","pieView","pie","traitDidSetPieTitle","traitWillAttachSlice","traitDidDetachSlice","sliceControllers","sliceController","viewWillAttachPieTitle","viewDidDetachPieTitle","attachSliceTrait","attachSliceView","detachSliceView","detachSliceTrait","controllerWillAttachSliceTrait","controllerDidDetachSliceTrait","controllerWillAttachSliceView","controllerDidDetachSliceView","attachSliceLabelView","attachSliceLegendView","detachSliceLegendView","detachSliceLabelView","controllerWillSetSliceValue","controllerDidSetSliceValue","controllerWillAttachSliceLabelView","controllerDidDetachSliceLabelView","controllerWillAttachSliceLegendView","controllerDidDetachSliceLegendView","DataPointView","y2Coord","gradientStop","setXCoord","setYCoord","setY2Coord","point","hitRadius","category","labelPlacement","isGradientStop","updateGradientStop","layoutDataPoint","hitTestPoint","newX","oldX","newY","oldY","newY2","oldY2","newRadius","oldRadius","newColor","oldColor","newOpacity","oldOpacity","DataPointTrait","DataSetTrait","startConsumingDataPoints","dataPointTraits","dataPoints","stopConsumingDataPoints","dataPointTrait","DataPointController","setX","dataPointView","dataPoint","dataPointTiming","setY","setY2","setRadius","setColor","setOpacity","traitDidSetDataPointX","traitDidSetDataPointY","traitDidSetDataPointY2","traitDidSetDataPointRadius","traitDidSetDataPointColor","traitDidSetDataPointOpacity","traitDidSetDataPointLabel","viewWillSetDataPointX","viewDidSetDataPointX","viewWillSetDataPointY","viewDidSetDataPointY","viewWillSetDataPointY2","viewDidSetDataPointY2","viewWillSetDataPointRadius","viewDidSetDataPointRadius","viewWillSetDataPointColor","viewDidSetDataPointColor","viewWillSetDataPointOpacity","viewDidSetDataPointOpacity","viewWillAttachDataPointLabel","viewDidDetachDataPointLabel","DataSetController","dataSetTrait","traitWillAttachDataPoint","traitDidDetachDataPoint","dataPointController","attachDataPointTrait","attachDataPointView","detachDataPointView","detachDataPointTrait","controllerWillAttachDataPointTrait","controllerDidDetachDataPointTrait","controllerWillAttachDataPointView","controllerDidDetachDataPointView","attachDataPointLabelView","detachDataPointLabelView","controllerWillSetDataPointX","controllerDidSetDataPointX","controllerWillSetDataPointY","controllerDidSetDataPointY","controllerWillSetDataPointY2","controllerDidSetDataPointY2","controllerWillSetDataPointRadius","controllerDidSetDataPointRadius","controllerWillSetDataPointColor","controllerDidSetDataPointColor","controllerWillSetDataPointOpacity","controllerDidSetDataPointOpacity","controllerWillAttachDataPointLabelView","controllerDidDetachDataPointLabelView","ContinuousScaleAnimator","setScale","ScaledView","parseScale","domain","Domain","withDomain","overRange","TweeningFlag","createScale","setDomain","setRange","Range","setBaseScale","setBaseDomain","setBaseRange","ScaledXView","ScaledYView","ScaledXYView","scaledFlags","xDataDomain","yDataDomain","xDataRange","yDataRange","xDataDomainPadded","yDataDomainPadded","setScaledFlags","xDomain","rescaleTransition","yDomain","xRangePadding","xRangeMin","xRangeMax","LinearRange","yRangePadding","yRangeMin","yRangeMax","setXDataDomain","newXDataDomain","oldXDataDomain","willSetXDataDomain","onSetXDataDomain","didSetXDataDomain","updateXDataRange","updateXDataDomainPadded","updateXDataDomain","xScaledDomain","scaled","setYDataDomain","newYDataDomain","oldYDataDomain","willSetYDataDomain","onSetYDataDomain","didSetYDataDomain","updateYDataRange","updateYDataDomainPadded","updateYDataDomain","yScaledDomain","setXDataRange","setYDataRange","setXDataDomainPadded","xDataDomainPaddedMin","xDataDomainPaddedMax","xDomainPadding","setYDataDomainPadded","yDataDomainPaddedMin","yDataDomainPaddedMax","yDomainPadding","updateXRangePadding","xScaledRangePadding","updateYRangePadding","yScaledRangePadding","xFitAlign","fitAlign","yFitAlign","domainTracking","xDomainTracking","yDomainTracking","XDomainTrackingFlag","YDomainTrackingFlag","scaleGestures","xScaleGestures","yScaleGestures","XScaleGesturesFlag","YScaleGesturesFlag","fitX","XFitFlag","XFitTweenFlag","fitY","YFitFlag","YFitTweenFlag","fit","FitTweenMask","resizeScales","updateScales","RescaleFlag","isCoasting","boundScales","oldXDomain","oldYDomain","newXDomain","newYDomain","XInRangeMask","YInRangeMask","xDomainPadded","xDomainBounds","xDomainMin","xDomainMax","xZoomBounds","xZoomMin","xZoomMax","LinearScale","LinearZoomMin","TimeScale","TimeZoomMin","LinearZoomMax","TimeZoomMax","clampDomain","yDomainPadded","yDomainBounds","yDomainMin","yDomainMax","yZoomBounds","yZoomMin","yZoomMax","xDomainWidth","XMinInRangeFlag","yDomainWidth","YMinInRangeFlag","fitAspectRatio","FitMask","oldDomainWidth","oldDomainHeight","domainAspectRatio","rangeAspectRatio","anamorphicAspectRatio","XBoundingFlag","InteractingMask","reboundTransition","willReboundX","didReboundX","YBoundingFlag","willReboundY","didReboundY","InteractedFlag","xDataDomainMin","xDataDomainMax","yDataDomainMin","yDataDomainMax","xRangePaddingMin","xRangePaddingMax","yRangePaddingMin","yRangePaddingMax","xCount","yCount","childXDataDomain","childXRangePadding","childYDataDomain","childYRangePadding","onBeginBoundingXScale","onEndBoundingXScale","onInterruptBoundingXScale","onBeginBoundingYScale","onEndBoundingYScale","onInterruptBoundingYScale","LinearDomain","TimeDomain","d1","withDay","day","XMaxInRangeFlag","YMaxInRangeFlag","InteractingFlag","ContinuousScale","didInterrupt","newXDomainBounds","oldXDomainBounds","newYDomainBounds","oldYDomainBounds","newXZoomBounds","oldXZoomBounds","newXDomainPadding","oldXDomainPadding","newYDomainPadding","oldYDomainPadding","newXRangePadding","oldXRangePadding","newYRangePadding","oldYRangePadding","newFitAlign","oldFitAlign","scaledView","newScaledView","viewDidSetXRangePadding","viewDidSetYRangePadding","viewDidSetXDataDomain","viewDidSetYDataDomain","BoundingMask","ScatterPlotView","point0","point1","renderPlot","data","newDataPointView","SeriesPlotView","gradientStops","dataPointViews","BTree","firstKey","lastKey","getDataPoint","insertDataPoint","insertDataPoints","removeDataPoint","nextValue","point2","dy2","sx2","sy2","sdy2","hitMode","hitTestDomain","hitTestPlot","previousValue","BubblePlotView","newFill","oldFill","LinePlotView","gradient","firstValue","lastValue","createLinearGradient","offset","addColorStop","hitWidth","newStroke","oldStroke","newStrokeWidth","oldStrokeWidth","strokeRadius","AreaPlotView","hasNext","hasPrevious","previous","PlotTrait","dataSet","ScatterPlotTrait","SeriesPlotTrait","BubblePlotTrait","LinePlotTrait","AreaPlotTrait","PlotController","plotTrait","BubblePlotController","LinePlotController","AreaPlotController","ScatterPlotController","SeriesPlotController","setPlotRadius","plotView","plot","plotTiming","setPlotFill","traitDidSetPlotRadius","traitDidSetPlotFill","dataPointControllers","viewWillSetPlotRadius","viewDidSetPlotRadius","viewWillSetPlotFill","viewDidSetPlotFill","setPlotStroke","setPlotStrokeWidth","traitDidSetPlotStroke","traitDidSetPlotStrokeWidth","viewWillSetPlotStroke","viewDidSetPlotStroke","viewWillSetPlotStrokeWidth","viewDidSetPlotStrokeWidth","willSetPlotFill","controllerWillSetPlotFill","onSetPlotFill","didSetPlotFill","controllerDidSetPlotFill","GraphView","addPlot","clipGraph","plots","GraphTrait","startConsumingPlots","plotTraits","stopConsumingPlots","GraphController","graphTrait","traitWillAttachPlot","traitDidDetachPlot","graphView","plotControllers","plotController","newGraphView","graph","attachPlotTrait","attachPlotView","attachDataSetTrait","detachDataSetTrait","detachPlotView","detachPlotTrait","controllerWillAttachPlotTrait","controllerDidDetachPlotTrait","controllerWillAttachPlotView","controllerDidDetachPlotView","controllerWillAttachDataSetTrait","controllerDidDetachDataSetTrait","controllerWillAttachDataPoint","attachDataPoint","controllerDidDetachDataPoint","detachDataPoint","dataPointLabelView","ERROR_10","ERROR_5","ERROR_2","SECOND","MINUTE","HOUR","DAY","MONTH","YEAR","TIME_TICK_INTERVALS","TimeInterval","second","every","minute","hour","week","month","MILLISECOND_FORMAT","SECOND_FORMAT","MINUTE_FORMAT","HOUR_FORMAT","WEEKDAY_FORMAT","MONTHDAY_FORMAT","MONTH_FORMAT","YEAR_FORMAT","TickGenerator","tickValue","TimeTickGenerator","NumberTickGenerator","step0","step1","log","LN10","count","generate","interval","ticks","reverse","power10","base","zone","duration","nextKey","previousKey","millisecond","TickState","TickView","tickState","preserved","setOffset","preserve","fadeIn","fadeOut","renderTick","tickMarkColor","tickMarkWidth","tickMarkLength","tickLabelPadding","gridLineColor","gridLineWidth","TopTickView","RightTickView","BottomTickView","LeftTickView","anchor","AxisView","getTick","tickView","insertTick","removeTick","updateTicks","tickGenerator","tickTransition","fromScale","generateTicks","tickMarkSpacing","oldTicks","clone","tickValues","oldTick","newTick","createTickView","forEachValue","tickLabel","createTickLabel","formatTickLabel","layoutTick","renderDomain","borderSerif","TopAxisView","tick","RightAxisView","BottomAxisView","LeftAxisView","AxisTrait","TopAxisTrait","RightAxisTrait","BottomAxisTrait","LeftAxisTrait","AxisController","axisTrait","axisView","TopAxisController","RightAxisController","BottomAxisController","LeftAxisController","ChartView","gutterLeft","gutterRight","gutterTop","gutterBottom","layoutChart","graphTop","graphRight","graphBottom","graphLeft","topAxisView","topAxis","rightAxisView","rightAxis","bottomAxisView","bottomAxis","leftAxisView","leftAxis","ChartTrait","topAxisTrair","rightAxisTrait","bottomAxisTrait","leftAxisTrait","topAxisTrait","ChartController","chartTrait","newChartTrait","traitWillAttachTopAxis","traitDidDetachTopAxis","traitWillAttachRightAxis","traitDidDetachRightAxis","traitWillAttachBottomAxis","traitDidDetachBottomAxis","traitWillAttachLeftAxis","traitDidDetachLeftAxis","chartView","topAxisController","axis","rightAxisController","bottomAxisController","leftAxisController","chart","attachAxisTrait","attachAxisView","detachAxisView","detachAxisTrait","controllerWillAttachAxisTrait","controllerDidDetachAxisTrait","controllerWillAttachAxisView","controllerDidDetachAxisView","GeoPerspective","geoFrame","geoCenter","GeoBox","GeoPoint","heading","tilt","GeoViewport","GeoProjection","GeoView","geoBounds","onInsertChildGeoBounds","onRemoveChildGeoBounds","geoBoundsColor","renderGeoBounds","renderGeoOutline","geoViewport","geoBox","geoProjection","southWest","project","normalized","northWest","northEast","southEast","onHideChild","onUnhideChild","onSetChildUnbounded","cullGeoFrame","globe","setGeoBounds","newGeoBounds","oldGeoBounds","willSetGeoBounds","onSetGeoBounds","didSetGeoBounds","viewWillSetGeoBounds","onSetChildGeoBounds","viewDidSetGeoBounds","updateGeoBounds","deriveGeoBounds","ownGeoBounds","childGeoBounds","GeoTrait","GeoController","geoTrait","GeoLayerTrait","GeoLayerController","GeoIconTrait","GeoIconController","GeoAreaTrait","GeoAreaController","GeoLineTrait","GeoLineController","startConsumingFeatures","featureTraits","features","stopConsumingFeatures","featureTrait","GeoTree","maxDepth","density","getTree","inWest","lngMin","lng","inSouth","latMin","lat","inEast","lngMax","inNorth","latMax","contained","hasNode","hasLeaf","newTree","insertedNode","reinsertedNode","insertedLeaf","oldSouthWest","newSouthWest","createTree","oldNorthWest","newNorthWest","oldSouthEast","newSouthEast","oldNorthEast","newNorthEast","oldViews","newViews","removedNode","reinsertedLeaf","removedLeaf","moved","newBounds","oldBounds","newInWest","newInSouth","newInEast","newInNorth","oldInWest","oldInSouth","oldInEast","oldInNorth","forEachReverse","forEachIntersecting","forEachNonIntersecting","GeoTreeView","stem","updateRoot","newRoot","getStem","processTree","geoTreeColor","renderGeoTree","renderGeoTreeOutline","displayTree","newChildViewGeoBounds","oldChildViewGeoBounds","geoPoint","unproject","hitTestTree","traitWillSetGeoBounds","traitDidSetGeoBounds","traitWillAttachFeature","traitDidDetachFeature","geoView","featureControllers","featureController","featureView","geo","attachFeatureTrait","attachFeatureView","detachFeatureView","detachFeatureTrait","controllerWillAttachGeoTrait","controllerDidDetachGeoTrait","controllerWillAttachGeoView","controllerDidDetachGeoView","controllerWillSetGeoBounds","controllerDidSetGeoBounds","GeoRippleView","projectRipple","projectGeoCenter","viewCenter","renderRipple","updateViewBounds","ripple","rippleView","containerView","didSetState","newGeoCenter","oldGeoCenter","newViewCenter","oldViewCenter","GeoRasterView","projectRaster","projectGeoAnchor","geoAnchor","viewAnchor","newGeoAnchor","oldGeoAnchor","GeoGridView","geoTile","GeoGridTrait","createTileTrait","createTileModel","tileTrait","tileModel","initTiles","southWestModel","southWestTile","northWestModel","northWestTile","southEastModel","southEastTile","northEastTile","GeoGridController","z","Infinity","autoCullGeoView","tileIsVisible","minCullZoom","maxCullZoom","autoConsumeGeoView","minConsumeZoom","maxConsumeZoom","tileTraits","tiles","traitWillAttachTile","traitDidDetachTile","tileControllers","tileController","tileView","attachTileTrait","attachTileView","detachTileView","detachTileTrait","GeoCircleView","projectCircle","Mask","intersectsCircle","R2Circle","intersectsSegment","R2Segment","renderCircle","hitTestCircle","GeoArcView","projectArc","GeoPathView","projectPath","viewPath","geoPath","viewCentroid","geoCentroid","GeoPath","newGeoPath","oldGeoPath","GeoLineView","renderLine","hitTestLine","GeoAreaView","clipViewport","renderArea","hitTestArea","GeoPathTrait","GeoPathController","setGeoPath","geoTiming","setStroke","setStrokeWidth","traitDidSetGeoPath","traitDidSetStroke","traitDidSetStrokeWidth","viewWillSetGeoPath","viewDidSetGeoPath","viewWillSetStroke","viewDidSetStroke","viewWillSetStrokeWidth","viewDidSetStrokeWidth","setFill","traitDidSetFill","viewWillSetFill","viewDidSetFill","GeoPointView","viewPoint","newGeoPoint","oldGeoPoint","GeoPlotView","lngMid","latMid","invalid","appendPoint","setPoint","onInsertPoint","xMid","yMid","pointCount","renderPlotGradient","renderPlotStroke","GeoIconView","projectIcon","intersectsBox","rasterizeIcon","spriteProvider","compositeIcon","newIconLayout","oldIconLayout","setGeoCenter","setIconLayout","iconLayout","setGraphics","traitDidSetGeoCenter","traitDidSetIconLayout","traitDidSetGraphics","viewWillSetGeoCenter","viewDidSetGeoCenter","MapView","mapViewContext","canvasView","MapTrait","startConsumingLayers","layerTraits","layers","stopConsumingLayers","newGeoPerspective","oldGeoPerspective","newLayerTrait","layerTrait","MapController","setGeoPerspective","geoPerspective","mapView","mapTrait","traitDidSetGeoPerspective","traitWillAttachLayer","traitDidDetachLayer","container","layerControllers","layerController","layerView","viewWillSetGeoViewport","newGeoViewport","oldGeoViewport","viewDidSetGeoViewport","viewWillAttachMapCanvas","mapCanvasView","viewDidDetachMapCanvas","viewWillAttachMapContainer","mapContainerView","viewDidDetachMapContainer","createMapView","attachLayerTrait","attachLayerView","detachLayerView","detachLayerTrait","WorldMapViewport","canEqual","EquirectangularMapViewport","withViewFrame","frameRatio","WorldMapView","willSetGeoViewport","onSetGeoViewport","didSetGeoViewport","updateGeoViewport","MapboxViewport","mapboxgl","LngLat","Point","mapFrame","getBounds","getWest","getSouth","getEast","getNorth","mapCenter","getCenter","getZoom","getBearing","getPitch","MapboxView","onMapRender","onMoveStart","onMoveEnd","initMap","willMoveMap","didMoveMap","bearing","pitch","flyTo","getCanvasContainer","getContainer","canvasContainerView","LeafletViewport","viewOrigin","L","LatLng","getPixelOrigin","mapTransform","getPane","TranslateTransform","LeafletView","animate","controlContainerView","querySelector","GoogleMapViewport","projection","google","maps","fromLatLngToContainerPixel","fromContainerPixelToLatLng","sw","getSouthWest","ne","getNorthEast","getHeading","getTilt","GoogleMapView","mapOverlay","createMapOverlay","getProjection","onMapDraw","onMapIdle","addListener","MapOverlay","setMap","OverlayView","onAdd","onRemove","panTo","setZoom","setHeading","setTilt","mapPanes","getPanes","materializeAncestors","overlayMouseTarget","EsriViewport","webMercatorUtils","require","EsriView","EsriMapViewport","spatialReference","wkid","toScreen","toMap","longitude","latitude","extent","webMercatorToGeographic","xmin","ymin","xmax","ymax","EsriMapView","watch","goTo","esriContainerView","esriRootView","esriSurfaceView","EsriSceneViewport","camera","EsriSceneView","esriOverlayView","deckBar","cardTitle"],"mappings":"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"}